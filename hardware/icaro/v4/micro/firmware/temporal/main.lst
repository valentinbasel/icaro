gplink-1.5.0 #1285 (Aug 10 2018)
Copyright (c) 1998-2016 gputils project
Listing File Generated: 22/02/19  15:00:46


Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.7.0 #10231 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	radix	dec


                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	___uflags
                                           	global	_fahrenheit
                                           	global	__i
                                           	global	_loopvar
                                           	global	_timingindex
                                           	global	__cpu_clock_
                                           	global	_I2C_master
                                           	global	_I2C_slave
                                           	global	_I2C_init
                                           	global	_I2C_write
                                           	global	_I2C_read
                                           	global	_I2C_wait
                                           	global	_I2C_idle
                                           	global	_I2C_start
                                           	global	_I2C_stop
                                           	global	_I2C_restart
                                           	global	_I2C_sendAck
                                           	global	_I2C_sendNack
                                           	global	_lcdi2c_backlight
                                           	global	_lcdi2c_noBacklight
                                           	global	_lcdi2c_setCursor
                                           	global	_lcdi2c_write
                                           	global	_lcdi2c_printf
                                           	global	_lcdi2c_newchar
                                           	global	_lcdi2c_init
                                           	global	__entry
                                           	global	__startup
                                           	global	_main
                                           	global	_phase
                                           	global	_needreordering
                                           	global	_timedivision
                                           	global	_mascaratotal
                                           	global	_timevalue
                                           	global	_timings
                                           	global	_activatedservos
                                           	global	_servovalues
                                           	global	_maxminpos
                                           	global	_numcolmax
                                           	global	_numlinemax
                                           	global	_gBacklight
                                           	global	_PCF8574_address
                                           	global	_PCF8574_data
                                           	global	_dht_register
                                           	global	_System_readFlashMemory
                                           	global	_System_getCpuFrequency
                                           	global	_Delayms
                                           	global	_pinmode
                                           	global	_digitalwrite
                                           	global	_digitalread
                                           	global	_toggle
                                           	global	_servos_init
                                           	global	_ServoAttach
                                           	global	_ServoDetach
                                           	global	_ServoWrite
                                           	global	_ServoRead
                                           	global	_ServoMinimumPulse
                                           	global	_ServoMaximumPulse
                                           	global	_servos_interrupt
                                           	global	_analog_init
                                           	global	_analogreference
                                           	global	_analogread
                                           	global	_analogwrite_init
                                           	global	_analogwrite
                                           	global	_IO_init
                                           	global	_IO_digital
                                           	global	_Delayus
                                           	global	_setup
                                           	global	_sensordigital
                                           	global	_pprintf
                                           	global	_psprintf2
                                           	global	_psprintf
                                           	global	_dhtReadByte
                                           	global	_dhtRead
                                           	global	_loop
                                           	global	_high_priority_isr
                                           	global	_low_priority_isr
                                           	global	_mask
                                           	global	_port
                                           	global	_dht_success
                                           	global	_dht_notconnected
                                           	global	_dht_checksumfailed
                                           	global	_dhtPin

                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget3
                                           	extern	__gptrput1
                                           	extern	__gptrput3
                                           	extern	__gptrget1
                                           	extern	__gptrget4
                                           	extern	__gptrget2
                                           	extern	_SPPDATAbits
                                           	extern	_SPPCFGbits
                                           	extern	_SPPEPSbits
                                           	extern	_SPPCONbits
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_LATDbits
                                           	extern	_LATEbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_FSR2Hbits
                                           	extern	_BSRbits
                                           	extern	_FSR1Hbits
                                           	extern	_FSR0Hbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_TBLPTRUbits
                                           	extern	_PCLATHbits
                                           	extern	_PCLATUbits
                                           	extern	_STKPTRbits
                                           	extern	_TOSUbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_stack_end
                                           	extern	_SPPDATA
                                           	extern	_SPPCFG
                                           	extern	_SPPEPS
                                           	extern	_SPPCON
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_LATD
                                           	extern	_LATE
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	__divslong
                                           	extern	__divulong
                                           	extern	__mulint
                                           	extern	_delay100tcy
                                           	extern	_sprintf
                                           	extern	__modulong
                                           	extern	__divsint
                                           	extern	___sint2fs
                                           	extern	___fsmul
                                           	extern	___fsadd
                                           	extern	_cinit

                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           INTCON	equ	0xff2
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TOSL	equ	0xffd
                                           TOSH	equ	0xffe
                                           TOSU	equ	0xfff
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           FSR2H	equ	0xfda
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4


                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           __i	db	0x00, 0x00
                                           _gBacklight	db	0x00
                                           _fahrenheit	db	0x00, 0x00, 0x00, 0x00
                                           ___uflags	db	0x00


                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           r0x0e	res	1
                                           r0x0f	res	1
                                           r0x10	res	1
                                           r0x11	res	1
                                           r0x12	res	1
                                           r0x13	res	1
                                           r0x14	res	1
                                           r0x15	res	1
                                           r0x16	res	1
                                           r0x17	res	1
                                           r0x18	res	1
                                           r0x19	res	1
                                           r0x1a	res	1
                                           r0x1b	res	1
                                           r0x1c	res	1
                                           r0x1d	res	1
                                           r0x1e	res	1
                                           r0x1f	res	1

                                           udata_main_0	udata
                                           __cpu_clock_	res	4

                                           udata_main_1	udata
                                           _timingindex	res	1

                                           udata_main_2	udata
                                           _loopvar	res	1

                                           udata_main_3	udata
                                           _pputchar	res	3

                                           udata_main_4	udata
                                           _servovalues	res	30

                                           udata_main_5	udata
                                           _maxminpos	res	60

                                           udata_main_6	udata
                                           _activatedservos	res	5

                                           udata_main_7	udata
                                           _ServosPulseDown_timingindex_1_30	res	1

                                           udata_main_8	udata
                                           _timings	res	150

                                           udata_main_9	udata
                                           _timevalue	res	30

                                           udata_main_10	udata
                                           _SortServoTimings_t_1_35	res	1

                                           udata_main_11	udata
                                           _SortServoTimings_totalservos_1_35	res	1

                                           udata_main_12	udata
                                           _SortServoTimings_numservos_1_35	res	1

                                           udata_main_13	udata
                                           _SortServoTimings_s_1_35	res	1

                                           udata_main_14	udata
                                           _mascaratotal	res	5

                                           udata_main_15	udata
                                           _pprinti_buffer_1_182	res	12

                                           udata_main_16	udata
                                           _pprintfl_buffer_1_192	res	12

                                           udata_main_17	udata
                                           _pprintfl_tmp_1_192	res	12

                                           udata_main_18	udata
                                           _pprintfl_helper_1_192	res	4

                                           udata_main_19	udata
                                           _pprint_scr_1_208	res	2

                                           udata_main_20	udata
                                           _psprintf2_out_1_232	res	3

                                           udata_main_21	udata
                                           _PCF8574_data	res	1

                                           udata_main_22	udata
                                           _PCF8574_address	res	1

                                           udata_main_23	udata
                                           _lcdi2c_setCursor_row_offsets_1_265	res	8

                                           udata_main_24	udata
                                           _numlinemax	res	1

                                           udata_main_25	udata
                                           _numcolmax	res	1

                                           udata_main_26	udata
                                           _dhtRead_DHT_Array_1_286	res	10

                                           udata_main_27	udata
                                           _dht_register	res	12

                                           udata_main_28	udata
                                           _loop_buf_1_293	res	80

                                           udata_main_29	udata
                                           _loop_buf2_1_293	res	80

                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------

                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main___entry	code	0X000C00
                                           __entry:
000c00   ef48     goto    0x006490         	goto	__startup
000c02   f032
                                           	
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/source/crt0iz.c	}
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_main_ivec_0x1_high_priority_isr	code	0X000C08
                                           ivec_0x1_high_priority_isr:
000c08   ef09     goto    0x006e12         	GOTO	_high_priority_isr
000c0a   f037

                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_main_ivec_0x2_low_priority_isr	code	0X000C18
                                           ivec_0x2_low_priority_isr:
000c18   ef7e     goto    0x006efc         	GOTO	_low_priority_isr
000c1a   f037

                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__main	code
                                           _main:
                                           ;	.line	197; /home/vbasel/.icaro/v4/firmware/source/main.c	if (OSCCONbits.SCS > 0x01)
0074bc   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
0074be   0b03     andlw   0x03             	ANDLW	0x03
0074c0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0074c2   0e02     movlw   0x02             	MOVLW	0x02
0074c4   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0074c6   e302     bnc     0x0074cc         	BNC	_01627_DS_
                                           _01623_DS_:
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/source/main.c	while (!OSCCONbits.IOFS);
0074c8   a4d3     btfss   0xd3, 0x2, 0x0   	BTFSS	_OSCCONbits, 2
0074ca   d7fe     bra     0x0074c8         	BRA	_01623_DS_
                                           _01627_DS_:
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/source/main.c	IO_init();
0074cc   ecb5     call    0x00756a, 0x0    	CALL	_IO_init
0074ce   f03a
                                           ;	.line	244; /home/vbasel/.icaro/v4/firmware/source/main.c	IO_digital();
0074d0   ec7b     call    0x0076f6, 0x0    	CALL	_IO_digital
0074d2   f03b
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/source/main.c	analog_init();
0074d4   eca0     call    0x007540, 0x0    	CALL	_analog_init
0074d6   f03a
                                           ;	.line	288; /home/vbasel/.icaro/v4/firmware/source/main.c	servos_init();
0074d8   ecf1     call    0x0067e2, 0x0    	CALL	_servos_init
0074da   f033
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/source/main.c	setup();
0074dc   ecef     call    0x0063de, 0x0    	CALL	_setup
0074de   f031
                                           _01629_DS_:
                                           ;	.line	327; /home/vbasel/.icaro/v4/firmware/source/main.c	loop();
0074e0   ec2d     call    0x00465a, 0x0    	CALL	_loop
0074e2   f023
0074e4   d7fd     bra     0x0074e0         	BRA	_01629_DS_
                                           ;	.line	330; /home/vbasel/.icaro/v4/firmware/source/main.c	}
0074e6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code
                                           _low_priority_isr:
                                           ;	.line	535; /home/vbasel/.icaro/v4/firmware/source/main.c	void low_priority_isr(void) __interrupt 2
006efc   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
006efe   ffe5
006f00   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
006f02   ffe5
006f04   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006f06   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
006f08   ffe5
006f0a   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
006f0c   ffe5
006f0e   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
006f10   ffe5
006f12   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
006f14   ffe5
006f16   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
006f18   ffe5
006f1a   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
006f1c   ffe5
006f1e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006f20   ffe5
006f22   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006f24   ffd9
006f26   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
006f28   ffe5
006f2a   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
006f2c   ffe5
006f2e   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
006f30   ffe5
006f32   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
006f34   ffe5
                                           	
006f36   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
006f38   fff5
006f3a   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
006f3c   fff8
006f3e   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
006f40   fff7
006f42   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
006f44   fff6
                                           	
                                           ;	.line	565; /home/vbasel/.icaro/v4/firmware/source/main.c	}
006f46   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006f48   ffd9
006f4a   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
006f4c   fffb
006f4e   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
006f50   fffa
006f52   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
006f54   ffea
006f56   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
006f58   ffe9
006f5a   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
006f5c   fff4
006f5e   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
006f60   fff3
006f62   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
006f64   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
006f66   ffe0
006f68   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
006f6a   ffd8
006f6c   0010     retfie  0x0              	RETFIE	

                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code
                                           _high_priority_isr:
                                           ;	.line	438; /home/vbasel/.icaro/v4/firmware/source/main.c	void high_priority_isr(void) __interrupt 1
006e12   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
006e14   ffe5
006e16   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
006e18   ffe5
006e1a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006e1c   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
006e1e   ffe5
006e20   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
006e22   ffe5
006e24   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
006e26   ffe5
006e28   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
006e2a   ffe5
006e2c   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
006e2e   ffe5
006e30   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
006e32   ffe5
006e34   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006e36   ffe5
006e38   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006e3a   ffd9
006e3c   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
006e3e   ffe5
006e40   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
006e42   ffe5
006e44   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
006e46   ffe5
006e48   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
006e4a   ffe5
                                           	
                                           ;	.line	475; /home/vbasel/.icaro/v4/firmware/source/main.c	servos_interrupt();
006e4c   ec01     call    0x007202, 0x0    	CALL	_servos_interrupt
006e4e   f039
006e50   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
006e52   fff5
006e54   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
006e56   fff8
006e58   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
006e5a   fff7
006e5c   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
006e5e   fff6
                                           	
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/source/main.c	}
006e60   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006e62   ffd9
006e64   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
006e66   fffb
006e68   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
006e6a   fffa
006e6c   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
006e6e   ffea
006e70   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
006e72   ffe9
006e74   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
006e76   fff4
006e78   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
006e7a   fff3
006e7c   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
006e7e   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
006e80   ffe0
006e82   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
006e84   ffd8
006e86   0010     retfie  0x0              	RETFIE	

                                           ; ; Starting pCode block
                                           S_main___startup	code
                                           __startup:
                                           	;	Initialize the stack pointer
006490   ee14     lfsr    0x1, 0x4ff       	lfsr	1, _stack_end
006492   f0ff
006494   ee24     lfsr    0x2, 0x4ff       	lfsr	2, _stack_end
006496   f0ff
                                           	;	1st silicon does not do this on POR
006498   6af8     clrf    0xf8, 0x0        	clrf	_TBLPTRU, 0
                                           	;	Initialize the flash memory access configuration.
                                           	;	This is harmless for non-flash devices, so we do it on all parts.
00649a   8ea6     bsf     0xa6, 0x7, 0x0   	bsf	0xa6, 7, 0 ; EECON1.EEPGD = 1, TBLPTR accesses program memory
00649c   9ca6     bcf     0xa6, 0x6, 0x0   	bcf	0xa6, 6, 0 ; EECON1.CFGS = 0, TBLPTR accesses program memory
                                           	;	Load FSR0 with top of RAM.
00649e   0ebf     movlw   0xbf             	movlw	0xbf
0064a0   6ee9     movwf   0xe9, 0x0        	movwf	_FSR0L, 0
0064a2   0e0e     movlw   0x0e             	movlw	0x0e
0064a4   6eea     movwf   0xea, 0x0        	movwf	_FSR0H, 0
                                           	;	Place 0xff at address 0x00 as a sentinel.
0064a6   6800     setf    0x00, 0x0        	setf	0x00, 0
                                           clear_loop:
0064a8   6aed     clrf    0xed, 0x0        	clrf	_POSTDEC0, 0
0064aa   5000     movf    0x00, 0x0, 0x0   	movf	0x00, w, 0
0064ac   e1fd     bnz     0x0064a8         	bnz	clear_loop
                                           	;	TBLPTR = &cinit
0064ae   0ec4     movlw   0xc4             	movlw	low(_cinit)
0064b0   6ef6     movwf   0xf6, 0x0        	movwf	_TBLPTRL, 0
0064b2   0e76     movlw   0x76             	movlw	high(_cinit)
0064b4   6ef7     movwf   0xf7, 0x0        	movwf	_TBLPTRH, 0
0064b6   0e00     movlw   0x00             	movlw	upper(_cinit)
0064b8   6ef8     movwf   0xf8, 0x0        	movwf	_TBLPTRU, 0
                                           	;	0x05 = cinit.num_init
0064ba   0009     tblrd*+                  	tblrd*+
0064bc   cff5     movff   0xff5, 0x005     	movff	_TABLAT, 0x05
0064be   f005
0064c0   0009     tblrd*+                  	tblrd*+
0064c2   cff5     movff   0xff5, 0x006     	movff	_TABLAT, (0x05 + 1)
0064c4   f006
                                           	;	while (0x05)
0064c6   d034     bra     0x006530         	bra	entry_loop_dec
                                           entry_loop:
                                           	;	Count down so we only have to look up the data in _cinit once.
                                           	;	At this point we know that TBLPTR points to the top of the current
                                           	;	entry in _cinit, so we can just start reading the from, to, and
                                           	;	size values.
                                           	;	Read the source address low.
                                           	;	0x00 = 0x07 ->from;
0064c8   0009     tblrd*+                  	tblrd*+
0064ca   cff5     movff   0xff5, 0x000     	movff	_TABLAT, 0x00
0064cc   f000
                                           	;	source address high
0064ce   0009     tblrd*+                  	tblrd*+
0064d0   cff5     movff   0xff5, 0x001     	movff	_TABLAT, (0x00 + 1)
0064d2   f001
                                           	;	source address upper
0064d4   0009     tblrd*+                  	tblrd*+
0064d6   cff5     movff   0xff5, 0x002     	movff	_TABLAT, (0x00 + 2)
0064d8   f002
                                           	;	Skip a byte since it is stored as a 32bit int.
0064da   0009     tblrd*+                  	tblrd*+
                                           	;	Read the destination address directly into FSR0
                                           	;	destination address low.
                                           	;	FSR0 = (unsigned short)0x07 ->to;
0064dc   0009     tblrd*+                  	tblrd*+
0064de   cff5     movff   0xff5, 0xfe9     	movff	_TABLAT, _FSR0L
0064e0   ffe9
                                           	;	destination address high
0064e2   0009     tblrd*+                  	tblrd*+
0064e4   cff5     movff   0xff5, 0xfea     	movff	_TABLAT, _FSR0H
0064e6   ffea
                                           	;	Skip two bytes since it is stored as a 32bit int.
0064e8   0009     tblrd*+                  	tblrd*+
0064ea   0009     tblrd*+                  	tblrd*+
                                           	;	Read the size of data to transfer to destination address.
                                           	;	0x03 = (unsigned short)0x07 ->size;
0064ec   0009     tblrd*+                  	tblrd*+
0064ee   cff5     movff   0xff5, 0x003     	movff	_TABLAT, 0x03
0064f0   f003
0064f2   0009     tblrd*+                  	tblrd*+
0064f4   cff5     movff   0xff5, 0x004     	movff	_TABLAT, (0x03 + 1)
0064f6   f004
                                           	;	Skip two bytes since it is stored as a 32bit int.
0064f8   0009     tblrd*+                  	tblrd*+
0064fa   0009     tblrd*+                  	tblrd*+
                                           	;	0x00 = 0x07 ->from;
                                           	;	FSR0 = (unsigned short)0x07 ->to;
                                           	;	0x03 = (unsigned short)0x07 ->size;
                                           	;	The table pointer now points to the next entry. Save it
                                           	;	off since we will be using the table pointer to do the copying
                                           	;	for the entry.
                                           	;	0x07 = TBLPTR
0064fc   cff6     movff   0xff6, 0x007     	movff	_TBLPTRL, 0x07
0064fe   f007
006500   cff7     movff   0xff7, 0x008     	movff	_TBLPTRH, (0x07 + 1)
006502   f008
006504   cff8     movff   0xff8, 0x009     	movff	_TBLPTRU, (0x07 + 2)
006506   f009
                                           	;	Now assign the source address to the table pointer.
                                           	;	TBLPTR = 0x00
006508   c000     movff   0x000, 0xff6     	movff	0x00, _TBLPTRL
00650a   fff6
00650c   c001     movff   0x001, 0xff7     	movff	(0x00 + 1), _TBLPTRH
00650e   fff7
006510   c002     movff   0x002, 0xff8     	movff	(0x00 + 2), _TBLPTRU
006512   fff8
006514   d003     bra     0x00651c         	bra	copy_loop_dec
                                           copy_loop:
006516   0009     tblrd*+                  	tblrd*+
006518   cff5     movff   0xff5, 0xfee     	movff	_TABLAT, _POSTINC0
00651a   ffee
                                           copy_loop_dec:
                                           	;	while (--0x03);
                                           	;	Decrement and test the byte counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
00651c   0603     decf    0x03, 0x1, 0x0   	decf	0x03, f, 0
00651e   e2fb     bc      0x006516         	bc	copy_loop
006520   0604     decf    0x04, 0x1, 0x0   	decf	(0x03 + 1), f, 0
006522   e2f9     bc      0x006516         	bc	copy_loop
                                           	;	Restore the table pointer for the next entry.
                                           	;	TBLPTR = 0x07
006524   c007     movff   0x007, 0xff6     	movff	0x07, _TBLPTRL
006526   fff6
006528   c008     movff   0x008, 0xff7     	movff	(0x07 + 1), _TBLPTRH
00652a   fff7
00652c   c009     movff   0x009, 0xff8     	movff	(0x07 + 2), _TBLPTRU
00652e   fff8
                                           entry_loop_dec:
                                           	;	while (--0x05);
                                           	;	Decrement and test the entry counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
006530   0605     decf    0x05, 0x1, 0x0   	decf	0x05, f, 0
006532   e2ca     bc      0x0064c8         	bc	entry_loop
006534   0606     decf    0x06, 0x1, 0x0   	decf	(0x05 + 1), f, 0
006536   e2c8     bc      0x0064c8         	bc	entry_loop
                                           	
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/source/crt0iz.c	main ();
006538   ec5e     call    0x0074bc, 0x0    	CALL	_main
00653a   f03a
                                           lockup:
                                           	;	Returning from main will lock up.
00653c   d7ff     bra     0x00653c         	bra	lockup
                                           	
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/source/crt0iz.c	}
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	99; /home/vbasel/.icaro/v4/firmware/source/user.c	void loop()
00465a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00465c   ffe5
00465e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004660   ffe5
004662   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004664   ffe5
004666   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004668   ffe5
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/source/user.c	lcdi2c_init(16,2,0x27);
00466a   0e27     movlw   0x27             	MOVLW	0x27
00466c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00466e   0e02     movlw   0x02             	MOVLW	0x02
004670   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004672   0e10     movlw   0x10             	MOVLW	0x10
004674   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004676   ec07     call    0x00600e, 0x0    	CALL	_lcdi2c_init
004678   f030
00467a   0e03     movlw   0x03             	MOVLW	0x03
00467c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	105; /home/vbasel/.icaro/v4/firmware/source/user.c	lcdi2c_backlight();
00467e   ec73     call    0x0070e6, 0x0    	CALL	_lcdi2c_backlight
004680   f038
                                           _01597_DS_:
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/source/user.c	lcdi2c_home();
004682   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004684   0e02     movlw   0x02             	MOVLW	0x02
004686   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004688   ecf0     call    0x006fe0, 0x0    	CALL	_lcdi2c_send8
00468a   f037
00468c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00468e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004690   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004692   0e02     movlw   0x02             	MOVLW	0x02
004694   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004696   ec37     call    0x00626e, 0x0    	CALL	_Delayms
004698   f031
00469a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00469c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/source/user.c	fahrenheit = (dht_register.int_temperature + (dht_register.dec_temperature/100)) * 1.8 + 32.0; 
00469e   c710     movff   0x710, 0x000     	MOVFF	(_dht_register + 4), r0x00
0046a0   f000
0046a2   c711     movff   0x711, 0x001     	MOVFF	(_dht_register + 5), r0x01
0046a4   f001
0046a6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0046a8   0e64     movlw   0x64             	MOVLW	0x64
0046aa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046ac   0107     movlb   0x7              	BANKSEL	(_dht_register + 7)
0046ae   5113     movf    0x13, 0x0, 0x1   	MOVF	(_dht_register + 7), W, B
0046b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0046b2   5112     movf    0x12, 0x0, 0x1   	MOVF	(_dht_register + 6), W, B
0046b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046b6   ec90     call    0x005f20, 0x0    	CALL	__divsint
0046b8   f02f
0046ba   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0046bc   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0046be   f003
0046c0   0e04     movlw   0x04             	MOVLW	0x04
0046c2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0046c4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0046c6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0046c8   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0046ca   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0046cc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0046ce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046d0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0046d2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046d4   ec44     call    0x006e88, 0x0    	CALL	___sint2fs
0046d6   f037
0046d8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0046da   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0046dc   f001
0046de   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
0046e0   f002
0046e2   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
0046e4   f003
0046e6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0046e8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0046ea   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0046ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046ee   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0046f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046f2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0046f4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046f6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0046f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046fa   0e3f     movlw   0x3f             	MOVLW	0x3f
0046fc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046fe   0ee6     movlw   0xe6             	MOVLW	0xe6
004700   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004702   0e66     movlw   0x66             	MOVLW	0x66
004704   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004706   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004708   ecec     call    0x0035d8, 0x0    	CALL	___fsmul
00470a   f01a
00470c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00470e   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
004710   f001
004712   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
004714   f002
004716   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
004718   f003
00471a   0e08     movlw   0x08             	MOVLW	0x08
00471c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00471e   0e42     movlw   0x42             	MOVLW	0x42
004720   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004722   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004724   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004726   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004728   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00472a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00472c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00472e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004730   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004732   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004734   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004736   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004738   ec15     call    0x00322a, 0x0    	CALL	___fsadd
00473a   f019
00473c   0106     movlb   0x6              	BANKSEL	_fahrenheit
00473e   6ffb     movwf   0xfb, 0x1        	MOVWF	_fahrenheit, B
004740   cff3     movff   0xff3, 0x6fc     	MOVFF	PRODL, (_fahrenheit + 1)
004742   f6fc
004744   cff4     movff   0xff4, 0x6fd     	MOVFF	PRODH, (_fahrenheit + 2)
004746   f6fd
004748   cfe9     movff   0xfe9, 0x6fe     	MOVFF	FSR0L, (_fahrenheit + 3)
00474a   f6fe
00474c   0e08     movlw   0x08             	MOVLW	0x08
00474e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(2000);
004750   0e07     movlw   0x07             	MOVLW	0x07
004752   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004754   0ed0     movlw   0xd0             	MOVLW	0xd0
004756   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004758   ec37     call    0x00626e, 0x0    	CALL	_Delayms
00475a   f031
00475c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00475e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/source/user.c	dhtRead(dhtPin);
004760   0e50     movlw   0x50             	MOVLW	LOW(_dhtPin)
004762   6ef6     movwf   0xf6, 0x0        	MOVWF	TBLPTRL
004764   0e61     movlw   0x61             	MOVLW	HIGH(_dhtPin)
004766   6ef7     movwf   0xf7, 0x0        	MOVWF	TBLPTRH
004768   0e00     movlw   0x00             	MOVLW	UPPER(_dhtPin)
00476a   6ef8     movwf   0xf8, 0x0        	MOVWF	TBLPTRU
00476c   0009     tblrd*+                  	TBLRD*+	
00476e   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
004770   f000
004772   0009     tblrd*+                  	TBLRD*+	
004774   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004776   f001
004778   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00477a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00477c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00477e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004780   ecfc     call    0x0041f8, 0x0    	CALL	_dhtRead
004782   f020
004784   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004786   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	113; /home/vbasel/.icaro/v4/firmware/source/user.c	if(dht_register.status==dht_success){
004788   0e4a     movlw   0x4a             	MOVLW	LOW(_dht_success)
00478a   6ef6     movwf   0xf6, 0x0        	MOVWF	TBLPTRL
00478c   0e61     movlw   0x61             	MOVLW	HIGH(_dht_success)
00478e   6ef7     movwf   0xf7, 0x0        	MOVWF	TBLPTRH
004790   0e00     movlw   0x00             	MOVLW	UPPER(_dht_success)
004792   6ef8     movwf   0xf8, 0x0        	MOVWF	TBLPTRU
004794   0009     tblrd*+                  	TBLRD*+	
004796   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
004798   f000
00479a   0009     tblrd*+                  	TBLRD*+	
00479c   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00479e   f001
0047a0   0107     movlb   0x7              	BANKSEL	(_dht_register + 10)
0047a2   5116     movf    0x16, 0x0, 0x1   	MOVF	(_dht_register + 10), W, B
0047a4   1800     xorwf   0x00, 0x0, 0x0   	XORWF	r0x00, W
0047a6   e103     bnz     0x0047ae         	BNZ	_01607_DS_
                                           ; removed redundant BANKSEL
0047a8   5117     movf    0x17, 0x0, 0x1   	MOVF	(_dht_register + 11), W, B
0047aa   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0047ac   e001     bz      0x0047b0         	BZ	_01608_DS_
                                           _01607_DS_:
0047ae   d769     bra     0x004682         	BRA	_01597_DS_
                                           _01608_DS_:
0047b0   0107     movlb   0x7              	BANKSEL	(_dht_register + 7)
                                           ;	.line	114; /home/vbasel/.icaro/v4/firmware/source/user.c	sprintf(buf, "temp: %i.%i",dht_register.int_temperature,dht_register.dec_temperature);
0047b2   5113     movf    0x13, 0x0, 0x1   	MOVF	(_dht_register + 7), W, B
0047b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0047b6   5112     movf    0x12, 0x0, 0x1   	MOVF	(_dht_register + 6), W, B
0047b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0047ba   5111     movf    0x11, 0x0, 0x1   	MOVF	(_dht_register + 5), W, B
0047bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0047be   5110     movf    0x10, 0x0, 0x1   	MOVF	(_dht_register + 4), W, B
0047c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047c2   0e00     movlw   0x00             	MOVLW	UPPER(___str_1)
0047c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047c6   0e61     movlw   0x61             	MOVLW	HIGH(___str_1)
0047c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047ca   0e52     movlw   0x52             	MOVLW	LOW(___str_1)
0047cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047ce   0e80     movlw   0x80             	MOVLW	0x80
0047d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047d2   0e05     movlw   0x05             	MOVLW	HIGH(_loop_buf_1_293)
0047d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047d6   0e96     movlw   0x96             	MOVLW	LOW(_loop_buf_1_293)
0047d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047da   ec86     call    0x005b0c, 0x0    	CALL	_sprintf
0047dc   f02d
0047de   0e0a     movlw   0x0a             	MOVLW	0x0a
0047e0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0047e2   0107     movlb   0x7              	BANKSEL	(_dht_register + 3)
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/source/user.c	sprintf(buf2, "hum: %i.%i",dht_register.int_humidity,dht_register.dec_humidity);
0047e4   510f     movf    0x0f, 0x0, 0x1   	MOVF	(_dht_register + 3), W, B
0047e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0047e8   510e     movf    0x0e, 0x0, 0x1   	MOVF	(_dht_register + 2), W, B
0047ea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0047ec   510d     movf    0x0d, 0x0, 0x1   	MOVF	(_dht_register + 1), W, B
0047ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0047f0   510c     movf    0x0c, 0x0, 0x1   	MOVF	_dht_register, W, B
0047f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047f4   0e00     movlw   0x00             	MOVLW	UPPER(___str_2)
0047f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047f8   0e61     movlw   0x61             	MOVLW	HIGH(___str_2)
0047fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047fc   0e5e     movlw   0x5e             	MOVLW	LOW(___str_2)
0047fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004800   0e80     movlw   0x80             	MOVLW	0x80
004802   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004804   0e06     movlw   0x06             	MOVLW	HIGH(_loop_buf2_1_293)
004806   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004808   0e00     movlw   0x00             	MOVLW	LOW(_loop_buf2_1_293)
00480a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00480c   ec86     call    0x005b0c, 0x0    	CALL	_sprintf
00480e   f02d
004810   0e0a     movlw   0x0a             	MOVLW	0x0a
004812   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/source/user.c	lcdi2c_printf(buf);
004814   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
004816   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004818   0e05     movlw   0x05             	MOVLW	HIGH(_loop_buf_1_293)
00481a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00481c   0e96     movlw   0x96             	MOVLW	LOW(_loop_buf_1_293)
00481e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004820   ecb7     call    0x006f6e, 0x0    	CALL	_lcdi2c_printf
004822   f037
004824   0e03     movlw   0x03             	MOVLW	0x03
004826   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	117; /home/vbasel/.icaro/v4/firmware/source/user.c	lcdi2c_setCursor(0,1);
004828   0e01     movlw   0x01             	MOVLW	0x01
00482a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00482c   0e00     movlw   0x00             	MOVLW	0x00
00482e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004830   ec43     call    0x006886, 0x0    	CALL	_lcdi2c_setCursor
004832   f034
004834   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004836   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	118; /home/vbasel/.icaro/v4/firmware/source/user.c	lcdi2c_printf(buf2);
004838   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00483a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00483c   0e06     movlw   0x06             	MOVLW	HIGH(_loop_buf2_1_293)
00483e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004840   0e00     movlw   0x00             	MOVLW	LOW(_loop_buf2_1_293)
004842   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004844   ecb7     call    0x006f6e, 0x0    	CALL	_lcdi2c_printf
004846   f037
004848   0e03     movlw   0x03             	MOVLW	0x03
00484a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00484c   d71a     bra     0x004682         	BRA	_01597_DS_
                                           ;	.line	122; /home/vbasel/.icaro/v4/firmware/source/user.c	}
00484e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004850   f003
004852   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004854   f002
004856   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004858   f001
00485a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00485c   f000
00485e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__dhtRead	code
                                           _dhtRead:
                                           ;	.line	52; /home/vbasel/.icaro/v4/firmware/source/user.c	void dhtRead(int dhtPin) {
0041f8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0041fa   ffe5
0041fc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0041fe   ffd9
004200   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004202   ffe5
004204   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004206   ffe5
004208   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00420a   ffe5
00420c   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00420e   ffe5
004210   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004212   ffe5
004214   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004216   ffe5
004218   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00421a   ffe5
00421c   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
00421e   ffe5
004220   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
004222   ffe5
004224   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
004226   ffe5
004228   0e02     movlw   0x02             	MOVLW	0x02
00422a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00422c   f000
00422e   0e03     movlw   0x03             	MOVLW	0x03
004230   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004232   f001
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/source/user.c	pinmode(dhtPin, OUTPUT); // Set DHT_ pin as output.
004234   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004236   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004238   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00423a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00423c   ecb4     call    0x003f68, 0x0    	CALL	_pinmode
00423e   f01f
004240   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004242   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	56; /home/vbasel/.icaro/v4/firmware/source/user.c	digitalwrite(dhtPin, LOW); // Drive DHT_ pin LOW to commence start signal
004244   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004246   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004248   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00424a   ec6c     call    0x003cd8, 0x0    	CALL	_digitalwrite
00424c   f01e
00424e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004250   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(20); // Wait for 20 miliseconds
004252   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004254   0e14     movlw   0x14             	MOVLW	0x14
004256   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004258   ec37     call    0x00626e, 0x0    	CALL	_Delayms
00425a   f031
00425c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00425e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/source/user.c	digitalwrite(dhtPin,HIGH); // Drive DHT_ pin HIGH
004260   0e01     movlw   0x01             	MOVLW	0x01
004262   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004264   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004266   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004268   ec6c     call    0x003cd8, 0x0    	CALL	_digitalwrite
00426a   f01e
00426c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00426e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayus(30); // Wait 30 microseconds
004270   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004272   0e1e     movlw   0x1e             	MOVLW	0x1e
004274   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004276   ec4b     call    0x007096, 0x0    	CALL	_Delayus
004278   f038
00427a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00427c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	60; /home/vbasel/.icaro/v4/firmware/source/user.c	pinmode(dhtPin, INPUT); // Start signal sent, now change DHT_ pin to input.
00427e   0e01     movlw   0x01             	MOVLW	0x01
004280   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004282   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004284   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004286   ecb4     call    0x003f68, 0x0    	CALL	_pinmode
004288   f01f
00428a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00428c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayus(40); // Wait 40us for mid-point of first response bit.
00428e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004290   0e28     movlw   0x28             	MOVLW	0x28
004292   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004294   ec4b     call    0x007096, 0x0    	CALL	_Delayus
004296   f038
004298   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00429a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/source/user.c	chk1 = digitalread(dhtPin); // Read bit.  Should be a zero.
00429c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00429e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042a0   ec27     call    0x004c4e, 0x0    	CALL	_digitalread
0042a2   f026
0042a4   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0042a6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0042a8   6a04     clrf    0x04, 0x0        	CLRF	r0x04
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayus(80); // Wait 80us for the mid-point of the second bit.
0042aa   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0042ac   0e50     movlw   0x50             	MOVLW	0x50
0042ae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042b0   ec4b     call    0x007096, 0x0    	CALL	_Delayus
0042b2   f038
0042b4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0042b6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/source/user.c	chk2 = digitalread(dhtPin); // Read bit.  Should be a one.
0042b8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0042ba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042bc   ec27     call    0x004c4e, 0x0    	CALL	_digitalread
0042be   f026
0042c0   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0042c2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0042c4   6a05     clrf    0x05, 0x0        	CLRF	r0x05
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayus(40); // Wait 40us for end of response signal.
0042c6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0042c8   0e28     movlw   0x28             	MOVLW	0x28
0042ca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042cc   ec4b     call    0x007096, 0x0    	CALL	_Delayus
0042ce   f038
0042d0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0042d2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/source/user.c	if ((chk1 == 0) && (chk2 == 1)) { // If the response code is valid....
0042d4   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0042d6   1004     iorwf   0x04, 0x0, 0x0   	IORWF	r0x04, W
0042d8   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
0042da   d08d     bra     0x0043f6         	BRA	_01558_DS_
0042dc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0042de   0a01     xorlw   0x01             	XORLW	0x01
0042e0   e102     bnz     0x0042e6         	BNZ	_01581_DS_
0042e2   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0042e4   e001     bz      0x0042e8         	BZ	_01582_DS_
                                           _01581_DS_:
0042e6   d087     bra     0x0043f6         	BRA	_01558_DS_
                                           _01582_DS_:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/source/user.c	for (c = 0 ; c < 5 ; c++) {
0042e8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0042ea   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0042ec   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0042ee   6a05     clrf    0x05, 0x0        	CLRF	r0x05
                                           _01561_DS_:
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/source/user.c	DHT_Array[c] = dhtReadByte(dhtPin); // Read five bytes from DHT_
0042f0   0e18     movlw   0x18             	MOVLW	LOW(_dhtRead_DHT_Array_1_286)
0042f2   2404     addwf   0x04, 0x0, 0x0   	ADDWF	r0x04, W
0042f4   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
0042f6   0e07     movlw   0x07             	MOVLW	HIGH(_dhtRead_DHT_Array_1_286)
0042f8   2005     addwfc  0x05, 0x0, 0x0   	ADDWFC	r0x05, W
0042fa   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0042fc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0042fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004300   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004302   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004304   ecbc     call    0x005778, 0x0    	CALL	_dhtReadByte
004306   f02b
004308   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
00430a   cff3     movff   0xff3, 0x009     	MOVFF	PRODL, r0x09
00430c   f009
00430e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004310   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004312   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
004314   ffe9
004316   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
004318   ffea
00431a   c008     movff   0x008, 0xfee     	MOVFF	r0x08, POSTINC0
00431c   ffee
00431e   c009     movff   0x009, 0xfef     	MOVFF	r0x09, INDF0
004320   ffef
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/source/user.c	for (c = 0 ; c < 5 ; c++) {
004322   0e02     movlw   0x02             	MOVLW	0x02
004324   2604     addwf   0x04, 0x1, 0x0   	ADDWF	r0x04, F
004326   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004328   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
00432a   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
00432c   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
00432e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004330   0f80     addlw   0x80             	ADDLW	0x80
004332   0f80     addlw   0x80             	ADDLW	0x80
004334   e102     bnz     0x00433a         	BNZ	_01583_DS_
004336   0e05     movlw   0x05             	MOVLW	0x05
004338   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01583_DS_:
00433a   e3da     bnc     0x0042f0         	BNC	_01561_DS_
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/source/user.c	if (DHT_Array[4] == ((DHT_Array[0] + DHT_Array[1] + DHT_Array[2] + DHT_Array[3]) & 0xFF)) {
00433c   c718     movff   0x718, 0x000     	MOVFF	_dhtRead_DHT_Array_1_286, r0x00
00433e   f000
004340   c719     movff   0x719, 0x001     	MOVFF	(_dhtRead_DHT_Array_1_286 + 1), r0x01
004342   f001
004344   0107     movlb   0x7              	BANKSEL	(_dhtRead_DHT_Array_1_286 + 2)
004346   511a     movf    0x1a, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 2), W, B
004348   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00434a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           ; #	MOVF	(_dhtRead_DHT_Array_1_286 + 3), W, B
                                           ; #	MOVF	(_dhtRead_DHT_Array_1_286 + 4), W, B
                                           ; removed redundant BANKSEL
00434c   511c     movf    0x1c, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 4), W, B
00434e   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
                                           ; #	MOVF	(_dhtRead_DHT_Array_1_286 + 5), W, B
                                           ; #	MOVF	(_dhtRead_DHT_Array_1_286 + 6), W, B
                                           ; removed redundant BANKSEL
004350   511e     movf    0x1e, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 6), W, B
004352   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
                                           ; removed redundant BANKSEL
004354   511f     movf    0x1f, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 7), W, B
004356   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           ; removed redundant BANKSEL
004358   5120     movf    0x20, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 8), W, B
00435a   1802     xorwf   0x02, 0x0, 0x0   	XORWF	r0x02, W
00435c   e103     bnz     0x004364         	BNZ	_01585_DS_
                                           ; removed redundant BANKSEL
00435e   5121     movf    0x21, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 9), W, B
004360   1803     xorwf   0x03, 0x0, 0x0   	XORWF	r0x03, W
004362   e001     bz      0x004366         	BZ	_01586_DS_
                                           _01585_DS_:
004364   d036     bra     0x0043d2         	BRA	_01555_DS_
                                           _01586_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/source/user.c	dht_register.int_humidity = DHT_Array[0];    // integer humidity
004366   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004368   0107     movlb   0x7              	BANKSEL	_dht_register
00436a   6f0c     movwf   0x0c, 0x1        	MOVWF	_dht_register, B
00436c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00436e   6f0d     movwf   0x0d, 0x1        	MOVWF	(_dht_register + 1), B
004370   0107     movlb   0x7              	BANKSEL	(_dhtRead_DHT_Array_1_286 + 2)
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/source/user.c	dht_register.dec_humidity = DHT_Array[1];    // decimal humidity (0 on DHT11)
004372   511a     movf    0x1a, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 2), W, B
004374   0107     movlb   0x7              	BANKSEL	(_dht_register + 2)
004376   6f0e     movwf   0x0e, 0x1        	MOVWF	(_dht_register + 2), B
004378   0107     movlb   0x7              	BANKSEL	(_dhtRead_DHT_Array_1_286 + 3)
00437a   511b     movf    0x1b, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 3), W, B
00437c   0107     movlb   0x7              	BANKSEL	(_dht_register + 3)
00437e   6f0f     movwf   0x0f, 0x1        	MOVWF	(_dht_register + 3), B
004380   0107     movlb   0x7              	BANKSEL	(_dhtRead_DHT_Array_1_286 + 4)
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/source/user.c	dht_register.int_temperature = DHT_Array[2]; // integer temperature
004382   511c     movf    0x1c, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 4), W, B
004384   0107     movlb   0x7              	BANKSEL	(_dht_register + 4)
004386   6f10     movwf   0x10, 0x1        	MOVWF	(_dht_register + 4), B
004388   0107     movlb   0x7              	BANKSEL	(_dhtRead_DHT_Array_1_286 + 5)
00438a   511d     movf    0x1d, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 5), W, B
00438c   0107     movlb   0x7              	BANKSEL	(_dht_register + 5)
00438e   6f11     movwf   0x11, 0x1        	MOVWF	(_dht_register + 5), B
004390   0107     movlb   0x7              	BANKSEL	(_dhtRead_DHT_Array_1_286 + 6)
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/source/user.c	dht_register.dec_temperature = DHT_Array[3]; // decimal temperature (0 on DHT11)
004392   511e     movf    0x1e, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 6), W, B
004394   0107     movlb   0x7              	BANKSEL	(_dht_register + 6)
004396   6f12     movwf   0x12, 0x1        	MOVWF	(_dht_register + 6), B
004398   0107     movlb   0x7              	BANKSEL	(_dhtRead_DHT_Array_1_286 + 7)
00439a   511f     movf    0x1f, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 7), W, B
00439c   0107     movlb   0x7              	BANKSEL	(_dht_register + 7)
00439e   6f13     movwf   0x13, 0x1        	MOVWF	(_dht_register + 7), B
0043a0   0107     movlb   0x7              	BANKSEL	(_dhtRead_DHT_Array_1_286 + 8)
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/source/user.c	dht_register.checksum = DHT_Array[4];        // checksum result
0043a2   5120     movf    0x20, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 8), W, B
0043a4   0107     movlb   0x7              	BANKSEL	(_dht_register + 8)
0043a6   6f14     movwf   0x14, 0x1        	MOVWF	(_dht_register + 8), B
0043a8   0107     movlb   0x7              	BANKSEL	(_dhtRead_DHT_Array_1_286 + 9)
0043aa   5121     movf    0x21, 0x0, 0x1   	MOVF	(_dhtRead_DHT_Array_1_286 + 9), W, B
0043ac   0107     movlb   0x7              	BANKSEL	(_dht_register + 9)
0043ae   6f15     movwf   0x15, 0x1        	MOVWF	(_dht_register + 9), B
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/source/user.c	dht_register.status =  dht_success;          // success status
0043b0   0e4a     movlw   0x4a             	MOVLW	LOW(_dht_success)
0043b2   6ef6     movwf   0xf6, 0x0        	MOVWF	TBLPTRL
0043b4   0e61     movlw   0x61             	MOVLW	HIGH(_dht_success)
0043b6   6ef7     movwf   0xf7, 0x0        	MOVWF	TBLPTRH
0043b8   0e00     movlw   0x00             	MOVLW	UPPER(_dht_success)
0043ba   6ef8     movwf   0xf8, 0x0        	MOVWF	TBLPTRU
0043bc   0009     tblrd*+                  	TBLRD*+	
0043be   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0043c0   f000
0043c2   0009     tblrd*+                  	TBLRD*+	
0043c4   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0043c6   f001
0043c8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0043ca   6f16     movwf   0x16, 0x1        	MOVWF	(_dht_register + 10), B
0043cc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0043ce   6f17     movwf   0x17, 0x1        	MOVWF	(_dht_register + 11), B
                                           ;	.line	83; /home/vbasel/.icaro/v4/firmware/source/user.c	return;                          // return success code.
0043d0   d023     bra     0x004418         	BRA	_01563_DS_
                                           _01555_DS_:
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/source/user.c	dht_register.status = dht_notconnected;          // success status
0043d2   0e4c     movlw   0x4c             	MOVLW	LOW(_dht_notconnected)
0043d4   6ef6     movwf   0xf6, 0x0        	MOVWF	TBLPTRL
0043d6   0e61     movlw   0x61             	MOVLW	HIGH(_dht_notconnected)
0043d8   6ef7     movwf   0xf7, 0x0        	MOVWF	TBLPTRH
0043da   0e00     movlw   0x00             	MOVLW	UPPER(_dht_notconnected)
0043dc   6ef8     movwf   0xf8, 0x0        	MOVWF	TBLPTRU
0043de   0009     tblrd*+                  	TBLRD*+	
0043e0   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0043e2   f000
0043e4   0009     tblrd*+                  	TBLRD*+	
0043e6   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0043e8   f001
0043ea   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0043ec   0107     movlb   0x7              	BANKSEL	(_dht_register + 10)
0043ee   6f16     movwf   0x16, 0x1        	MOVWF	(_dht_register + 10), B
0043f0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0043f2   6f17     movwf   0x17, 0x1        	MOVWF	(_dht_register + 11), B
                                           ;	.line	86; /home/vbasel/.icaro/v4/firmware/source/user.c	return;                     //  Sensor data corrupted.
0043f4   d011     bra     0x004418         	BRA	_01563_DS_
                                           _01558_DS_:
                                           ;	.line	90; /home/vbasel/.icaro/v4/firmware/source/user.c	dht_register.status = dht_checksumfailed;          // success status
0043f6   0e4e     movlw   0x4e             	MOVLW	LOW(_dht_checksumfailed)
0043f8   6ef6     movwf   0xf6, 0x0        	MOVWF	TBLPTRL
0043fa   0e61     movlw   0x61             	MOVLW	HIGH(_dht_checksumfailed)
0043fc   6ef7     movwf   0xf7, 0x0        	MOVWF	TBLPTRH
0043fe   0e00     movlw   0x00             	MOVLW	UPPER(_dht_checksumfailed)
004400   6ef8     movwf   0xf8, 0x0        	MOVWF	TBLPTRU
004402   0009     tblrd*+                  	TBLRD*+	
004404   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
004406   f000
004408   0009     tblrd*+                  	TBLRD*+	
00440a   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00440c   f001
00440e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004410   0107     movlb   0x7              	BANKSEL	(_dht_register + 10)
004412   6f16     movwf   0x16, 0x1        	MOVWF	(_dht_register + 10), B
004414   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
004416   6f17     movwf   0x17, 0x1        	MOVWF	(_dht_register + 11), B
                                           _01563_DS_:
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/source/user.c	}
004418   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
00441a   f009
00441c   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00441e   f008
004420   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004422   f007
004424   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004426   f006
004428   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00442a   f005
00442c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00442e   f004
004430   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004432   f003
004434   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004436   f002
004438   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00443a   f001
00443c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00443e   f000
004440   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004442   ffd9
004444   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__dhtReadByte	code
                                           _dhtReadByte:
                                           ;	.line	35; /home/vbasel/.icaro/v4/firmware/source/user.c	int dhtReadByte(int dhtPin)  {
005778   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00577a   ffe5
00577c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00577e   ffd9
005780   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005782   ffe5
005784   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005786   ffe5
005788   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00578a   ffe5
00578c   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00578e   ffe5
005790   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
005792   ffe5
005794   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
005796   ffe5
005798   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00579a   ffe5
00579c   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
00579e   ffe5
0057a0   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
0057a2   ffe5
0057a4   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
0057a6   ffe5
0057a8   0e02     movlw   0x02             	MOVLW	0x02
0057aa   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0057ac   f000
0057ae   0e03     movlw   0x03             	MOVLW	0x03
0057b0   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0057b2   f001
                                           ;	.line	36; /home/vbasel/.icaro/v4/firmware/source/user.c	int a=0;
0057b4   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0057b6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           ;	.line	37; /home/vbasel/.icaro/v4/firmware/source/user.c	int i,rbyte = 0;
0057b8   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0057ba   6a05     clrf    0x05, 0x0        	CLRF	r0x05
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/source/user.c	pinmode(dhtPin,INPUT);  // Set the DHT_ pin as input
0057bc   0e01     movlw   0x01             	MOVLW	0x01
0057be   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0057c0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0057c2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0057c4   ecb4     call    0x003f68, 0x0    	CALL	_pinmode
0057c6   f01f
0057c8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0057ca   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	40; /home/vbasel/.icaro/v4/firmware/source/user.c	while(digitalread(dhtPin) == LOW){a++; if(a>100){return rbyte;}} // Wait for input to switch to HIGH
0057cc   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0057ce   6a06     clrf    0x06, 0x0        	CLRF	r0x06
                                           _01500_DS_:
0057d0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0057d2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0057d4   ec27     call    0x004c4e, 0x0    	CALL	_digitalread
0057d6   f026
0057d8   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0057da   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0057dc   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
0057de   e10d     bnz     0x0057fa         	BNZ	_01502_DS_
0057e0   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
0057e2   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0057e4   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0057e6   0f80     addlw   0x80             	ADDLW	0x80
0057e8   0f80     addlw   0x80             	ADDLW	0x80
0057ea   e102     bnz     0x0057f0         	BNZ	_01539_DS_
0057ec   0e65     movlw   0x65             	MOVLW	0x65
0057ee   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01539_DS_:
0057f0   e3ef     bnc     0x0057d0         	BNC	_01500_DS_
0057f2   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
0057f4   fff3
0057f6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0057f8   d049     bra     0x00588c         	BRA	_01513_DS_
                                           _01502_DS_:
                                           ;	.line	41; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayus(35); // Wait for digital 1 mid-point.
0057fa   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0057fc   0e23     movlw   0x23             	MOVLW	0x23
0057fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005800   ec4b     call    0x007096, 0x0    	CALL	_Delayus
005802   f038
005804   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005806   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	42; /home/vbasel/.icaro/v4/firmware/source/user.c	if (digitalread(dhtPin) == HIGH) {  //  We have a digital 1
005808   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00580a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00580c   ec27     call    0x004c4e, 0x0    	CALL	_digitalread
00580e   f026
005810   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005812   0a01     xorlw   0x01             	XORLW	0x01
005814   e12e     bnz     0x005872         	BNZ	_01512_DS_
                                           ;	.line	43; /home/vbasel/.icaro/v4/firmware/source/user.c	rbyte |= 1 << (7 - i); // Save the bit.
005816   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; #	MOVWF	r0x07
                                           ; #	MOVF	r0x07, W
005818   0807     sublw   0x07             	SUBLW	0x07
00581a   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
00581c   0e01     movlw   0x01             	MOVLW	0x01
00581e   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
005820   6a09     clrf    0x09, 0x0        	CLRF	r0x09
005822   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
005824   e006     bz      0x005832         	BZ	_01542_DS_
005826   6ce8     negf    0xe8, 0x0        	NEGF	WREG
005828   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01543_DS_:
00582a   3608     rlcf    0x08, 0x1, 0x0   	RLCF	r0x08, F
00582c   3609     rlcf    0x09, 0x1, 0x0   	RLCF	r0x09, F
00582e   0f01     addlw   0x01             	ADDLW	0x01
005830   e3fc     bnc     0x00582a         	BNC	_01543_DS_
                                           _01542_DS_:
005832   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
005834   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
005836   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
005838   1205     iorwf   0x05, 0x1, 0x0   	IORWF	r0x05, F
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/source/user.c	a=0;
00583a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00583c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           ;	.line	45; /home/vbasel/.icaro/v4/firmware/source/user.c	while(digitalread(dhtPin) == HIGH){a++; if(a>100){return rbyte;}} // wait for HIGH to LOW switch (~ 35us).
00583e   6a07     clrf    0x07, 0x0        	CLRF	r0x07
005840   6a08     clrf    0x08, 0x0        	CLRF	r0x08
                                           _01505_DS_:
005842   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005844   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005846   ec27     call    0x004c4e, 0x0    	CALL	_digitalread
005848   f026
00584a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00584c   0a01     xorlw   0x01             	XORLW	0x01
00584e   e111     bnz     0x005872         	BNZ	_01512_DS_
005850   4a07     infsnz  0x07, 0x1, 0x0   	INFSNZ	r0x07, F
005852   2a08     incf    0x08, 0x1, 0x0   	INCF	r0x08, F
005854   c007     movff   0x007, 0x002     	MOVFF	r0x07, r0x02
005856   f002
005858   c008     movff   0x008, 0x003     	MOVFF	r0x08, r0x03
00585a   f003
00585c   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
00585e   0f80     addlw   0x80             	ADDLW	0x80
005860   0f80     addlw   0x80             	ADDLW	0x80
005862   e102     bnz     0x005868         	BNZ	_01547_DS_
005864   0e65     movlw   0x65             	MOVLW	0x65
005866   5c07     subwf   0x07, 0x0, 0x0   	SUBWF	r0x07, W
                                           _01547_DS_:
005868   e3ec     bnc     0x005842         	BNC	_01505_DS_
00586a   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
00586c   fff3
00586e   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
005870   d00d     bra     0x00588c         	BRA	_01513_DS_
                                           _01512_DS_:
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/source/user.c	for (i=0 ; i < 8 ; i++) {
005872   4a01     infsnz  0x01, 0x1, 0x0   	INFSNZ	r0x01, F
005874   2a06     incf    0x06, 0x1, 0x0   	INCF	r0x06, F
005876   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
005878   0f80     addlw   0x80             	ADDLW	0x80
00587a   0f80     addlw   0x80             	ADDLW	0x80
00587c   e102     bnz     0x005882         	BNZ	_01548_DS_
00587e   0e08     movlw   0x08             	MOVLW	0x08
005880   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _01548_DS_:
005882   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
005884   d7a5     bra     0x0057d0         	BRA	_01500_DS_
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/source/user.c	return rbyte;
005886   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
005888   fff3
00588a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           _01513_DS_:
                                           ;	.line	49; /home/vbasel/.icaro/v4/firmware/source/user.c	}    
00588c   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
00588e   f009
005890   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
005892   f008
005894   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
005896   f007
005898   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00589a   f006
00589c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00589e   f005
0058a0   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0058a2   f004
0058a4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0058a6   f003
0058a8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0058aa   f002
0058ac   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0058ae   f001
0058b0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0058b2   f000
0058b4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0058b6   ffd9
0058b8   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__lcdi2c_init	code
                                           _lcdi2c_init:
                                           ;	.line	444; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	void lcdi2c_init(u8 numcol, u8 numline, u8 i2c_address)
00600e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006010   ffe5
006012   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006014   ffd9
006016   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006018   ffe5
00601a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00601c   ffe5
00601e   0e02     movlw   0x02             	MOVLW	0x02
006020   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006022   f000
006024   0e03     movlw   0x03             	MOVLW	0x03
006026   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006028   f001
00602a   0e04     movlw   0x04             	MOVLW	0x04
00602c   cfdb     movff   0xfdb, 0x781     	MOVFF	PLUSW2, _PCF8574_address
00602e   f781
                                           ;	.line	446; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	numcolmax  = numcol - 1;
006030   0400     decf    0x00, 0x0, 0x0   	DECF	r0x00, W
006032   0107     movlb   0x7              	BANKSEL	_numcolmax
006034   6f83     movwf   0x83, 0x1        	MOVWF	_numcolmax, B
                                           ;	.line	447; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	numlinemax = numline - 1;
006036   0401     decf    0x01, 0x0, 0x0   	DECF	r0x01, W
006038   0107     movlb   0x7              	BANKSEL	_numlinemax
00603a   6f82     movwf   0x82, 0x1        	MOVWF	_numlinemax, B
00603c   0107     movlb   0x7              	BANKSEL	_PCF8574_data
                                           ;	.line	450; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	PCF8574_data.val = 0;
00603e   6b80     clrf    0x80, 0x1        	CLRF	_PCF8574_data, B
                                           ;	.line	452; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_init(I2C_MASTER_MODE, I2C_100KHZ);
006040   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006042   0e64     movlw   0x64             	MOVLW	0x64
006044   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006046   0e00     movlw   0x00             	MOVLW	0x00
006048   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00604a   ecf6     call    0x0065ec, 0x0    	CALL	_I2C_init
00604c   f032
00604e   0e03     movlw   0x03             	MOVLW	0x03
006050   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	455; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send4(0x30, LCD_CMD);			// 0x30 - Mode 8 bits
006052   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006054   0e30     movlw   0x30             	MOVLW	0x30
006056   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006058   ec75     call    0x006cea, 0x0    	CALL	_lcdi2c_send4
00605a   f036
00605c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00605e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	457; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send4(0x30, LCD_CMD);			// 0x30 - Mode 8 bits
006060   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006062   0e30     movlw   0x30             	MOVLW	0x30
006064   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006066   ec75     call    0x006cea, 0x0    	CALL	_lcdi2c_send4
006068   f036
00606a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00606c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	459; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send4(0x30, LCD_CMD);			// 0x30 - Mode 8 bits
00606e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006070   0e30     movlw   0x30             	MOVLW	0x30
006072   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006074   ec75     call    0x006cea, 0x0    	CALL	_lcdi2c_send4
006076   f036
006078   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00607a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	461; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send4(0x20, LCD_CMD);			// 0x20 - Mode 4 bits
00607c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00607e   0e20     movlw   0x20             	MOVLW	0x20
006080   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006082   ec75     call    0x006cea, 0x0    	CALL	_lcdi2c_send4
006084   f036
006086   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006088   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	462; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send8(LCD_SYSTEM_SET_4BITS, LCD_CMD); 	// 0x28 - Mode 4 bits - 2 Lignes - 5x8
00608a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00608c   0e28     movlw   0x28             	MOVLW	0x28
00608e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006090   ecf0     call    0x006fe0, 0x0    	CALL	_lcdi2c_send8
006092   f037
006094   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006096   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	464; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send8(LCD_DISPLAY_ON, LCD_CMD);		// 0x0C - Display ON + Cursor OFF + Blinking OFF
006098   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00609a   0e0c     movlw   0x0c             	MOVLW	0x0c
00609c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00609e   ecf0     call    0x006fe0, 0x0    	CALL	_lcdi2c_send8
0060a0   f037
0060a2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0060a4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	466; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send8(LCD_DISPLAY_CLEAR, LCD_CMD);    	// 0x01 - Efface l'affichage + init. DDRAM
0060a6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0060a8   0e01     movlw   0x01             	MOVLW	0x01
0060aa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0060ac   ecf0     call    0x006fe0, 0x0    	CALL	_lcdi2c_send8
0060ae   f037
0060b0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0060b2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	467; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	Delayms(2);					// le temps d'execution de Display Clear > 1.64ms
0060b4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0060b6   0e02     movlw   0x02             	MOVLW	0x02
0060b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0060ba   ec37     call    0x00626e, 0x0    	CALL	_Delayms
0060bc   f031
0060be   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0060c0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	468; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send8(LCD_ENTRY_MODE_SET, LCD_CMD);   	// 0x06 - Increment + Display not shifted (Déplacement automatique du curseur)
0060c2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0060c4   0e06     movlw   0x06             	MOVLW	0x06
0060c6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0060c8   ecf0     call    0x006fe0, 0x0    	CALL	_lcdi2c_send8
0060ca   f037
0060cc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0060ce   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	471; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	}
0060d0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0060d2   f001
0060d4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0060d6   f000
0060d8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0060da   ffd9
0060dc   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__lcdi2c_newchar	code
                                           _lcdi2c_newchar:
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	void lcdi2c_newchar(const u8 *c, u8 char_code)
00632a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00632c   ffe5
00632e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006330   ffd9
006332   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006334   ffe5
006336   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006338   ffe5
00633a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00633c   ffe5
00633e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006340   ffe5
006342   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
006344   ffe5
006346   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
006348   ffe5
00634a   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00634c   ffe5
00634e   0e02     movlw   0x02             	MOVLW	0x02
006350   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006352   f000
006354   0e03     movlw   0x03             	MOVLW	0x03
006356   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006358   f001
00635a   0e04     movlw   0x04             	MOVLW	0x04
00635c   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
00635e   f002
006360   0e05     movlw   0x05             	MOVLW	0x05
006362   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
006364   f003
                                           ;	.line	398; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	a = (char_code << 3) | LCD_ADRESS_CGRAM;
006366   3803     swapf   0x03, 0x0, 0x0   	SWAPF	r0x03, W
006368   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
00636a   0bf8     andlw   0xf8             	ANDLW	0xf8
00636c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00636e   c004     movff   0x004, 0x003     	MOVFF	r0x04, r0x03
006370   f003
006372   8c03     bsf     0x03, 0x6, 0x0   	BSF	r0x03, 6
                                           ;	.line	399; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	for(i=0; i<8; i++)
006374   6a04     clrf    0x04, 0x0        	CLRF	r0x04
                                           _01479_DS_:
                                           ;	.line	401; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send8(a, LCD_CMD);
006376   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006378   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00637a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00637c   ecf0     call    0x006fe0, 0x0    	CALL	_lcdi2c_send8
00637e   f037
006380   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006382   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	402; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send8(c[i], LCD_DATA);
006384   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
006386   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
006388   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00638a   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
00638c   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
00638e   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
006390   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
006392   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
006394   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
006396   ffe9
006398   c006     movff   0x006, 0xff3     	MOVFF	r0x06, PRODL
00639a   fff3
00639c   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
00639e   f03a
0063a0   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0063a2   0e01     movlw   0x01             	MOVLW	0x01
0063a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063a6   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0063a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063aa   ecf0     call    0x006fe0, 0x0    	CALL	_lcdi2c_send8
0063ac   f037
0063ae   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0063b0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	403; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	a++;
0063b2   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
                                           ;	.line	399; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	for(i=0; i<8; i++)
0063b4   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
0063b6   0e08     movlw   0x08             	MOVLW	0x08
0063b8   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
0063ba   e3dd     bnc     0x006376         	BNC	_01479_DS_
                                           ;	.line	405; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	}
0063bc   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
0063be   f006
0063c0   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0063c2   f005
0063c4   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0063c6   f004
0063c8   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0063ca   f003
0063cc   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0063ce   f002
0063d0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0063d2   f001
0063d4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0063d6   f000
0063d8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0063da   ffd9
0063dc   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__lcdi2c_printf	code
                                           _lcdi2c_printf:
                                           ;	.line	373; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	void lcdi2c_printf(char *fmt, ...)
006f6e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006f70   ffe5
006f72   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006f74   ffd9
006f76   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006f78   ffe5
006f7a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006f7c   ffe5
006f7e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006f80   ffe5
                                           ;	.line	377; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	va_start(args, fmt);
006f82   0e02     movlw   0x02             	MOVLW	0x02
006f84   24d9     addwf   0xd9, 0x0, 0x0   	ADDWF	FSR2L, W
006f86   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006f88   0e00     movlw   0x00             	MOVLW	0x00
006f8a   20da     addwfc  0xda, 0x0, 0x0   	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVWF	r0x01
006f8c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
006f8e   0e80     movlw   0x80             	MOVLW	0x80
006f90   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
006f92   0e03     movlw   0x03             	MOVLW	0x03
006f94   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
006f96   0e00     movlw   0x00             	MOVLW	0x00
006f98   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
006f9a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
                                           ;	.line	378; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	pprintf(lcdi2c_write, fmt, args);
006f9c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006f9e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006fa0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006fa2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006fa4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006fa6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006fa8   0e04     movlw   0x04             	MOVLW	0x04
006faa   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
006fac   ffe5
006fae   0e03     movlw   0x03             	MOVLW	0x03
006fb0   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
006fb2   ffe5
006fb4   0e02     movlw   0x02             	MOVLW	0x02
006fb6   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
006fb8   ffe5
006fba   0e00     movlw   0x00             	MOVLW	UPPER(_lcdi2c_write)
006fbc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006fbe   0e74     movlw   0x74             	MOVLW	HIGH(_lcdi2c_write)
006fc0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006fc2   0ee8     movlw   0xe8             	MOVLW	LOW(_lcdi2c_write)
006fc4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006fc6   ec36     call    0x006a6c, 0x0    	CALL	_pprintf
006fc8   f035
006fca   0e09     movlw   0x09             	MOVLW	0x09
006fcc   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	380; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	}
006fce   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006fd0   f002
006fd2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006fd4   f001
006fd6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006fd8   f000
006fda   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006fdc   ffd9
006fde   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__lcdi2c_write	code
                                           _lcdi2c_write:
                                           ;	.line	362; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	void lcdi2c_write(u8 c)
0074e8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0074ea   ffe5
0074ec   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0074ee   ffd9
0074f0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0074f2   ffe5
0074f4   0e02     movlw   0x02             	MOVLW	0x02
0074f6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0074f8   f000
                                           ;	.line	364; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send8(c, LCD_DATA);
0074fa   0e01     movlw   0x01             	MOVLW	0x01
0074fc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0074fe   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
007500   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007502   ecf0     call    0x006fe0, 0x0    	CALL	_lcdi2c_send8
007504   f037
007506   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007508   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	}
00750a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00750c   f000
00750e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007510   ffd9
007512   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__lcdi2c_setCursor	code
                                           _lcdi2c_setCursor:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	void lcdi2c_setCursor(u8 col, u8 line)
006886   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006888   ffe5
00688a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00688c   ffd9
00688e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006890   ffe5
006892   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006894   ffe5
006896   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006898   ffe5
00689a   0e02     movlw   0x02             	MOVLW	0x02
00689c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00689e   f000
0068a0   0e03     movlw   0x03             	MOVLW	0x03
0068a2   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0068a4   f001
0068a6   0107     movlb   0x7              	BANKSEL	_lcdi2c_setCursor_row_offsets_1_265
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	int row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
0068a8   6b22     clrf    0x22, 0x1        	CLRF	_lcdi2c_setCursor_row_offsets_1_265, B
                                           ; removed redundant BANKSEL
0068aa   6b23     clrf    0x23, 0x1        	CLRF	(_lcdi2c_setCursor_row_offsets_1_265 + 1), B
0068ac   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
0068ae   6f24     movwf   0x24, 0x1        	MOVWF	(_lcdi2c_setCursor_row_offsets_1_265 + 2), B
                                           ; removed redundant BANKSEL
0068b0   6b25     clrf    0x25, 0x1        	CLRF	(_lcdi2c_setCursor_row_offsets_1_265 + 3), B
0068b2   0e14     movlw   0x14             	MOVLW	0x14
                                           ; removed redundant BANKSEL
0068b4   6f26     movwf   0x26, 0x1        	MOVWF	(_lcdi2c_setCursor_row_offsets_1_265 + 4), B
                                           ; removed redundant BANKSEL
0068b6   6b27     clrf    0x27, 0x1        	CLRF	(_lcdi2c_setCursor_row_offsets_1_265 + 5), B
0068b8   0e54     movlw   0x54             	MOVLW	0x54
                                           ; removed redundant BANKSEL
0068ba   6f28     movwf   0x28, 0x1        	MOVWF	(_lcdi2c_setCursor_row_offsets_1_265 + 6), B
                                           ; removed redundant BANKSEL
0068bc   6b29     clrf    0x29, 0x1        	CLRF	(_lcdi2c_setCursor_row_offsets_1_265 + 7), B
                                           ;	.line	333; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	if ( line > numlinemax )
0068be   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0068c0   0107     movlb   0x7              	BANKSEL	_numlinemax
0068c2   5d82     subwf   0x82, 0x0, 0x1   	SUBWF	_numlinemax, W, B
0068c4   e204     bc      0x0068ce         	BC	_01451_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	334; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	line = numlinemax - 1;    // we count rows starting w/0
0068c6   5182     movf    0x82, 0x0, 0x1   	MOVF	_numlinemax, W, B
0068c8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0068ca   0402     decf    0x02, 0x0, 0x0   	DECF	r0x02, W
0068cc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           _01451_DS_:
                                           ;	.line	335; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	if ( col > numcolmax )
0068ce   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0068d0   0107     movlb   0x7              	BANKSEL	_numcolmax
0068d2   5d83     subwf   0x83, 0x0, 0x1   	SUBWF	_numcolmax, W, B
0068d4   e204     bc      0x0068de         	BC	_01453_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	336; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	col = numcolmax - 1;    // we count rows starting w/0
0068d6   5183     movf    0x83, 0x0, 0x1   	MOVF	_numcolmax, W, B
0068d8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0068da   0402     decf    0x02, 0x0, 0x0   	DECF	r0x02, W
0068dc   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ; ;multiply lit val:0x02 by variable r0x01 and store in r0x01
                                           _01453_DS_:
                                           ;	.line	337; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send8(LCD_SETDDRAMADDR | (col + row_offsets[line]), LCD_CMD);
0068de   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0068e0   0d02     mullw   0x02             	MULLW	0x02
0068e2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0068e4   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0068e6   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0068e8   f001
0068ea   0e22     movlw   0x22             	MOVLW	LOW(_lcdi2c_setCursor_row_offsets_1_265)
0068ec   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
0068ee   0e07     movlw   0x07             	MOVLW	HIGH(_lcdi2c_setCursor_row_offsets_1_265)
0068f0   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0068f2   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0068f4   ffe9
0068f6   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0068f8   ffea
0068fa   cfee     movff   0xfee, 0x001     	MOVFF	POSTINC0, r0x01
0068fc   f001
0068fe   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
006900   f002
006902   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006904   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
006906   8e01     bsf     0x01, 0x7, 0x0   	BSF	r0x01, 7
006908   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00690a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00690c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00690e   ecf0     call    0x006fe0, 0x0    	CALL	_lcdi2c_send8
006910   f037
006912   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006914   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	338; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	}
006916   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006918   f002
00691a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00691c   f001
00691e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006920   f000
006922   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006924   ffd9
006926   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__lcdi2c_noBacklight	code
                                           _lcdi2c_noBacklight:
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	void lcdi2c_noBacklight()
007130   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007132   ffe5
007134   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
007136   ffe5
007138   0106     movlb   0x6              	BANKSEL	_gBacklight
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	gBacklight = OFF;	// 1 = OFF since PCF8574 is logical inverted
00713a   6bfa     clrf    0xfa, 0x1        	CLRF	_gBacklight, B
00713c   0107     movlb   0x7              	BANKSEL	_PCF8574_data
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	LCD_BL = gBacklight;
00713e   9780     bcf     0x80, 0x3, 0x1   	BCF	_PCF8574_data, 3, B
                                           ;	.line	315; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_start();
007140   ec75     call    0x0076ea, 0x0    	CALL	_I2C_start
007142   f03b
007144   0107     movlb   0x7              	BANKSEL	_PCF8574_address
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_write((PCF8574_address << 1) | I2C_WRITE);
007146   5181     movf    0x81, 0x0, 0x1   	MOVF	_PCF8574_address, W, B
007148   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00714a   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
00714c   0bfe     andlw   0xfe             	ANDLW	0xfe
00714e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
007150   c001     movff   0x001, 0x000     	MOVFF	r0x01, r0x00
007152   f000
007154   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
007156   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007158   ece0     call    0x0073c0, 0x0    	CALL	_I2C_write
00715a   f039
00715c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00715e   0107     movlb   0x7              	BANKSEL	_PCF8574_data
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_write(PCF8574_data.val);
007160   5180     movf    0x80, 0x0, 0x1   	MOVF	_PCF8574_data, W, B
007162   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007164   ece0     call    0x0073c0, 0x0    	CALL	_I2C_write
007166   f039
007168   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	318; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_stop();
00716a   ec6f     call    0x0076de, 0x0    	CALL	_I2C_stop
00716c   f03b
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	}
00716e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
007170   f001
007172   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
007174   f000
007176   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__lcdi2c_backlight	code
                                           _lcdi2c_backlight:
                                           ;	.line	295; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	void lcdi2c_backlight()
0070e6   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0070e8   ffe5
0070ea   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0070ec   ffe5
                                           ;	.line	297; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	gBacklight = ON;	// 0 = ON since PCF8574 is logical inverted
0070ee   0e01     movlw   0x01             	MOVLW	0x01
0070f0   0106     movlb   0x6              	BANKSEL	_gBacklight
0070f2   6ffa     movwf   0xfa, 0x1        	MOVWF	_gBacklight, B
0070f4   0107     movlb   0x7              	BANKSEL	_PCF8574_data
                                           ;	.line	298; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	LCD_BL = gBacklight;
0070f6   8780     bsf     0x80, 0x3, 0x1   	BSF	_PCF8574_data, 3, B
                                           ;	.line	299; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_start();
0070f8   ec75     call    0x0076ea, 0x0    	CALL	_I2C_start
0070fa   f03b
0070fc   0107     movlb   0x7              	BANKSEL	_PCF8574_address
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_write((PCF8574_address << 1) | I2C_WRITE);
0070fe   5181     movf    0x81, 0x0, 0x1   	MOVF	_PCF8574_address, W, B
007100   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
007102   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
007104   0bfe     andlw   0xfe             	ANDLW	0xfe
007106   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
007108   c001     movff   0x001, 0x000     	MOVFF	r0x01, r0x00
00710a   f000
00710c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00710e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007110   ece0     call    0x0073c0, 0x0    	CALL	_I2C_write
007112   f039
007114   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007116   0107     movlb   0x7              	BANKSEL	_PCF8574_data
                                           ;	.line	301; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_write(PCF8574_data.val);
007118   5180     movf    0x80, 0x0, 0x1   	MOVF	_PCF8574_data, W, B
00711a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00711c   ece0     call    0x0073c0, 0x0    	CALL	_I2C_write
00711e   f039
007120   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_stop();
007122   ec6f     call    0x0076de, 0x0    	CALL	_I2C_stop
007124   f03b
                                           ;	.line	303; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	}
007126   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
007128   f001
00712a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00712c   f000
00712e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__lcdi2c_send8	code
                                           _lcdi2c_send8:
                                           ;	.line	283; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	static void lcdi2c_send8(u8 octet, u8 mode)
006fe0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006fe2   ffe5
006fe4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006fe6   ffd9
006fe8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006fea   ffe5
006fec   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006fee   ffe5
006ff0   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006ff2   ffe5
006ff4   0e02     movlw   0x02             	MOVLW	0x02
006ff6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006ff8   f000
006ffa   0e03     movlw   0x03             	MOVLW	0x03
006ffc   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006ffe   f001
                                           ;	.line	285; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send4(octet & LCD_MASK, mode);			// send upper 4 bits
007000   0ef0     movlw   0xf0             	MOVLW	0xf0
007002   1400     andwf   0x00, 0x0, 0x0   	ANDWF	r0x00, W
007004   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
007006   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
007008   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00700a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00700c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00700e   ec75     call    0x006cea, 0x0    	CALL	_lcdi2c_send4
007010   f036
007012   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007014   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	286; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	lcdi2c_send4((octet << 4) & LCD_MASK, mode);	// send lower 4 bits
007016   3800     swapf   0x00, 0x0, 0x0   	SWAPF	r0x00, W
007018   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00701a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00701c   0ef0     movlw   0xf0             	MOVLW	0xf0
00701e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
007020   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
007022   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007024   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
007026   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007028   ec75     call    0x006cea, 0x0    	CALL	_lcdi2c_send4
00702a   f036
00702c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00702e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	288; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	}
007030   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
007032   f002
007034   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
007036   f001
007038   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00703a   f000
00703c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00703e   ffd9
007040   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__lcdi2c_send4	code
                                           _lcdi2c_send4:
                                           ;	.line	244; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	static void lcdi2c_send4(u8 quartet, u8 mode)
006cea   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006cec   ffe5
006cee   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006cf0   ffd9
006cf2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006cf4   ffe5
006cf6   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006cf8   ffe5
006cfa   0e02     movlw   0x02             	MOVLW	0x02
006cfc   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006cfe   f000
006d00   0e03     movlw   0x03             	MOVLW	0x03
006d02   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006d04   f001
                                           ;	.line	247; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	PCF8574_data.val = quartet;     // x  x  x  x  0  0  0    0
006d06   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006d08   0107     movlb   0x7              	BANKSEL	_PCF8574_data
006d0a   6f80     movwf   0x80, 0x1        	MOVWF	_PCF8574_data, B
                                           ;	.line	248; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	LCD_EN = LOW;                   // x  x  x  x  0  0  0    0
006d0c   9580     bcf     0x80, 0x2, 0x1   	BCF	_PCF8574_data, 2, B
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	LCD_RW = LCD_WRITE;				// x  x  x  x  0  0  0    0
006d0e   9380     bcf     0x80, 0x1, 0x1   	BCF	_PCF8574_data, 1, B
                                           ;	.line	250; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	LCD_RS = mode;					// x  x  x  x  0  0  0/1  0
006d10   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006d12   0b01     andlw   0x01             	ANDLW	0x01
006d14   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
006d16   5180     movf    0x80, 0x0, 0x1   	MOVF	_PCF8574_data, W, B
006d18   0bfe     andlw   0xfe             	ANDLW	0xfe
006d1a   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
006d1c   6f80     movwf   0x80, 0x1        	MOVWF	_PCF8574_data, B
006d1e   0106     movlb   0x6              	BANKSEL	_gBacklight
                                           ;	.line	251; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	LCD_BL = gBacklight;				// x  x  x  x  0  0  0/1  0/1
006d20   51fa     movf    0xfa, 0x0, 0x1   	MOVF	_gBacklight, W, B
006d22   0b01     andlw   0x01             	ANDLW	0x01
006d24   38e8     swapf   0xe8, 0x0, 0x0   	SWAPF	WREG, W
006d26   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
006d28   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
006d2a   0107     movlb   0x7              	BANKSEL	_PCF8574_data
006d2c   5180     movf    0x80, 0x0, 0x1   	MOVF	_PCF8574_data, W, B
006d2e   0bf7     andlw   0xf7             	ANDLW	0xf7
006d30   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
006d32   6f80     movwf   0x80, 0x1        	MOVWF	_PCF8574_data, B
                                           ;	.line	255; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_start();                    // send start condition
006d34   ec75     call    0x0076ea, 0x0    	CALL	_I2C_start
006d36   f03b
006d38   0107     movlb   0x7              	BANKSEL	_PCF8574_address
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_write((PCF8574_address << 1) | I2C_WRITE);
006d3a   5181     movf    0x81, 0x0, 0x1   	MOVF	_PCF8574_address, W, B
006d3c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006d3e   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
006d40   0bfe     andlw   0xfe             	ANDLW	0xfe
006d42   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
006d44   c001     movff   0x001, 0x000     	MOVFF	r0x01, r0x00
006d46   f000
006d48   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006d4a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006d4c   ece0     call    0x0073c0, 0x0    	CALL	_I2C_write
006d4e   f039
006d50   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006d52   0107     movlb   0x7              	BANKSEL	_PCF8574_data
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	LCD_EN = HIGH;
006d54   8580     bsf     0x80, 0x2, 0x1   	BSF	_PCF8574_data, 2, B
                                           ;	.line	261; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_write(PCF8574_data.val);
006d56   5180     movf    0x80, 0x0, 0x1   	MOVF	_PCF8574_data, W, B
006d58   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006d5a   ece0     call    0x0073c0, 0x0    	CALL	_I2C_write
006d5c   f039
006d5e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006d60   0107     movlb   0x7              	BANKSEL	_PCF8574_data
                                           ;	.line	264; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	LCD_EN = LOW;
006d62   9580     bcf     0x80, 0x2, 0x1   	BCF	_PCF8574_data, 2, B
                                           ;	.line	265; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_write(PCF8574_data.val);
006d64   5180     movf    0x80, 0x0, 0x1   	MOVF	_PCF8574_data, W, B
006d66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006d68   ece0     call    0x0073c0, 0x0    	CALL	_I2C_write
006d6a   f039
006d6c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	I2C_stop();                     // send stop confition
006d6e   ec6f     call    0x0076de, 0x0    	CALL	_I2C_stop
006d70   f03b
                                           ;	.line	269; /home/vbasel/.icaro/v4/firmware/libraries/lcdi2c.c	}
006d72   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006d74   f001
006d76   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006d78   f000
006d7a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006d7c   ffd9
006d7e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__I2C_sendNack	code
                                           _I2C_sendNack:
                                           ;	.line	576; /home/vbasel/.icaro/v4/firmware/core/i2c.c	I2C_idle();                     // Wait module is inactive
007694   ecc3     call    0x007386, 0x0    	CALL	_I2C_idle
007696   f039
                                           ;	.line	583; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPCON2bits.ACKDT = 1;          // We want a no Ack
007698   8ac5     bsf     0xc5, 0x5, 0x0   	BSF	_SSPCON2bits, 5
                                           ;	.line	590; /home/vbasel/.icaro/v4/firmware/core/i2c.c	PIR1bits.SSPIF = 0;             // Clear SSP interrupt flag
00769a   969e     bcf     0x9e, 0x3, 0x0   	BCF	_PIR1bits, 3
                                           ;	.line	598; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPCON2bits.ACKEN = 1;          // Send it now
00769c   88c5     bsf     0xc5, 0x4, 0x0   	BSF	_SSPCON2bits, 4
                                           _01422_DS_:
                                           ;	.line	605; /home/vbasel/.icaro/v4/firmware/core/i2c.c	while (!PIR1bits.SSPIF);        // Wait the interrupt flag is set
00769e   a69e     btfss   0x9e, 0x3, 0x0   	BTFSS	_PIR1bits, 3
0076a0   d7fe     bra     0x00769e         	BRA	_01422_DS_
                                           ;	.line	607; /home/vbasel/.icaro/v4/firmware/core/i2c.c	}
0076a2   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__I2C_sendAck	code
                                           _I2C_sendAck:
                                           ;	.line	534; /home/vbasel/.icaro/v4/firmware/core/i2c.c	I2C_idle();                     // Wait module is inactive
0076a4   ecc3     call    0x007386, 0x0    	CALL	_I2C_idle
0076a6   f039
                                           ;	.line	541; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPCON2bits.ACKDT = 0;          // We want an Ack
0076a8   9ac5     bcf     0xc5, 0x5, 0x0   	BCF	_SSPCON2bits, 5
                                           ;	.line	548; /home/vbasel/.icaro/v4/firmware/core/i2c.c	PIR1bits.SSPIF = 0;             // Clear SSP interrupt flag
0076aa   969e     bcf     0x9e, 0x3, 0x0   	BCF	_PIR1bits, 3
                                           ;	.line	556; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPCON2bits.ACKEN = 1;          // Send it now
0076ac   88c5     bsf     0xc5, 0x4, 0x0   	BSF	_SSPCON2bits, 4
                                           _01414_DS_:
                                           ;	.line	563; /home/vbasel/.icaro/v4/firmware/core/i2c.c	while (!PIR1bits.SSPIF);        // Wait the interrupt flag is set
0076ae   a69e     btfss   0x9e, 0x3, 0x0   	BTFSS	_PIR1bits, 3
0076b0   d7fe     bra     0x0076ae         	BRA	_01414_DS_
                                           ;	.line	565; /home/vbasel/.icaro/v4/firmware/core/i2c.c	}
0076b2   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__I2C_restart	code
                                           _I2C_restart:
                                           ;	.line	509; /home/vbasel/.icaro/v4/firmware/core/i2c.c	I2C_idle();                     // Wait module is inactive
0076d2   ecc3     call    0x007386, 0x0    	CALL	_I2C_idle
0076d4   f039
                                           ;	.line	519; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPCON2bits.RSEN = 1;           // Send restart bit
0076d6   82c5     bsf     0xc5, 0x1, 0x0   	BSF	_SSPCON2bits, 1
                                           _01406_DS_:
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/core/i2c.c	while (SSPCON2bits.RSEN);       // Wait until RSEN is cleared  
0076d8   b2c5     btfsc   0xc5, 0x1, 0x0   	BTFSC	_SSPCON2bits, 1
0076da   d7fe     bra     0x0076d8         	BRA	_01406_DS_
                                           ;	.line	523; /home/vbasel/.icaro/v4/firmware/core/i2c.c	}
0076dc   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__I2C_stop	code
                                           _I2C_stop:
                                           ;	.line	485; /home/vbasel/.icaro/v4/firmware/core/i2c.c	I2C_idle();                     // Wait module is inactive
0076de   ecc3     call    0x007386, 0x0    	CALL	_I2C_idle
0076e0   f039
                                           ;	.line	495; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPCON2bits.PEN = 1;            // Send stop bit
0076e2   84c5     bsf     0xc5, 0x2, 0x0   	BSF	_SSPCON2bits, 2
                                           _01398_DS_:
                                           ;	.line	496; /home/vbasel/.icaro/v4/firmware/core/i2c.c	while (SSPCON2bits.PEN);        // Wait until PEN is cleared 
0076e4   b4c5     btfsc   0xc5, 0x2, 0x0   	BTFSC	_SSPCON2bits, 2
0076e6   d7fe     bra     0x0076e4         	BRA	_01398_DS_
                                           ;	.line	499; /home/vbasel/.icaro/v4/firmware/core/i2c.c	}
0076e8   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__I2C_start	code
                                           _I2C_start:
                                           ;	.line	459; /home/vbasel/.icaro/v4/firmware/core/i2c.c	I2C_idle();                     // Wait module is inactive
0076ea   ecc3     call    0x007386, 0x0    	CALL	_I2C_idle
0076ec   f039
                                           ;	.line	469; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPCON2bits.SEN = 1;            // Send start bit
0076ee   80c5     bsf     0xc5, 0x0, 0x0   	BSF	_SSPCON2bits, 0
                                           _01390_DS_:
                                           ;	.line	470; /home/vbasel/.icaro/v4/firmware/core/i2c.c	while (SSPCON2bits.SEN);        // Wait until SEN is cleared 
0076f0   b0c5     btfsc   0xc5, 0x0, 0x0   	BTFSC	_SSPCON2bits, 0
0076f2   d7fe     bra     0x0076f0         	BRA	_01390_DS_
                                           ;	.line	473; /home/vbasel/.icaro/v4/firmware/core/i2c.c	}
0076f4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__I2C_idle	code
                                           _I2C_idle:
                                           ;	.line	415; /home/vbasel/.icaro/v4/firmware/core/i2c.c	void I2C_idle()
007386   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007388   ffe5
00738a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00738c   ffe5
                                           _01375_DS_:
                                           ;	.line	422; /home/vbasel/.icaro/v4/firmware/core/i2c.c	while (((SSPCON2 & 0x1F) > 0) | (SSPSTATbits.R_W));
00738e   cfc5     movff   0xfc5, 0x000     	MOVFF	_SSPCON2, r0x00
007390   f000
007392   6a01     clrf    0x01, 0x0        	CLRF	r0x01
007394   0e1f     movlw   0x1f             	MOVLW	0x1f
007396   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
007398   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00739a   0f80     addlw   0x80             	ADDLW	0x80
00739c   0f80     addlw   0x80             	ADDLW	0x80
00739e   e102     bnz     0x0073a4         	BNZ	_01385_DS_
0073a0   0e01     movlw   0x01             	MOVLW	0x01
0073a2   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _01385_DS_:
0073a4   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0073a6   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
0073a8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0073aa   b4c7     btfsc   0xc7, 0x2, 0x0   	BTFSC	_SSPSTATbits, 2
0073ac   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0073ae   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0073b0   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0073b2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0073b4   e1ec     bnz     0x00738e         	BNZ	_01375_DS_
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/core/i2c.c	}
0073b6   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0073b8   f001
0073ba   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0073bc   f000
0073be   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__I2C_wait	code
                                           _I2C_wait:
                                           _01367_DS_:
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/core/i2c.c	while (!PIR1bits.SSPIF);        // Wait the interrupt flag is set
007700   a69e     btfss   0x9e, 0x3, 0x0   	BTFSS	_PIR1bits, 3
007702   d7fe     bra     0x007700         	BRA	_01367_DS_
                                           ;	.line	396; /home/vbasel/.icaro/v4/firmware/core/i2c.c	PIR1bits.SSPIF = 0;             // Clear SSP interrupt flag
007704   969e     bcf     0x9e, 0x3, 0x0   	BCF	_PIR1bits, 3
                                           ;	.line	398; /home/vbasel/.icaro/v4/firmware/core/i2c.c	}
007706   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__I2C_read	code
                                           _I2C_read:
                                           ;	.line	339; /home/vbasel/.icaro/v4/firmware/core/i2c.c	I2C_idle();                 // Wait the MSSP module is inactive
007680   ecc3     call    0x007386, 0x0    	CALL	_I2C_idle
007682   f039
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPCON2bits.RCEN = 1;       // Initiate reception of byte
007684   86c5     bsf     0xc5, 0x3, 0x0   	BSF	_SSPCON2bits, 3
                                           ;	.line	357; /home/vbasel/.icaro/v4/firmware/core/i2c.c	PIR1bits.SSPIF = 0;         // Clear SSP interrupt flag
007686   969e     bcf     0x9e, 0x3, 0x0   	BCF	_PIR1bits, 3
                                           _01359_DS_:
                                           ;	.line	358; /home/vbasel/.icaro/v4/firmware/core/i2c.c	while (!PIR1bits.SSPIF);    // Wait the interrupt flag is set
007688   a69e     btfss   0x9e, 0x3, 0x0   	BTFSS	_PIR1bits, 3
00768a   d7fe     bra     0x007688         	BRA	_01359_DS_
                                           ;	.line	359; /home/vbasel/.icaro/v4/firmware/core/i2c.c	PIR1bits.SSPIF=0;           // ROlf clear SSPIF
00768c   969e     bcf     0x9e, 0x3, 0x0   	BCF	_PIR1bits, 3
                                           ;	.line	360; /home/vbasel/.icaro/v4/firmware/core/i2c.c	PIR1bits.SSPIF=0;           // ROlf clear SSPIF
00768e   969e     bcf     0x9e, 0x3, 0x0   	BCF	_PIR1bits, 3
                                           ;	.line	368; /home/vbasel/.icaro/v4/firmware/core/i2c.c	return SSPBUF;
007690   50c9     movf    0xc9, 0x0, 0x0   	MOVF	_SSPBUF, W
                                           ;	.line	370; /home/vbasel/.icaro/v4/firmware/core/i2c.c	}
007692   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__I2C_write	code
                                           _I2C_write:
                                           ;	.line	291; /home/vbasel/.icaro/v4/firmware/core/i2c.c	u8 I2C_write(u8 value)
0073c0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0073c2   ffe5
0073c4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0073c6   ffd9
0073c8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0073ca   ffe5
0073cc   0e02     movlw   0x02             	MOVLW	0x02
0073ce   cfdb     movff   0xfdb, 0xfc9     	MOVFF	PLUSW2, _SSPBUF
0073d0   ffc9
                                           ;	.line	293; /home/vbasel/.icaro/v4/firmware/core/i2c.c	I2C_idle();                     // Wait the MSSP module is inactive
0073d2   ecc3     call    0x007386, 0x0    	CALL	_I2C_idle
0073d4   f039
                                           ;	.line	301; /home/vbasel/.icaro/v4/firmware/core/i2c.c	I2C_idle();                     // Wait the MSSP module is inactive
0073d6   ecc3     call    0x007386, 0x0    	CALL	_I2C_idle
0073d8   f039
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/i2c.c	return (!SSPCON2bits.ACKSTAT);  // 1 if Ack, 0 if NAck
0073da   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0073dc   bcc5     btfsc   0xc5, 0x6, 0x0   	BTFSC	_SSPCON2bits, 6
0073de   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0073e0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0073e2   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0073e4   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
0073e6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0073e8   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0073ea   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
0073ec   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/core/i2c.c	}
0073ee   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0073f0   f000
0073f2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0073f4   ffd9
0073f6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__I2C_init	code
                                           _I2C_init:
                                           ;	.line	146; /home/vbasel/.icaro/v4/firmware/core/i2c.c	void I2C_init(u8 mode, u16 sora)
0065ec   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0065ee   ffe5
0065f0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0065f2   ffd9
0065f4   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0065f6   ffe5
0065f8   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0065fa   ffe5
0065fc   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0065fe   ffe5
006600   0e02     movlw   0x02             	MOVLW	0x02
006602   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006604   f000
006606   0e03     movlw   0x03             	MOVLW	0x03
006608   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00660a   f001
00660c   0e04     movlw   0x04             	MOVLW	0x04
00660e   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
006610   f002
                                           ;	.line	160; /home/vbasel/.icaro/v4/firmware/core/i2c.c	TRISBbits.TRISB0 = INPUT;			// SDA = INPUT
006612   8093     bsf     0x93, 0x0, 0x0   	BSF	_TRISBbits, 0
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/core/i2c.c	TRISBbits.TRISB1 = INPUT;			// SCL = INPUT
006614   8293     bsf     0x93, 0x1, 0x0   	BSF	_TRISBbits, 1
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/core/i2c.c	switch (mode)
006616   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006618   e013     bz      0x006640         	BZ	_01312_DS_
00661a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00661c   0a01     xorlw   0x01             	XORLW	0x01
00661e   e110     bnz     0x006640         	BNZ	_01312_DS_
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/core/i2c.c	if (sora > 0x80)
006620   0e00     movlw   0x00             	MOVLW	0x00
006622   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
006624   e102     bnz     0x00662a         	BNZ	_01343_DS_
006626   0e81     movlw   0x81             	MOVLW	0x81
006628   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _01343_DS_:
00662a   e303     bnc     0x006632         	BNC	_01309_DS_
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/core/i2c.c	conf = 0b00101111;	// Slave mode, 10-bit address with Start and Stop bit interrupts enabled
00662c   0e2f     movlw   0x2f             	MOVLW	0x2f
00662e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006630   d002     bra     0x006636         	BRA	_01310_DS_
                                           _01309_DS_:
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/core/i2c.c	conf = 0b00101110;	// 00101110Slave mode,  7-bit address with Start and Stop bit interrupts enabled
006632   0e2e     movlw   0x2e             	MOVLW	0x2e
006634   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01310_DS_:
                                           ;	.line	183; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPCON1 = conf;
006636   c000     movff   0x000, 0xfc6     	MOVFF	r0x00, _SSPCON1
006638   ffc6
                                           ;	.line	184; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPADD = sora;				// Slave 7-bit address
00663a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00663c   6ec8     movwf   0xc8, 0x0        	MOVWF	_SSPADD
                                           ;	.line	186; /home/vbasel/.icaro/v4/firmware/core/i2c.c	break;
00663e   d01f     bra     0x00667e         	BRA	_01318_DS_
                                           _01312_DS_:
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPCON1= 0b00101000;		// Master Mode, clock = FOSC/(4 * (SSPADD + 1))
006640   0e28     movlw   0x28             	MOVLW	0x28
006642   6ec6     movwf   0xc6, 0x0        	MOVWF	_SSPCON1
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/core/i2c.c	switch (sora)
006644   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006646   0a64     xorlw   0x64             	XORLW	0x64
006648   e102     bnz     0x00664e         	BNZ	_01345_DS_
00664a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00664c   e015     bz      0x006678         	BZ	_01316_DS_
                                           _01345_DS_:
00664e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006650   0a90     xorlw   0x90             	XORLW	0x90
006652   e103     bnz     0x00665a         	BNZ	_01347_DS_
006654   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006656   0a01     xorlw   0x01             	XORLW	0x01
006658   e00b     bz      0x006670         	BZ	_01314_DS_
                                           _01347_DS_:
00665a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00665c   0ae8     xorlw   0xe8             	XORLW	0xe8
00665e   e103     bnz     0x006666         	BNZ	_01348_DS_
006660   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006662   0a03     xorlw   0x03             	XORLW	0x03
006664   e001     bz      0x006668         	BZ	_01349_DS_
                                           _01348_DS_:
006666   d008     bra     0x006678         	BRA	_01316_DS_
                                           _01349_DS_:
                                           ;	.line	208; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPSTATbits.SMP = 1;    // Slew Mode Off
006668   8ec7     bsf     0xc7, 0x7, 0x0   	BSF	_SSPSTATbits, 7
                                           ;	.line	209; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPADD= 11;             // 1MHz = FOSC/(4 * (SSPADD + 1))
00666a   0e0b     movlw   0x0b             	MOVLW	0x0b
00666c   6ec8     movwf   0xc8, 0x0        	MOVWF	_SSPADD
                                           ;	.line	212; /home/vbasel/.icaro/v4/firmware/core/i2c.c	break;
00666e   d007     bra     0x00667e         	BRA	_01318_DS_
                                           _01314_DS_:
                                           ;	.line	222; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPSTATbits.SMP = 0;    // Slew Mode On
006670   9ec7     bcf     0xc7, 0x7, 0x0   	BCF	_SSPSTATbits, 7
                                           ;	.line	223; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPADD= 29;             // 400kHz = FOSC/(4 * (SSPADD + 1))
006672   0e1d     movlw   0x1d             	MOVLW	0x1d
006674   6ec8     movwf   0xc8, 0x0        	MOVWF	_SSPADD
                                           ;	.line	226; /home/vbasel/.icaro/v4/firmware/core/i2c.c	break;
006676   d003     bra     0x00667e         	BRA	_01318_DS_
                                           _01316_DS_:
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPSTATbits.SMP = 1;    // Slew Mode Off
006678   8ec7     bsf     0xc7, 0x7, 0x0   	BSF	_SSPSTATbits, 7
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPADD= 119;            // 100kHz = FOSC/(4 * (SSPADD + 1))
00667a   0e77     movlw   0x77             	MOVLW	0x77
00667c   6ec8     movwf   0xc8, 0x0        	MOVWF	_SSPADD
                                           _01318_DS_:
                                           ;	.line	250; /home/vbasel/.icaro/v4/firmware/core/i2c.c	SSPCON2= 0;
00667e   6ac5     clrf    0xc5, 0x0        	CLRF	_SSPCON2
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/core/i2c.c	PIR1bits.SSPIF = 0; // MSSP Interrupt Flag
006680   969e     bcf     0x9e, 0x3, 0x0   	BCF	_PIR1bits, 3
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/core/i2c.c	PIR2bits.BCLIF = 0; // Bus Collision Interrupt Flag
006682   96a1     bcf     0xa1, 0x3, 0x0   	BCF	_PIR2bits, 3
                                           ;	.line	262; /home/vbasel/.icaro/v4/firmware/core/i2c.c	}
006684   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006686   f002
006688   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00668a   f001
00668c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00668e   f000
006690   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006692   ffd9
006694   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__I2C_slave	code
                                           _I2C_slave:
                                           ;	.line	128; /home/vbasel/.icaro/v4/firmware/core/i2c.c	void I2C_slave(u16 DeviceID)   
00730a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00730c   ffe5
00730e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
007310   ffd9
007312   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007314   ffe5
007316   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
007318   ffe5
00731a   0e02     movlw   0x02             	MOVLW	0x02
00731c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00731e   f000
007320   0e03     movlw   0x03             	MOVLW	0x03
007322   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
007324   f001
                                           ;	.line	130; /home/vbasel/.icaro/v4/firmware/core/i2c.c	I2C_init(I2C_SLAVE_MODE, DeviceID);
007326   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
007328   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00732a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00732c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00732e   0e01     movlw   0x01             	MOVLW	0x01
007330   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007332   ecf6     call    0x0065ec, 0x0    	CALL	_I2C_init
007334   f032
007336   0e03     movlw   0x03             	MOVLW	0x03
007338   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	131; /home/vbasel/.icaro/v4/firmware/core/i2c.c	}
00733a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00733c   f001
00733e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
007340   f000
007342   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007344   ffd9
007346   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__I2C_master	code
                                           _I2C_master:
                                           ;	.line	123; /home/vbasel/.icaro/v4/firmware/core/i2c.c	void I2C_master(u16 speed)   
007348   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00734a   ffe5
00734c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00734e   ffd9
007350   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007352   ffe5
007354   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
007356   ffe5
007358   0e02     movlw   0x02             	MOVLW	0x02
00735a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00735c   f000
00735e   0e03     movlw   0x03             	MOVLW	0x03
007360   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
007362   f001
                                           ;	.line	125; /home/vbasel/.icaro/v4/firmware/core/i2c.c	I2C_init(I2C_MASTER_MODE, speed);
007364   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
007366   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007368   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00736a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00736c   0e00     movlw   0x00             	MOVLW	0x00
00736e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
007370   ecf6     call    0x0065ec, 0x0    	CALL	_I2C_init
007372   f032
007374   0e03     movlw   0x03             	MOVLW	0x03
007376   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/core/i2c.c	}
007378   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00737a   f001
00737c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00737e   f000
007380   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007382   ffd9
007384   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__psprintf	code
                                           _psprintf:
                                           ;	.line	506; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 psprintf(u8 *out, const u8 *format, ...)
006d80   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006d82   ffe5
006d84   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006d86   ffd9
006d88   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006d8a   ffe5
006d8c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006d8e   ffe5
006d90   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006d92   ffe5
006d94   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006d96   ffe5
006d98   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
006d9a   ffe5
                                           ;	.line	510; /home/vbasel/.icaro/v4/firmware/core/stdio.c	va_start(args, format);
006d9c   0e05     movlw   0x05             	MOVLW	0x05
006d9e   24d9     addwf   0xd9, 0x0, 0x0   	ADDWF	FSR2L, W
006da0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006da2   0e00     movlw   0x00             	MOVLW	0x00
006da4   20da     addwfc  0xda, 0x0, 0x0   	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVWF	r0x01
006da6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
006da8   0e80     movlw   0x80             	MOVLW	0x80
006daa   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
006dac   0e03     movlw   0x03             	MOVLW	0x03
006dae   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
006db0   0e00     movlw   0x00             	MOVLW	0x00
006db2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
006db4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
                                           ;	.line	511; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprint(&out, format, args);
006db6   0e02     movlw   0x02             	MOVLW	0x02
006db8   24d9     addwf   0xd9, 0x0, 0x0   	ADDWF	FSR2L, W
006dba   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
006dbc   0e00     movlw   0x00             	MOVLW	0x00
006dbe   20da     addwfc  0xda, 0x0, 0x0   	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
                                           ; #	MOVWF	r0x04
                                           ; #	MOVWF	r0x04
006dc0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; #	MOVF	r0x03, W
                                           ; #	MOVWF	r0x03
006dc2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006dc4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006dc6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006dc8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006dca   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006dcc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006dce   0e07     movlw   0x07             	MOVLW	0x07
006dd0   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
006dd2   ffe5
006dd4   0e06     movlw   0x06             	MOVLW	0x06
006dd6   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
006dd8   ffe5
006dda   0e05     movlw   0x05             	MOVLW	0x05
006ddc   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
006dde   ffe5
006de0   0e80     movlw   0x80             	MOVLW	0x80
006de2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006de4   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
006de6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006de8   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
006dea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006dec   ec32     call    0x001a64, 0x0    	CALL	_pprint
006dee   f00d
006df0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006df2   0e09     movlw   0x09             	MOVLW	0x09
006df4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
006df6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	512; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
006df8   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
006dfa   f004
006dfc   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006dfe   f003
006e00   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006e02   f002
006e04   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006e06   f001
006e08   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006e0a   f000
006e0c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006e0e   ffd9
006e10   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__psprintf2	code
                                           _psprintf2:
                                           ;	.line	500; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 psprintf2(u8 *out, const u8 *format, va_list args)
00673e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006740   ffe5
006742   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006744   ffd9
006746   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006748   ffe5
00674a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00674c   ffe5
00674e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006750   ffe5
006752   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006754   ffe5
006756   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
006758   ffe5
00675a   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00675c   ffe5
00675e   0e02     movlw   0x02             	MOVLW	0x02
006760   cfdb     movff   0xfdb, 0x767     	MOVFF	PLUSW2, _psprintf2_out_1_232
006762   f767
006764   0e03     movlw   0x03             	MOVLW	0x03
006766   cfdb     movff   0xfdb, 0x768     	MOVFF	PLUSW2, (_psprintf2_out_1_232 + 1)
006768   f768
00676a   0e04     movlw   0x04             	MOVLW	0x04
00676c   cfdb     movff   0xfdb, 0x769     	MOVFF	PLUSW2, (_psprintf2_out_1_232 + 2)
00676e   f769
006770   0e05     movlw   0x05             	MOVLW	0x05
006772   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006774   f000
006776   0e06     movlw   0x06             	MOVLW	0x06
006778   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00677a   f001
00677c   0e07     movlw   0x07             	MOVLW	0x07
00677e   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
006780   f002
006782   0e08     movlw   0x08             	MOVLW	0x08
006784   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
006786   f003
006788   0e09     movlw   0x09             	MOVLW	0x09
00678a   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
00678c   f004
00678e   0e0a     movlw   0x0a             	MOVLW	0x0a
006790   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
006792   f005
                                           ;	.line	502; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprint(&out, format, args);
006794   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
006796   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006798   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00679a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00679c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00679e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0067a0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0067a2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0067a4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0067a6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0067a8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0067aa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0067ac   0e80     movlw   0x80             	MOVLW	0x80
0067ae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0067b0   0e07     movlw   0x07             	MOVLW	HIGH(_psprintf2_out_1_232)
0067b2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0067b4   0e67     movlw   0x67             	MOVLW	LOW(_psprintf2_out_1_232)
0067b6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0067b8   ec32     call    0x001a64, 0x0    	CALL	_pprint
0067ba   f00d
0067bc   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0067be   0e09     movlw   0x09             	MOVLW	0x09
0067c0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0067c2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	503; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
0067c4   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0067c6   f005
0067c8   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0067ca   f004
0067cc   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0067ce   f003
0067d0   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0067d2   f002
0067d4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0067d6   f001
0067d8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0067da   f000
0067dc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0067de   ffd9
0067e0   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__pprintf	code
                                           _pprintf:
                                           ;	.line	486; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 pprintf(funcout func, const u8 *format, va_list args)
006a6c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006a6e   ffe5
006a70   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006a72   ffd9
006a74   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006a76   ffe5
006a78   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006a7a   ffe5
006a7c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006a7e   ffe5
006a80   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006a82   ffe5
006a84   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
006a86   ffe5
006a88   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
006a8a   ffe5
006a8c   0e02     movlw   0x02             	MOVLW	0x02
006a8e   cfdb     movff   0xfdb, 0x764     	MOVFF	PLUSW2, _pputchar
006a90   f764
006a92   0e03     movlw   0x03             	MOVLW	0x03
006a94   cfdb     movff   0xfdb, 0x765     	MOVFF	PLUSW2, (_pputchar + 1)
006a96   f765
006a98   0e04     movlw   0x04             	MOVLW	0x04
006a9a   cfdb     movff   0xfdb, 0x766     	MOVFF	PLUSW2, (_pputchar + 2)
006a9c   f766
006a9e   0e05     movlw   0x05             	MOVLW	0x05
006aa0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006aa2   f000
006aa4   0e06     movlw   0x06             	MOVLW	0x06
006aa6   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006aa8   f001
006aaa   0e07     movlw   0x07             	MOVLW	0x07
006aac   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
006aae   f002
006ab0   0e08     movlw   0x08             	MOVLW	0x08
006ab2   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
006ab4   f003
006ab6   0e09     movlw   0x09             	MOVLW	0x09
006ab8   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
006aba   f004
006abc   0e0a     movlw   0x0a             	MOVLW	0x0a
006abe   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
006ac0   f005
                                           ;	.line	492; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprint(0, format, args);
006ac2   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
006ac4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006ac6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
006ac8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006aca   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
006acc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006ace   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006ad0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006ad2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006ad4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006ad6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006ad8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006ada   0e00     movlw   0x00             	MOVLW	0x00
006adc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006ade   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006ae0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006ae2   ec32     call    0x001a64, 0x0    	CALL	_pprint
006ae4   f00d
006ae6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006ae8   0e09     movlw   0x09             	MOVLW	0x09
006aea   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
006aec   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	493; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
006aee   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
006af0   f005
006af2   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
006af4   f004
006af6   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006af8   f003
006afa   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006afc   f002
006afe   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006b00   f001
006b02   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006b04   f000
006b06   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006b08   ffd9
006b0a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__pprint	code
                                           _pprint:
                                           ;	.line	338; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static u8 pprint(u8 **out, const u8 *format, va_list args)
001a64   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001a66   ffe5
001a68   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001a6a   ffd9
001a6c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001a6e   ffe5
001a70   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001a72   ffe5
001a74   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001a76   ffe5
001a78   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001a7a   ffe5
001a7c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
001a7e   ffe5
001a80   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
001a82   ffe5
001a84   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
001a86   ffe5
001a88   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
001a8a   ffe5
001a8c   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
001a8e   ffe5
001a90   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
001a92   ffe5
001a94   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
001a96   ffe5
001a98   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
001a9a   ffe5
001a9c   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
001a9e   ffe5
001aa0   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
001aa2   ffe5
001aa4   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
001aa6   ffe5
001aa8   c00f     movff   0x00f, 0xfe5     	MOVFF	r0x0f, POSTDEC1
001aaa   ffe5
001aac   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
001aae   ffe5
001ab0   c011     movff   0x011, 0xfe5     	MOVFF	r0x11, POSTDEC1
001ab2   ffe5
001ab4   c012     movff   0x012, 0xfe5     	MOVFF	r0x12, POSTDEC1
001ab6   ffe5
001ab8   c013     movff   0x013, 0xfe5     	MOVFF	r0x13, POSTDEC1
001aba   ffe5
001abc   c014     movff   0x014, 0xfe5     	MOVFF	r0x14, POSTDEC1
001abe   ffe5
001ac0   c015     movff   0x015, 0xfe5     	MOVFF	r0x15, POSTDEC1
001ac2   ffe5
001ac4   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
001ac6   ffe5
001ac8   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
001aca   ffe5
001acc   c018     movff   0x018, 0xfe5     	MOVFF	r0x18, POSTDEC1
001ace   ffe5
001ad0   c019     movff   0x019, 0xfe5     	MOVFF	r0x19, POSTDEC1
001ad2   ffe5
001ad4   0e02     movlw   0x02             	MOVLW	0x02
001ad6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
001ad8   f000
001ada   0e03     movlw   0x03             	MOVLW	0x03
001adc   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
001ade   f001
001ae0   0e04     movlw   0x04             	MOVLW	0x04
001ae2   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
001ae4   f002
001ae6   0e05     movlw   0x05             	MOVLW	0x05
001ae8   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
001aea   f003
001aec   0e06     movlw   0x06             	MOVLW	0x06
001aee   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
001af0   f004
001af2   0e07     movlw   0x07             	MOVLW	0x07
001af4   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
001af6   f005
001af8   0e08     movlw   0x08             	MOVLW	0x08
001afa   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
001afc   f006
001afe   0e09     movlw   0x09             	MOVLW	0x09
001b00   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
001b02   f007
001b04   0e0a     movlw   0x0a             	MOVLW	0x0a
001b06   cfdb     movff   0xfdb, 0x008     	MOVFF	PLUSW2, r0x08
001b08   f008
                                           ;	.line	342; /home/vbasel/.icaro/v4/firmware/core/stdio.c	register u8 pc = 0;
001b0a   6a09     clrf    0x09, 0x0        	CLRF	r0x09
                                           ;	.line	343; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 precision = 2; // default value is 2 digits fractional part
001b0c   0e02     movlw   0x02             	MOVLW	0x02
001b0e   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
                                           _01111_DS_:
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (; *format != 0; ++format)
001b10   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
001b12   ffe9
001b14   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
001b16   fff3
001b18   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001b1a   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
001b1c   f03a
001b1e   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
001b20   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001b22   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
001b24   ef09     goto    0x002412         	GOTO	_01099_DS_
001b26   f012
                                           ;	.line	350; /home/vbasel/.icaro/v4/firmware/core/stdio.c	islong = 0;                 // default is 16-bit
001b28   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
                                           ;	.line	352; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '%')
001b2a   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001b2c   0a25     xorlw   0x25             	XORLW	0x25
001b2e   e002     bz      0x001b34         	BZ	_01231_DS_
001b30   eff0     goto    0x0023e0         	GOTO	_01094_DS_
001b32   f011
                                           _01231_DS_:
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width = pad = 0;		// default is left justify, no zero padded
001b34   6a0b     clrf    0x0b, 0x0        	CLRF	r0x0b
001b36   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
                                           ;	.line	355; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;				// get the next format identifier
001b38   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001b3a   e302     bnc     0x001b40         	BNC	_01232_DS_
001b3c   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
001b3e   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01232_DS_:
                                           ;	.line	357; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '\0')	// end of line
001b40   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
001b42   ffe9
001b44   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
001b46   fff3
001b48   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001b4a   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
001b4c   f03a
001b4e   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
001b50   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001b52   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
001b54   ef09     goto    0x002412         	GOTO	_01099_DS_
001b56   f012
                                           ;	.line	360; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '%')		// error
001b58   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001b5a   0a25     xorlw   0x25             	XORLW	0x25
001b5c   e102     bnz     0x001b62         	BNZ	_01234_DS_
001b5e   eff0     goto    0x0023e0         	GOTO	_01094_DS_
001b60   f011
                                           _01234_DS_:
                                           ;	.line	363; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '-')		// right justify
001b62   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001b64   0a2d     xorlw   0x2d             	XORLW	0x2d
001b66   e106     bnz     0x001b74         	BNZ	_01134_DS_
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;
001b68   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001b6a   e302     bnc     0x001b70         	BNC	_01237_DS_
001b6c   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
001b6e   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01237_DS_:
                                           ;	.line	366; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pad = PAD_RIGHT;
001b70   0e01     movlw   0x01             	MOVLW	0x01
001b72   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
                                           _01134_DS_:
                                           ;	.line	369; /home/vbasel/.icaro/v4/firmware/core/stdio.c	while (*format == '0')	// field is padded with 0's instead of blanks
001b74   c003     movff   0x003, 0x00e     	MOVFF	r0x03, r0x0e
001b76   f00e
001b78   c004     movff   0x004, 0x00f     	MOVFF	r0x04, r0x0f
001b7a   f00f
001b7c   c005     movff   0x005, 0x010     	MOVFF	r0x05, r0x10
001b7e   f010
                                           _01064_DS_:
001b80   c00e     movff   0x00e, 0xfe9     	MOVFF	r0x0e, FSR0L
001b82   ffe9
001b84   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
001b86   fff3
001b88   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001b8a   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
001b8c   f03a
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
001b8e   0a30     xorlw   0x30             	XORLW	0x30
001b90   e10a     bnz     0x001ba6         	BNZ	_01104_DS_
                                           ;	.line	371; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;
001b92   2a0e     incf    0x0e, 0x1, 0x0   	INCF	r0x0e, F
001b94   e302     bnc     0x001b9a         	BNC	_01240_DS_
001b96   4a0f     infsnz  0x0f, 0x1, 0x0   	INFSNZ	r0x0f, F
001b98   2a10     incf    0x10, 0x1, 0x0   	INCF	r0x10, F
                                           _01240_DS_:
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pad |= PAD_ZERO;
001b9a   c00b     movff   0x00b, 0x011     	MOVFF	r0x0b, r0x11
001b9c   f011
001b9e   8211     bsf     0x11, 0x1, 0x0   	BSF	r0x11, 1
001ba0   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001ba2   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
001ba4   d7ed     bra     0x001b80         	BRA	_01064_DS_
                                           _01104_DS_:
                                           ;	.line	375; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
001ba6   c00e     movff   0x00e, 0xfe9     	MOVFF	r0x0e, FSR0L
001ba8   ffe9
001baa   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
001bac   fff3
001bae   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001bb0   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
001bb2   f03a
001bb4   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001bb6   0e30     movlw   0x30             	MOVLW	0x30
001bb8   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
001bba   e313     bnc     0x001be2         	BNC	_01162_DS_
001bbc   0e3a     movlw   0x3a             	MOVLW	0x3a
001bbe   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
001bc0   e210     bc      0x001be2         	BC	_01162_DS_
                                           ; ;multiply lit val:0x0a by variable r0x0d and store in r0x0d
                                           ;	.line	377; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width *= 10;
001bc2   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001bc4   0d0a     mullw   0x0a             	MULLW	0x0a
001bc6   cff3     movff   0xff3, 0x00d     	MOVFF	PRODL, r0x0d
001bc8   f00d
                                           ;	.line	378; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width += *format - '0';
001bca   0ed0     movlw   0xd0             	MOVLW	0xd0
001bcc   2611     addwf   0x11, 0x1, 0x0   	ADDWF	r0x11, F
001bce   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001bd0   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
001bd2   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001bd4   2412     addwf   0x12, 0x0, 0x0   	ADDWF	r0x12, W
001bd6   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
                                           ;	.line	375; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
001bd8   2a0e     incf    0x0e, 0x1, 0x0   	INCF	r0x0e, F
001bda   e302     bnc     0x001be0         	BNC	_01244_DS_
001bdc   4a0f     infsnz  0x0f, 0x1, 0x0   	INFSNZ	r0x0f, F
001bde   2a10     incf    0x10, 0x1, 0x0   	INCF	r0x10, F
                                           _01244_DS_:
001be0   d7e2     bra     0x001ba6         	BRA	_01104_DS_
                                           _01162_DS_:
001be2   c00e     movff   0x00e, 0x003     	MOVFF	r0x0e, r0x03
001be4   f003
001be6   c00f     movff   0x00f, 0x004     	MOVFF	r0x0f, r0x04
001be8   f004
001bea   c010     movff   0x010, 0x005     	MOVFF	r0x10, r0x05
001bec   f005
                                           ;	.line	388; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '.')		// float precision
001bee   c00e     movff   0x00e, 0xfe9     	MOVFF	r0x0e, FSR0L
001bf0   ffe9
001bf2   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
001bf4   fff3
001bf6   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001bf8   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
001bfa   f03a
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
001bfc   0a2e     xorlw   0x2e             	XORLW	0x2e
001bfe   e134     bnz     0x001c68         	BNZ	_01070_DS_
                                           ;	.line	390; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;
001c00   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001c02   0f01     addlw   0x01             	ADDLW	0x01
001c04   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001c06   0e00     movlw   0x00             	MOVLW	0x00
001c08   200f     addwfc  0x0f, 0x0, 0x0   	ADDWFC	r0x0f, W
001c0a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
001c0c   0e00     movlw   0x00             	MOVLW	0x00
001c0e   2010     addwfc  0x10, 0x0, 0x0   	ADDWFC	r0x10, W
001c10   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
                                           ;	.line	391; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision = 0;
001c12   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
001c14   c003     movff   0x003, 0x00e     	MOVFF	r0x03, r0x0e
001c16   f00e
001c18   c004     movff   0x004, 0x00f     	MOVFF	r0x04, r0x0f
001c1a   f00f
001c1c   c005     movff   0x005, 0x010     	MOVFF	r0x05, r0x10
001c1e   f010
                                           _01108_DS_:
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
001c20   c00e     movff   0x00e, 0xfe9     	MOVFF	r0x0e, FSR0L
001c22   ffe9
001c24   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
001c26   fff3
001c28   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001c2a   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
001c2c   f03a
001c2e   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001c30   0e30     movlw   0x30             	MOVLW	0x30
001c32   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
001c34   e313     bnc     0x001c5c         	BNC	_01163_DS_
001c36   0e3a     movlw   0x3a             	MOVLW	0x3a
001c38   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
001c3a   e210     bc      0x001c5c         	BC	_01163_DS_
                                           ; ;multiply lit val:0x0a by variable r0x0a and store in r0x0a
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision *= 10;
001c3c   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
001c3e   0d0a     mullw   0x0a             	MULLW	0x0a
001c40   cff3     movff   0xff3, 0x00a     	MOVFF	PRODL, r0x0a
001c42   f00a
                                           ;	.line	396; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision += *format - '0';
001c44   0ed0     movlw   0xd0             	MOVLW	0xd0
001c46   2611     addwf   0x11, 0x1, 0x0   	ADDWF	r0x11, F
001c48   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
001c4a   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
001c4c   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001c4e   2412     addwf   0x12, 0x0, 0x0   	ADDWF	r0x12, W
001c50   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
001c52   2a0e     incf    0x0e, 0x1, 0x0   	INCF	r0x0e, F
001c54   e302     bnc     0x001c5a         	BNC	_01249_DS_
001c56   4a0f     infsnz  0x0f, 0x1, 0x0   	INFSNZ	r0x0f, F
001c58   2a10     incf    0x10, 0x1, 0x0   	INCF	r0x10, F
                                           _01249_DS_:
001c5a   d7e2     bra     0x001c20         	BRA	_01108_DS_
                                           _01163_DS_:
001c5c   c00e     movff   0x00e, 0x003     	MOVFF	r0x0e, r0x03
001c5e   f003
001c60   c00f     movff   0x00f, 0x004     	MOVFF	r0x0f, r0x04
001c62   f004
001c64   c010     movff   0x010, 0x005     	MOVFF	r0x10, r0x05
001c66   f005
                                           _01070_DS_:
                                           ;	.line	400; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'f') 	// float
001c68   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
001c6a   ffe9
001c6c   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
001c6e   fff3
001c70   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001c72   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
001c74   f03a
                                           ; #	MOVWF	r0x0e
                                           ; #	MOVF	r0x0e, W
001c76   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
001c78   0a66     xorlw   0x66             	XORLW	0x66
001c7a   e001     bz      0x001c7e         	BZ	_01251_DS_
001c7c   d040     bra     0x001cfe         	BRA	_01072_DS_
                                           _01251_DS_:
                                           ;	.line	402; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprintfl(out, va_arg(args, float), width, pad, separator, precision);
001c7e   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001c80   0f04     addlw   0x04             	ADDLW	0x04
001c82   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001c84   0e00     movlw   0x00             	MOVLW	0x00
001c86   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001c88   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001c8a   0e00     movlw   0x00             	MOVLW	0x00
001c8c   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001c8e   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001c90   c00f     movff   0x00f, 0x006     	MOVFF	r0x0f, r0x06
001c92   f006
001c94   c010     movff   0x010, 0x007     	MOVFF	r0x10, r0x07
001c96   f007
001c98   c011     movff   0x011, 0x008     	MOVFF	r0x11, r0x08
001c9a   f008
001c9c   0efc     movlw   0xfc             	MOVLW	0xfc
001c9e   260f     addwf   0x0f, 0x1, 0x0   	ADDWF	r0x0f, F
001ca0   0eff     movlw   0xff             	MOVLW	0xff
001ca2   2210     addwfc  0x10, 0x1, 0x0   	ADDWFC	r0x10, F
001ca4   2211     addwfc  0x11, 0x1, 0x0   	ADDWFC	r0x11, F
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVWF	r0x0f
001ca6   c00f     movff   0x00f, 0xfe9     	MOVFF	r0x0f, FSR0L
001ca8   ffe9
001caa   c010     movff   0x010, 0xff3     	MOVFF	r0x10, PRODL
001cac   fff3
001cae   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001cb0   ec65     call    0x0072ca, 0x0    	CALL	__gptrget4
001cb2   f039
001cb4   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001cb6   cff3     movff   0xff3, 0x010     	MOVFF	PRODL, r0x10
001cb8   f010
001cba   cff4     movff   0xff4, 0x011     	MOVFF	PRODH, r0x11
001cbc   f011
001cbe   cfe9     movff   0xfe9, 0x012     	MOVFF	FSR0L, r0x12
001cc0   f012
001cc2   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
001cc4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cc6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001cc8   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001cca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ccc   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001cce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cd0   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
001cd2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cd4   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001cd6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cd8   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001cda   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cdc   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001cde   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ce0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001ce2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ce4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001ce6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ce8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001cea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cec   ec5f     call    0x002cbe, 0x0    	CALL	_pprintfl
001cee   f016
001cf0   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001cf2   0e0b     movlw   0x0b             	MOVLW	0x0b
001cf4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001cf6   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001cf8   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	403; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
001cfa   ef03     goto    0x002406         	GOTO	_01098_DS_
001cfc   f012
                                           _01072_DS_:
                                           ;	.line	406; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 's')		// string
001cfe   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001d00   0a73     xorlw   0x73             	XORLW	0x73
001d02   e001     bz      0x001d06         	BZ	_01253_DS_
001d04   d052     bra     0x001daa         	BRA	_01074_DS_
                                           _01253_DS_:
                                           ;	.line	408; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 *s = va_arg(args, u8*);
001d06   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001d08   0f03     addlw   0x03             	ADDLW	0x03
001d0a   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001d0c   0e00     movlw   0x00             	MOVLW	0x00
001d0e   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001d10   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001d12   0e00     movlw   0x00             	MOVLW	0x00
001d14   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001d16   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001d18   c00f     movff   0x00f, 0x006     	MOVFF	r0x0f, r0x06
001d1a   f006
001d1c   c010     movff   0x010, 0x007     	MOVFF	r0x10, r0x07
001d1e   f007
001d20   c011     movff   0x011, 0x008     	MOVFF	r0x11, r0x08
001d22   f008
001d24   0efd     movlw   0xfd             	MOVLW	0xfd
001d26   260f     addwf   0x0f, 0x1, 0x0   	ADDWF	r0x0f, F
001d28   0eff     movlw   0xff             	MOVLW	0xff
001d2a   2210     addwfc  0x10, 0x1, 0x0   	ADDWFC	r0x10, F
001d2c   2211     addwfc  0x11, 0x1, 0x0   	ADDWFC	r0x11, F
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVWF	r0x0f
001d2e   c00f     movff   0x00f, 0xfe9     	MOVFF	r0x0f, FSR0L
001d30   ffe9
001d32   c010     movff   0x010, 0xff3     	MOVFF	r0x10, PRODL
001d34   fff3
001d36   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001d38   ecfc     call    0x0073f8, 0x0    	CALL	__gptrget3
001d3a   f039
001d3c   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001d3e   cff3     movff   0xff3, 0x010     	MOVFF	PRODL, r0x10
001d40   f010
001d42   cff4     movff   0xff4, 0x011     	MOVFF	PRODH, r0x11
001d44   f011
001d46   c00f     movff   0x00f, 0x012     	MOVFF	r0x0f, r0x12
001d48   f012
001d4a   c010     movff   0x010, 0x013     	MOVFF	r0x10, r0x13
001d4c   f013
001d4e   c011     movff   0x011, 0x014     	MOVFF	r0x11, r0x14
001d50   f014
                                           ;	.line	409; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprints(out, s?s:"(null)", width, pad);
001d52   1010     iorwf   0x10, 0x0, 0x0   	IORWF	r0x10, W
001d54   1011     iorwf   0x11, 0x0, 0x0   	IORWF	r0x11, W
001d56   e007     bz      0x001d66         	BZ	_01114_DS_
001d58   c012     movff   0x012, 0x00f     	MOVFF	r0x12, r0x0f
001d5a   f00f
001d5c   c013     movff   0x013, 0x010     	MOVFF	r0x13, r0x10
001d5e   f010
001d60   c014     movff   0x014, 0x011     	MOVFF	r0x14, r0x11
001d62   f011
001d64   d006     bra     0x001d72         	BRA	_01115_DS_
                                           _01114_DS_:
001d66   0e00     movlw   0x00             	MOVLW	UPPER(___str_0)
001d68   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001d6a   0e61     movlw   0x61             	MOVLW	HIGH(___str_0)
001d6c   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001d6e   0e42     movlw   0x42             	MOVLW	LOW(___str_0)
001d70   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
                                           _01115_DS_:
001d72   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001d74   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d76   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001d78   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d7a   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001d7c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d7e   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001d80   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d82   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001d84   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d86   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001d88   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d8a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001d8c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d8e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001d90   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d92   ecf6     call    0x004fec, 0x0    	CALL	_pprints
001d94   f027
001d96   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001d98   0e08     movlw   0x08             	MOVLW	0x08
001d9a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001d9c   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
001d9e   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001da0   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001da2   2410     addwf   0x10, 0x0, 0x0   	ADDWF	r0x10, W
001da4   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           ;	.line	410; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
001da6   ef03     goto    0x002406         	GOTO	_01098_DS_
001da8   f012
                                           _01074_DS_:
                                           ;	.line	413; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'l')		// long support
001daa   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001dac   0a6c     xorlw   0x6c             	XORLW	0x6c
001dae   e106     bnz     0x001dbc         	BNZ	_01076_DS_
                                           ;	.line	415; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;
001db0   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001db2   e302     bnc     0x001db8         	BNC	_01256_DS_
001db4   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
001db6   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01256_DS_:
                                           ;	.line	416; /home/vbasel/.icaro/v4/firmware/core/stdio.c	islong = 1;
001db8   0e01     movlw   0x01             	MOVLW	0x01
001dba   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
                                           _01076_DS_:
                                           ;	.line	419; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'u')		// decimal (10) unsigned (0) integer
001dbc   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
001dbe   ffe9
001dc0   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
001dc2   fff3
001dc4   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001dc6   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
001dc8   f03a
                                           ; #	MOVWF	r0x0e
                                           ; #	MOVF	r0x0e, W
001dca   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
001dcc   0a75     xorlw   0x75             	XORLW	0x75
001dce   e001     bz      0x001dd2         	BZ	_01258_DS_
001dd0   d06c     bra     0x001eaa         	BRA	_01078_DS_
                                           _01258_DS_:
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
001dd2   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001dd4   e023     bz      0x001e1c         	BZ	_01116_DS_
001dd6   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001dd8   0f04     addlw   0x04             	ADDLW	0x04
001dda   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001ddc   0e00     movlw   0x00             	MOVLW	0x00
001dde   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001de0   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001de2   0e00     movlw   0x00             	MOVLW	0x00
001de4   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001de6   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001de8   c00f     movff   0x00f, 0x006     	MOVFF	r0x0f, r0x06
001dea   f006
001dec   c010     movff   0x010, 0x007     	MOVFF	r0x10, r0x07
001dee   f007
001df0   c011     movff   0x011, 0x008     	MOVFF	r0x11, r0x08
001df2   f008
001df4   0efc     movlw   0xfc             	MOVLW	0xfc
001df6   260f     addwf   0x0f, 0x1, 0x0   	ADDWF	r0x0f, F
001df8   0eff     movlw   0xff             	MOVLW	0xff
001dfa   2210     addwfc  0x10, 0x1, 0x0   	ADDWFC	r0x10, F
001dfc   2211     addwfc  0x11, 0x1, 0x0   	ADDWFC	r0x11, F
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVWF	r0x0f
001dfe   c00f     movff   0x00f, 0xfe9     	MOVFF	r0x0f, FSR0L
001e00   ffe9
001e02   c010     movff   0x010, 0xff3     	MOVFF	r0x10, PRODL
001e04   fff3
001e06   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001e08   ec65     call    0x0072ca, 0x0    	CALL	__gptrget4
001e0a   f039
001e0c   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001e0e   cff3     movff   0xff3, 0x010     	MOVFF	PRODL, r0x10
001e10   f010
001e12   cff4     movff   0xff4, 0x011     	MOVFF	PRODH, r0x11
001e14   f011
001e16   cfe9     movff   0xfe9, 0x012     	MOVFF	FSR0L, r0x12
001e18   f012
001e1a   d024     bra     0x001e64         	BRA	_01117_DS_
                                           _01116_DS_:
001e1c   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001e1e   0f02     addlw   0x02             	ADDLW	0x02
001e20   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001e22   0e00     movlw   0x00             	MOVLW	0x00
001e24   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001e26   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
001e28   0e00     movlw   0x00             	MOVLW	0x00
001e2a   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001e2c   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
001e2e   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
001e30   f006
001e32   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
001e34   f007
001e36   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
001e38   f008
001e3a   0efe     movlw   0xfe             	MOVLW	0xfe
001e3c   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
001e3e   0eff     movlw   0xff             	MOVLW	0xff
001e40   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
001e42   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
001e44   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
001e46   ffe9
001e48   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
001e4a   fff3
001e4c   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
001e4e   ec8a     call    0x007514, 0x0    	CALL	__gptrget2
001e50   f03a
001e52   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001e54   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
001e56   f014
001e58   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
001e5a   f00f
001e5c   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
001e5e   f010
001e60   6a11     clrf    0x11, 0x0        	CLRF	r0x11
001e62   6a12     clrf    0x12, 0x0        	CLRF	r0x12
                                           _01117_DS_:
                                           ;	.line	422; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 10, 0, width, pad, separator, 'a');
001e64   0e61     movlw   0x61             	MOVLW	0x61
001e66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e68   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001e6a   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001e6c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e6e   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001e70   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e72   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001e74   0e0a     movlw   0x0a             	MOVLW	0x0a
001e76   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e78   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001e7a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e7c   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
001e7e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e80   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001e82   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e84   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001e86   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e88   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001e8a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e8c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001e8e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e90   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001e92   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e94   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001e96   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e98   ecb6     call    0x00396c, 0x0    	CALL	_pprinti
001e9a   f01c
001e9c   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001e9e   0e0e     movlw   0x0e             	MOVLW	0x0e
001ea0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001ea2   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
001ea4   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	423; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
001ea6   ef03     goto    0x002406         	GOTO	_01098_DS_
001ea8   f012
                                           _01078_DS_:
                                           ;	.line	426; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'd' || *format == 'i') // decimal (10) signed (1) integer
001eaa   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001eac   0a64     xorlw   0x64             	XORLW	0x64
001eae   e004     bz      0x001eb8         	BZ	_01079_DS_
001eb0   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001eb2   0a69     xorlw   0x69             	XORLW	0x69
001eb4   e001     bz      0x001eb8         	BZ	_01079_DS_
001eb6   d075     bra     0x001fa2         	BRA	_01080_DS_
                                           _01079_DS_:
                                           ;	.line	428; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
001eb8   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001eba   e023     bz      0x001f02         	BZ	_01118_DS_
001ebc   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001ebe   0f04     addlw   0x04             	ADDLW	0x04
001ec0   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001ec2   0e00     movlw   0x00             	MOVLW	0x00
001ec4   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001ec6   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
001ec8   0e00     movlw   0x00             	MOVLW	0x00
001eca   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001ecc   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
001ece   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
001ed0   f006
001ed2   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
001ed4   f007
001ed6   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
001ed8   f008
001eda   0efc     movlw   0xfc             	MOVLW	0xfc
001edc   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
001ede   0eff     movlw   0xff             	MOVLW	0xff
001ee0   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
001ee2   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
001ee4   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
001ee6   ffe9
001ee8   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
001eea   fff3
001eec   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
001eee   ec65     call    0x0072ca, 0x0    	CALL	__gptrget4
001ef0   f039
001ef2   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001ef4   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
001ef6   f014
001ef8   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
001efa   f015
001efc   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
001efe   f016
001f00   d024     bra     0x001f4a         	BRA	_01119_DS_
                                           _01118_DS_:
001f02   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001f04   0f02     addlw   0x02             	ADDLW	0x02
001f06   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
001f08   0e00     movlw   0x00             	MOVLW	0x00
001f0a   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001f0c   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
001f0e   0e00     movlw   0x00             	MOVLW	0x00
001f10   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001f12   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
001f14   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
001f16   f006
001f18   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
001f1a   f007
001f1c   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
001f1e   f008
001f20   0efe     movlw   0xfe             	MOVLW	0xfe
001f22   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
001f24   0eff     movlw   0xff             	MOVLW	0xff
001f26   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
001f28   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
001f2a   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
001f2c   ffe9
001f2e   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
001f30   fff3
001f32   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
001f34   ec8a     call    0x007514, 0x0    	CALL	__gptrget2
001f36   f03a
001f38   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
001f3a   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
001f3c   f018
001f3e   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
001f40   f013
001f42   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
001f44   f014
001f46   6a15     clrf    0x15, 0x0        	CLRF	r0x15
001f48   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01119_DS_:
001f4a   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
001f4c   f00f
001f4e   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
001f50   f010
001f52   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
001f54   f011
001f56   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
001f58   f012
                                           ;	.line	429; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 10, 1, width, pad, separator, 'a');
001f5a   0e61     movlw   0x61             	MOVLW	0x61
001f5c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f5e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001f60   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001f62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f64   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001f66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f68   0e01     movlw   0x01             	MOVLW	0x01
001f6a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f6c   0e0a     movlw   0x0a             	MOVLW	0x0a
001f6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f70   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001f72   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f74   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
001f76   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f78   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001f7a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f7c   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001f7e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f80   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001f82   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f84   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001f86   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f88   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001f8a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f8c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001f8e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f90   ecb6     call    0x00396c, 0x0    	CALL	_pprinti
001f92   f01c
001f94   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001f96   0e0e     movlw   0x0e             	MOVLW	0x0e
001f98   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001f9a   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
001f9c   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	430; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
001f9e   ef03     goto    0x002406         	GOTO	_01098_DS_
001fa0   f012
                                           _01080_DS_:
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'x' || *format == 'p')	// unsigned (0) lower ('a') hexa (16) or pointer
001fa2   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001fa4   0a78     xorlw   0x78             	XORLW	0x78
001fa6   e004     bz      0x001fb0         	BZ	_01082_DS_
001fa8   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001faa   0a70     xorlw   0x70             	XORLW	0x70
001fac   e001     bz      0x001fb0         	BZ	_01082_DS_
001fae   d073     bra     0x002096         	BRA	_01083_DS_
                                           _01082_DS_:
                                           ;	.line	435; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
001fb0   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001fb2   e023     bz      0x001ffa         	BZ	_01120_DS_
001fb4   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001fb6   0f04     addlw   0x04             	ADDLW	0x04
001fb8   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001fba   0e00     movlw   0x00             	MOVLW	0x00
001fbc   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001fbe   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
001fc0   0e00     movlw   0x00             	MOVLW	0x00
001fc2   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001fc4   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
001fc6   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
001fc8   f006
001fca   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
001fcc   f007
001fce   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
001fd0   f008
001fd2   0efc     movlw   0xfc             	MOVLW	0xfc
001fd4   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
001fd6   0eff     movlw   0xff             	MOVLW	0xff
001fd8   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
001fda   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
001fdc   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
001fde   ffe9
001fe0   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
001fe2   fff3
001fe4   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
001fe6   ec65     call    0x0072ca, 0x0    	CALL	__gptrget4
001fe8   f039
001fea   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001fec   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
001fee   f014
001ff0   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
001ff2   f015
001ff4   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
001ff6   f016
001ff8   d024     bra     0x002042         	BRA	_01121_DS_
                                           _01120_DS_:
001ffa   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001ffc   0f02     addlw   0x02             	ADDLW	0x02
001ffe   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
002000   0e00     movlw   0x00             	MOVLW	0x00
002002   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
002004   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
002006   0e00     movlw   0x00             	MOVLW	0x00
002008   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
00200a   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
00200c   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
00200e   f006
002010   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
002012   f007
002014   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
002016   f008
002018   0efe     movlw   0xfe             	MOVLW	0xfe
00201a   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
00201c   0eff     movlw   0xff             	MOVLW	0xff
00201e   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
002020   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
002022   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
002024   ffe9
002026   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
002028   fff3
00202a   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
00202c   ec8a     call    0x007514, 0x0    	CALL	__gptrget2
00202e   f03a
002030   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
002032   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
002034   f018
002036   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
002038   f013
00203a   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
00203c   f014
00203e   6a15     clrf    0x15, 0x0        	CLRF	r0x15
002040   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01121_DS_:
002042   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
002044   f00f
002046   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
002048   f010
00204a   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
00204c   f011
00204e   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
002050   f012
                                           ;	.line	436; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 16, 0, width, pad, separator, 'a');
002052   0e61     movlw   0x61             	MOVLW	0x61
002054   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002056   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002058   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
00205a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00205c   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
00205e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002060   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002062   0e10     movlw   0x10             	MOVLW	0x10
002064   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002066   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002068   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00206a   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
00206c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00206e   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
002070   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002072   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
002074   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002076   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002078   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00207a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00207c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00207e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002080   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002082   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002084   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002086   ecb6     call    0x00396c, 0x0    	CALL	_pprinti
002088   f01c
00208a   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
00208c   0e0e     movlw   0x0e             	MOVLW	0x0e
00208e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002090   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
002092   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
002094   d1b8     bra     0x002406         	BRA	_01098_DS_
                                           _01083_DS_:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'X' || *format == 'P')	// unsigned (0) upper ('A') hexa (16) or pointer
002096   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002098   0a58     xorlw   0x58             	XORLW	0x58
00209a   e004     bz      0x0020a4         	BZ	_01085_DS_
00209c   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
00209e   0a50     xorlw   0x50             	XORLW	0x50
0020a0   e001     bz      0x0020a4         	BZ	_01085_DS_
0020a2   d073     bra     0x00218a         	BRA	_01086_DS_
                                           _01085_DS_:
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
0020a4   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
0020a6   e023     bz      0x0020ee         	BZ	_01122_DS_
0020a8   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0020aa   0f04     addlw   0x04             	ADDLW	0x04
0020ac   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
0020ae   0e00     movlw   0x00             	MOVLW	0x00
0020b0   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0020b2   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
0020b4   0e00     movlw   0x00             	MOVLW	0x00
0020b6   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0020b8   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
0020ba   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
0020bc   f006
0020be   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
0020c0   f007
0020c2   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
0020c4   f008
0020c6   0efc     movlw   0xfc             	MOVLW	0xfc
0020c8   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
0020ca   0eff     movlw   0xff             	MOVLW	0xff
0020cc   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
0020ce   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
0020d0   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
0020d2   ffe9
0020d4   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
0020d6   fff3
0020d8   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
0020da   ec65     call    0x0072ca, 0x0    	CALL	__gptrget4
0020dc   f039
0020de   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
0020e0   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
0020e2   f014
0020e4   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
0020e6   f015
0020e8   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
0020ea   f016
0020ec   d024     bra     0x002136         	BRA	_01123_DS_
                                           _01122_DS_:
0020ee   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0020f0   0f02     addlw   0x02             	ADDLW	0x02
0020f2   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
0020f4   0e00     movlw   0x00             	MOVLW	0x00
0020f6   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0020f8   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
0020fa   0e00     movlw   0x00             	MOVLW	0x00
0020fc   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0020fe   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
002100   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
002102   f006
002104   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
002106   f007
002108   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
00210a   f008
00210c   0efe     movlw   0xfe             	MOVLW	0xfe
00210e   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
002110   0eff     movlw   0xff             	MOVLW	0xff
002112   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
002114   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
002116   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
002118   ffe9
00211a   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
00211c   fff3
00211e   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
002120   ec8a     call    0x007514, 0x0    	CALL	__gptrget2
002122   f03a
002124   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
002126   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
002128   f018
00212a   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
00212c   f013
00212e   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
002130   f014
002132   6a15     clrf    0x15, 0x0        	CLRF	r0x15
002134   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01123_DS_:
002136   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
002138   f00f
00213a   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
00213c   f010
00213e   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
002140   f011
002142   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
002144   f012
                                           ;	.line	443; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 16, 0, width, pad, separator, 'A');
002146   0e41     movlw   0x41             	MOVLW	0x41
002148   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00214a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00214c   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
00214e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002150   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002152   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002154   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002156   0e10     movlw   0x10             	MOVLW	0x10
002158   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00215a   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
00215c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00215e   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
002160   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002162   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
002164   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002166   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
002168   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00216a   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
00216c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00216e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002170   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002172   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002174   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002176   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002178   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00217a   ecb6     call    0x00396c, 0x0    	CALL	_pprinti
00217c   f01c
00217e   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
002180   0e0e     movlw   0x0e             	MOVLW	0x0e
002182   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002184   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
002186   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	444; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
002188   d13e     bra     0x002406         	BRA	_01098_DS_
                                           _01086_DS_:
                                           ;	.line	447; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'b')		// binary
00218a   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
00218c   0a62     xorlw   0x62             	XORLW	0x62
00218e   e001     bz      0x002192         	BZ	_01272_DS_
002190   d073     bra     0x002278         	BRA	_01089_DS_
                                           _01272_DS_:
                                           ;	.line	449; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
002192   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002194   e023     bz      0x0021dc         	BZ	_01124_DS_
002196   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
002198   0f04     addlw   0x04             	ADDLW	0x04
00219a   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
00219c   0e00     movlw   0x00             	MOVLW	0x00
00219e   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0021a0   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
0021a2   0e00     movlw   0x00             	MOVLW	0x00
0021a4   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0021a6   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
0021a8   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
0021aa   f006
0021ac   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
0021ae   f007
0021b0   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
0021b2   f008
0021b4   0efc     movlw   0xfc             	MOVLW	0xfc
0021b6   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
0021b8   0eff     movlw   0xff             	MOVLW	0xff
0021ba   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
0021bc   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
0021be   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
0021c0   ffe9
0021c2   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
0021c4   fff3
0021c6   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
0021c8   ec65     call    0x0072ca, 0x0    	CALL	__gptrget4
0021ca   f039
0021cc   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
0021ce   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
0021d0   f014
0021d2   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
0021d4   f015
0021d6   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
0021d8   f016
0021da   d024     bra     0x002224         	BRA	_01125_DS_
                                           _01124_DS_:
0021dc   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0021de   0f02     addlw   0x02             	ADDLW	0x02
0021e0   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
0021e2   0e00     movlw   0x00             	MOVLW	0x00
0021e4   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0021e6   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
0021e8   0e00     movlw   0x00             	MOVLW	0x00
0021ea   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0021ec   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
0021ee   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
0021f0   f006
0021f2   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
0021f4   f007
0021f6   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
0021f8   f008
0021fa   0efe     movlw   0xfe             	MOVLW	0xfe
0021fc   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
0021fe   0eff     movlw   0xff             	MOVLW	0xff
002200   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
002202   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
002204   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
002206   ffe9
002208   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
00220a   fff3
00220c   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
00220e   ec8a     call    0x007514, 0x0    	CALL	__gptrget2
002210   f03a
002212   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
002214   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
002216   f018
002218   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
00221a   f013
00221c   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
00221e   f014
002220   6a15     clrf    0x15, 0x0        	CLRF	r0x15
002222   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01125_DS_:
002224   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
002226   f00f
002228   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
00222a   f010
00222c   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
00222e   f011
002230   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
002232   f012
                                           ;	.line	450; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 2, 0, width, pad, separator, 'a');
002234   0e61     movlw   0x61             	MOVLW	0x61
002236   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002238   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00223a   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
00223c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00223e   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002240   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002242   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002244   0e02     movlw   0x02             	MOVLW	0x02
002246   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002248   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
00224a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00224c   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
00224e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002250   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
002252   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002254   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
002256   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002258   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
00225a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00225c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00225e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002260   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002262   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002264   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002266   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002268   ecb6     call    0x00396c, 0x0    	CALL	_pprinti
00226a   f01c
00226c   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
00226e   0e0e     movlw   0x0e             	MOVLW	0x0e
002270   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002272   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
002274   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	451; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
002276   d0c7     bra     0x002406         	BRA	_01098_DS_
                                           _01089_DS_:
                                           ;	.line	454; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'o')		// octal
002278   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
00227a   0a6f     xorlw   0x6f             	XORLW	0x6f
00227c   e001     bz      0x002280         	BZ	_01274_DS_
00227e   d073     bra     0x002366         	BRA	_01091_DS_
                                           _01274_DS_:
                                           ;	.line	456; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
002280   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002282   e023     bz      0x0022ca         	BZ	_01126_DS_
002284   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
002286   0f04     addlw   0x04             	ADDLW	0x04
002288   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
00228a   0e00     movlw   0x00             	MOVLW	0x00
00228c   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
00228e   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
002290   0e00     movlw   0x00             	MOVLW	0x00
002292   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
002294   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
002296   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
002298   f006
00229a   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
00229c   f007
00229e   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
0022a0   f008
0022a2   0efc     movlw   0xfc             	MOVLW	0xfc
0022a4   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
0022a6   0eff     movlw   0xff             	MOVLW	0xff
0022a8   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
0022aa   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
0022ac   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
0022ae   ffe9
0022b0   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
0022b2   fff3
0022b4   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
0022b6   ec65     call    0x0072ca, 0x0    	CALL	__gptrget4
0022b8   f039
0022ba   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
0022bc   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
0022be   f014
0022c0   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
0022c2   f015
0022c4   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
0022c6   f016
0022c8   d024     bra     0x002312         	BRA	_01127_DS_
                                           _01126_DS_:
0022ca   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0022cc   0f02     addlw   0x02             	ADDLW	0x02
0022ce   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
0022d0   0e00     movlw   0x00             	MOVLW	0x00
0022d2   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0022d4   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
0022d6   0e00     movlw   0x00             	MOVLW	0x00
0022d8   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0022da   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
0022dc   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
0022de   f006
0022e0   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
0022e2   f007
0022e4   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
0022e6   f008
0022e8   0efe     movlw   0xfe             	MOVLW	0xfe
0022ea   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
0022ec   0eff     movlw   0xff             	MOVLW	0xff
0022ee   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
0022f0   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
0022f2   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
0022f4   ffe9
0022f6   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
0022f8   fff3
0022fa   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
0022fc   ec8a     call    0x007514, 0x0    	CALL	__gptrget2
0022fe   f03a
002300   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
002302   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
002304   f018
002306   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
002308   f013
00230a   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
00230c   f014
00230e   6a15     clrf    0x15, 0x0        	CLRF	r0x15
002310   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01127_DS_:
002312   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
002314   f00f
002316   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
002318   f010
00231a   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
00231c   f011
00231e   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
002320   f012
                                           ;	.line	457; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 8, 0, width, pad, separator, 'a');
002322   0e61     movlw   0x61             	MOVLW	0x61
002324   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002326   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002328   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
00232a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00232c   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
00232e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002330   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002332   0e08     movlw   0x08             	MOVLW	0x08
002334   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002336   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002338   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00233a   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
00233c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00233e   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
002340   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002342   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
002344   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002346   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002348   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00234a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00234c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00234e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002350   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002352   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002354   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002356   ecb6     call    0x00396c, 0x0    	CALL	_pprinti
002358   f01c
00235a   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
00235c   0e0e     movlw   0x0e             	MOVLW	0x0e
00235e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002360   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002362   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	458; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
002364   d050     bra     0x002406         	BRA	_01098_DS_
                                           _01091_DS_:
                                           ;	.line	461; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'c') 	// ascii
002366   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002368   0a63     xorlw   0x63             	XORLW	0x63
00236a   e001     bz      0x00236e         	BZ	_01276_DS_
00236c   d04c     bra     0x002406         	BRA	_01098_DS_
                                           _01276_DS_:
                                           ;	.line	463; /home/vbasel/.icaro/v4/firmware/core/stdio.c	scr[0] = va_arg(args, u16);
00236e   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
002370   0f02     addlw   0x02             	ADDLW	0x02
002372   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
002374   0e00     movlw   0x00             	MOVLW	0x00
002376   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
002378   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
00237a   0e00     movlw   0x00             	MOVLW	0x00
00237c   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
00237e   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
002380   c00c     movff   0x00c, 0x006     	MOVFF	r0x0c, r0x06
002382   f006
002384   c00e     movff   0x00e, 0x007     	MOVFF	r0x0e, r0x07
002386   f007
002388   c00f     movff   0x00f, 0x008     	MOVFF	r0x0f, r0x08
00238a   f008
00238c   0efe     movlw   0xfe             	MOVLW	0xfe
00238e   260c     addwf   0x0c, 0x1, 0x0   	ADDWF	r0x0c, F
002390   0eff     movlw   0xff             	MOVLW	0xff
002392   220e     addwfc  0x0e, 0x1, 0x0   	ADDWFC	r0x0e, F
002394   220f     addwfc  0x0f, 0x1, 0x0   	ADDWFC	r0x0f, F
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVWF	r0x0f
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVF	r0x0e, W
                                           ; #	MOVF	r0x0e, W
                                           ; #	MOVWF	r0x0e
                                           ; #	MOVF	r0x0e, W
                                           ; #	MOVF	r0x0c, W
                                           ; #	MOVF	r0x0c, W
                                           ; #	MOVWF	r0x0c
002396   c00c     movff   0x00c, 0xfe9     	MOVFF	r0x0c, FSR0L
002398   ffe9
00239a   c00e     movff   0x00e, 0xff3     	MOVFF	r0x0e, PRODL
00239c   fff3
00239e   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
0023a0   ec8a     call    0x007514, 0x0    	CALL	__gptrget2
0023a2   f03a
0023a4   0105     movlb   0x5              	BANKSEL	_pprint_scr_1_208
0023a6   6ffe     movwf   0xfe, 0x1        	MOVWF	_pprint_scr_1_208, B
                                           ; removed redundant BANKSEL
                                           ;	.line	464; /home/vbasel/.icaro/v4/firmware/core/stdio.c	scr[1] = '\0';
0023a8   6bff     clrf    0xff, 0x1        	CLRF	(_pprint_scr_1_208 + 1), B
                                           ;	.line	465; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprints(out, scr, width, pad);
0023aa   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
0023ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023ae   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
0023b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023b2   0e80     movlw   0x80             	MOVLW	0x80
0023b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023b6   0e05     movlw   0x05             	MOVLW	HIGH(_pprint_scr_1_208)
0023b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023ba   0efe     movlw   0xfe             	MOVLW	LOW(_pprint_scr_1_208)
0023bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023be   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0023c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023c2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0023c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0023c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023ca   ecf6     call    0x004fec, 0x0    	CALL	_pprints
0023cc   f027
0023ce   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
0023d0   0e08     movlw   0x08             	MOVLW	0x08
0023d2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0023d4   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
0023d6   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
0023d8   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
0023da   240c     addwf   0x0c, 0x0, 0x0   	ADDWF	r0x0c, W
0023dc   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           ;	.line	466; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
0023de   d013     bra     0x002406         	BRA	_01098_DS_
                                           _01094_DS_:
                                           ;	.line	473; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, *format);
0023e0   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0023e2   ffe9
0023e4   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
0023e6   fff3
0023e8   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0023ea   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
0023ec   f03a
                                           ; #	MOVWF	r0x0b
                                           ; #	MOVF	r0x0b, W
0023ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023f0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0023f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023f4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0023f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023f8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0023fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023fc   ec99     call    0x005d32, 0x0    	CALL	_pprintc
0023fe   f02e
002400   0e04     movlw   0x04             	MOVLW	0x04
002402   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	474; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
002404   2a09     incf    0x09, 0x1, 0x0   	INCF	r0x09, F
                                           _01098_DS_:
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (; *format != 0; ++format)
002406   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
002408   e302     bnc     0x00240e         	BNC	_01277_DS_
00240a   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
00240c   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01277_DS_:
00240e   ef88     goto    0x001b10         	GOTO	_01111_DS_
002410   f00d
                                           _01099_DS_:
                                           ;	.line	477; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (out) **out = '\0';
002412   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002414   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
002416   1002     iorwf   0x02, 0x0, 0x0   	IORWF	r0x02, W
002418   e014     bz      0x002442         	BZ	_01101_DS_
00241a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00241c   ffe9
00241e   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
002420   fff3
002422   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002424   ecfc     call    0x0073f8, 0x0    	CALL	__gptrget3
002426   f039
002428   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00242a   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
00242c   f001
00242e   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
002430   f002
002432   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002434   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
002436   ffe9
002438   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
00243a   fff3
00243c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00243e   ec35     call    0x00766a, 0x0    	CALL	__gptrput1
002440   f03b
                                           _01101_DS_:
                                           ;	.line	478; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pc;
002442   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
                                           ;	.line	479; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
002444   cfe4     movff   0xfe4, 0x019     	MOVFF	PREINC1, r0x19
002446   f019
002448   cfe4     movff   0xfe4, 0x018     	MOVFF	PREINC1, r0x18
00244a   f018
00244c   cfe4     movff   0xfe4, 0x017     	MOVFF	PREINC1, r0x17
00244e   f017
002450   cfe4     movff   0xfe4, 0x016     	MOVFF	PREINC1, r0x16
002452   f016
002454   cfe4     movff   0xfe4, 0x015     	MOVFF	PREINC1, r0x15
002456   f015
002458   cfe4     movff   0xfe4, 0x014     	MOVFF	PREINC1, r0x14
00245a   f014
00245c   cfe4     movff   0xfe4, 0x013     	MOVFF	PREINC1, r0x13
00245e   f013
002460   cfe4     movff   0xfe4, 0x012     	MOVFF	PREINC1, r0x12
002462   f012
002464   cfe4     movff   0xfe4, 0x011     	MOVFF	PREINC1, r0x11
002466   f011
002468   cfe4     movff   0xfe4, 0x010     	MOVFF	PREINC1, r0x10
00246a   f010
00246c   cfe4     movff   0xfe4, 0x00f     	MOVFF	PREINC1, r0x0f
00246e   f00f
002470   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
002472   f00e
002474   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
002476   f00d
002478   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
00247a   f00c
00247c   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
00247e   f00b
002480   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
002482   f00a
002484   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
002486   f009
002488   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00248a   f008
00248c   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
00248e   f007
002490   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
002492   f006
002494   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
002496   f005
002498   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00249a   f004
00249c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00249e   f003
0024a0   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0024a2   f002
0024a4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0024a6   f001
0024a8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0024aa   f000
0024ac   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0024ae   ffd9
0024b0   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__pprintfl	code
                                           _pprintfl:
                                           ;	.line	178; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static u8 pprintfl(u8 **out, float value, u8 width, u8 pad, u8 separator, u8 precision)
002cbe   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002cc0   ffe5
002cc2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002cc4   ffd9
002cc6   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002cc8   ffe5
002cca   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002ccc   ffe5
002cce   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002cd0   ffe5
002cd2   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002cd4   ffe5
002cd6   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002cd8   ffe5
002cda   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
002cdc   ffe5
002cde   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
002ce0   ffe5
002ce2   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
002ce4   ffe5
002ce6   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
002ce8   ffe5
002cea   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
002cec   ffe5
002cee   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
002cf0   ffe5
002cf2   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
002cf4   ffe5
002cf6   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
002cf8   ffe5
002cfa   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
002cfc   ffe5
002cfe   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
002d00   ffe5
002d02   c00f     movff   0x00f, 0xfe5     	MOVFF	r0x0f, POSTDEC1
002d04   ffe5
002d06   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
002d08   ffe5
002d0a   c011     movff   0x011, 0xfe5     	MOVFF	r0x11, POSTDEC1
002d0c   ffe5
002d0e   c012     movff   0x012, 0xfe5     	MOVFF	r0x12, POSTDEC1
002d10   ffe5
002d12   c013     movff   0x013, 0xfe5     	MOVFF	r0x13, POSTDEC1
002d14   ffe5
002d16   c014     movff   0x014, 0xfe5     	MOVFF	r0x14, POSTDEC1
002d18   ffe5
002d1a   c015     movff   0x015, 0xfe5     	MOVFF	r0x15, POSTDEC1
002d1c   ffe5
002d1e   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
002d20   ffe5
002d22   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
002d24   ffe5
002d26   c018     movff   0x018, 0xfe5     	MOVFF	r0x18, POSTDEC1
002d28   ffe5
002d2a   c019     movff   0x019, 0xfe5     	MOVFF	r0x19, POSTDEC1
002d2c   ffe5
002d2e   c01a     movff   0x01a, 0xfe5     	MOVFF	r0x1a, POSTDEC1
002d30   ffe5
002d32   c01b     movff   0x01b, 0xfe5     	MOVFF	r0x1b, POSTDEC1
002d34   ffe5
002d36   c01c     movff   0x01c, 0xfe5     	MOVFF	r0x1c, POSTDEC1
002d38   ffe5
002d3a   c01d     movff   0x01d, 0xfe5     	MOVFF	r0x1d, POSTDEC1
002d3c   ffe5
002d3e   c01e     movff   0x01e, 0xfe5     	MOVFF	r0x1e, POSTDEC1
002d40   ffe5
002d42   c01f     movff   0x01f, 0xfe5     	MOVFF	r0x1f, POSTDEC1
002d44   ffe5
002d46   0e02     movlw   0x02             	MOVLW	0x02
002d48   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002d4a   f000
002d4c   0e03     movlw   0x03             	MOVLW	0x03
002d4e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002d50   f001
002d52   0e04     movlw   0x04             	MOVLW	0x04
002d54   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
002d56   f002
002d58   0e05     movlw   0x05             	MOVLW	0x05
002d5a   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
002d5c   f003
002d5e   0e06     movlw   0x06             	MOVLW	0x06
002d60   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
002d62   f004
002d64   0e07     movlw   0x07             	MOVLW	0x07
002d66   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
002d68   f005
002d6a   0e08     movlw   0x08             	MOVLW	0x08
002d6c   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
002d6e   f006
002d70   0e09     movlw   0x09             	MOVLW	0x09
002d72   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
002d74   f007
002d76   0e0a     movlw   0x0a             	MOVLW	0x0a
002d78   cfdb     movff   0xfdb, 0x008     	MOVFF	PLUSW2, r0x08
002d7a   f008
002d7c   0e0c     movlw   0x0c             	MOVLW	0x0c
002d7e   cfdb     movff   0xfdb, 0x009     	MOVFF	PLUSW2, r0x09
002d80   f009
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u32 int_part  = 0;
002d82   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
002d84   6a0b     clrf    0x0b, 0x0        	CLRF	r0x0b
002d86   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
002d88   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
                                           ;	.line	188; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u32 frac_part = 0;
002d8a   6a0e     clrf    0x0e, 0x0        	CLRF	r0x0e
002d8c   6a0f     clrf    0x0f, 0x0        	CLRF	r0x0f
002d8e   6a10     clrf    0x10, 0x0        	CLRF	r0x10
002d90   6a11     clrf    0x11, 0x0        	CLRF	r0x11
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 buffer[PRINTF_BUF_LEN], *string = buffer;
002d92   0e05     movlw   0x05             	MOVLW	HIGH(_pprintfl_buffer_1_192)
002d94   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
002d96   0ef2     movlw   0xf2             	MOVLW	LOW(_pprintfl_buffer_1_192)
002d98   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
002d9a   0e80     movlw   0x80             	MOVLW	0x80
002d9c   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 tmp[PRINTF_BUF_LEN], *s = tmp;
002d9e   0e07     movlw   0x07             	MOVLW	HIGH(_pprintfl_tmp_1_192)
002da0   6e16     movwf   0x16, 0x0        	MOVWF	r0x16
002da2   0e00     movlw   0x00             	MOVLW	LOW(_pprintfl_tmp_1_192)
002da4   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
002da6   0e80     movlw   0x80             	MOVLW	0x80
002da8   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 count = 0, m, t;
002daa   6a18     clrf    0x18, 0x0        	CLRF	r0x18
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 length = PRINTF_BUF_LEN - 1;
002dac   0e0b     movlw   0x0b             	MOVLW	0x0b
002dae   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/stdio.c	helper.f = value;
002db0   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002db2   0107     movlb   0x7              	BANKSEL	_pprintfl_helper_1_192
002db4   6f38     movwf   0x38, 0x1        	MOVWF	_pprintfl_helper_1_192, B
002db6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002db8   6f39     movwf   0x39, 0x1        	MOVWF	(_pprintfl_helper_1_192 + 1), B
002dba   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
                                           ; removed redundant BANKSEL
002dbc   6f3a     movwf   0x3a, 0x1        	MOVWF	(_pprintfl_helper_1_192 + 2), B
002dbe   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
                                           ; removed redundant BANKSEL
002dc0   6f3b     movwf   0x3b, 0x1        	MOVWF	(_pprintfl_helper_1_192 + 3), B
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (helper.l < 0)
002dc2   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
                                           ; removed redundant BANKSEL
002dc4   af3b     btfss   0x3b, 0x7, 0x1   	BTFSS	(_pprintfl_helper_1_192 + 3), 7, B
002dc6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002dc8   e325     bnc     0x002e14         	BNC	_00937_DS_
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (width && (pad & PAD_ZERO))
002dca   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
002dcc   e014     bz      0x002df6         	BZ	_00933_DS_
002dce   c008     movff   0x008, 0x003     	MOVFF	r0x08, r0x03
002dd0   f003
002dd2   a203     btfss   0x03, 0x1, 0x0   	BTFSS	r0x03, 1
002dd4   d010     bra     0x002df6         	BRA	_00933_DS_
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, '-');
002dd6   0e2d     movlw   0x2d             	MOVLW	0x2d
002dd8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002dda   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002ddc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002dde   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002de0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002de2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002de4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002de6   ec99     call    0x005d32, 0x0    	CALL	_pprintc
002de8   f02e
002dea   0e04     movlw   0x04             	MOVLW	0x04
002dec   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	203; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++count;
002dee   0e01     movlw   0x01             	MOVLW	0x01
002df0   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/core/stdio.c	--width;
002df2   0607     decf    0x07, 0x1, 0x0   	DECF	r0x07, F
002df4   d00f     bra     0x002e14         	BRA	_00937_DS_
                                           _00933_DS_:
                                           ;	.line	208; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = '-';
002df6   0e2d     movlw   0x2d             	MOVLW	0x2d
002df8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002dfa   c012     movff   0x012, 0xfe9     	MOVFF	r0x12, FSR0L
002dfc   ffe9
002dfe   c013     movff   0x013, 0xff3     	MOVFF	r0x13, PRODL
002e00   fff3
002e02   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
002e04   ec35     call    0x00766a, 0x0    	CALL	__gptrput1
002e06   f03b
002e08   2a12     incf    0x12, 0x1, 0x0   	INCF	r0x12, F
002e0a   e302     bnc     0x002e10         	BNC	_01026_DS_
002e0c   4a13     infsnz  0x13, 0x1, 0x0   	INFSNZ	r0x13, F
002e0e   2a14     incf    0x14, 0x1, 0x0   	INCF	r0x14, F
                                           _01026_DS_:
                                           ;	.line	209; /home/vbasel/.icaro/v4/firmware/core/stdio.c	length--;
002e10   0e0a     movlw   0x0a             	MOVLW	0x0a
002e12   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
                                           _00937_DS_:
002e14   0107     movlb   0x7              	BANKSEL	(_pprintfl_helper_1_192 + 2)
                                           ;	.line	215; /home/vbasel/.icaro/v4/firmware/core/stdio.c	exponent = ((helper.l >> 23) & 0xFF) - 127;	
002e16   353a     rlcf    0x3a, 0x0, 0x1   	RLCF	(_pprintfl_helper_1_192 + 2), W, B
                                           ; removed redundant BANKSEL
002e18   353b     rlcf    0x3b, 0x0, 0x1   	RLCF	(_pprintfl_helper_1_192 + 3), W, B
002e1a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002e1c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002e1e   0e81     movlw   0x81             	MOVLW	0x81
002e20   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
                                           ; removed redundant BANKSEL
                                           ;	.line	218; /home/vbasel/.icaro/v4/firmware/core/stdio.c	mantissa = (helper.l & 0x7FFFFF) | 0x800000;
002e22   5138     movf    0x38, 0x0, 0x1   	MOVF	_pprintfl_helper_1_192, W, B
002e24   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; removed redundant BANKSEL
002e26   5139     movf    0x39, 0x0, 0x1   	MOVF	(_pprintfl_helper_1_192 + 1), W, B
002e28   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002e2a   0e7f     movlw   0x7f             	MOVLW	0x7f
                                           ; removed redundant BANKSEL
002e2c   153a     andwf   0x3a, 0x0, 0x1   	ANDWF	(_pprintfl_helper_1_192 + 2), W, B
002e2e   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
002e30   6a1a     clrf    0x1a, 0x0        	CLRF	r0x1a
002e32   8e06     bsf     0x06, 0x7, 0x0   	BSF	r0x06, 7
                                           ;	.line	231; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (exponent >= 31)
002e34   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002e36   0f80     addlw   0x80             	ADDLW	0x80
002e38   0f61     addlw   0x61             	ADDLW	0x61
002e3a   e321     bnc     0x002e7e         	BNC	_00948_DS_
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[0] = '+';
002e3c   0e2b     movlw   0x2b             	MOVLW	0x2b
002e3e   0105     movlb   0x5              	BANKSEL	_pprintfl_buffer_1_192
002e40   6ff2     movwf   0xf2, 0x1        	MOVWF	_pprintfl_buffer_1_192, B
                                           ;	.line	234; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[1] = 'i';
002e42   0e69     movlw   0x69             	MOVLW	0x69
                                           ; removed redundant BANKSEL
002e44   6ff3     movwf   0xf3, 0x1        	MOVWF	(_pprintfl_buffer_1_192 + 1), B
                                           ;	.line	235; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[2] = 'n';
002e46   0e6e     movlw   0x6e             	MOVLW	0x6e
                                           ; removed redundant BANKSEL
002e48   6ff4     movwf   0xf4, 0x1        	MOVWF	(_pprintfl_buffer_1_192 + 2), B
                                           ;	.line	236; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[3] = 'f';
002e4a   0e66     movlw   0x66             	MOVLW	0x66
                                           ; removed redundant BANKSEL
002e4c   6ff5     movwf   0xf5, 0x1        	MOVWF	(_pprintfl_buffer_1_192 + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[4] = '\0';
002e4e   6bf6     clrf    0xf6, 0x1        	CLRF	(_pprintfl_buffer_1_192 + 4), B
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprints(out, buffer, width, pad);
002e50   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
002e52   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e54   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
002e56   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e58   0e80     movlw   0x80             	MOVLW	0x80
002e5a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e5c   0e05     movlw   0x05             	MOVLW	HIGH(_pprintfl_buffer_1_192)
002e5e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e60   0ef2     movlw   0xf2             	MOVLW	LOW(_pprintfl_buffer_1_192)
002e62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e64   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002e66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e68   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002e6a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e6c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002e6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e70   ecf6     call    0x004fec, 0x0    	CALL	_pprints
002e72   f027
002e74   6e1b     movwf   0x1b, 0x0        	MOVWF	r0x1b
002e76   0e08     movlw   0x08             	MOVLW	0x08
002e78   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002e7a   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
002e7c   d193     bra     0x0031a4         	BRA	_00969_DS_
                                           _00948_DS_:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/core/stdio.c	else if (exponent < -23)
002e7e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002e80   0f80     addlw   0x80             	ADDLW	0x80
002e82   0f97     addlw   0x97             	ADDLW	0x97
002e84   e209     bc      0x002e98         	BC	_00945_DS_
                                           ;	.line	251; /home/vbasel/.icaro/v4/firmware/core/stdio.c	int_part  = 0;
002e86   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
002e88   6a0b     clrf    0x0b, 0x0        	CLRF	r0x0b
002e8a   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
002e8c   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
                                           ;	.line	252; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part = 0;
002e8e   6a0e     clrf    0x0e, 0x0        	CLRF	r0x0e
002e90   6a0f     clrf    0x0f, 0x0        	CLRF	r0x0f
002e92   6a10     clrf    0x10, 0x0        	CLRF	r0x10
002e94   6a11     clrf    0x11, 0x0        	CLRF	r0x11
002e96   d075     bra     0x002f82         	BRA	_00949_DS_
                                           _00945_DS_:
                                           ;	.line	255; /home/vbasel/.icaro/v4/firmware/core/stdio.c	else if (exponent >= 23)
002e98   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002e9a   0f80     addlw   0x80             	ADDLW	0x80
002e9c   0f69     addlw   0x69             	ADDLW	0x69
002e9e   e317     bnc     0x002ece         	BNC	_00942_DS_
                                           ;	.line	257; /home/vbasel/.icaro/v4/firmware/core/stdio.c	int_part = mantissa << (exponent - 23);
002ea0   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002ea2   6e1b     movwf   0x1b, 0x0        	MOVWF	r0x1b
002ea4   0ee9     movlw   0xe9             	MOVLW	0xe9
002ea6   261b     addwf   0x1b, 0x1, 0x0   	ADDWF	r0x1b, F
002ea8   c004     movff   0x004, 0x00a     	MOVFF	r0x04, r0x0a
002eaa   f00a
002eac   c005     movff   0x005, 0x00b     	MOVFF	r0x05, r0x0b
002eae   f00b
002eb0   c006     movff   0x006, 0x00c     	MOVFF	r0x06, r0x0c
002eb2   f00c
002eb4   c01a     movff   0x01a, 0x00d     	MOVFF	r0x1a, r0x0d
002eb6   f00d
002eb8   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
002eba   e008     bz      0x002ecc         	BZ	_01032_DS_
002ebc   6ce8     negf    0xe8, 0x0        	NEGF	WREG
002ebe   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01033_DS_:
002ec0   360a     rlcf    0x0a, 0x1, 0x0   	RLCF	r0x0a, F
002ec2   360b     rlcf    0x0b, 0x1, 0x0   	RLCF	r0x0b, F
002ec4   360c     rlcf    0x0c, 0x1, 0x0   	RLCF	r0x0c, F
002ec6   360d     rlcf    0x0d, 0x1, 0x0   	RLCF	r0x0d, F
002ec8   0f01     addlw   0x01             	ADDLW	0x01
002eca   e3fa     bnc     0x002ec0         	BNC	_01033_DS_
                                           _01032_DS_:
002ecc   d05a     bra     0x002f82         	BRA	_00949_DS_
                                           _00942_DS_:
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/core/stdio.c	else if (exponent >= 0) 
002ece   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
002ed0   ae03     btfss   0x03, 0x7, 0x0   	BTFSS	r0x03, 7
002ed2   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002ed4   e231     bc      0x002f38         	BC	_00939_DS_
                                           ; #	MOVF	r0x03, W
                                           ; #	MOVWF	r0x1b
                                           ; #	MOVF	r0x1b, W
                                           ;	.line	262; /home/vbasel/.icaro/v4/firmware/core/stdio.c	int_part = mantissa >> (23 - exponent);
002ed6   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002ed8   6e1b     movwf   0x1b, 0x0        	MOVWF	r0x1b
002eda   0817     sublw   0x17             	SUBLW	0x17
002edc   6e1c     movwf   0x1c, 0x0        	MOVWF	r0x1c
002ede   c004     movff   0x004, 0x00a     	MOVFF	r0x04, r0x0a
002ee0   f00a
002ee2   c005     movff   0x005, 0x00b     	MOVFF	r0x05, r0x0b
002ee4   f00b
002ee6   c006     movff   0x006, 0x00c     	MOVFF	r0x06, r0x0c
002ee8   f00c
002eea   c01a     movff   0x01a, 0x00d     	MOVFF	r0x1a, r0x0d
002eec   f00d
002eee   501c     movf    0x1c, 0x0, 0x0   	MOVF	r0x1c, W
002ef0   e008     bz      0x002f02         	BZ	_01034_DS_
002ef2   6ce8     negf    0xe8, 0x0        	NEGF	WREG
002ef4   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01035_DS_:
002ef6   320d     rrcf    0x0d, 0x1, 0x0   	RRCF	r0x0d, F
002ef8   320c     rrcf    0x0c, 0x1, 0x0   	RRCF	r0x0c, F
002efa   320b     rrcf    0x0b, 0x1, 0x0   	RRCF	r0x0b, F
002efc   320a     rrcf    0x0a, 0x1, 0x0   	RRCF	r0x0a, F
002efe   0f01     addlw   0x01             	ADDLW	0x01
002f00   e3fa     bnc     0x002ef6         	BNC	_01035_DS_
                                           _01034_DS_:
                                           ;	.line	263; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part = (mantissa << (exponent + 1)) & 0xFFFFFF; // mfh
002f02   2a1b     incf    0x1b, 0x1, 0x0   	INCF	r0x1b, F
002f04   c004     movff   0x004, 0x01c     	MOVFF	r0x04, r0x1c
002f06   f01c
002f08   c005     movff   0x005, 0x01d     	MOVFF	r0x05, r0x1d
002f0a   f01d
002f0c   c006     movff   0x006, 0x01e     	MOVFF	r0x06, r0x1e
002f0e   f01e
002f10   c01a     movff   0x01a, 0x01f     	MOVFF	r0x1a, r0x1f
002f12   f01f
002f14   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
002f16   e008     bz      0x002f28         	BZ	_01036_DS_
002f18   6ce8     negf    0xe8, 0x0        	NEGF	WREG
002f1a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01037_DS_:
002f1c   361c     rlcf    0x1c, 0x1, 0x0   	RLCF	r0x1c, F
002f1e   361d     rlcf    0x1d, 0x1, 0x0   	RLCF	r0x1d, F
002f20   361e     rlcf    0x1e, 0x1, 0x0   	RLCF	r0x1e, F
002f22   361f     rlcf    0x1f, 0x1, 0x0   	RLCF	r0x1f, F
002f24   0f01     addlw   0x01             	ADDLW	0x01
002f26   e3fa     bnc     0x002f1c         	BNC	_01037_DS_
                                           _01036_DS_:
002f28   501c     movf    0x1c, 0x0, 0x0   	MOVF	r0x1c, W
002f2a   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
002f2c   501d     movf    0x1d, 0x0, 0x0   	MOVF	r0x1d, W
002f2e   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
002f30   501e     movf    0x1e, 0x0, 0x0   	MOVF	r0x1e, W
002f32   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
002f34   6a11     clrf    0x11, 0x0        	CLRF	r0x11
002f36   d025     bra     0x002f82         	BRA	_00949_DS_
                                           _00939_DS_:
                                           ;	.line	267; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part = (mantissa & 0xFFFFFF) >> -(exponent + 1);
002f38   6a1a     clrf    0x1a, 0x0        	CLRF	r0x1a
002f3a   6a1b     clrf    0x1b, 0x0        	CLRF	r0x1b
002f3c   be03     btfsc   0x03, 0x7, 0x0   	BTFSC	r0x03, 7
002f3e   681b     setf    0x1b, 0x0        	SETF	r0x1b
002f40   4a03     infsnz  0x03, 0x1, 0x0   	INFSNZ	r0x03, F
002f42   2a1b     incf    0x1b, 0x1, 0x0   	INCF	r0x1b, F
002f44   1e1b     comf    0x1b, 0x1, 0x0   	COMF	r0x1b, F
002f46   6c03     negf    0x03, 0x0        	NEGF	r0x03
002f48   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
002f4a   2a1b     incf    0x1b, 0x1, 0x0   	INCF	r0x1b, F
002f4c   c004     movff   0x004, 0x00e     	MOVFF	r0x04, r0x0e
002f4e   f00e
002f50   c005     movff   0x005, 0x00f     	MOVFF	r0x05, r0x0f
002f52   f00f
002f54   c006     movff   0x006, 0x010     	MOVFF	r0x06, r0x10
002f56   f010
002f58   c01a     movff   0x01a, 0x011     	MOVFF	r0x1a, r0x11
002f5a   f011
002f5c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002f5e   e011     bz      0x002f82         	BZ	_00949_DS_
002f60   e609     bn      0x002f74         	BN	_01044_DS_
002f62   6ce8     negf    0xe8, 0x0        	NEGF	WREG
002f64   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01042_DS_:
002f66   3211     rrcf    0x11, 0x1, 0x0   	RRCF	r0x11, F
002f68   3210     rrcf    0x10, 0x1, 0x0   	RRCF	r0x10, F
002f6a   320f     rrcf    0x0f, 0x1, 0x0   	RRCF	r0x0f, F
002f6c   320e     rrcf    0x0e, 0x1, 0x0   	RRCF	r0x0e, F
002f6e   0f01     addlw   0x01             	ADDLW	0x01
002f70   e3fa     bnc     0x002f66         	BNC	_01042_DS_
002f72   d007     bra     0x002f82         	BRA	_00949_DS_
                                           _01044_DS_:
002f74   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01043_DS_:
002f76   360e     rlcf    0x0e, 0x1, 0x0   	RLCF	r0x0e, F
002f78   360f     rlcf    0x0f, 0x1, 0x0   	RLCF	r0x0f, F
002f7a   3610     rlcf    0x10, 0x1, 0x0   	RLCF	r0x10, F
002f7c   3611     rlcf    0x11, 0x1, 0x0   	RLCF	r0x11, F
002f7e   0f01     addlw   0x01             	ADDLW	0x01
002f80   e3fa     bnc     0x002f76         	BNC	_01043_DS_
                                           _00949_DS_:
                                           ;	.line	270; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (int_part == 0)
002f82   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
002f84   100b     iorwf   0x0b, 0x0, 0x0   	IORWF	r0x0b, W
002f86   100c     iorwf   0x0c, 0x0, 0x0   	IORWF	r0x0c, W
002f88   100d     iorwf   0x0d, 0x0, 0x0   	IORWF	r0x0d, W
002f8a   e10f     bnz     0x002faa         	BNZ	_00980_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = '0';
002f8c   0e30     movlw   0x30             	MOVLW	0x30
002f8e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002f90   c012     movff   0x012, 0xfe9     	MOVFF	r0x12, FSR0L
002f92   ffe9
002f94   c013     movff   0x013, 0xff3     	MOVFF	r0x13, PRODL
002f96   fff3
002f98   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
002f9a   ec35     call    0x00766a, 0x0    	CALL	__gptrput1
002f9c   f03b
002f9e   2a12     incf    0x12, 0x1, 0x0   	INCF	r0x12, F
002fa0   e302     bnc     0x002fa6         	BNC	_01045_DS_
002fa2   4a13     infsnz  0x13, 0x1, 0x0   	INFSNZ	r0x13, F
002fa4   2a14     incf    0x14, 0x1, 0x0   	INCF	r0x14, F
                                           _01045_DS_:
                                           ;	.line	273; /home/vbasel/.icaro/v4/firmware/core/stdio.c	length--;
002fa6   0619     decf    0x19, 0x1, 0x0   	DECF	r0x19, F
002fa8   d078     bra     0x00309a         	BRA	_00958_DS_
                                           _00980_DS_:
                                           ;	.line	279; /home/vbasel/.icaro/v4/firmware/core/stdio.c	while (int_part)
002faa   c015     movff   0x015, 0x003     	MOVFF	r0x15, r0x03
002fac   f003
002fae   c016     movff   0x016, 0x004     	MOVFF	r0x16, r0x04
002fb0   f004
002fb2   c017     movff   0x017, 0x005     	MOVFF	r0x17, r0x05
002fb4   f005
002fb6   6a06     clrf    0x06, 0x0        	CLRF	r0x06
002fb8   c019     movff   0x019, 0x015     	MOVFF	r0x19, r0x15
002fba   f015
                                           _00950_DS_:
002fbc   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
002fbe   100b     iorwf   0x0b, 0x0, 0x0   	IORWF	r0x0b, W
002fc0   100c     iorwf   0x0c, 0x0, 0x0   	IORWF	r0x0c, W
002fc2   100d     iorwf   0x0d, 0x0, 0x0   	IORWF	r0x0d, W
002fc4   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
002fc6   d03c     bra     0x003040         	BRA	_00988_DS_
                                           ;	.line	281; /home/vbasel/.icaro/v4/firmware/core/stdio.c	t = int_part % 10;		// decimal base
002fc8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002fca   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002fcc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002fce   0e0a     movlw   0x0a             	MOVLW	0x0a
002fd0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002fd2   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002fd4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002fd6   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002fd8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002fda   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002fdc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002fde   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
002fe0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002fe2   ec5d     call    0x0058ba, 0x0    	CALL	__modulong
002fe4   f02c
002fe6   6e16     movwf   0x16, 0x0        	MOVWF	r0x16
002fe8   0e08     movlw   0x08             	MOVLW	0x08
002fea   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	282; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*s++ = t + '0';
002fec   0e30     movlw   0x30             	MOVLW	0x30
002fee   2616     addwf   0x16, 0x1, 0x0   	ADDWF	r0x16, F
002ff0   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
002ff2   ffe5
002ff4   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002ff6   ffe9
002ff8   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
002ffa   fff3
002ffc   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
002ffe   ec35     call    0x00766a, 0x0    	CALL	__gptrput1
003000   f03b
003002   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
003004   e302     bnc     0x00300a         	BNC	_01046_DS_
003006   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
003008   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01046_DS_:
                                           ;	.line	283; /home/vbasel/.icaro/v4/firmware/core/stdio.c	int_part /= 10;
00300a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00300c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00300e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003010   0e0a     movlw   0x0a             	MOVLW	0x0a
003012   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003014   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
003016   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003018   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
00301a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00301c   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
00301e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003020   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
003022   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003024   ecfa     call    0x0059f4, 0x0    	CALL	__divulong
003026   f02c
003028   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
00302a   cff3     movff   0xff3, 0x00b     	MOVFF	PRODL, r0x0b
00302c   f00b
00302e   cff4     movff   0xff4, 0x00c     	MOVFF	PRODH, r0x0c
003030   f00c
003032   cfe9     movff   0xfe9, 0x00d     	MOVFF	FSR0L, r0x0d
003034   f00d
003036   0e08     movlw   0x08             	MOVLW	0x08
003038   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/core/stdio.c	m++;					// string's length counter
00303a   2a06     incf    0x06, 0x1, 0x0   	INCF	r0x06, F
                                           ;	.line	285; /home/vbasel/.icaro/v4/firmware/core/stdio.c	length--;
00303c   0615     decf    0x15, 0x1, 0x0   	DECF	r0x15, F
00303e   d7be     bra     0x002fbc         	BRA	_00950_DS_
                                           _00988_DS_:
                                           ;	.line	288; /home/vbasel/.icaro/v4/firmware/core/stdio.c	while (m--)
003040   c015     movff   0x015, 0x019     	MOVFF	r0x15, r0x19
003042   f019
003044   c012     movff   0x012, 0x00a     	MOVFF	r0x12, r0x0a
003046   f00a
003048   c013     movff   0x013, 0x00b     	MOVFF	r0x13, r0x0b
00304a   f00b
00304c   c014     movff   0x014, 0x00c     	MOVFF	r0x14, r0x0c
00304e   f00c
                                           _00953_DS_:
003050   c006     movff   0x006, 0x00d     	MOVFF	r0x06, r0x0d
003052   f00d
003054   0606     decf    0x06, 0x1, 0x0   	DECF	r0x06, F
003056   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
003058   e01a     bz      0x00308e         	BZ	_00989_DS_
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = *--s;
00305a   0eff     movlw   0xff             	MOVLW	0xff
00305c   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
00305e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003060   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
003062   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
003064   ffe9
003066   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
003068   fff3
00306a   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00306c   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
00306e   f03a
003070   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
003072   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
003074   ffe5
003076   c00a     movff   0x00a, 0xfe9     	MOVFF	r0x0a, FSR0L
003078   ffe9
00307a   c00b     movff   0x00b, 0xff3     	MOVFF	r0x0b, PRODL
00307c   fff3
00307e   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
003080   ec35     call    0x00766a, 0x0    	CALL	__gptrput1
003082   f03b
003084   2a0a     incf    0x0a, 0x1, 0x0   	INCF	r0x0a, F
003086   e3e4     bnc     0x003050         	BNC	_00953_DS_
003088   4a0b     infsnz  0x0b, 0x1, 0x0   	INFSNZ	r0x0b, F
00308a   2a0c     incf    0x0c, 0x1, 0x0   	INCF	r0x0c, F
                                           _01047_DS_:
00308c   d7e1     bra     0x003050         	BRA	_00953_DS_
                                           _00989_DS_:
00308e   c00a     movff   0x00a, 0x012     	MOVFF	r0x0a, r0x12
003090   f012
003092   c00b     movff   0x00b, 0x013     	MOVFF	r0x0b, r0x13
003094   f013
003096   c00c     movff   0x00c, 0x014     	MOVFF	r0x0c, r0x14
003098   f014
                                           _00958_DS_:
                                           ;	.line	303; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (precision > 6)
00309a   0e07     movlw   0x07             	MOVLW	0x07
00309c   5c09     subwf   0x09, 0x0, 0x0   	SUBWF	r0x09, W
00309e   e302     bnc     0x0030a4         	BNC	_00960_DS_
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision = 6;
0030a0   0e06     movlw   0x06             	MOVLW	0x06
0030a2   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           _00960_DS_:
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (precision > length)
0030a4   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
                                           ; #	SUBWF	r0x19, W
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00962_DS_
                                           ; #	MOVFF	r0x19, r0x09
                                           ; #	MOVLW	0x01
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision = length;
0030a6   5c19     subwf   0x19, 0x0, 0x0   	SUBWF	r0x19, W
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (precision >= 1)
0030a8   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
0030aa   c019     movff   0x019, 0x009     	MOVFF	r0x19, r0x09
0030ac   f009
0030ae   0e01     movlw   0x01             	MOVLW	0x01
0030b0   5c09     subwf   0x09, 0x0, 0x0   	SUBWF	r0x09, W
0030b2   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
0030b4   d057     bra     0x003164         	BRA	_00965_DS_
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = '.';
0030b6   0e2e     movlw   0x2e             	MOVLW	0x2e
0030b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0030ba   c012     movff   0x012, 0xfe9     	MOVFF	r0x12, FSR0L
0030bc   ffe9
0030be   c013     movff   0x013, 0xff3     	MOVFF	r0x13, PRODL
0030c0   fff3
0030c2   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
0030c4   ec35     call    0x00766a, 0x0    	CALL	__gptrput1
0030c6   f03b
0030c8   2a12     incf    0x12, 0x1, 0x0   	INCF	r0x12, F
0030ca   e302     bnc     0x0030d0         	BNC	_01051_DS_
0030cc   4a13     infsnz  0x13, 0x1, 0x0   	INFSNZ	r0x13, F
0030ce   2a14     incf    0x14, 0x1, 0x0   	INCF	r0x14, F
                                           _01051_DS_:
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (m = 0; m < precision; m++)
0030d0   c012     movff   0x012, 0x003     	MOVFF	r0x12, r0x03
0030d2   f003
0030d4   c013     movff   0x013, 0x004     	MOVFF	r0x13, r0x04
0030d6   f004
0030d8   c014     movff   0x014, 0x005     	MOVFF	r0x14, r0x05
0030da   f005
0030dc   6a06     clrf    0x06, 0x0        	CLRF	r0x06
                                           _00967_DS_:
0030de   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
0030e0   5c06     subwf   0x06, 0x0, 0x0   	SUBWF	r0x06, W
0030e2   e23a     bc      0x003158         	BC	_00990_DS_
                                           ;	.line	320; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part = (frac_part << 3) + (frac_part << 1); 
0030e4   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
0030e6   240e     addwf   0x0e, 0x0, 0x0   	ADDWF	r0x0e, W
0030e8   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
0030ea   340f     rlcf    0x0f, 0x0, 0x0   	RLCF	r0x0f, W
0030ec   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
0030ee   3410     rlcf    0x10, 0x0, 0x0   	RLCF	r0x10, W
0030f0   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
0030f2   3411     rlcf    0x11, 0x0, 0x0   	RLCF	r0x11, W
0030f4   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
0030f6   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
0030f8   260a     addwf   0x0a, 0x1, 0x0   	ADDWF	r0x0a, F
0030fa   360b     rlcf    0x0b, 0x1, 0x0   	RLCF	r0x0b, F
0030fc   360c     rlcf    0x0c, 0x1, 0x0   	RLCF	r0x0c, F
0030fe   360d     rlcf    0x0d, 0x1, 0x0   	RLCF	r0x0d, F
003100   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
003102   260a     addwf   0x0a, 0x1, 0x0   	ADDWF	r0x0a, F
003104   360b     rlcf    0x0b, 0x1, 0x0   	RLCF	r0x0b, F
003106   360c     rlcf    0x0c, 0x1, 0x0   	RLCF	r0x0c, F
003108   360d     rlcf    0x0d, 0x1, 0x0   	RLCF	r0x0d, F
00310a   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
00310c   240e     addwf   0x0e, 0x0, 0x0   	ADDWF	r0x0e, W
00310e   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
003110   340f     rlcf    0x0f, 0x0, 0x0   	RLCF	r0x0f, W
003112   6e16     movwf   0x16, 0x0        	MOVWF	r0x16
003114   3410     rlcf    0x10, 0x0, 0x0   	RLCF	r0x10, W
003116   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
003118   3411     rlcf    0x11, 0x0, 0x0   	RLCF	r0x11, W
00311a   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
00311c   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
00311e   240a     addwf   0x0a, 0x0, 0x0   	ADDWF	r0x0a, W
003120   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
003122   5016     movf    0x16, 0x0, 0x0   	MOVF	r0x16, W
003124   200b     addwfc  0x0b, 0x0, 0x0   	ADDWFC	r0x0b, W
003126   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
003128   5017     movf    0x17, 0x0, 0x0   	MOVF	r0x17, W
00312a   200c     addwfc  0x0c, 0x0, 0x0   	ADDWFC	r0x0c, W
00312c   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
00312e   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
003130   200d     addwfc  0x0d, 0x0, 0x0   	ADDWFC	r0x0d, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = (frac_part >> 24) + '0';
003132   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
003134   0e30     movlw   0x30             	MOVLW	0x30
003136   260a     addwf   0x0a, 0x1, 0x0   	ADDWF	r0x0a, F
003138   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
00313a   ffe5
00313c   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
00313e   ffe9
003140   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
003142   fff3
003144   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003146   ec35     call    0x00766a, 0x0    	CALL	__gptrput1
003148   f03b
00314a   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
00314c   e302     bnc     0x003152         	BNC	_01053_DS_
00314e   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
003150   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01053_DS_:
                                           ;	.line	324; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part &= 0xFFFFFF;
003152   6a11     clrf    0x11, 0x0        	CLRF	r0x11
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (m = 0; m < precision; m++)
003154   2a06     incf    0x06, 0x1, 0x0   	INCF	r0x06, F
003156   d7c3     bra     0x0030de         	BRA	_00967_DS_
                                           _00990_DS_:
003158   c003     movff   0x003, 0x012     	MOVFF	r0x03, r0x12
00315a   f012
00315c   c004     movff   0x004, 0x013     	MOVFF	r0x04, r0x13
00315e   f013
003160   c005     movff   0x005, 0x014     	MOVFF	r0x05, r0x14
003162   f014
                                           _00965_DS_:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = '\0';
003164   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003166   c012     movff   0x012, 0xfe9     	MOVFF	r0x12, FSR0L
003168   ffe9
00316a   c013     movff   0x013, 0xff3     	MOVFF	r0x13, PRODL
00316c   fff3
00316e   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
003170   ec35     call    0x00766a, 0x0    	CALL	__gptrput1
003172   f03b
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return count + pprints(out, buffer, width, pad);
003174   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
003176   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003178   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
00317a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00317c   0e80     movlw   0x80             	MOVLW	0x80
00317e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003180   0e05     movlw   0x05             	MOVLW	HIGH(_pprintfl_buffer_1_192)
003182   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003184   0ef2     movlw   0xf2             	MOVLW	LOW(_pprintfl_buffer_1_192)
003186   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003188   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00318a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00318c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00318e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003190   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003192   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003194   ecf6     call    0x004fec, 0x0    	CALL	_pprints
003196   f027
003198   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00319a   0e08     movlw   0x08             	MOVLW	0x08
00319c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00319e   5018     movf    0x18, 0x0, 0x0   	MOVF	r0x18, W
0031a0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0031a2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00969_DS_:
                                           ;	.line	332; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
0031a4   cfe4     movff   0xfe4, 0x01f     	MOVFF	PREINC1, r0x1f
0031a6   f01f
0031a8   cfe4     movff   0xfe4, 0x01e     	MOVFF	PREINC1, r0x1e
0031aa   f01e
0031ac   cfe4     movff   0xfe4, 0x01d     	MOVFF	PREINC1, r0x1d
0031ae   f01d
0031b0   cfe4     movff   0xfe4, 0x01c     	MOVFF	PREINC1, r0x1c
0031b2   f01c
0031b4   cfe4     movff   0xfe4, 0x01b     	MOVFF	PREINC1, r0x1b
0031b6   f01b
0031b8   cfe4     movff   0xfe4, 0x01a     	MOVFF	PREINC1, r0x1a
0031ba   f01a
0031bc   cfe4     movff   0xfe4, 0x019     	MOVFF	PREINC1, r0x19
0031be   f019
0031c0   cfe4     movff   0xfe4, 0x018     	MOVFF	PREINC1, r0x18
0031c2   f018
0031c4   cfe4     movff   0xfe4, 0x017     	MOVFF	PREINC1, r0x17
0031c6   f017
0031c8   cfe4     movff   0xfe4, 0x016     	MOVFF	PREINC1, r0x16
0031ca   f016
0031cc   cfe4     movff   0xfe4, 0x015     	MOVFF	PREINC1, r0x15
0031ce   f015
0031d0   cfe4     movff   0xfe4, 0x014     	MOVFF	PREINC1, r0x14
0031d2   f014
0031d4   cfe4     movff   0xfe4, 0x013     	MOVFF	PREINC1, r0x13
0031d6   f013
0031d8   cfe4     movff   0xfe4, 0x012     	MOVFF	PREINC1, r0x12
0031da   f012
0031dc   cfe4     movff   0xfe4, 0x011     	MOVFF	PREINC1, r0x11
0031de   f011
0031e0   cfe4     movff   0xfe4, 0x010     	MOVFF	PREINC1, r0x10
0031e2   f010
0031e4   cfe4     movff   0xfe4, 0x00f     	MOVFF	PREINC1, r0x0f
0031e6   f00f
0031e8   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
0031ea   f00e
0031ec   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
0031ee   f00d
0031f0   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
0031f2   f00c
0031f4   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
0031f6   f00b
0031f8   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
0031fa   f00a
0031fc   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
0031fe   f009
003200   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
003202   f008
003204   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
003206   f007
003208   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00320a   f006
00320c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00320e   f005
003210   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003212   f004
003214   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003216   f003
003218   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00321a   f002
00321c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00321e   f001
003220   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003222   f000
003224   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003226   ffd9
003228   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__pprinti	code
                                           _pprinti:
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static u8 pprinti(u8 **out, u32 i, u8 islong, u8 base, u8 sign, u8 width, u8 pad, u8 separator, u8 letterbase)
00396c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00396e   ffe5
003970   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003972   ffd9
003974   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003976   ffe5
003978   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00397a   ffe5
00397c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00397e   ffe5
003980   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003982   ffe5
003984   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003986   ffe5
003988   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00398a   ffe5
00398c   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00398e   ffe5
003990   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
003992   ffe5
003994   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
003996   ffe5
003998   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
00399a   ffe5
00399c   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
00399e   ffe5
0039a0   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
0039a2   ffe5
0039a4   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
0039a6   ffe5
0039a8   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
0039aa   ffe5
0039ac   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
0039ae   ffe5
0039b0   c00f     movff   0x00f, 0xfe5     	MOVFF	r0x0f, POSTDEC1
0039b2   ffe5
0039b4   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
0039b6   ffe5
0039b8   c011     movff   0x011, 0xfe5     	MOVFF	r0x11, POSTDEC1
0039ba   ffe5
0039bc   c012     movff   0x012, 0xfe5     	MOVFF	r0x12, POSTDEC1
0039be   ffe5
0039c0   c013     movff   0x013, 0xfe5     	MOVFF	r0x13, POSTDEC1
0039c2   ffe5
0039c4   c014     movff   0x014, 0xfe5     	MOVFF	r0x14, POSTDEC1
0039c6   ffe5
0039c8   c015     movff   0x015, 0xfe5     	MOVFF	r0x15, POSTDEC1
0039ca   ffe5
0039cc   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
0039ce   ffe5
0039d0   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
0039d2   ffe5
0039d4   c018     movff   0x018, 0xfe5     	MOVFF	r0x18, POSTDEC1
0039d6   ffe5
0039d8   c019     movff   0x019, 0xfe5     	MOVFF	r0x19, POSTDEC1
0039da   ffe5
0039dc   c01a     movff   0x01a, 0xfe5     	MOVFF	r0x1a, POSTDEC1
0039de   ffe5
0039e0   c01b     movff   0x01b, 0xfe5     	MOVFF	r0x1b, POSTDEC1
0039e2   ffe5
0039e4   0e02     movlw   0x02             	MOVLW	0x02
0039e6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0039e8   f000
0039ea   0e03     movlw   0x03             	MOVLW	0x03
0039ec   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0039ee   f001
0039f0   0e04     movlw   0x04             	MOVLW	0x04
0039f2   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0039f4   f002
0039f6   0e05     movlw   0x05             	MOVLW	0x05
0039f8   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0039fa   f003
0039fc   0e06     movlw   0x06             	MOVLW	0x06
0039fe   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
003a00   f004
003a02   0e07     movlw   0x07             	MOVLW	0x07
003a04   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
003a06   f005
003a08   0e08     movlw   0x08             	MOVLW	0x08
003a0a   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
003a0c   f006
003a0e   0e09     movlw   0x09             	MOVLW	0x09
003a10   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
003a12   f007
003a14   0e0a     movlw   0x0a             	MOVLW	0x0a
003a16   cfdb     movff   0xfdb, 0x008     	MOVFF	PLUSW2, r0x08
003a18   f008
003a1a   0e0b     movlw   0x0b             	MOVLW	0x0b
003a1c   cfdb     movff   0xfdb, 0x009     	MOVFF	PLUSW2, r0x09
003a1e   f009
003a20   0e0c     movlw   0x0c             	MOVLW	0x0c
003a22   cfdb     movff   0xfdb, 0x00a     	MOVFF	PLUSW2, r0x0a
003a24   f00a
003a26   0e0d     movlw   0x0d             	MOVLW	0x0d
003a28   cfdb     movff   0xfdb, 0x00b     	MOVFF	PLUSW2, r0x0b
003a2a   f00b
003a2c   0e0f     movlw   0x0f             	MOVLW	0x0f
003a2e   cfdb     movff   0xfdb, 0x00c     	MOVFF	PLUSW2, r0x0c
003a30   f00c
                                           ;	.line	119; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 neg = 0, pc = 0;
003a32   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
003a34   6a0e     clrf    0x0e, 0x0        	CLRF	r0x0e
                                           ;	.line	120; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u32 t, uns32 = i;
003a36   c003     movff   0x003, 0x00f     	MOVFF	r0x03, r0x0f
003a38   f00f
003a3a   c004     movff   0x004, 0x010     	MOVFF	r0x04, r0x10
003a3c   f010
003a3e   c005     movff   0x005, 0x011     	MOVFF	r0x05, r0x11
003a40   f011
003a42   c006     movff   0x006, 0x012     	MOVFF	r0x06, r0x12
003a44   f012
                                           ;	.line	122; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (i == 0)
003a46   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003a48   1004     iorwf   0x04, 0x0, 0x0   	IORWF	r0x04, W
003a4a   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
003a4c   1006     iorwf   0x06, 0x0, 0x0   	IORWF	r0x06, W
003a4e   e11b     bnz     0x003a86         	BNZ	_00859_DS_
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[0] = '0';
003a50   0e30     movlw   0x30             	MOVLW	0x30
003a52   0105     movlb   0x5              	BANKSEL	_pprinti_buffer_1_182
003a54   6fe6     movwf   0xe6, 0x1        	MOVWF	_pprinti_buffer_1_182, B
                                           ; removed redundant BANKSEL
                                           ;	.line	125; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[1] = '\0';
003a56   6be7     clrf    0xe7, 0x1        	CLRF	(_pprinti_buffer_1_182 + 1), B
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprints(out, buffer, width, pad);
003a58   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
003a5a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a5c   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
003a5e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a60   0e80     movlw   0x80             	MOVLW	0x80
003a62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a64   0e05     movlw   0x05             	MOVLW	HIGH(_pprinti_buffer_1_182)
003a66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a68   0ee6     movlw   0xe6             	MOVLW	LOW(_pprinti_buffer_1_182)
003a6a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a6c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003a6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a70   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003a72   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a74   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003a76   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a78   ecf6     call    0x004fec, 0x0    	CALL	_pprints
003a7a   f027
003a7c   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
003a7e   0e08     movlw   0x08             	MOVLW	0x08
003a80   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003a82   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
003a84   d0ee     bra     0x003c62         	BRA	_00880_DS_
                                           _00859_DS_:
                                           ;	.line	130; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if  ( (sign) && (base == 10) )          // decimal signed number ?
003a86   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
003a88   e036     bz      0x003af6         	BZ	_00867_DS_
003a8a   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
003a8c   0a0a     xorlw   0x0a             	XORLW	0x0a
003a8e   e133     bnz     0x003af6         	BNZ	_00867_DS_
                                           ;	.line	132; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if ( (islong) && ((s32)i < 0) )     // negative 32-bit ?
003a90   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
003a92   e01c     bz      0x003acc         	BZ	_00861_DS_
003a94   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003a96   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
003a98   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003a9a   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
003a9c   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003a9e   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
003aa0   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
003aa2   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
003aa4   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003aa6   ae15     btfss   0x15, 0x7, 0x0   	BTFSS	r0x15, 7
003aa8   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003aaa   e310     bnc     0x003acc         	BNC	_00861_DS_
                                           ;	.line	134; /home/vbasel/.icaro/v4/firmware/core/stdio.c	neg = 1;
003aac   0e01     movlw   0x01             	MOVLW	0x01
003aae   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
                                           ;	.line	135; /home/vbasel/.icaro/v4/firmware/core/stdio.c	uns32 = - (s32)i;
003ab0   1c15     comf    0x15, 0x0, 0x0   	COMF	r0x15, W
003ab2   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
003ab4   1c14     comf    0x14, 0x0, 0x0   	COMF	r0x14, W
003ab6   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
003ab8   1c13     comf    0x13, 0x0, 0x0   	COMF	r0x13, W
003aba   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
003abc   1c09     comf    0x09, 0x0, 0x0   	COMF	r0x09, W
003abe   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
003ac0   2a0f     incf    0x0f, 0x1, 0x0   	INCF	r0x0f, F
003ac2   e104     bnz     0x003acc         	BNZ	_00861_DS_
003ac4   2a10     incf    0x10, 0x1, 0x0   	INCF	r0x10, F
003ac6   e102     bnz     0x003acc         	BNZ	_00861_DS_
003ac8   4a11     infsnz  0x11, 0x1, 0x0   	INFSNZ	r0x11, F
003aca   2a12     incf    0x12, 0x1, 0x0   	INCF	r0x12, F
                                           _00861_DS_:
                                           ;	.line	137; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if ( (!islong) && ((s16)i < 0) )    // negative 16-bit ?
003acc   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
003ace   e113     bnz     0x003af6         	BNZ	_00867_DS_
003ad0   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003ad2   ae04     btfss   0x04, 0x7, 0x0   	BTFSS	r0x04, 7
003ad4   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003ad6   e30f     bnc     0x003af6         	BNC	_00867_DS_
                                           ;	.line	139; /home/vbasel/.icaro/v4/firmware/core/stdio.c	neg = 1;
003ad8   0e01     movlw   0x01             	MOVLW	0x01
003ada   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
                                           ;	.line	140; /home/vbasel/.icaro/v4/firmware/core/stdio.c	uns32 = - (s16)i;
003adc   1e04     comf    0x04, 0x1, 0x0   	COMF	r0x04, F
003ade   6c03     negf    0x03, 0x0        	NEGF	r0x03
003ae0   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
003ae2   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
003ae4   c003     movff   0x003, 0x00f     	MOVFF	r0x03, r0x0f
003ae6   f00f
003ae8   c004     movff   0x004, 0x010     	MOVFF	r0x04, r0x10
003aea   f010
003aec   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003aee   be04     btfsc   0x04, 0x7, 0x0   	BTFSC	r0x04, 7
003af0   0eff     movlw   0xff             	MOVLW	0xff
003af2   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
003af4   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
                                           _00867_DS_:
                                           ;	.line	145; /home/vbasel/.icaro/v4/firmware/core/stdio.c	string = buffer + PRINTF_BUF_LEN - 1;
003af6   0e05     movlw   0x05             	MOVLW	HIGH(_pprinti_buffer_1_182 + 11)
003af8   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003afa   0ef1     movlw   0xf1             	MOVLW	LOW(_pprinti_buffer_1_182 + 11)
003afc   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003afe   0e80     movlw   0x80             	MOVLW	0x80
003b00   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
                                           ;	.line	146; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string = '\0';
003b02   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003b04   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
003b06   ffe9
003b08   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
003b0a   fff3
003b0c   ec35     call    0x00766a, 0x0    	CALL	__gptrput1
003b0e   f03b
                                           ;	.line	148; /home/vbasel/.icaro/v4/firmware/core/stdio.c	while (uns32)
003b10   c003     movff   0x003, 0x006     	MOVFF	r0x03, r0x06
003b12   f006
003b14   c004     movff   0x004, 0x007     	MOVFF	r0x04, r0x07
003b16   f007
003b18   c005     movff   0x005, 0x009     	MOVFF	r0x05, r0x09
003b1a   f009
                                           _00871_DS_:
003b1c   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
003b1e   1010     iorwf   0x10, 0x0, 0x0   	IORWF	r0x10, W
003b20   1011     iorwf   0x11, 0x0, 0x0   	IORWF	r0x11, W
003b22   1012     iorwf   0x12, 0x0, 0x0   	IORWF	r0x12, W
003b24   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
003b26   d05a     bra     0x003bdc         	BRA	_00895_DS_
                                           ;	.line	150; /home/vbasel/.icaro/v4/firmware/core/stdio.c	t = uns32 % base;
003b28   c008     movff   0x008, 0x013     	MOVFF	r0x08, r0x13
003b2a   f013
003b2c   6a14     clrf    0x14, 0x0        	CLRF	r0x14
003b2e   6a15     clrf    0x15, 0x0        	CLRF	r0x15
003b30   6a16     clrf    0x16, 0x0        	CLRF	r0x16
003b32   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003b34   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003b36   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003b38   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
003b3a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003b3c   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
003b3e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003b40   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
003b42   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003b44   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
003b46   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003b48   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
003b4a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003b4c   ec5d     call    0x0058ba, 0x0    	CALL	__modulong
003b4e   f02c
003b50   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
003b52   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
003b54   f018
003b56   cff4     movff   0xff4, 0x019     	MOVFF	PRODH, r0x19
003b58   f019
003b5a   cfe9     movff   0xfe9, 0x01a     	MOVFF	FSR0L, r0x1a
003b5c   f01a
003b5e   0e08     movlw   0x08             	MOVLW	0x08
003b60   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	151; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if ( t >= 10 )
003b62   0e00     movlw   0x00             	MOVLW	0x00
003b64   5c1a     subwf   0x1a, 0x0, 0x0   	SUBWF	r0x1a, W
003b66   e108     bnz     0x003b78         	BNZ	_00926_DS_
003b68   0e00     movlw   0x00             	MOVLW	0x00
003b6a   5c19     subwf   0x19, 0x0, 0x0   	SUBWF	r0x19, W
003b6c   e105     bnz     0x003b78         	BNZ	_00926_DS_
003b6e   0e00     movlw   0x00             	MOVLW	0x00
003b70   5c18     subwf   0x18, 0x0, 0x0   	SUBWF	r0x18, W
003b72   e102     bnz     0x003b78         	BNZ	_00926_DS_
003b74   0e0a     movlw   0x0a             	MOVLW	0x0a
003b76   5c17     subwf   0x17, 0x0, 0x0   	SUBWF	r0x17, W
                                           _00926_DS_:
003b78   e306     bnc     0x003b86         	BNC	_00870_DS_
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/core/stdio.c	t += letterbase - '0' - 10;
003b7a   c00c     movff   0x00c, 0x01b     	MOVFF	r0x0c, r0x1b
003b7c   f01b
003b7e   0ec6     movlw   0xc6             	MOVLW	0xc6
003b80   261b     addwf   0x1b, 0x1, 0x0   	ADDWF	r0x1b, F
003b82   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
003b84   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
                                           _00870_DS_:
                                           ;	.line	153; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*--string = t + '0';
003b86   0eff     movlw   0xff             	MOVLW	0xff
003b88   2606     addwf   0x06, 0x1, 0x0   	ADDWF	r0x06, F
003b8a   2207     addwfc  0x07, 0x1, 0x0   	ADDWFC	r0x07, F
003b8c   2209     addwfc  0x09, 0x1, 0x0   	ADDWFC	r0x09, F
003b8e   0e30     movlw   0x30             	MOVLW	0x30
003b90   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
003b92   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
003b94   ffe5
003b96   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
003b98   ffe9
003b9a   c007     movff   0x007, 0xff3     	MOVFF	r0x07, PRODL
003b9c   fff3
003b9e   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
003ba0   ec35     call    0x00766a, 0x0    	CALL	__gptrput1
003ba2   f03b
                                           ;	.line	154; /home/vbasel/.icaro/v4/firmware/core/stdio.c	uns32 /= base;
003ba4   5016     movf    0x16, 0x0, 0x0   	MOVF	r0x16, W
003ba6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003ba8   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
003baa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003bac   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
003bae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003bb0   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
003bb2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003bb4   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
003bb6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003bb8   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
003bba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003bbc   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
003bbe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003bc0   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
003bc2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003bc4   ecfa     call    0x0059f4, 0x0    	CALL	__divulong
003bc6   f02c
003bc8   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
003bca   cff3     movff   0xff3, 0x010     	MOVFF	PRODL, r0x10
003bcc   f010
003bce   cff4     movff   0xff4, 0x011     	MOVFF	PRODH, r0x11
003bd0   f011
003bd2   cfe9     movff   0xfe9, 0x012     	MOVFF	FSR0L, r0x12
003bd4   f012
003bd6   0e08     movlw   0x08             	MOVLW	0x08
003bd8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003bda   d7a0     bra     0x003b1c         	BRA	_00871_DS_
                                           _00895_DS_:
003bdc   c006     movff   0x006, 0x003     	MOVFF	r0x06, r0x03
003bde   f003
003be0   c007     movff   0x007, 0x004     	MOVFF	r0x07, r0x04
003be2   f004
003be4   c009     movff   0x009, 0x005     	MOVFF	r0x09, r0x05
003be6   f005
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (neg)
003be8   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
003bea   e023     bz      0x003c32         	BZ	_00879_DS_
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (width && (pad & PAD_ZERO))
003bec   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
003bee   e014     bz      0x003c18         	BZ	_00875_DS_
003bf0   c00b     movff   0x00b, 0x006     	MOVFF	r0x0b, r0x06
003bf2   f006
003bf4   a206     btfss   0x06, 0x1, 0x0   	BTFSS	r0x06, 1
003bf6   d010     bra     0x003c18         	BRA	_00875_DS_
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, '-');
003bf8   0e2d     movlw   0x2d             	MOVLW	0x2d
003bfa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003bfc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003bfe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c00   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003c02   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c04   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c06   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c08   ec99     call    0x005d32, 0x0    	CALL	_pprintc
003c0a   f02e
003c0c   0e04     movlw   0x04             	MOVLW	0x04
003c0e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	162; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
003c10   0e01     movlw   0x01             	MOVLW	0x01
003c12   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
                                           ;	.line	163; /home/vbasel/.icaro/v4/firmware/core/stdio.c	--width;
003c14   060a     decf    0x0a, 0x1, 0x0   	DECF	r0x0a, F
003c16   d00d     bra     0x003c32         	BRA	_00879_DS_
                                           _00875_DS_:
                                           ;	.line	167; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*--string = '-';
003c18   0eff     movlw   0xff             	MOVLW	0xff
003c1a   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
003c1c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003c1e   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
003c20   0e2d     movlw   0x2d             	MOVLW	0x2d
003c22   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c24   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
003c26   ffe9
003c28   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
003c2a   fff3
003c2c   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003c2e   ec35     call    0x00766a, 0x0    	CALL	__gptrput1
003c30   f03b
                                           _00879_DS_:
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pc + pprints(out, string, width, pad);
003c32   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
003c34   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c36   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
003c38   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c3a   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003c3c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c3e   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003c40   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c42   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003c44   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c46   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003c48   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c4a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003c4c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c4e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c50   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c52   ecf6     call    0x004fec, 0x0    	CALL	_pprints
003c54   f027
003c56   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003c58   0e08     movlw   0x08             	MOVLW	0x08
003c5a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003c5c   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
003c5e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003c60   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00880_DS_:
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
003c62   cfe4     movff   0xfe4, 0x01b     	MOVFF	PREINC1, r0x1b
003c64   f01b
003c66   cfe4     movff   0xfe4, 0x01a     	MOVFF	PREINC1, r0x1a
003c68   f01a
003c6a   cfe4     movff   0xfe4, 0x019     	MOVFF	PREINC1, r0x19
003c6c   f019
003c6e   cfe4     movff   0xfe4, 0x018     	MOVFF	PREINC1, r0x18
003c70   f018
003c72   cfe4     movff   0xfe4, 0x017     	MOVFF	PREINC1, r0x17
003c74   f017
003c76   cfe4     movff   0xfe4, 0x016     	MOVFF	PREINC1, r0x16
003c78   f016
003c7a   cfe4     movff   0xfe4, 0x015     	MOVFF	PREINC1, r0x15
003c7c   f015
003c7e   cfe4     movff   0xfe4, 0x014     	MOVFF	PREINC1, r0x14
003c80   f014
003c82   cfe4     movff   0xfe4, 0x013     	MOVFF	PREINC1, r0x13
003c84   f013
003c86   cfe4     movff   0xfe4, 0x012     	MOVFF	PREINC1, r0x12
003c88   f012
003c8a   cfe4     movff   0xfe4, 0x011     	MOVFF	PREINC1, r0x11
003c8c   f011
003c8e   cfe4     movff   0xfe4, 0x010     	MOVFF	PREINC1, r0x10
003c90   f010
003c92   cfe4     movff   0xfe4, 0x00f     	MOVFF	PREINC1, r0x0f
003c94   f00f
003c96   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
003c98   f00e
003c9a   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
003c9c   f00d
003c9e   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
003ca0   f00c
003ca2   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
003ca4   f00b
003ca6   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
003ca8   f00a
003caa   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
003cac   f009
003cae   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
003cb0   f008
003cb2   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
003cb4   f007
003cb6   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003cb8   f006
003cba   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003cbc   f005
003cbe   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003cc0   f004
003cc2   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003cc4   f003
003cc6   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003cc8   f002
003cca   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003ccc   f001
003cce   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003cd0   f000
003cd2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003cd4   ffd9
003cd6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__pprints	code
                                           _pprints:
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static int pprints(u8 **out, const u8 *string, u8 width, u8 pad)
004fec   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004fee   ffe5
004ff0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ff2   ffd9
004ff4   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004ff6   ffe5
004ff8   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004ffa   ffe5
004ffc   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004ffe   ffe5
005000   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005002   ffe5
005004   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
005006   ffe5
005008   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00500a   ffe5
00500c   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00500e   ffe5
005010   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
005012   ffe5
005014   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
005016   ffe5
005018   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
00501a   ffe5
00501c   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
00501e   ffe5
005020   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
005022   ffe5
005024   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
005026   ffe5
005028   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
00502a   ffe5
00502c   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
00502e   ffe5
005030   0e02     movlw   0x02             	MOVLW	0x02
005032   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005034   f000
005036   0e03     movlw   0x03             	MOVLW	0x03
005038   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00503a   f001
00503c   0e04     movlw   0x04             	MOVLW	0x04
00503e   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005040   f002
005042   0e05     movlw   0x05             	MOVLW	0x05
005044   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
005046   f003
005048   0e06     movlw   0x06             	MOVLW	0x06
00504a   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
00504c   f004
00504e   0e07     movlw   0x07             	MOVLW	0x07
005050   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
005052   f005
005054   0e08     movlw   0x08             	MOVLW	0x08
005056   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
005058   f006
00505a   0e09     movlw   0x09             	MOVLW	0x09
00505c   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
00505e   f007
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/core/stdio.c	register u8 pc = 0;
005060   6a08     clrf    0x08, 0x0        	CLRF	r0x08
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 padchar = ' ';
005062   0e20     movlw   0x20             	MOVLW	0x20
005064   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (width > 0)
005066   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
005068   e024     bz      0x0050b2         	BZ	_00786_DS_
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (ptr = string; *ptr; ++ptr)
00506a   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
00506c   c003     movff   0x003, 0x00b     	MOVFF	r0x03, r0x0b
00506e   f00b
005070   c004     movff   0x004, 0x00c     	MOVFF	r0x04, r0x0c
005072   f00c
005074   c005     movff   0x005, 0x00d     	MOVFF	r0x05, r0x0d
005076   f00d
                                           _00793_DS_:
005078   c00b     movff   0x00b, 0xfe9     	MOVFF	r0x0b, FSR0L
00507a   ffe9
00507c   c00c     movff   0x00c, 0xff3     	MOVFF	r0x0c, PRODL
00507e   fff3
005080   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
005082   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
005084   f03a
005086   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
005088   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
00508a   e006     bz      0x005098         	BZ	_00779_DS_
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++len;
00508c   2a0a     incf    0x0a, 0x1, 0x0   	INCF	r0x0a, F
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (ptr = string; *ptr; ++ptr)
00508e   2a0b     incf    0x0b, 0x1, 0x0   	INCF	r0x0b, F
005090   e3f3     bnc     0x005078         	BNC	_00793_DS_
005092   4a0c     infsnz  0x0c, 0x1, 0x0   	INFSNZ	r0x0c, F
005094   2a0d     incf    0x0d, 0x1, 0x0   	INCF	r0x0d, F
                                           _00849_DS_:
005096   d7f0     bra     0x005078         	BRA	_00793_DS_
                                           _00779_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (len >= width)
005098   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
00509a   5c0a     subwf   0x0a, 0x0, 0x0   	SUBWF	r0x0a, W
00509c   e302     bnc     0x0050a2         	BNC	_00781_DS_
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width = 0;
00509e   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0050a0   d002     bra     0x0050a6         	BRA	_00782_DS_
                                           _00781_DS_:
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width -= len;
0050a2   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
0050a4   5e06     subwf   0x06, 0x1, 0x0   	SUBWF	r0x06, F
                                           _00782_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (pad & PAD_ZERO) padchar = '0';
0050a6   c007     movff   0x007, 0x00a     	MOVFF	r0x07, r0x0a
0050a8   f00a
0050aa   a20a     btfss   0x0a, 0x1, 0x0   	BTFSS	r0x0a, 1
0050ac   d002     bra     0x0050b2         	BRA	_00786_DS_
0050ae   0e30     movlw   0x30             	MOVLW	0x30
0050b0   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           _00786_DS_:
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (!(pad & PAD_RIGHT))
0050b2   b007     btfsc   0x07, 0x0, 0x0   	BTFSC	r0x07, 0
0050b4   d019     bra     0x0050e8         	BRA	_00818_DS_
0050b6   6a07     clrf    0x07, 0x0        	CLRF	r0x07
0050b8   c006     movff   0x006, 0x00a     	MOVFF	r0x06, r0x0a
0050ba   f00a
                                           _00796_DS_:
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; width > 0; --width)
0050bc   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
0050be   e105     bnz     0x0050ca         	BNZ	_00795_DS_
0050c0   c007     movff   0x007, 0x008     	MOVFF	r0x07, r0x08
0050c2   f008
0050c4   c00a     movff   0x00a, 0x006     	MOVFF	r0x0a, r0x06
0050c6   f006
0050c8   d00f     bra     0x0050e8         	BRA	_00818_DS_
                                           _00795_DS_:
                                           ;	.line	84; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, padchar);
0050ca   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
0050cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0050ce   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0050d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0050d2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0050d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0050d6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0050d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0050da   ec99     call    0x005d32, 0x0    	CALL	_pprintc
0050dc   f02e
0050de   0e04     movlw   0x04             	MOVLW	0x04
0050e0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
0050e2   2a07     incf    0x07, 0x1, 0x0   	INCF	r0x07, F
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; width > 0; --width)
0050e4   060a     decf    0x0a, 0x1, 0x0   	DECF	r0x0a, F
0050e6   d7ea     bra     0x0050bc         	BRA	_00796_DS_
                                           _00818_DS_:
0050e8   c008     movff   0x008, 0x007     	MOVFF	r0x08, r0x07
0050ea   f007
                                           _00799_DS_:
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *string ; ++string)
0050ec   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0050ee   ffe9
0050f0   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
0050f2   fff3
0050f4   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0050f6   ecdd     call    0x0075ba, 0x0    	CALL	__gptrget1
0050f8   f03a
0050fa   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
0050fc   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
0050fe   e012     bz      0x005124         	BZ	_00820_DS_
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, *string);
005100   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
005102   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005104   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005106   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005108   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00510a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00510c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00510e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005110   ec99     call    0x005d32, 0x0    	CALL	_pprintc
005112   f02e
005114   0e04     movlw   0x04             	MOVLW	0x04
005116   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
005118   2a07     incf    0x07, 0x1, 0x0   	INCF	r0x07, F
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *string ; ++string)
00511a   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
00511c   e3e7     bnc     0x0050ec         	BNC	_00799_DS_
00511e   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
005120   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _00853_DS_:
005122   d7e4     bra     0x0050ec         	BRA	_00799_DS_
                                           _00820_DS_:
005124   c007     movff   0x007, 0x003     	MOVFF	r0x07, r0x03
005126   f003
005128   c006     movff   0x006, 0x004     	MOVFF	r0x06, r0x04
00512a   f004
                                           _00802_DS_:
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; width > 0; --width)
00512c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00512e   e00f     bz      0x00514e         	BZ	_00791_DS_
                                           ;	.line	97; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, padchar);
005130   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
005132   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005134   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005136   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005138   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00513a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00513c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00513e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005140   ec99     call    0x005d32, 0x0    	CALL	_pprintc
005142   f02e
005144   0e04     movlw   0x04             	MOVLW	0x04
005146   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	98; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
005148   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; width > 0; --width)
00514a   0604     decf    0x04, 0x1, 0x0   	DECF	r0x04, F
00514c   d7ef     bra     0x00512c         	BRA	_00802_DS_
                                           ; =DF= MOVFF: replaced by CRLF/SETF
                                           _00791_DS_:
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pc;
00514e   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005150   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
005152   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
005154   f00e
005156   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
005158   f00d
00515a   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
00515c   f00c
00515e   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
005160   f00b
005162   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
005164   f00a
005166   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
005168   f009
00516a   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00516c   f008
00516e   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
005170   f007
005172   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
005174   f006
005176   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
005178   f005
00517a   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00517c   f004
00517e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005180   f003
005182   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005184   f002
005186   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005188   f001
00518a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00518c   f000
00518e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005190   ffd9
005192   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__pprintc	code
                                           _pprintc:
                                           ;	.line	42; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static void pprintc(u8 **str, u8 c)
005d32   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005d34   ffe5
005d36   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005d38   ffd9
005d3a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005d3c   ffe5
005d3e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005d40   ffe5
005d42   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005d44   ffe5
005d46   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005d48   ffe5
005d4a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
005d4c   ffe5
005d4e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
005d50   ffe5
005d52   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
005d54   ffe5
005d56   0e02     movlw   0x02             	MOVLW	0x02
005d58   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005d5a   f000
005d5c   0e03     movlw   0x03             	MOVLW	0x03
005d5e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005d60   f001
005d62   0e04     movlw   0x04             	MOVLW	0x04
005d64   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005d66   f002
005d68   0e05     movlw   0x05             	MOVLW	0x05
005d6a   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
005d6c   f003
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (str)
005d6e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005d70   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
005d72   1002     iorwf   0x02, 0x0, 0x0   	IORWF	r0x02, W
005d74   e033     bz      0x005ddc         	BZ	_00766_DS_
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/core/stdio.c	**str = c;
005d76   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005d78   ffe9
005d7a   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
005d7c   fff3
005d7e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005d80   ecfc     call    0x0073f8, 0x0    	CALL	__gptrget3
005d82   f039
005d84   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
005d86   cff3     movff   0xff3, 0x005     	MOVFF	PRODL, r0x05
005d88   f005
005d8a   cff4     movff   0xff4, 0x006     	MOVFF	PRODH, r0x06
005d8c   f006
005d8e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005d90   ffe5
005d92   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
005d94   ffe9
005d96   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
005d98   fff3
005d9a   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
005d9c   ec35     call    0x00766a, 0x0    	CALL	__gptrput1
005d9e   f03b
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++(*str);
005da0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005da2   ffe9
005da4   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
005da6   fff3
005da8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005daa   ecfc     call    0x0073f8, 0x0    	CALL	__gptrget3
005dac   f039
005dae   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
005db0   cff3     movff   0xff3, 0x005     	MOVFF	PRODL, r0x05
005db2   f005
005db4   cff4     movff   0xff4, 0x006     	MOVFF	PRODH, r0x06
005db6   f006
005db8   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
005dba   e302     bnc     0x005dc0         	BNC	_00773_DS_
005dbc   4a05     infsnz  0x05, 0x1, 0x0   	INFSNZ	r0x05, F
005dbe   2a06     incf    0x06, 0x1, 0x0   	INCF	r0x06, F
                                           _00773_DS_:
005dc0   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
005dc2   ffe5
005dc4   c005     movff   0x005, 0xff4     	MOVFF	r0x05, PRODH
005dc6   fff4
005dc8   c006     movff   0x006, 0xff6     	MOVFF	r0x06, TBLPTRL
005dca   fff6
005dcc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005dce   ffe9
005dd0   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
005dd2   fff3
005dd4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005dd6   ec0e     call    0x00761c, 0x0    	CALL	__gptrput3
005dd8   f03b
005dda   d016     bra     0x005e08         	BRA	_00768_DS_
                                           _00766_DS_:
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pputchar(c);
005ddc   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
005dde   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005de0   cff2     movff   0xff2, 0xfe5     	MOVFF	INTCON, POSTDEC1
005de2   ffe5
005de4   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	INTCON, 7
005de6   0005     push                     	PUSH	
005de8   0e06     movlw   0x06             	MOVLW	LOW(_00774_DS_)
005dea   6efd     movwf   0xfd, 0x0        	MOVWF	TOSL
005dec   0e5e     movlw   0x5e             	MOVLW	HIGH(_00774_DS_)
005dee   6efe     movwf   0xfe, 0x0        	MOVWF	TOSH
005df0   0e00     movlw   0x00             	MOVLW	UPPER(_00774_DS_)
005df2   6eff     movwf   0xff, 0x0        	MOVWF	TOSU
005df4   bee4     btfsc   0xe4, 0x7, 0x0   	BTFSC	PREINC1, 7
005df6   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	INTCON, 7
005df8   c766     movff   0x766, 0xffb     	MOVFF	(_pputchar + 2), PCLATU
005dfa   fffb
005dfc   c765     movff   0x765, 0xffa     	MOVFF	(_pputchar + 1), PCLATH
005dfe   fffa
005e00   0107     movlb   0x7              	BANKSEL	_pputchar
005e02   5164     movf    0x64, 0x0, 0x1   	MOVF	_pputchar, W, B
005e04   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00774_DS_:
005e06   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           _00768_DS_:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
005e08   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
005e0a   f006
005e0c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
005e0e   f005
005e10   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
005e12   f004
005e14   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005e16   f003
005e18   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005e1a   f002
005e1c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005e1e   f001
005e20   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005e22   f000
005e24   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005e26   ffd9
005e28   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__sensordigital	code
                                           _sensordigital:
                                           ;	.line	120; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	int sensordigital(int valor)
0071be   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0071c0   ffe5
0071c2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0071c4   ffd9
0071c6   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0071c8   ffe5
0071ca   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0071cc   ffe5
0071ce   0e02     movlw   0x02             	MOVLW	0x02
0071d0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0071d2   f000
0071d4   0e03     movlw   0x03             	MOVLW	0x03
0071d6   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0071d8   f001
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	temp=digitalread(valor);
0071da   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0071dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0071de   ec27     call    0x004c4e, 0x0    	CALL	_digitalread
0071e0   f026
0071e2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0071e4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	125; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	if (temp==0)
0071e6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0071e8   e103     bnz     0x0071f0         	BNZ	_00758_DS_
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	return 1;
0071ea   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
0071ec   0e01     movlw   0x01             	MOVLW	0x01
0071ee   d002     bra     0x0071f4         	BRA	_00760_DS_
                                           _00758_DS_:
                                           ;	.line	131; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	return 0;
0071f0   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
0071f2   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00760_DS_:
                                           ;	.line	133; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	}
0071f4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0071f6   f001
0071f8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0071fa   f000
0071fc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0071fe   ffd9
007200   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	TRISB=0; //defino PORTB como salida
0063de   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	90; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	PORTB=0; 
0063e0   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	PORTD=0;
0063e2   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG1,INPUT);
0063e4   0e01     movlw   0x01             	MOVLW	0x01
0063e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063e8   0e15     movlw   0x15             	MOVLW	0x15
0063ea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063ec   ecb4     call    0x003f68, 0x0    	CALL	_pinmode
0063ee   f01f
0063f0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0063f2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG2,INPUT);
0063f4   0e01     movlw   0x01             	MOVLW	0x01
0063f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063f8   0e16     movlw   0x16             	MOVLW	0x16
0063fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063fc   ecb4     call    0x003f68, 0x0    	CALL	_pinmode
0063fe   f01f
006400   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006402   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG3,TRIG);
006404   0e01     movlw   0x01             	MOVLW	0x01
006406   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006408   0e17     movlw   0x17             	MOVLW	0x17
00640a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00640c   ecb4     call    0x003f68, 0x0    	CALL	_pinmode
00640e   f01f
006410   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006412   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	96; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG4,ECHO);
006414   0e01     movlw   0x01             	MOVLW	0x01
006416   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006418   0e18     movlw   0x18             	MOVLW	0x18
00641a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00641c   ecb4     call    0x003f68, 0x0    	CALL	_pinmode
00641e   f01f
006420   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006422   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	97; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P1,OUTPUT);
006424   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006426   0e19     movlw   0x19             	MOVLW	0x19
006428   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00642a   ecb4     call    0x003f68, 0x0    	CALL	_pinmode
00642c   f01f
00642e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006430   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	98; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P2,OUTPUT);
006432   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006434   0e1a     movlw   0x1a             	MOVLW	0x1a
006436   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006438   ecb4     call    0x003f68, 0x0    	CALL	_pinmode
00643a   f01f
00643c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00643e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	99; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P3,OUTPUT);
006440   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006442   0e1b     movlw   0x1b             	MOVLW	0x1b
006444   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006446   ecb4     call    0x003f68, 0x0    	CALL	_pinmode
006448   f01f
00644a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00644c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P4,OUTPUT);
00644e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006450   0e1c     movlw   0x1c             	MOVLW	0x1c
006452   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006454   ecb4     call    0x003f68, 0x0    	CALL	_pinmode
006456   f01f
006458   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00645a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV1);
00645c   0e0a     movlw   0x0a             	MOVLW	0x0a
00645e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006460   ec30     call    0x004860, 0x0    	CALL	_ServoAttach
006462   f024
006464   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV2);
006466   0e0b     movlw   0x0b             	MOVLW	0x0b
006468   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00646a   ec30     call    0x004860, 0x0    	CALL	_ServoAttach
00646c   f024
00646e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV3);
006470   0e0c     movlw   0x0c             	MOVLW	0x0c
006472   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006474   ec30     call    0x004860, 0x0    	CALL	_ServoAttach
006476   f024
006478   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV4);
00647a   0e09     movlw   0x09             	MOVLW	0x09
00647c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00647e   ec30     call    0x004860, 0x0    	CALL	_ServoAttach
006480   f024
006482   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	105; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV5);
006484   0e08     movlw   0x08             	MOVLW	0x08
006486   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006488   ec30     call    0x004860, 0x0    	CALL	_ServoAttach
00648a   f024
00648c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	118; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	}
00648e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/delayus.c	void Delayus(unsigned int microseconds)
007096   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
007098   ffe5
00709a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00709c   ffd9
00709e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0070a0   ffe5
0070a2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0070a4   ffe5
0070a6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0070a8   ffe5
0070aa   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0070ac   ffe5
0070ae   0e02     movlw   0x02             	MOVLW	0x02
0070b0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0070b2   f000
0070b4   0e03     movlw   0x03             	MOVLW	0x03
0070b6   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0070b8   f001
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/delayus.c	for (i=0; i<microseconds; i++)
0070ba   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0070bc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _00736_DS_:
0070be   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0070c0   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
0070c2   e102     bnz     0x0070c8         	BNZ	_00747_DS_
0070c4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0070c6   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _00747_DS_:
0070c8   e203     bc      0x0070d0         	BC	_00738_DS_
0070ca   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
0070cc   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0070ce   d7f7     bra     0x0070be         	BRA	_00736_DS_
                                           _00738_DS_:
                                           ;	.line	75; /home/vbasel/.icaro/v4/firmware/core/delayus.c	}
0070d0   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0070d2   f003
0070d4   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0070d6   f002
0070d8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0070da   f001
0070dc   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0070de   f000
0070e0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0070e2   ffd9
0070e4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__IO_digital	code
                                           _IO_digital:
                                           ;	.line	123; /home/vbasel/.icaro/v4/firmware/core/io.c	ADCON1 = 0x0F;				// AN0 to AN12 Digital I/O
0076f6   0e0f     movlw   0x0f             	MOVLW	0x0f
0076f8   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/core/io.c	CMCON = 0x07;               // Comparators as Digital I/O
0076fa   0e07     movlw   0x07             	MOVLW	0x07
0076fc   6eb4     movwf   0xb4, 0x0        	MOVWF	_CMCON
                                           ;	.line	155; /home/vbasel/.icaro/v4/firmware/core/io.c	}
0076fe   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__IO_init	code
                                           _IO_init:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/io.c	LATA  = 0x00;
00756a   6a89     clrf    0x89, 0x0        	CLRF	_LATA
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/io.c	LATB  = 0x00;
00756c   6a8a     clrf    0x8a, 0x0        	CLRF	_LATB
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/io.c	LATC  = 0x00;
00756e   6a8b     clrf    0x8b, 0x0        	CLRF	_LATC
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/core/io.c	LATD  = 0x00; 
007570   6a8c     clrf    0x8c, 0x0        	CLRF	_LATD
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/io.c	LATE  = 0x00; 
007572   6a8d     clrf    0x8d, 0x0        	CLRF	_LATE
                                           ;	.line	83; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISA = 0x00;
007574   6a92     clrf    0x92, 0x0        	CLRF	_TRISA
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISB = 0x00;
007576   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC0 = 0x00;
007578   9094     bcf     0x94, 0x0, 0x0   	BCF	_TRISCbits, 0
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC1 = 0x00;
00757a   9294     bcf     0x94, 0x1, 0x0   	BCF	_TRISCbits, 1
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC2 = 0x00;
00757c   9494     bcf     0x94, 0x2, 0x0   	BCF	_TRISCbits, 2
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC6 = 0x00;
00757e   9c94     bcf     0x94, 0x6, 0x0   	BCF	_TRISCbits, 6
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC7 = 0x00;
007580   9e94     bcf     0x94, 0x7, 0x0   	BCF	_TRISCbits, 7
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISD = 0x00; 
007582   6a95     clrf    0x95, 0x0        	CLRF	_TRISD
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISE = 0x00; 
007584   6a96     clrf    0x96, 0x0        	CLRF	_TRISE
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTA  = 0x00;
007586   6a80     clrf    0x80, 0x0        	CLRF	_PORTA
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTB  = 0x00;
007588   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTC  = 0x00;
00758a   6a82     clrf    0x82, 0x0        	CLRF	_PORTC
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTD  = 0x00; 
00758c   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	113; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTE  = 0x00; 
00758e   6a84     clrf    0x84, 0x0        	CLRF	_PORTE
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/core/io.c	}
007590   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__analogwrite	code
                                           _analogwrite:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogwrite(u8 pin, u16 duty)
006b0c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006b0e   ffe5
006b10   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006b12   ffd9
006b14   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006b16   ffe5
006b18   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006b1a   ffe5
006b1c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006b1e   ffe5
006b20   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006b22   ffe5
006b24   0e02     movlw   0x02             	MOVLW	0x02
006b26   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006b28   f000
006b2a   0e03     movlw   0x03             	MOVLW	0x03
006b2c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006b2e   f001
006b30   0e04     movlw   0x04             	MOVLW	0x04
006b32   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
006b34   f002
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/core/analog.c	switch (pin)
006b36   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006b38   0a0b     xorlw   0x0b             	XORLW	0x0b
006b3a   e019     bz      0x006b6e         	BZ	_00706_DS_
006b3c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006b3e   0a0c     xorlw   0x0c             	XORLW	0x0c
006b40   e129     bnz     0x006b94         	BNZ	_00707_DS_
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON  = 0b00001100;
006b42   0e0c     movlw   0x0c             	MOVLW	0x0c
006b44   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR1L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
006b46   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
006b48   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
006b4a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
006b4c   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
006b4e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006b50   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
006b52   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
006b54   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
006b56   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006b58   6ebe     movwf   0xbe, 0x0        	MOVWF	_CCPR1L
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
006b5a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006b5c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006b5e   0e03     movlw   0x03             	MOVLW	0x03
006b60   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
006b62   3800     swapf   0x00, 0x0, 0x0   	SWAPF	r0x00, W
006b64   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	_CCP1CON, W
                                           ; #;#	MOVWF	r0x00
                                           ; #;#	MOVF	r0x03, W
                                           ; #;#	IORWF	r0x00, W
                                           ; #	IORWF	r0x03, W
006b66   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
006b68   10bd     iorwf   0xbd, 0x0, 0x0   	IORWF	_CCP1CON, W
006b6a   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
                                           ;	.line	309; /home/vbasel/.icaro/v4/firmware/core/analog.c	break;
006b6c   d013     bra     0x006b94         	BRA	_00707_DS_
                                           _00706_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON  = 0b00001100;
006b6e   0e0c     movlw   0x0c             	MOVLW	0x0c
006b70   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR2L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
006b72   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
006b74   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
006b76   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
006b78   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
006b7a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006b7c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
006b7e   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
006b80   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
006b82   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006b84   6ebb     movwf   0xbb, 0x0        	MOVWF	_CCPR2L
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
006b86   0e03     movlw   0x03             	MOVLW	0x03
006b88   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
006b8a   3801     swapf   0x01, 0x0, 0x0   	SWAPF	r0x01, W
006b8c   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	_CCP2CON, W
                                           ; #;#	MOVWF	r0x01
                                           ; #;#	MOVF	r0x00, W
                                           ; #;#	IORWF	r0x01, W
                                           ; #	IORWF	r0x00, W
006b8e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006b90   10ba     iorwf   0xba, 0x0, 0x0   	IORWF	_CCP2CON, W
006b92   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
                                           _00707_DS_:
                                           ;	.line	321; /home/vbasel/.icaro/v4/firmware/core/analog.c	PIR1bits.TMR2IF = 0;
006b94   929e     bcf     0x9e, 0x1, 0x0   	BCF	_PIR1bits, 1
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
006b96   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006b98   f003
006b9a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006b9c   f002
006b9e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006ba0   f001
006ba2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006ba4   f000
006ba6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006ba8   ffd9
006baa   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__analogwrite_init	code
                                           _analogwrite_init:
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/core/analog.c	PR2 = 0xFF;                         // set PWM period to the max. to get 10-bit res.
007708   68cb     setf    0xcb, 0x0        	SETF	_PR2
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/core/analog.c	T2CON = 0b00000100;                 // Timer2 on, prescaler is 1
00770a   0e04     movlw   0x04             	MOVLW	0x04
00770c   6eca     movwf   0xca, 0x0        	MOVWF	_T2CON
                                           ;	.line	239; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
00770e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	134; /home/vbasel/.icaro/v4/firmware/core/analog.c	u16 analogread(u8 channel)
006c4c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006c4e   ffe5
006c50   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006c52   ffd9
006c54   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006c56   ffe5
006c58   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006c5a   ffe5
006c5c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006c5e   ffe5
006c60   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006c62   ffe5
006c64   0e02     movlw   0x02             	MOVLW	0x02
006c66   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006c68   f000
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(channel>=13 && channel<=20)
006c6a   0e0d     movlw   0x0d             	MOVLW	0x0d
006c6c   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
006c6e   e30c     bnc     0x006c88         	BNC	_00659_DS_
006c70   0e15     movlw   0x15             	MOVLW	0x15
006c72   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
006c74   e209     bc      0x006c88         	BC	_00659_DS_
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0=(channel-13) << 2;   // A0 = 13, ..., A4 = 17
006c76   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006c78   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
006c7a   0ef3     movlw   0xf3             	MOVLW	0xf3
006c7c   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
006c7e   4401     rlncf   0x01, 0x0, 0x0   	RLNCF	r0x01, W
006c80   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
006c82   0bfc     andlw   0xfc             	ANDLW	0xfc
006c84   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
006c86   d007     bra     0x006c96         	BRA	_00660_DS_
                                           _00659_DS_:
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(channel<=5)
006c88   0e06     movlw   0x06             	MOVLW	0x06
006c8a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
006c8c   e204     bc      0x006c96         	BC	_00660_DS_
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0 = channel << 2;      // A0 = 0, ..., A4 = 4
006c8e   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
006c90   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
006c92   0bfc     andlw   0xfc             	ANDLW	0xfc
006c94   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
                                           _00660_DS_:
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON=1;                  // A/D Converter module is enabled
006c96   80c2     bsf     0xc2, 0x0, 0x0   	BSF	_ADCON0bits, 0
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
006c98   0e09     movlw   0x09             	MOVLW	0x09
006c9a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006c9c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00668_DS_:
006c9e   0000     nop                      	NOP
006ca0   0eff     movlw   0xff             	MOVLW	0xff
006ca2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
006ca4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
006ca6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006ca8   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
006caa   e1f9     bnz     0x006c9e         	BNZ	_00668_DS_
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.GO=1;                    // Start A/D Conversion
006cac   82c2     bsf     0xc2, 0x1, 0x0   	BSF	_ADCON0bits, 1
                                           _00663_DS_:
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/core/analog.c	while (ADCON0bits.GO);              // Wait for conversion stop
006cae   b2c2     btfsc   0xc2, 0x1, 0x0   	BTFSC	_ADCON0bits, 1
006cb0   d7fe     bra     0x006cae         	BRA	_00663_DS_
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/core/analog.c	result = ADRESH << 8;
006cb2   cfc4     movff   0xfc4, 0x000     	MOVFF	_ADRESH, r0x00
006cb4   f000
006cb6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
006cb8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006cba   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
006cbc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/analog.c	result += ADRESL;
006cbe   cfc3     movff   0xfc3, 0x000     	MOVFF	_ADRESL, r0x00
006cc0   f000
006cc2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
006cc4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006cc6   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
006cc8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006cca   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON = 0;                // A/D Converter module is disabled
006ccc   90c2     bcf     0xc2, 0x0, 0x0   	BCF	_ADCON0bits, 0
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/analog.c	return(result);
006cce   c003     movff   0x003, 0xff3     	MOVFF	r0x03, PRODL
006cd0   fff3
006cd2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
006cd4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006cd6   f003
006cd8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006cda   f002
006cdc   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006cde   f001
006ce0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006ce2   f000
006ce4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006ce6   ffd9
006ce8   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__analogreference	code
                                           _analogreference:
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogreference(u8 Type)
007246   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
007248   ffe5
00724a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00724c   ffd9
00724e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007250   ffe5
007252   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
007254   ffe5
007256   0e02     movlw   0x02             	MOVLW	0x02
007258   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00725a   f000
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(Type == DEFAULT)			//the default analog reference of 5 volts (on 5V Arduino boards) or 3.3 volts (on 3.3V Arduino boards)
00725c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00725e   e105     bnz     0x00726a         	BNZ	_00640_DS_
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x00;			//Vref+ = VDD
007260   cfc1     movff   0xfc1, 0x001     	MOVFF	_ADCON1, r0x01
007262   f001
007264   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
007266   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
007268   d008     bra     0x00727a         	BRA	_00642_DS_
                                           _00640_DS_:
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(Type == EXTERNAL)	//the voltage applied to the AREF pin (0 to 5V only) is used as the reference.
00726a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00726c   0a01     xorlw   0x01             	XORLW	0x01
00726e   e105     bnz     0x00727a         	BNZ	_00642_DS_
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x10;			//Vref+ = External source
007270   cfc1     movff   0xfc1, 0x000     	MOVFF	_ADCON1, r0x00
007272   f000
007274   8800     bsf     0x00, 0x4, 0x0   	BSF	r0x00, 4
007276   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
007278   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           _00642_DS_:
                                           ;	.line	121; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
00727a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00727c   f001
00727e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
007280   f000
007282   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007284   ffd9
007286   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	25; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analog_init(void)
007540   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007542   ffe5
                                           ;	.line	36; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISA=TRISA | 0x2F;
007544   cf92     movff   0xf92, 0x000     	MOVFF	_TRISA, r0x00
007546   f000
007548   0e2f     movlw   0x2f             	MOVLW	0x2f
00754a   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
00754c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00754e   6e92     movwf   0x92, 0x0        	MOVWF	_TRISA
                                           ;	.line	37; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISE=TRISE | 0x07;	
007550   cf96     movff   0xf96, 0x000     	MOVFF	_TRISE, r0x00
007552   f000
007554   0e07     movlw   0x07             	MOVLW	0x07
007556   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
007558   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00755a   6e96     movwf   0x96, 0x0        	MOVWF	_TRISE
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1=0x07;
00755c   0e07     movlw   0x07             	MOVLW	0x07
00755e   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON2=0xBD;
007560   0ebd     movlw   0xbd             	MOVLW	0xbd
007562   6ec0     movwf   0xc0, 0x0        	MOVWF	_ADCON2
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
007564   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
007566   f000
007568   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	547; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (PIR1bits.TMR1IF)
007202   a09e     btfss   0x9e, 0x0, 0x0   	BTFSS	_PIR1bits, 0
007204   d01f     bra     0x007244         	BRA	_00627_DS_
007206   0106     movlb   0x6              	BANKSEL	_phase
                                           ;	.line	553; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (phase)
007208   51f5     movf    0xf5, 0x0, 0x1   	MOVF	_phase, W, B
00720a   e00b     bz      0x007222         	BZ	_00623_DS_
                                           ;	.line	555; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseUp();
00720c   ec1d     call    0x00763a, 0x0    	CALL	_ServosPulseUp
00720e   f03b
                                           ;	.line	557; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0xe9;//0xe9;
007210   0ee9     movlw   0xe9             	MOVLW	0xe9
007212   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	558; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0x59;
007214   0e59     movlw   0x59             	MOVLW	0x59
007216   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ;	.line	560; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=1;
007218   0e01     movlw   0x01             	MOVLW	0x01
00721a   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
00721c   0106     movlb   0x6              	BANKSEL	_phase
                                           ;	.line	561; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 0;
00721e   6bf5     clrf    0xf5, 0x1        	CLRF	_phase, B
007220   d010     bra     0x007242         	BRA	_00624_DS_
                                           _00623_DS_:
                                           ;	.line	569; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseDown();
007222   ec17     call    0x00562e, 0x0    	CALL	_ServosPulseDown
007224   f02b
                                           ;	.line	573; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0x32;
007226   0e32     movlw   0x32             	MOVLW	0x32
007228   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	574; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0xeb;
00722a   0eeb     movlw   0xeb             	MOVLW	0xeb
00722c   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00621_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
00722e   0106     movlb   0x6              	BANKSEL	_needreordering
                                           ;	.line	576; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (needreordering)
007230   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_needreordering, W, B
                                           ;	.line	577; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	SortServoTimings(); // This takes more than 1 ms, but it's call only if needed.
007232   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
                                           ;	.line	578; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
007234   ec0e     call    0x000c1c, 0x0    	CALL	_SortServoTimings
007236   f006
007238   0e21     movlw   0x21             	MOVLW	0x21
00723a   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	579; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 1;  			//This indicates that after next interrupt it will start the servos cycle.
00723c   0e01     movlw   0x01             	MOVLW	0x01
00723e   0106     movlb   0x6              	BANKSEL	_phase
007240   6ff5     movwf   0xf5, 0x1        	MOVWF	_phase, B
                                           _00624_DS_:
                                           ;	.line	583; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF=0;
007242   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           _00627_DS_:
                                           ;	.line	586; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
007244   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	530; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMaximumPulse(unsigned char servo,int max_microseconds)
006928   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00692a   ffe5
00692c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00692e   ffd9
006930   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006932   ffe5
006934   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006936   ffe5
006938   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00693a   ffe5
00693c   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00693e   ffe5
006940   0e02     movlw   0x02             	MOVLW	0x02
006942   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006944   f000
006946   0e03     movlw   0x03             	MOVLW	0x03
006948   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00694a   f001
00694c   0e04     movlw   0x04             	MOVLW	0x04
00694e   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
006950   f002
                                           ;	.line	533; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
006952   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00597_DS_
                                           ; #	GOTO	_00602_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	534; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
006954   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds < MIDUS) max_microseconds = MIDUS;
006956   e22e     bc      0x0069b4         	BC	_00602_DS_
006958   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00695a   0f80     addlw   0x80             	ADDLW	0x80
00695c   0f7b     addlw   0x7b             	ADDLW	0x7b
00695e   e102     bnz     0x006964         	BNZ	_00614_DS_
006960   0edc     movlw   0xdc             	MOVLW	0xdc
006962   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00614_DS_:
006964   e204     bc      0x00696e         	BC	_00599_DS_
006966   0edc     movlw   0xdc             	MOVLW	0xdc
006968   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00696a   0e05     movlw   0x05             	MOVLW	0x05
00696c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00599_DS_:
                                           ;	.line	538; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds > MAXUS) max_microseconds = MAXUS;
00696e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006970   0f80     addlw   0x80             	ADDLW	0x80
006972   0f77     addlw   0x77             	ADDLW	0x77
006974   e102     bnz     0x00697a         	BNZ	_00615_DS_
006976   0ec5     movlw   0xc5             	MOVLW	0xc5
006978   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00615_DS_:
00697a   e304     bnc     0x006984         	BNC	_00601_DS_
00697c   0ec4     movlw   0xc4             	MOVLW	0xc4
00697e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
006980   0e09     movlw   0x09             	MOVLW	0x09
006982   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00601_DS_:
                                           ;	.line	541; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][servo]=(max_microseconds - MINUS)>>3;   // 125 < final_max < 250
006984   6a03     clrf    0x03, 0x0        	CLRF	r0x03
006986   0e6e     movlw   0x6e             	MOVLW	LOW(_maxminpos + 30)
006988   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00698a   0e06     movlw   0x06             	MOVLW	HIGH(_maxminpos + 30)
00698c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00698e   0e0c     movlw   0x0c             	MOVLW	0x0c
006990   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
006992   0efe     movlw   0xfe             	MOVLW	0xfe
006994   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
006996   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
006998   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
00699a   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
00699c   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
00699e   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0069a0   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
0069a2   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
0069a4   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0069a6   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
0069a8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0069aa   ffe9
0069ac   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0069ae   ffea
0069b0   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
0069b2   ffef
                                           _00602_DS_:
                                           ;	.line	542; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
0069b4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0069b6   f003
0069b8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0069ba   f002
0069bc   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0069be   f001
0069c0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0069c2   f000
0069c4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0069c6   ffd9
0069c8   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	516; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMinimumPulse(unsigned char servo,int min_microseconds)
0069ca   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0069cc   ffe5
0069ce   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0069d0   ffd9
0069d2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0069d4   ffe5
0069d6   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0069d8   ffe5
0069da   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0069dc   ffe5
0069de   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0069e0   ffe5
0069e2   0e02     movlw   0x02             	MOVLW	0x02
0069e4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0069e6   f000
0069e8   0e03     movlw   0x03             	MOVLW	0x03
0069ea   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0069ec   f001
0069ee   0e04     movlw   0x04             	MOVLW	0x04
0069f0   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0069f2   f002
                                           ;	.line	519; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
0069f4   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00573_DS_
                                           ; #	GOTO	_00578_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
0069f6   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	523; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds < MINUS) min_microseconds = MINUS;
0069f8   e22e     bc      0x006a56         	BC	_00578_DS_
0069fa   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0069fc   0f80     addlw   0x80             	ADDLW	0x80
0069fe   0f7f     addlw   0x7f             	ADDLW	0x7f
006a00   e102     bnz     0x006a06         	BNZ	_00590_DS_
006a02   0ef4     movlw   0xf4             	MOVLW	0xf4
006a04   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00590_DS_:
006a06   e204     bc      0x006a10         	BC	_00575_DS_
006a08   0ef4     movlw   0xf4             	MOVLW	0xf4
006a0a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
006a0c   0e01     movlw   0x01             	MOVLW	0x01
006a0e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00575_DS_:
                                           ;	.line	524; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds > MIDUS) min_microseconds = MIDUS;
006a10   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006a12   0f80     addlw   0x80             	ADDLW	0x80
006a14   0f7b     addlw   0x7b             	ADDLW	0x7b
006a16   e102     bnz     0x006a1c         	BNZ	_00591_DS_
006a18   0edd     movlw   0xdd             	MOVLW	0xdd
006a1a   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00591_DS_:
006a1c   e304     bnc     0x006a26         	BNC	_00577_DS_
006a1e   0edc     movlw   0xdc             	MOVLW	0xdc
006a20   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
006a22   0e05     movlw   0x05             	MOVLW	0x05
006a24   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00577_DS_:
                                           ;	.line	527; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][servo]=(min_microseconds - MINUS)>>3;   // 0 < final_min < 125
006a26   6a03     clrf    0x03, 0x0        	CLRF	r0x03
006a28   0e50     movlw   0x50             	MOVLW	LOW(_maxminpos)
006a2a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
006a2c   0e06     movlw   0x06             	MOVLW	HIGH(_maxminpos)
006a2e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
006a30   0e0c     movlw   0x0c             	MOVLW	0x0c
006a32   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
006a34   0efe     movlw   0xfe             	MOVLW	0xfe
006a36   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
006a38   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
006a3a   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
006a3c   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
006a3e   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
006a40   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
006a42   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
006a44   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
006a46   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
006a48   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
006a4a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
006a4c   ffe9
006a4e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
006a50   ffea
006a52   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
006a54   ffef
                                           _00578_DS_:
                                           ;	.line	528; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
006a56   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006a58   f003
006a5a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006a5c   f002
006a5e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006a60   f001
006a62   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006a64   f000
006a66   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006a68   ffd9
006a6a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	508; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	unsigned char ServoRead(unsigned char servo)
007178   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00717a   ffe5
00717c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00717e   ffd9
007180   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007182   ffe5
007184   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
007186   ffe5
007188   0e02     movlw   0x02             	MOVLW	0x02
00718a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00718c   f000
                                           ;	.line	510; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)        // test if numservo is valid
00718e   0e1e     movlw   0x1e             	MOVLW	0x1e
007190   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
007192   e302     bnc     0x007198         	BNC	_00561_DS_
                                           ;	.line	511; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return 0;
007194   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
007196   d00c     bra     0x0071b0         	BRA	_00562_DS_
                                           _00561_DS_:
                                           ;	.line	513; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return servovalues[servo];
007198   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00719a   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
00719c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00719e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0071a0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0071a2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0071a4   ffe9
0071a6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0071a8   ffea
0071aa   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0071ac   f000
0071ae   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00562_DS_:
                                           ;	.line	514; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
0071b0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0071b2   f001
0071b4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0071b6   f000
0071b8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0071ba   ffd9
0071bc   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	484; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoWrite(unsigned char servo,unsigned char degrees)
007042   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
007044   ffe5
007046   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
007048   ffd9
00704a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00704c   ffe5
00704e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
007050   ffe5
007052   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
007054   ffe5
007056   0e02     movlw   0x02             	MOVLW	0x02
007058   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00705a   f000
00705c   0e03     movlw   0x03             	MOVLW	0x03
00705e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
007060   f001
                                           ;	.line	491; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
007062   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00549_DS_
                                           ; #	GOTO	_00550_DS_
                                           ; #	CLRF	r0x02
                                           ;	.line	492; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
007064   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	503; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[servo]= value;
007066   e20e     bc      0x007084         	BC	_00550_DS_
007068   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00706a   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
00706c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00706e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
007070   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
007072   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
007074   ffe9
007076   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
007078   ffea
00707a   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
00707c   ffef
                                           ;	.line	505; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
00707e   0e01     movlw   0x01             	MOVLW	0x01
007080   0106     movlb   0x6              	BANKSEL	_needreordering
007082   6ff6     movwf   0xf6, 0x1        	MOVWF	_needreordering, B
                                           _00550_DS_:
                                           ;	.line	506; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
007084   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
007086   f002
007088   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00708a   f001
00708c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00708e   f000
007090   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007092   ffd9
007094   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	459; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoDetach(unsigned char pin)
005332   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005334   ffe5
005336   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005338   ffd9
00533a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00533c   ffe5
00533e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005340   ffe5
005342   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005344   ffe5
005346   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005348   ffe5
00534a   0e02     movlw   0x02             	MOVLW	0x02
00534c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00534e   f000
                                           ;	.line	461; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
005350   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00526_DS_
                                           ; #	GOTO	_00533_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	463; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
005352   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
005354   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
005356   d0a5     bra     0x0054a2         	BRA	_00533_DS_
005358   0e24     movlw   0x24             	MOVLW	LOW(_port)
00535a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00535c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00535e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
005360   0e61     movlw   0x61             	MOVLW	HIGH(_port)
005362   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005364   6a03     clrf    0x03, 0x0        	CLRF	r0x03
005366   0e00     movlw   0x00             	MOVLW	UPPER(_port)
005368   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00536a   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00536c   fff6
00536e   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
005370   fff7
005372   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
005374   fff8
005376   0009     tblrd*+                  	TBLRD*+	
005378   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00537a   f001
00537c   0e05     movlw   0x05             	MOVLW	0x05
00537e   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
005380   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
005382   d08f     bra     0x0054a2         	BRA	_00533_DS_
005384   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
005386   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
005388   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
00538a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00538c   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
00538e   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
005390   0bfc     andlw   0xfc             	ANDLW	0xfc
005392   0fa2     addlw   0xa2             	ADDLW	LOW(_00543_DS_)
005394   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005396   0e53     movlw   0x53             	MOVLW	HIGH(_00543_DS_)
005398   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00539a   0e00     movlw   0x00             	MOVLW	UPPER(_00543_DS_)
00539c   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
00539e   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0053a0   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00543_DS_:
0053a2   efdb     goto    0x0053b6         	GOTO	_00527_DS_
0053a4   f029
0053a6   eff3     goto    0x0053e6         	GOTO	_00528_DS_
0053a8   f029
0053aa   ef0b     goto    0x005416         	GOTO	_00529_DS_
0053ac   f02a
0053ae   ef23     goto    0x005446         	GOTO	_00530_DS_
0053b0   f02a
0053b2   ef3b     goto    0x005476         	GOTO	_00531_DS_
0053b4   f02a
                                           _00527_DS_:
                                           ;	.line	465; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pA: activatedservos[pA] = activatedservos[pA] ^ mask[pin];
0053b6   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0053b8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0053ba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0053bc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0053be   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0053c0   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0053c2   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0053c4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0053c6   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0053c8   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0053ca   fff6
0053cc   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0053ce   fff7
0053d0   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0053d2   fff8
0053d4   0009     tblrd*+                  	TBLRD*+	
0053d6   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0053d8   f001
0053da   0107     movlb   0x7              	BANKSEL	_activatedservos
0053dc   512a     movf    0x2a, 0x0, 0x1   	MOVF	_activatedservos, W, B
0053de   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
0053e0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0053e2   6f2a     movwf   0x2a, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	466; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0053e4   d05e     bra     0x0054a2         	BRA	_00533_DS_
                                           _00528_DS_:
                                           ;	.line	467; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pB: activatedservos[pB] = activatedservos[pB] ^ mask[pin];
0053e6   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0053e8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0053ea   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0053ec   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0053ee   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0053f0   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0053f2   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0053f4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0053f6   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0053f8   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0053fa   fff6
0053fc   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0053fe   fff7
005400   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
005402   fff8
005404   0009     tblrd*+                  	TBLRD*+	
005406   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
005408   f001
00540a   0107     movlb   0x7              	BANKSEL	(_activatedservos + 1)
00540c   512b     movf    0x2b, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
00540e   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
005410   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
005412   6f2b     movwf   0x2b, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	468; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
005414   d046     bra     0x0054a2         	BRA	_00533_DS_
                                           _00529_DS_:
                                           ;	.line	470; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pC: activatedservos[pC] = activatedservos[pC] ^ mask[pin];
005416   0e06     movlw   0x06             	MOVLW	LOW(_mask)
005418   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00541a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00541c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00541e   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
005420   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005422   6a03     clrf    0x03, 0x0        	CLRF	r0x03
005424   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
005426   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
005428   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00542a   fff6
00542c   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00542e   fff7
005430   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
005432   fff8
005434   0009     tblrd*+                  	TBLRD*+	
005436   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
005438   f001
00543a   0107     movlb   0x7              	BANKSEL	(_activatedservos + 2)
00543c   512c     movf    0x2c, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
00543e   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
005440   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
005442   6f2c     movwf   0x2c, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	471; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
005444   d02e     bra     0x0054a2         	BRA	_00533_DS_
                                           _00530_DS_:
                                           ;	.line	474; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pD: activatedservos[pD] = activatedservos[pD] ^ mask[pin];
005446   0e06     movlw   0x06             	MOVLW	LOW(_mask)
005448   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00544a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00544c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00544e   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
005450   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005452   6a03     clrf    0x03, 0x0        	CLRF	r0x03
005454   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
005456   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
005458   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00545a   fff6
00545c   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00545e   fff7
005460   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
005462   fff8
005464   0009     tblrd*+                  	TBLRD*+	
005466   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
005468   f001
00546a   0107     movlb   0x7              	BANKSEL	(_activatedservos + 3)
00546c   512d     movf    0x2d, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
00546e   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
005470   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
005472   6f2d     movwf   0x2d, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	475; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
005474   d016     bra     0x0054a2         	BRA	_00533_DS_
                                           _00531_DS_:
                                           ;	.line	478; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pE: activatedservos[pE] = activatedservos[pE] ^ mask[pin];
005476   6a01     clrf    0x01, 0x0        	CLRF	r0x01
005478   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00547a   0e06     movlw   0x06             	MOVLW	LOW(_mask)
00547c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00547e   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
005480   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005482   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
005484   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005486   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
005488   fff6
00548a   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00548c   fff7
00548e   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
005490   fff8
005492   0009     tblrd*+                  	TBLRD*+	
005494   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
005496   f000
005498   0107     movlb   0x7              	BANKSEL	(_activatedservos + 4)
00549a   512e     movf    0x2e, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
00549c   1a00     xorwf   0x00, 0x1, 0x0   	XORWF	r0x00, F
00549e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0054a0   6f2e     movwf   0x2e, 0x1        	MOVWF	(_activatedservos + 4), B
                                           _00533_DS_:
                                           ;	.line	482; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
0054a2   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0054a4   f003
0054a6   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0054a8   f002
0054aa   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0054ac   f001
0054ae   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0054b0   f000
0054b2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0054b4   ffd9
0054b6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoAttach(unsigned char pin)
004860   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004862   ffe5
004864   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004866   ffd9
004868   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00486a   ffe5
00486c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00486e   ffe5
004870   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004872   ffe5
004874   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004876   ffe5
004878   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00487a   ffe5
00487c   0e02     movlw   0x02             	MOVLW	0x02
00487e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004880   f000
                                           ;	.line	426; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
004882   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00503_DS_
                                           ; #	GOTO	_00510_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	428; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
004884   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004886   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004888   d0e1     bra     0x004a4c         	BRA	_00510_DS_
00488a   0e24     movlw   0x24             	MOVLW	LOW(_port)
00488c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00488e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004890   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004892   0e61     movlw   0x61             	MOVLW	HIGH(_port)
004894   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004896   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004898   0e00     movlw   0x00             	MOVLW	UPPER(_port)
00489a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00489c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00489e   fff6
0048a0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0048a2   fff7
0048a4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0048a6   fff8
0048a8   0009     tblrd*+                  	TBLRD*+	
0048aa   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0048ac   f001
0048ae   0e05     movlw   0x05             	MOVLW	0x05
0048b0   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
0048b2   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0048b4   d0cb     bra     0x004a4c         	BRA	_00510_DS_
0048b6   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0048b8   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0048ba   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
0048bc   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0048be   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0048c0   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0048c2   0bfc     andlw   0xfc             	ANDLW	0xfc
0048c4   0fd4     addlw   0xd4             	ADDLW	LOW(_00520_DS_)
0048c6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048c8   0e48     movlw   0x48             	MOVLW	HIGH(_00520_DS_)
0048ca   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0048cc   0e00     movlw   0x00             	MOVLW	UPPER(_00520_DS_)
0048ce   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0048d0   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0048d2   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00520_DS_:
0048d4   ef74     goto    0x0048e8         	GOTO	_00504_DS_
0048d6   f024
0048d8   ef98     goto    0x004930         	GOTO	_00505_DS_
0048da   f024
0048dc   efbc     goto    0x004978         	GOTO	_00506_DS_
0048de   f024
0048e0   efe0     goto    0x0049c0         	GOTO	_00507_DS_
0048e2   f024
0048e4   ef04     goto    0x004a08         	GOTO	_00508_DS_
0048e6   f025
                                           _00504_DS_:
                                           ;	.line	431; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pA] = activatedservos[pA] | mask[pin];  // list pin as servo driver.
0048e8   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0048ea   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0048ec   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0048ee   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0048f0   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0048f2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0048f4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0048f6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0048f8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0048fa   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0048fc   fff6
0048fe   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004900   fff7
004902   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004904   fff8
004906   0009     tblrd*+                  	TBLRD*+	
004908   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00490a   f004
00490c   0107     movlb   0x7              	BANKSEL	_activatedservos
00490e   512a     movf    0x2a, 0x0, 0x1   	MOVF	_activatedservos, W, B
004910   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
004912   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
004914   6f2a     movwf   0x2a, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	432; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISA = TRISA & (~mask[pin]); 					// set as output pin
004916   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004918   fff6
00491a   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00491c   fff7
00491e   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004920   fff8
004922   0009     tblrd*+                  	TBLRD*+	
004924   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004926   f001
004928   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
00492a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00492c   1692     andwf   0x92, 0x1, 0x0   	ANDWF	_TRISA, F
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00492e   d08e     bra     0x004a4c         	BRA	_00510_DS_
                                           _00505_DS_:
                                           ;	.line	435; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pB] = activatedservos[pB] | mask[pin];  // list pin as servo driver.
004930   0e06     movlw   0x06             	MOVLW	LOW(_mask)
004932   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004934   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004936   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004938   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
00493a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00493c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00493e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004940   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004942   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004944   fff6
004946   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004948   fff7
00494a   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00494c   fff8
00494e   0009     tblrd*+                  	TBLRD*+	
004950   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
004952   f004
004954   0107     movlb   0x7              	BANKSEL	(_activatedservos + 1)
004956   512b     movf    0x2b, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
004958   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00495a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
00495c   6f2b     movwf   0x2b, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	436; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISB = TRISB & (~mask[pin]); 					// set as output pin
00495e   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004960   fff6
004962   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004964   fff7
004966   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004968   fff8
00496a   0009     tblrd*+                  	TBLRD*+	
00496c   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00496e   f001
004970   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
004972   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004974   1693     andwf   0x93, 0x1, 0x0   	ANDWF	_TRISB, F
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
004976   d06a     bra     0x004a4c         	BRA	_00510_DS_
                                           _00506_DS_:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pC] = activatedservos[pC] | mask[pin];  // list pin as servo driver.
004978   0e06     movlw   0x06             	MOVLW	LOW(_mask)
00497a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00497c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00497e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004980   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
004982   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004984   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004986   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004988   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00498a   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00498c   fff6
00498e   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004990   fff7
004992   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004994   fff8
004996   0009     tblrd*+                  	TBLRD*+	
004998   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00499a   f004
00499c   0107     movlb   0x7              	BANKSEL	(_activatedservos + 2)
00499e   512c     movf    0x2c, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
0049a0   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0049a2   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
0049a4   6f2c     movwf   0x2c, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	441; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISC = TRISC & (~mask[pin]); 					// set as output pin
0049a6   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0049a8   fff6
0049aa   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0049ac   fff7
0049ae   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0049b0   fff8
0049b2   0009     tblrd*+                  	TBLRD*+	
0049b4   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0049b6   f001
0049b8   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
0049ba   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0049bc   1694     andwf   0x94, 0x1, 0x0   	ANDWF	_TRISC, F
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0049be   d046     bra     0x004a4c         	BRA	_00510_DS_
                                           _00507_DS_:
                                           ;	.line	446; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pD] = activatedservos[pD] | mask[pin];  // list pin as servo driver.
0049c0   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0049c2   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0049c4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0049c6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0049c8   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0049ca   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0049cc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0049ce   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0049d0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0049d2   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0049d4   fff6
0049d6   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0049d8   fff7
0049da   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0049dc   fff8
0049de   0009     tblrd*+                  	TBLRD*+	
0049e0   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0049e2   f004
0049e4   0107     movlb   0x7              	BANKSEL	(_activatedservos + 3)
0049e6   512d     movf    0x2d, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
0049e8   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0049ea   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
0049ec   6f2d     movwf   0x2d, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	447; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISD = TRISD & (~mask[pin]); 					// set as output pin
0049ee   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0049f0   fff6
0049f2   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0049f4   fff7
0049f6   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0049f8   fff8
0049fa   0009     tblrd*+                  	TBLRD*+	
0049fc   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0049fe   f001
004a00   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
004a02   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004a04   1695     andwf   0x95, 0x1, 0x0   	ANDWF	_TRISD, F
                                           ;	.line	448; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
004a06   d022     bra     0x004a4c         	BRA	_00510_DS_
                                           _00508_DS_:
                                           ;	.line	452; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pE] = activatedservos[pE] | mask[pin];  // list pin as servo driver.
004a08   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004a0a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004a0c   0e06     movlw   0x06             	MOVLW	LOW(_mask)
004a0e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004a10   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
004a12   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004a14   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004a16   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004a18   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
004a1a   fff6
004a1c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
004a1e   fff7
004a20   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
004a22   fff8
004a24   0009     tblrd*+                  	TBLRD*+	
004a26   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
004a28   f003
004a2a   0107     movlb   0x7              	BANKSEL	(_activatedservos + 4)
004a2c   512e     movf    0x2e, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
004a2e   1203     iorwf   0x03, 0x1, 0x0   	IORWF	r0x03, F
004a30   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
004a32   6f2e     movwf   0x2e, 0x1        	MOVWF	(_activatedservos + 4), B
                                           ;	.line	453; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISE = TRISE & (~mask[pin]); 					// set as output pin
004a34   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
004a36   fff6
004a38   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
004a3a   fff7
004a3c   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
004a3e   fff8
004a40   0009     tblrd*+                  	TBLRD*+	
004a42   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
004a44   f000
004a46   1e00     comf    0x00, 0x1, 0x0   	COMF	r0x00, F
004a48   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004a4a   1696     andwf   0x96, 0x1, 0x0   	ANDWF	_TRISE, F
                                           _00510_DS_:
                                           ;	.line	457; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
004a4c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004a4e   f004
004a50   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004a52   f003
004a54   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004a56   f002
004a58   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004a5a   f001
004a5c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004a5e   f000
004a60   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004a62   ffd9
004a64   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void SortServoTimings()
000c1c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000c1e   ffe5
000c20   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000c22   ffe5
000c24   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000c26   ffe5
000c28   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
000c2a   ffe5
000c2c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000c2e   ffe5
000c30   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
000c32   ffe5
000c34   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
000c36   ffe5
000c38   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000c3a   6b7c     clrf    0x7c, 0x1        	CLRF	_SortServoTimings_t_1_35, B
                                           _00386_DS_:
000c3c   0e1e     movlw   0x1e             	MOVLW	0x1e
000c3e   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
000c40   5d7c     subwf   0x7c, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_35, W, B
000c42   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000c44   d066     bra     0x000d12         	BRA	_00333_DS_
                                           ;	.line	256; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=255; 
000c46   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000c48   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000c4a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000c4c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000c4e   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
000c50   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c52   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c54   ffe9
000c56   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c58   ffea
000c5a   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	257; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
000c5c   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000c5e   0d05     mullw   0x05             	MULLW	0x05
000c60   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c62   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c64   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c66   f000
000c68   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c6a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c6c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000c6e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c70   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c72   ffe9
000c74   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c76   ffea
000c78   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000c7a   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000c7c   0d05     mullw   0x05             	MULLW	0x05
000c7e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c80   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c82   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c84   f000
000c86   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c88   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c8a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000c8c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c8e   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000c90   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000c92   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c94   ffe9
000c96   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c98   ffea
000c9a   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000c9c   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000c9e   0d05     mullw   0x05             	MULLW	0x05
000ca0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000ca2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ca4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ca6   f000
000ca8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000caa   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cac   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000cae   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cb0   0e02     movlw   0x02             	MOVLW	0x02
000cb2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cb4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cb6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cb8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000cba   ffe9
000cbc   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000cbe   ffea
000cc0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	263; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000cc2   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000cc4   0d05     mullw   0x05             	MULLW	0x05
000cc6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cc8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cca   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ccc   f000
000cce   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cd0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cd2   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000cd4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cd6   0e03     movlw   0x03             	MOVLW	0x03
000cd8   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cda   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cdc   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cde   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ce0   ffe9
000ce2   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ce4   ffea
000ce6   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000ce8   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000cea   0d05     mullw   0x05             	MULLW	0x05
000cec   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cee   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cf0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000cf2   f000
000cf4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cf6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cf8   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000cfa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cfc   0e04     movlw   0x04             	MOVLW	0x04
000cfe   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000d00   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d02   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000d04   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d06   ffe9
000d08   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d0a   ffea
000d0c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000d0e   2b7c     incf    0x7c, 0x1, 0x1   	INCF	_SortServoTimings_t_1_35, F, B
000d10   d795     bra     0x000c3c         	BRA	_00386_DS_
                                           _00333_DS_:
000d12   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d14   6b7c     clrf    0x7c, 0x1        	CLRF	_SortServoTimings_t_1_35, B
                                           _00389_DS_:
000d16   0e05     movlw   0x05             	MOVLW	0x05
000d18   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
000d1a   5d7c     subwf   0x7c, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_35, W, B
000d1c   e20d     bc      0x000d38         	BC	_00334_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[t]=0x00;
000d1e   0e2f     movlw   0x2f             	MOVLW	LOW(_mascaratotal)
                                           ; removed redundant BANKSEL
000d20   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000d22   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d24   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d26   0e07     movlw   0x07             	MOVLW	HIGH(_mascaratotal)
000d28   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d2a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d2c   ffe9
000d2e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d30   ffea
000d32   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d34   2b7c     incf    0x7c, 0x1, 0x1   	INCF	_SortServoTimings_t_1_35, F, B
000d36   d7ef     bra     0x000d16         	BRA	_00389_DS_
                                           _00334_DS_:
000d38   0107     movlb   0x7              	BANKSEL	_SortServoTimings_totalservos_1_35
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos=0; // Total servos revised. This helps to keep within "while"
000d3a   6b7d     clrf    0x7d, 0x1        	CLRF	_SortServoTimings_totalservos_1_35, B
000d3c   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	275; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t=0;           // Index to go through timevalue and timings tables.
000d3e   6b7c     clrf    0x7c, 0x1        	CLRF	_SortServoTimings_t_1_35, B
                                           _00382_DS_:
                                           ;	.line	276; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	while(totalservos<TotalPICpins)
000d40   0e1e     movlw   0x1e             	MOVLW	0x1e
000d42   0107     movlb   0x7              	BANKSEL	_SortServoTimings_totalservos_1_35
000d44   5d7d     subwf   0x7d, 0x0, 0x1   	SUBWF	_SortServoTimings_totalservos_1_35, W, B
000d46   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d48   ef21     goto    0x001a42         	GOTO	_00384_DS_
000d4a   f00d
                                           ;	.line	278; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000d4c   0e01     movlw   0x01             	MOVLW	0x01
000d4e   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
000d50   6f7e     movwf   0x7e, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
000d52   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
                                           ;	.line	280; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
000d54   6b7f     clrf    0x7f, 0x1        	CLRF	_SortServoTimings_s_1_35, B
                                           _00392_DS_:
000d56   0e1e     movlw   0x1e             	MOVLW	0x1e
000d58   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000d5a   5d7f     subwf   0x7f, 0x0, 0x1   	SUBWF	_SortServoTimings_s_1_35, W, B
000d5c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d5e   ef9d     goto    0x00193a         	GOTO	_00381_DS_
000d60   f00c
                                           ;	.line	283; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[s])
000d62   0e24     movlw   0x24             	MOVLW	LOW(_port)
                                           ; removed redundant BANKSEL
000d64   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000d66   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d68   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d6a   0e61     movlw   0x61             	MOVLW	HIGH(_port)
000d6c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d6e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000d70   0e00     movlw   0x00             	MOVLW	UPPER(_port)
000d72   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000d74   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000d76   fff6
000d78   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000d7a   fff7
000d7c   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000d7e   fff8
000d80   0009     tblrd*+                  	TBLRD*+	
000d82   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000d84   f000
000d86   0e05     movlw   0x05             	MOVLW	0x05
000d88   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000d8a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d8c   ef99     goto    0x001932         	GOTO	_00393_DS_
000d8e   f00c
000d90   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
000d92   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
000d94   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
000d96   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d98   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
000d9a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d9c   0bfc     andlw   0xfc             	ANDLW	0xfc
000d9e   0fae     addlw   0xae             	ADDLW	LOW(_00473_DS_)
000da0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000da2   0e0d     movlw   0x0d             	MOVLW	HIGH(_00473_DS_)
000da4   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
000da6   0e00     movlw   0x00             	MOVLW	UPPER(_00473_DS_)
000da8   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
000daa   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
000dac   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00473_DS_:
000dae   efe1     goto    0x000dc2         	GOTO	_00335_DS_
000db0   f006
000db2   ef02     goto    0x001004         	GOTO	_00344_DS_
000db4   f008
000db6   ef27     goto    0x00124e         	GOTO	_00353_DS_
000db8   f009
000dba   ef50     goto    0x0014a0         	GOTO	_00362_DS_
000dbc   f00a
000dbe   ef76     goto    0x0016ec         	GOTO	_00371_DS_
000dc0   f00b
                                           _00335_DS_:
                                           ;	.line	286; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pA] & activatedservos[pA]){
000dc2   0e06     movlw   0x06             	MOVLW	LOW(_mask)
000dc4   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000dc6   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000dc8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000dca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000dcc   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
000dce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000dd0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000dd2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000dd4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000dd6   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000dd8   fff6
000dda   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000ddc   fff7
000dde   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000de0   fff8
000de2   0009     tblrd*+                  	TBLRD*+	
000de4   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000de6   f000
000de8   0107     movlb   0x7              	BANKSEL	_mascaratotal
000dea   512f     movf    0x2f, 0x0, 0x1   	MOVF	_mascaratotal, W, B
000dec   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000dee   0107     movlb   0x7              	BANKSEL	_activatedservos
000df0   512a     movf    0x2a, 0x0, 0x1   	MOVF	_activatedservos, W, B
000df2   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000df4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000df6   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
000df8   ef99     goto    0x001932         	GOTO	_00393_DS_
000dfa   f00c
                                           ;	.line	289; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
000dfc   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
000dfe   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000e00   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000e02   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e04   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e06   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
000e08   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e0a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e0c   ffe9
000e0e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e10   ffea
000e12   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000e14   f000
000e16   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
000e18   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
000e1a   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000e1c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e1e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000e20   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
000e22   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000e24   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000e26   ffe9
000e28   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000e2a   ffea
000e2c   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000e2e   f001
000e30   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000e32   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000e34   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000e36   d08d     bra     0x000f52         	BRA	_00339_DS_
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
000e38   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000e3a   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000e3c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e3e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e40   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
000e42   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e44   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
000e46   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000e48   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000e4a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e4c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e4e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
000e50   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e52   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000e54   ffe9
000e56   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000e58   ffea
000e5a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000e5c   f002
000e5e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e60   ffe9
000e62   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e64   ffea
000e66   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000e68   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
000e6a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	291; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=mask[s];
000e6c   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000e6e   0d05     mullw   0x05             	MULLW	0x05
000e70   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000e72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e74   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000e76   f000
000e78   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000e7a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000e7c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000e7e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e80   0e06     movlw   0x06             	MOVLW	LOW(_mask)
000e82   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000e84   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000e86   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e88   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e8a   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
000e8c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e8e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
000e90   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000e92   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
000e94   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
000e96   fff6
000e98   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
000e9a   fff7
000e9c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
000e9e   fff8
000ea0   0009     tblrd*+                  	TBLRD*+	
000ea2   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
000ea4   f002
000ea6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ea8   ffe9
000eaa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000eac   ffea
000eae   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000eb0   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
000eb2   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000eb4   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000eb6   0d05     mullw   0x05             	MULLW	0x05
000eb8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000eba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ebc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ebe   f000
000ec0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ec2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ec4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000ec6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000ec8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000eca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ecc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ece   ffe9
000ed0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ed2   ffea
000ed4   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	294; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000ed6   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000ed8   0d05     mullw   0x05             	MULLW	0x05
000eda   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000edc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ede   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ee0   f000
000ee2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ee4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ee6   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000ee8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000eea   0e02     movlw   0x02             	MOVLW	0x02
000eec   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000eee   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000ef0   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ef2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ef4   ffe9
000ef6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ef8   ffea
000efa   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	297; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000efc   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000efe   0d05     mullw   0x05             	MULLW	0x05
000f00   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f02   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f04   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f06   f000
000f08   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f0a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f0c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000f0e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f10   0e03     movlw   0x03             	MOVLW	0x03
000f12   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f14   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f16   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f18   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f1a   ffe9
000f1c   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f1e   ffea
000f20   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000f22   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000f24   0d05     mullw   0x05             	MULLW	0x05
000f26   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f28   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f2a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f2c   f000
000f2e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f30   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f32   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000f34   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f36   0e04     movlw   0x04             	MOVLW	0x04
000f38   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f3a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f3c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f3e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f40   ffe9
000f42   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f44   ffea
000f46   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000f48   0e01     movlw   0x01             	MOVLW	0x01
000f4a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
000f4c   6f7e     movwf   0x7e, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
000f4e   ef99     goto    0x001932         	GOTO	_00393_DS_
000f50   f00c
                                           _00339_DS_:
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
000f52   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
000f54   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000f56   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000f58   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000f5a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000f5c   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
000f5e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f60   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f62   ffe9
000f64   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f66   ffea
000f68   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000f6a   f000
000f6c   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
000f6e   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
000f70   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000f72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f74   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000f76   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
000f78   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000f7a   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000f7c   ffe9
000f7e   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000f80   ffea
000f82   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000f84   f001
000f86   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000f88   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
000f8a   e002     bz      0x000f90         	BZ	_00477_DS_
000f8c   ef99     goto    0x001932         	GOTO	_00393_DS_
000f8e   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00477_DS_:
000f90   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	305; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA] |= mask[s];
000f92   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000f94   0d05     mullw   0x05             	MULLW	0x05
000f96   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f98   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f9a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f9c   f000
000f9e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fa0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000fa2   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000fa4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
000fa6   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000fa8   0d05     mullw   0x05             	MULLW	0x05
000faa   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000fac   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000fae   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
000fb0   f002
000fb2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fb4   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
000fb6   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000fb8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000fba   0e06     movlw   0x06             	MOVLW	LOW(_mask)
000fbc   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000fbe   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000fc0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
000fc2   6a05     clrf    0x05, 0x0        	CLRF	r0x05
000fc4   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
000fc6   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
000fc8   6a06     clrf    0x06, 0x0        	CLRF	r0x06
000fca   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000fcc   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
000fce   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
000fd0   fff6
000fd2   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
000fd4   fff7
000fd6   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
000fd8   fff8
000fda   0009     tblrd*+                  	TBLRD*+	
000fdc   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
000fde   f004
000fe0   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000fe2   ffe9
000fe4   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000fe6   ffea
000fe8   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000fea   f002
000fec   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000fee   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
000ff0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ff2   ffe9
000ff4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ff6   ffea
000ff8   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
000ffa   ffef
000ffc   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
000ffe   2b7e     incf    0x7e, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;      		
001000   ef99     goto    0x001932         	GOTO	_00393_DS_
001002   f00c
                                           _00344_DS_:
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pB] & activatedservos[pB]){
001004   0e06     movlw   0x06             	MOVLW	LOW(_mask)
001006   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001008   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00100a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00100c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00100e   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
001010   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001012   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001014   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001016   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001018   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00101a   fff6
00101c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00101e   fff7
001020   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
001022   fff8
001024   0009     tblrd*+                  	TBLRD*+	
001026   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001028   f000
00102a   0107     movlb   0x7              	BANKSEL	(_mascaratotal + 1)
00102c   5130     movf    0x30, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
00102e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001030   0107     movlb   0x7              	BANKSEL	(_activatedservos + 1)
001032   512b     movf    0x2b, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
001034   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001036   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001038   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
00103a   ef99     goto    0x001932         	GOTO	_00393_DS_
00103c   f00c
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
00103e   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
001040   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001042   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001044   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001046   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001048   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00104a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00104c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00104e   ffe9
001050   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001052   ffea
001054   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001056   f000
001058   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
00105a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
00105c   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00105e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001060   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001062   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001064   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001066   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001068   ffe9
00106a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00106c   ffea
00106e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001070   f001
001072   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001074   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001076   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001078   d08d     bra     0x001194         	BRA	_00348_DS_
                                           ;	.line	315; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
00107a   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
00107c   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00107e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001080   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001082   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001084   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001086   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
001088   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
00108a   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00108c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00108e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001090   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001092   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001094   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001096   ffe9
001098   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
00109a   ffea
00109c   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00109e   f002
0010a0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010a2   ffe9
0010a4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010a6   ffea
0010a8   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0010aa   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0010ac   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0010ae   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0010b0   0d05     mullw   0x05             	MULLW	0x05
0010b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010b8   f000
0010ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010be   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0010c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010c2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010c4   ffe9
0010c6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010c8   ffea
0010ca   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=mask[s];
0010cc   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0010ce   0d05     mullw   0x05             	MULLW	0x05
0010d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010d6   f000
0010d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010dc   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0010de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010e0   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0010e2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0010e4   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0010e6   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0010e8   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0010ea   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0010ec   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0010ee   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0010f0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0010f2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0010f4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0010f6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0010f8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0010fa   fff6
0010fc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0010fe   fff7
001100   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001102   fff8
001104   0009     tblrd*+                  	TBLRD*+	
001106   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001108   f002
00110a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00110c   ffe9
00110e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001110   ffea
001112   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001114   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001116   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
001118   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00111a   0d05     mullw   0x05             	MULLW	0x05
00111c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00111e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001120   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001122   f000
001124   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001126   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001128   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00112a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00112c   0e02     movlw   0x02             	MOVLW	0x02
00112e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001130   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001132   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001134   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001136   ffe9
001138   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00113a   ffea
00113c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
00113e   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001140   0d05     mullw   0x05             	MULLW	0x05
001142   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001144   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001146   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001148   f000
00114a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00114c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00114e   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001150   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001152   0e03     movlw   0x03             	MOVLW	0x03
001154   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001156   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001158   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00115a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00115c   ffe9
00115e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001160   ffea
001162   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	325; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001164   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001166   0d05     mullw   0x05             	MULLW	0x05
001168   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00116a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00116c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00116e   f000
001170   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001172   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001174   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001176   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001178   0e04     movlw   0x04             	MOVLW	0x04
00117a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00117c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00117e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001180   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001182   ffe9
001184   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001186   ffea
001188   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	327; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00118a   0e01     movlw   0x01             	MOVLW	0x01
00118c   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
00118e   6f7e     movwf   0x7e, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
001190   ef99     goto    0x001932         	GOTO	_00393_DS_
001192   f00c
                                           _00348_DS_:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001194   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
001196   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001198   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00119a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00119c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00119e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0011a0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011a2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0011a4   ffe9
0011a6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0011a8   ffea
0011aa   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0011ac   f000
0011ae   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
0011b0   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
0011b2   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0011b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011b6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0011b8   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
0011ba   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0011bc   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0011be   ffe9
0011c0   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0011c2   ffea
0011c4   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0011c6   f001
0011c8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0011ca   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0011cc   e002     bz      0x0011d2         	BZ	_00482_DS_
0011ce   ef99     goto    0x001932         	GOTO	_00393_DS_
0011d0   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00482_DS_:
0011d2   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	330; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB] |= mask[s];
0011d4   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0011d6   0d05     mullw   0x05             	MULLW	0x05
0011d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0011de   f000
0011e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0011e4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0011e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011e8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0011ea   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
0011ec   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0011ee   0d05     mullw   0x05             	MULLW	0x05
0011f0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011f2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0011f4   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0011f6   f002
0011f8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011fa   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0011fc   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0011fe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001200   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
001202   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001204   0e06     movlw   0x06             	MOVLW	LOW(_mask)
001206   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001208   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00120a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00120c   6a05     clrf    0x05, 0x0        	CLRF	r0x05
00120e   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
001210   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001212   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001214   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001216   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001218   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00121a   fff6
00121c   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
00121e   fff7
001220   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001222   fff8
001224   0009     tblrd*+                  	TBLRD*+	
001226   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001228   f004
00122a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00122c   ffe9
00122e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001230   ffea
001232   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001234   f002
001236   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001238   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00123a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00123c   ffe9
00123e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001240   ffea
001242   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001244   ffef
001246   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001248   2b7e     incf    0x7e, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	333; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00124a   ef99     goto    0x001932         	GOTO	_00393_DS_
00124c   f00c
                                           _00353_DS_:
                                           ;	.line	337; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pC] & activatedservos[pC]){
00124e   0e06     movlw   0x06             	MOVLW	LOW(_mask)
001250   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001252   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001254   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001256   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001258   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
00125a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00125c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00125e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001260   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001262   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001264   fff6
001266   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001268   fff7
00126a   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00126c   fff8
00126e   0009     tblrd*+                  	TBLRD*+	
001270   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001272   f000
001274   0107     movlb   0x7              	BANKSEL	(_mascaratotal + 2)
001276   5131     movf    0x31, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
001278   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00127a   0107     movlb   0x7              	BANKSEL	(_activatedservos + 2)
00127c   512c     movf    0x2c, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
00127e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001280   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001282   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001284   ef99     goto    0x001932         	GOTO	_00393_DS_
001286   f00c
                                           ;	.line	340; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001288   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
00128a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
00128c   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00128e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001290   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001292   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001294   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001296   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001298   ffe9
00129a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00129c   ffea
00129e   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0012a0   f000
0012a2   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
0012a4   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
0012a6   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0012a8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0012aa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0012ac   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
0012ae   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0012b0   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0012b2   ffe9
0012b4   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0012b6   ffea
0012b8   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0012ba   f001
0012bc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0012be   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0012c0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0012c2   d08d     bra     0x0013de         	BRA	_00357_DS_
                                           ;	.line	341; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
0012c4   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
0012c6   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0012c8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0012ca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0012cc   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
0012ce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0012d0   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
0012d2   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0012d4   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0012d6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0012d8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0012da   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0012dc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0012de   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0012e0   ffe9
0012e2   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0012e4   ffea
0012e6   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0012e8   f002
0012ea   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0012ec   ffe9
0012ee   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0012f0   ffea
0012f2   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0012f4   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0012f6   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	342; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0012f8   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0012fa   0d05     mullw   0x05             	MULLW	0x05
0012fc   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0012fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001300   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001302   f000
001304   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001306   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001308   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00130a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00130c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00130e   ffe9
001310   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001312   ffea
001314   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	343; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001316   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001318   0d05     mullw   0x05             	MULLW	0x05
00131a   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00131c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00131e   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001320   f000
001322   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001324   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001326   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001328   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00132a   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00132c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00132e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001330   ffe9
001332   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001334   ffea
001336   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	344; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=mask[s];
001338   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00133a   0d05     mullw   0x05             	MULLW	0x05
00133c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00133e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001340   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001342   f000
001344   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001346   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001348   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00134a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00134c   0e02     movlw   0x02             	MOVLW	0x02
00134e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001350   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001352   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001354   0e06     movlw   0x06             	MOVLW	LOW(_mask)
001356   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001358   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00135a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00135c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00135e   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
001360   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001362   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001364   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001366   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001368   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00136a   fff6
00136c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00136e   fff7
001370   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001372   fff8
001374   0009     tblrd*+                  	TBLRD*+	
001376   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001378   f002
00137a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00137c   ffe9
00137e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001380   ffea
001382   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001384   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001386   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
001388   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00138a   0d05     mullw   0x05             	MULLW	0x05
00138c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00138e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001390   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001392   f000
001394   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001396   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001398   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00139a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00139c   0e03     movlw   0x03             	MOVLW	0x03
00139e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013a2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013a4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013a6   ffe9
0013a8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013aa   ffea
0013ac   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	349; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
0013ae   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0013b0   0d05     mullw   0x05             	MULLW	0x05
0013b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0013b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0013b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0013b8   f000
0013ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0013bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013be   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0013c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013c2   0e04     movlw   0x04             	MOVLW	0x04
0013c4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013c6   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013cc   ffe9
0013ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013d0   ffea
0013d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	351; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
0013d4   0e01     movlw   0x01             	MOVLW	0x01
0013d6   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
0013d8   6f7e     movwf   0x7e, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
0013da   ef99     goto    0x001932         	GOTO	_00393_DS_
0013dc   f00c
                                           _00357_DS_:
                                           ;	.line	353; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
0013de   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
0013e0   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0013e2   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0013e4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0013e6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0013e8   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0013ea   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013ec   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013ee   ffe9
0013f0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013f2   ffea
0013f4   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0013f6   f000
0013f8   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
0013fa   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
0013fc   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0013fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001400   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001402   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001404   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001406   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001408   ffe9
00140a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00140c   ffea
00140e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001410   f001
001412   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001414   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001416   e002     bz      0x00141c         	BZ	_00487_DS_
001418   ef99     goto    0x001932         	GOTO	_00393_DS_
00141a   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00487_DS_:
00141c   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC] |= mask[s];
00141e   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001420   0d05     mullw   0x05             	MULLW	0x05
001422   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001424   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001426   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001428   f000
00142a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00142c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00142e   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001430   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001432   0e02     movlw   0x02             	MOVLW	0x02
001434   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001436   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001438   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
00143a   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00143c   0d05     mullw   0x05             	MULLW	0x05
00143e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001440   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001442   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001444   f002
001446   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001448   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
00144a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00144c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00144e   0e02     movlw   0x02             	MOVLW	0x02
001450   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001452   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001454   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001456   0e06     movlw   0x06             	MOVLW	LOW(_mask)
001458   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
00145a   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00145c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00145e   6a05     clrf    0x05, 0x0        	CLRF	r0x05
001460   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
001462   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001464   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001466   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001468   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
00146a   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00146c   fff6
00146e   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001470   fff7
001472   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001474   fff8
001476   0009     tblrd*+                  	TBLRD*+	
001478   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00147a   f004
00147c   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00147e   ffe9
001480   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001482   ffea
001484   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001486   f002
001488   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00148a   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00148c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00148e   ffe9
001490   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001492   ffea
001494   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001496   ffef
001498   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	355; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
00149a   2b7e     incf    0x7e, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	357; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00149c   ef99     goto    0x001932         	GOTO	_00393_DS_
00149e   f00c
                                           _00362_DS_:
                                           ;	.line	362; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pD] & activatedservos[pD]){
0014a0   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0014a2   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0014a4   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0014a6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014a8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014aa   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0014ac   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014ae   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014b0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0014b2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0014b4   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0014b6   fff6
0014b8   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0014ba   fff7
0014bc   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0014be   fff8
0014c0   0009     tblrd*+                  	TBLRD*+	
0014c2   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0014c4   f000
0014c6   0107     movlb   0x7              	BANKSEL	(_mascaratotal + 3)
0014c8   5132     movf    0x32, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0014ca   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014cc   0107     movlb   0x7              	BANKSEL	(_activatedservos + 3)
0014ce   512d     movf    0x2d, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
0014d0   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014d2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0014d4   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
0014d6   ef99     goto    0x001932         	GOTO	_00393_DS_
0014d8   f00c
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
0014da   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
0014dc   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0014de   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0014e0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014e2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014e4   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0014e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0014ea   ffe9
0014ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0014ee   ffea
0014f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0014f2   f000
0014f4   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
0014f6   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
0014f8   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0014fa   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0014fc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014fe   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001500   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001502   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001504   ffe9
001506   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001508   ffea
00150a   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
00150c   f001
00150e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001510   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001512   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001514   d08c     bra     0x00162e         	BRA	_00366_DS_
                                           ;	.line	366; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001516   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001518   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00151a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00151c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00151e   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001520   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001522   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
001524   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001526   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001528   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00152a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00152c   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00152e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001530   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001532   ffe9
001534   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001536   ffea
001538   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00153a   f002
00153c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00153e   ffe9
001540   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001542   ffea
001544   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001546   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001548   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	367; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
00154a   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00154c   0d05     mullw   0x05             	MULLW	0x05
00154e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001550   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001552   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001554   f000
001556   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001558   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00155a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00155c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00155e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001560   ffe9
001562   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001564   ffea
001566   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	368; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001568   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00156a   0d05     mullw   0x05             	MULLW	0x05
00156c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00156e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001570   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001572   f000
001574   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001576   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001578   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00157a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00157c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00157e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001580   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001582   ffe9
001584   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001586   ffea
001588   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	369; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
00158a   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00158c   0d05     mullw   0x05             	MULLW	0x05
00158e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001590   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001592   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001594   f000
001596   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001598   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00159a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00159c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00159e   0e02     movlw   0x02             	MOVLW	0x02
0015a0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015a2   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015a4   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015a6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015a8   ffe9
0015aa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015ac   ffea
0015ae   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	370; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=mask[s];
0015b0   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0015b2   0d05     mullw   0x05             	MULLW	0x05
0015b4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0015b6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0015b8   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0015ba   f000
0015bc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0015be   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c0   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0015c2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0015c4   0e03     movlw   0x03             	MOVLW	0x03
0015c6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015ca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015cc   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0015ce   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0015d0   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0015d2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0015d4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0015d6   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0015d8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0015da   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0015dc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0015de   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0015e0   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0015e2   fff6
0015e4   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0015e6   fff7
0015e8   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0015ea   fff8
0015ec   0009     tblrd*+                  	TBLRD*+	
0015ee   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0015f0   f002
0015f2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015f4   ffe9
0015f6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015f8   ffea
0015fa   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0015fc   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0015fe   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001600   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001602   0d05     mullw   0x05             	MULLW	0x05
001604   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001606   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001608   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00160a   f000
00160c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00160e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001610   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001612   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001614   0e04     movlw   0x04             	MOVLW	0x04
001616   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001618   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00161a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00161c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00161e   ffe9
001620   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001622   ffea
001624   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	374; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
001626   0e01     movlw   0x01             	MOVLW	0x01
001628   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
00162a   6f7e     movwf   0x7e, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
00162c   d182     bra     0x001932         	BRA	_00393_DS_
                                           _00366_DS_:
                                           ;	.line	376; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
00162e   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
001630   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001632   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001634   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001636   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001638   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00163a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00163c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00163e   ffe9
001640   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001642   ffea
001644   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001646   f000
001648   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
00164a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
00164c   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00164e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001650   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001652   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001654   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001656   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001658   ffe9
00165a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00165c   ffea
00165e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001660   f001
001662   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001664   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001666   e001     bz      0x00166a         	BZ	_00492_DS_
001668   d164     bra     0x001932         	BRA	_00393_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00492_DS_:
00166a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	377; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD] |= mask[s];
00166c   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00166e   0d05     mullw   0x05             	MULLW	0x05
001670   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001672   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001674   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001676   f000
001678   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00167a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00167c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00167e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001680   0e03     movlw   0x03             	MOVLW	0x03
001682   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001684   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001686   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
001688   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00168a   0d05     mullw   0x05             	MULLW	0x05
00168c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00168e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001690   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001692   f002
001694   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001696   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001698   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00169a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00169c   0e03     movlw   0x03             	MOVLW	0x03
00169e   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0016a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0016a2   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0016a4   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0016a6   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0016a8   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0016aa   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0016ac   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0016ae   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0016b0   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0016b2   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0016b4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016b6   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0016b8   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0016ba   fff6
0016bc   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0016be   fff7
0016c0   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0016c2   fff8
0016c4   0009     tblrd*+                  	TBLRD*+	
0016c6   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0016c8   f004
0016ca   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0016cc   ffe9
0016ce   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0016d0   ffea
0016d2   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0016d4   f002
0016d6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0016d8   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0016da   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0016dc   ffe9
0016de   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0016e0   ffea
0016e2   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
0016e4   ffef
0016e6   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	378; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
0016e8   2b7e     incf    0x7e, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	380; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0016ea   d123     bra     0x001932         	BRA	_00393_DS_
                                           _00371_DS_:
                                           ;	.line	385; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pE] & activatedservos[pE]){
0016ec   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0016ee   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0016f0   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0016f2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0016f4   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0016f6   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0016f8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0016fa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0016fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016fe   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001700   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001702   fff6
001704   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001706   fff7
001708   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00170a   fff8
00170c   0009     tblrd*+                  	TBLRD*+	
00170e   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001710   f000
001712   0107     movlb   0x7              	BANKSEL	(_mascaratotal + 4)
001714   5133     movf    0x33, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001716   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001718   0107     movlb   0x7              	BANKSEL	(_activatedservos + 4)
00171a   512e     movf    0x2e, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
00171c   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00171e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001720   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001722   d107     bra     0x001932         	BRA	_00393_DS_
                                           ;	.line	388; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001724   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
001726   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001728   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00172a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00172c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00172e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001730   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001732   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001734   ffe9
001736   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001738   ffea
00173a   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00173c   f000
00173e   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
001740   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
001742   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
001744   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001746   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001748   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
00174a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00174c   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
00174e   ffe9
001750   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001752   ffea
001754   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001756   f001
001758   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00175a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00175c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00175e   d08b     bra     0x001876         	BRA	_00375_DS_
                                           ;	.line	389; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001760   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001762   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
001764   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001766   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001768   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
00176a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00176c   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
00176e   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001770   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001772   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001774   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001776   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001778   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00177a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00177c   ffe9
00177e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001780   ffea
001782   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001784   f002
001786   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001788   ffe9
00178a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00178c   ffea
00178e   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001790   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001792   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	390; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
001794   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001796   0d05     mullw   0x05             	MULLW	0x05
001798   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00179a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00179c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00179e   f000
0017a0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017a2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017a4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0017a6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017a8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017aa   ffe9
0017ac   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017ae   ffea
0017b0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	391; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
0017b2   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0017b4   0d05     mullw   0x05             	MULLW	0x05
0017b6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017b8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017ba   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017bc   f000
0017be   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017c0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017c2   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0017c4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017c6   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0017c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017cc   ffe9
0017ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017d0   ffea
0017d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	392; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
0017d4   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0017d6   0d05     mullw   0x05             	MULLW	0x05
0017d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017de   f000
0017e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017e4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0017e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017e8   0e02     movlw   0x02             	MOVLW	0x02
0017ea   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017ec   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0017ee   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017f0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017f2   ffe9
0017f4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017f6   ffea
0017f8   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
0017fa   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0017fc   0d05     mullw   0x05             	MULLW	0x05
0017fe   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001800   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001802   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001804   f000
001806   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001808   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00180a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00180c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00180e   0e03     movlw   0x03             	MOVLW	0x03
001810   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001812   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001814   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001816   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001818   ffe9
00181a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00181c   ffea
00181e   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	394; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=mask[s];
001820   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001822   0d05     mullw   0x05             	MULLW	0x05
001824   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001826   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001828   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00182a   f000
00182c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00182e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001830   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001832   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001834   0e04     movlw   0x04             	MOVLW	0x04
001836   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001838   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00183a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00183c   0e06     movlw   0x06             	MOVLW	LOW(_mask)
00183e   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001840   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001842   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001844   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001846   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
001848   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00184a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00184c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00184e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001850   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001852   fff6
001854   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001856   fff7
001858   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00185a   fff8
00185c   0009     tblrd*+                  	TBLRD*+	
00185e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001860   f002
001862   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001864   ffe9
001866   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001868   ffea
00186a   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
00186c   ffef
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00186e   0e01     movlw   0x01             	MOVLW	0x01
001870   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
001872   6f7e     movwf   0x7e, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
001874   d05e     bra     0x001932         	BRA	_00393_DS_
                                           _00375_DS_:
                                           ;	.line	397; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001876   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
001878   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
00187a   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00187c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00187e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001880   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001882   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001884   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001886   ffe9
001888   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00188a   ffea
00188c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00188e   f000
001890   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
001892   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
001894   257c     addwf   0x7c, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
001896   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001898   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00189a   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
00189c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00189e   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0018a0   ffe9
0018a2   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0018a4   ffea
0018a6   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0018a8   f001
0018aa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0018ac   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0018ae   e001     bz      0x0018b2         	BZ	_00497_DS_
0018b0   d040     bra     0x001932         	BRA	_00393_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00497_DS_:
0018b2   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	398; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE] |= mask[s];
0018b4   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0018b6   0d05     mullw   0x05             	MULLW	0x05
0018b8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018ba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0018bc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0018be   f000
0018c0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018c2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018c4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0018c6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0018c8   0e04     movlw   0x04             	MOVLW	0x04
0018ca   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018cc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ce   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
0018d0   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0018d2   0d05     mullw   0x05             	MULLW	0x05
0018d4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018d6   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0018d8   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0018da   f002
0018dc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018de   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e0   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0018e2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0018e4   0e04     movlw   0x04             	MOVLW	0x04
0018e6   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ea   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0018ec   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0018ee   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0018f0   257f     addwf   0x7f, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0018f2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0018f4   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0018f6   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0018f8   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0018fa   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0018fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0018fe   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001900   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
001902   fff6
001904   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001906   fff7
001908   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
00190a   fff8
00190c   0009     tblrd*+                  	TBLRD*+	
00190e   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001910   f004
001912   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001914   ffe9
001916   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001918   ffea
00191a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00191c   f002
00191e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001920   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
001922   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001924   ffe9
001926   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001928   ffea
00192a   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
00192c   ffef
00192e   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	399; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001930   2b7e     incf    0x7e, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           _00393_DS_:
001932   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
                                           ;	.line	280; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
001934   2b7f     incf    0x7f, 0x1, 0x1   	INCF	_SortServoTimings_s_1_35, F, B
001936   efab     goto    0x000d56         	GOTO	_00392_DS_
001938   f006
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00381_DS_:
00193a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	405; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pA] |= timings[t][pA];
00193c   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00193e   0d05     mullw   0x05             	MULLW	0x05
001940   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001942   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001944   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001946   f000
001948   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00194a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00194c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00194e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001950   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001952   ffe9
001954   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001956   ffea
001958   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00195a   f000
00195c   0107     movlb   0x7              	BANKSEL	_mascaratotal
00195e   512f     movf    0x2f, 0x0, 0x1   	MOVF	_mascaratotal, W, B
001960   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001962   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001964   6f2f     movwf   0x2f, 0x1        	MOVWF	_mascaratotal, B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001966   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	406; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pB] |= timings[t][pB];
001968   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00196a   0d05     mullw   0x05             	MULLW	0x05
00196c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00196e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001970   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001972   f000
001974   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001976   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001978   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00197a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00197c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00197e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001980   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001982   ffe9
001984   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001986   ffea
001988   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00198a   f000
00198c   0107     movlb   0x7              	BANKSEL	(_mascaratotal + 1)
00198e   5130     movf    0x30, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
001990   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001992   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001994   6f30     movwf   0x30, 0x1        	MOVWF	(_mascaratotal + 1), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001996   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	408; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pC] |= timings[t][pC];
001998   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00199a   0d05     mullw   0x05             	MULLW	0x05
00199c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00199e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019a0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019a2   f000
0019a4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019a6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019a8   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0019aa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019ac   0e02     movlw   0x02             	MOVLW	0x02
0019ae   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019b0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019b2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019b4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019b6   ffe9
0019b8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ba   ffea
0019bc   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019be   f000
0019c0   0107     movlb   0x7              	BANKSEL	(_mascaratotal + 2)
0019c2   5131     movf    0x31, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
0019c4   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019c8   6f31     movwf   0x31, 0x1        	MOVWF	(_mascaratotal + 2), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0019ca   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	411; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pD] |= timings[t][pD];
0019cc   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0019ce   0d05     mullw   0x05             	MULLW	0x05
0019d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0019d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019d6   f000
0019d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019dc   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0019de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019e0   0e03     movlw   0x03             	MOVLW	0x03
0019e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019e4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019e6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019ea   ffe9
0019ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ee   ffea
0019f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019f2   f000
0019f4   0107     movlb   0x7              	BANKSEL	(_mascaratotal + 3)
0019f6   5132     movf    0x32, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0019f8   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019fa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019fc   6f32     movwf   0x32, 0x1        	MOVWF	(_mascaratotal + 3), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0019fe   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	414; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pE] |= timings[t][pE];
001a00   517c     movf    0x7c, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001a02   0d05     mullw   0x05             	MULLW	0x05
001a04   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001a06   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001a08   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001a0a   f000
001a0c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001a0e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a10   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001a12   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001a14   0e04     movlw   0x04             	MOVLW	0x04
001a16   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a18   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001a1a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001a1c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001a1e   ffe9
001a20   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001a22   ffea
001a24   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001a26   f000
001a28   0107     movlb   0x7              	BANKSEL	(_mascaratotal + 4)
001a2a   5133     movf    0x33, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001a2c   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001a2e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001a30   6f33     movwf   0x33, 0x1        	MOVWF	(_mascaratotal + 4), B
001a32   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	417; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos += numservos;
001a34   517e     movf    0x7e, 0x0, 0x1   	MOVF	_SortServoTimings_numservos_1_35, W, B
001a36   0107     movlb   0x7              	BANKSEL	_SortServoTimings_totalservos_1_35
001a38   277d     addwf   0x7d, 0x1, 0x1   	ADDWF	_SortServoTimings_totalservos_1_35, F, B
001a3a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	418; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t++;
001a3c   2b7c     incf    0x7c, 0x1, 0x1   	INCF	_SortServoTimings_t_1_35, F, B
001a3e   efa0     goto    0x000d40         	GOTO	_00382_DS_
001a40   f006
                                           _00384_DS_:
001a42   0106     movlb   0x6              	BANKSEL	_needreordering
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=0;  // This indicates that servo timings are sorted.
001a44   6bf6     clrf    0xf6, 0x1        	CLRF	_needreordering, B
                                           ;	.line	422; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
001a46   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
001a48   f006
001a4a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
001a4c   f005
001a4e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001a50   f004
001a52   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001a54   f003
001a56   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001a58   f002
001a5a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001a5c   f001
001a5e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001a60   f000
001a62   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
00763a   0107     movlb   0x7              	BANKSEL	_activatedservos
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA | activatedservos[pA];
00763c   512a     movf    0x2a, 0x0, 0x1   	MOVF	_activatedservos, W, B
00763e   1280     iorwf   0x80, 0x1, 0x0   	IORWF	_PORTA, F
                                           ; removed redundant BANKSEL
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB | activatedservos[pB];
007640   512b     movf    0x2b, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
007642   1281     iorwf   0x81, 0x1, 0x0   	IORWF	_PORTB, F
                                           ; removed redundant BANKSEL
                                           ;	.line	235; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC | activatedservos[pC];
007644   512c     movf    0x2c, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
007646   1282     iorwf   0x82, 0x1, 0x0   	IORWF	_PORTC, F
                                           ; removed redundant BANKSEL
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD | activatedservos[pD];
007648   512d     movf    0x2d, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
00764a   1283     iorwf   0x83, 0x1, 0x0   	IORWF	_PORTD, F
                                           ; removed redundant BANKSEL
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE | activatedservos[pE];
00764c   512e     movf    0x2e, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
00764e   1284     iorwf   0x84, 0x1, 0x0   	IORWF	_PORTE, F
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
007650   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void ServosPulseDown()
00562e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005630   ffe5
005632   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005634   ffd9
005636   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005638   ffe5
00563a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00563c   ffe5
00563e   0107     movlb   0x7              	BANKSEL	_ServosPulseDown_timingindex_1_30
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	volatile unsigned char timingindex = 0;
005640   6b7b     clrf    0x7b, 0x1        	CLRF	_ServosPulseDown_timingindex_1_30, B
005642   0106     movlb   0x6              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
005644   6bf7     clrf    0xf7, 0x1        	CLRF	_timedivision, B
                                           _00306_DS_:
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (timevalue[timingindex] == timedivision)
005646   0eca     movlw   0xca             	MOVLW	LOW(_timevalue)
005648   0107     movlb   0x7              	BANKSEL	_ServosPulseDown_timingindex_1_30
00564a   257b     addwf   0x7b, 0x0, 0x1   	ADDWF	_ServosPulseDown_timingindex_1_30, W, B
00564c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00564e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
005650   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
005652   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005654   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005656   ffe9
005658   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00565a   ffea
00565c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00565e   f000
005660   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005662   0106     movlb   0x6              	BANKSEL	_timedivision
005664   19f7     xorwf   0xf7, 0x0, 0x1   	XORWF	_timedivision, W, B
005666   e001     bz      0x00566a         	BZ	_00317_DS_
005668   d06a     bra     0x00573e         	BRA	_00304_DS_
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           _00317_DS_:
00566a   0107     movlb   0x7              	BANKSEL	_ServosPulseDown_timingindex_1_30
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA ^ timings[timingindex][pA];
00566c   517b     movf    0x7b, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
00566e   0d05     mullw   0x05             	MULLW	0x05
005670   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
005672   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005674   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
005676   f000
005678   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00567a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00567c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00567e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005680   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005682   ffe9
005684   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
005686   ffea
005688   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00568a   f000
00568c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00568e   1a80     xorwf   0x80, 0x1, 0x0   	XORWF	_PORTA, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB ^ timings[timingindex][pB];
005690   517b     movf    0x7b, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
005692   0d05     mullw   0x05             	MULLW	0x05
005694   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
005696   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005698   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00569a   f000
00569c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00569e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0056a0   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0056a2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0056a4   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0056a6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0056a8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0056aa   ffe9
0056ac   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0056ae   ffea
0056b0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0056b2   f000
0056b4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0056b6   1a81     xorwf   0x81, 0x1, 0x0   	XORWF	_PORTB, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC ^ timings[timingindex][pC];
0056b8   517b     movf    0x7b, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
0056ba   0d05     mullw   0x05             	MULLW	0x05
0056bc   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0056be   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0056c0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0056c2   f000
0056c4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0056c6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0056c8   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0056ca   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0056cc   0e02     movlw   0x02             	MOVLW	0x02
0056ce   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0056d0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0056d2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0056d4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0056d6   ffe9
0056d8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0056da   ffea
0056dc   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0056de   f000
0056e0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0056e2   1a82     xorwf   0x82, 0x1, 0x0   	XORWF	_PORTC, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD ^ timings[timingindex][pD];
0056e4   517b     movf    0x7b, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
0056e6   0d05     mullw   0x05             	MULLW	0x05
0056e8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0056ea   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0056ec   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0056ee   f000
0056f0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0056f2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0056f4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0056f6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0056f8   0e03     movlw   0x03             	MOVLW	0x03
0056fa   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0056fc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0056fe   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
005700   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005702   ffe9
005704   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
005706   ffea
005708   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00570a   f000
00570c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00570e   1a83     xorwf   0x83, 0x1, 0x0   	XORWF	_PORTD, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE ^ timings[timingindex][pE];
005710   517b     movf    0x7b, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
005712   0d05     mullw   0x05             	MULLW	0x05
005714   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
005716   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005718   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00571a   f000
00571c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00571e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005720   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
005722   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005724   0e04     movlw   0x04             	MOVLW	0x04
005726   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005728   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00572a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00572c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00572e   ffe9
005730   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
005732   ffea
005734   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
005736   f000
005738   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00573a   1a84     xorwf   0x84, 0x1, 0x0   	XORWF	_PORTE, F
                                           ; removed redundant BANKSEL
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timingindex++;
00573c   2b7b     incf    0x7b, 0x1, 0x1   	INCF	_ServosPulseDown_timingindex_1_30, F, B
                                           _00304_DS_:
00573e   0e07     movlw   0x07             	movlw	7
005740   6f7a     movwf   0x7a, 0x1        	movwf	_loopvar
                                           bucle:
005742   0000     nop                      	NOP
005744   0000     nop                      	NOP
005746   0000     nop                      	NOP
005748   0000     nop                      	NOP
00574a   0000     nop                      	NOP
00574c   0000     nop                      	NOP
00574e   0000     nop                      	NOP
005750   0000     nop                      	NOP
005752   0000     nop                      	NOP
005754   0000     nop                      	NOP
005756   0000     nop                      	NOP
005758   2f7a     decfsz  0x7a, 0x1, 0x1   	decfsz	_loopvar,1
00575a   efa1     goto    0x005742         	goto	bucle
00575c   f02b
                                           	
00575e   0106     movlb   0x6              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
005760   2bf7     incf    0xf7, 0x1, 0x1   	INCF	_timedivision, F, B
005762   0efb     movlw   0xfb             	MOVLW	0xfb
                                           ; removed redundant BANKSEL
005764   5df7     subwf   0xf7, 0x0, 0x1   	SUBWF	_timedivision, W, B
005766   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
005768   d76e     bra     0x005646         	BRA	_00306_DS_
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
00576a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00576c   f001
00576e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005770   f000
005772   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005774   ffd9
005776   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void servos_init()
0067e2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0067e4   ffe5
0067e6   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0067e8   ffe5
0067ea   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0067ec   ffe5
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
0067ee   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00277_DS_:
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[a]=255;  //Filling up the servovalues table to 255.
0067f0   0eac     movlw   0xac             	MOVLW	LOW(_servovalues)
0067f2   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0067f4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0067f6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0067f8   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0067fa   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0067fc   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0067fe   ffe9
006800   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
006802   ffea
006804   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ;	.line	160; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][a]= DefaultSERVOMIN; // Setting min servo position to 1000 usec.
006806   0e50     movlw   0x50             	MOVLW	LOW(_maxminpos)
006808   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00680a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00680c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00680e   0e06     movlw   0x06             	MOVLW	HIGH(_maxminpos)
006810   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
006812   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
006814   ffe9
006816   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
006818   ffea
00681a   0e40     movlw   0x40             	MOVLW	0x40
00681c   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][a]= DefaultSERVOMAX; // Setting max servo position to 2000 usec.
00681e   0e6e     movlw   0x6e             	MOVLW	LOW(_maxminpos + 30)
006820   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
006822   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
006824   6a02     clrf    0x02, 0x0        	CLRF	r0x02
006826   0e06     movlw   0x06             	MOVLW	HIGH(_maxminpos + 30)
006828   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00682a   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
00682c   ffe9
00682e   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
006830   ffea
006832   0ec0     movlw   0xc0             	MOVLW	0xc0
006834   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
006836   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
006838   0e1e     movlw   0x1e             	MOVLW	0x1e
00683a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00683c   e3d9     bnc     0x0067f0         	BNC	_00277_DS_
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
00683e   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00279_DS_:
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[a]=0x00;  // Setting all pins as deactivated as servo.
006840   0e2a     movlw   0x2a             	MOVLW	LOW(_activatedservos)
006842   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
006844   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
006846   6a02     clrf    0x02, 0x0        	CLRF	r0x02
006848   0e07     movlw   0x07             	MOVLW	HIGH(_activatedservos)
00684a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00684c   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
00684e   ffe9
006850   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
006852   ffea
006854   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
006856   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
006858   0e05     movlw   0x05             	MOVLW	0x05
00685a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00685c   e3f1     bnc     0x006840         	BNC	_00279_DS_
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 0; // Disable global HP interrupts
00685e   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	_INTCONbits, 7
                                           ;	.line	169; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 0; // Disable global LP interrupts
006860   9cf2     bcf     0xf2, 0x6, 0x0   	BCF	_INTCONbits, 6
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=0x01; 			//timer 1 prescaler 1 source is internal oscillator
006862   0e01     movlw   0x01             	MOVLW	0x01
006864   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H=0xFF; 			// First value on timer to start up...
006866   0eff     movlw   0xff             	MOVLW	0xff
006868   68cf     setf    0xcf, 0x0        	SETF	_TMR1H
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L=0x00; 			// ...now the first interrupt will be generated by timer after 9 ms.
00686a   6ace     clrf    0xce, 0x0        	CLRF	_TMR1L
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	IPR1bits.TMR1IP = 1; 	// INT_HIGH_PRIORITY
00686c   809f     bsf     0x9f, 0x0, 0x0   	BSF	_IPR1bits, 0
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF = 0; 	// Setting flag to 0
00686e   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIE1bits.TMR1IE = 1; 	// INT_ENABLE
006870   809d     bsf     0x9d, 0x0, 0x0   	BSF	_PIE1bits, 0
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CONbits.TMR1ON   = 1; // Starting TMR1
006872   80cd     bsf     0xcd, 0x0, 0x0   	BSF	_T1CONbits, 0
                                           ;	.line	179; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 1; // Enable global HP interrupts
006874   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 1; // Enable global LP interrupts
006876   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
006878   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00687a   f002
00687c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00687e   f001
006880   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006882   f000
006884   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__toggle	code
                                           _toggle:
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	void toggle(u8 pin)
007288   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00728a   ffe5
00728c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00728e   ffd9
007290   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007292   ffe5
007294   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
007296   ffe5
007298   0e02     movlw   0x02             	MOVLW	0x02
00729a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00729c   f000
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	state = digitalread(pin);
00729e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0072a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0072a2   ec27     call    0x004c4e, 0x0    	CALL	_digitalread
0072a4   f026
0072a6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0072a8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	digitalwrite(pin, state^1);
0072aa   7001     btg     0x01, 0x0, 0x0   	BTG	r0x01, 0
0072ac   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0072ae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0072b0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0072b2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0072b4   ec6c     call    0x003cd8, 0x0    	CALL	_digitalwrite
0072b6   f01e
0072b8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0072ba   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	52; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	}
0072bc   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0072be   f001
0072c0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0072c2   f000
0072c4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0072c6   ffd9
0072c8   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	u8 digitalread(u8 pin)
004c4e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004c50   ffe5
004c52   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004c54   ffd9
004c56   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004c58   ffe5
004c5a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004c5c   ffe5
004c5e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004c60   ffe5
004c62   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004c64   ffe5
004c66   0e02     movlw   0x02             	MOVLW	0x02
004c68   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004c6a   f000
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	switch (port[pin])
004c6c   0e24     movlw   0x24             	MOVLW	LOW(_port)
004c6e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004c70   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004c72   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004c74   0e61     movlw   0x61             	MOVLW	HIGH(_port)
004c76   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004c78   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004c7a   0e00     movlw   0x00             	MOVLW	UPPER(_port)
004c7c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004c7e   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004c80   fff6
004c82   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004c84   fff7
004c86   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004c88   fff8
004c8a   0009     tblrd*+                  	TBLRD*+	
004c8c   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004c8e   f001
004c90   0e05     movlw   0x05             	MOVLW	0x05
004c92   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
004c94   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004c96   d0c2     bra     0x004e1c         	BRA	_00258_DS_
004c98   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
004c9a   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
004c9c   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
004c9e   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
004ca0   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
004ca2   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
004ca4   0bfc     andlw   0xfc             	ANDLW	0xfc
004ca6   0fb6     addlw   0xb6             	ADDLW	LOW(_00265_DS_)
004ca8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004caa   0e4c     movlw   0x4c             	MOVLW	HIGH(_00265_DS_)
004cac   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
004cae   0e00     movlw   0x00             	MOVLW	UPPER(_00265_DS_)
004cb0   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
004cb2   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
004cb4   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00265_DS_:
004cb6   ef65     goto    0x004cca         	GOTO	_00253_DS_
004cb8   f026
004cba   ef87     goto    0x004d0e         	GOTO	_00254_DS_
004cbc   f026
004cbe   efa9     goto    0x004d52         	GOTO	_00255_DS_
004cc0   f026
004cc2   efcb     goto    0x004d96         	GOTO	_00256_DS_
004cc4   f026
004cc6   efed     goto    0x004dda         	GOTO	_00257_DS_
004cc8   f026
                                           _00253_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTA & mask[pin])!=0);
004cca   0e06     movlw   0x06             	MOVLW	LOW(_mask)
004ccc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004cce   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004cd0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004cd2   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
004cd4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004cd6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004cd8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004cda   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004cdc   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004cde   fff6
004ce0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004ce2   fff7
004ce4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004ce6   fff8
004ce8   0009     tblrd*+                  	TBLRD*+	
004cea   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004cec   f001
004cee   5080     movf    0x80, 0x0, 0x0   	MOVF	_PORTA, W
004cf0   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
004cf2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004cf4   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004cf6   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004cf8   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004cfa   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004cfc   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
004cfe   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004d00   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004d02   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004d04   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004d06   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004d08   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
004d0a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004d0c   d088     bra     0x004e1e         	BRA	_00259_DS_
                                           _00254_DS_:
                                           ;	.line	60; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTB & mask[pin])!=0);
004d0e   0e06     movlw   0x06             	MOVLW	LOW(_mask)
004d10   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004d12   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004d14   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004d16   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
004d18   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004d1a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004d1c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004d1e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004d20   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004d22   fff6
004d24   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004d26   fff7
004d28   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004d2a   fff8
004d2c   0009     tblrd*+                  	TBLRD*+	
004d2e   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004d30   f001
004d32   5081     movf    0x81, 0x0, 0x0   	MOVF	_PORTB, W
004d34   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
004d36   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004d38   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004d3a   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004d3c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004d3e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004d40   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
004d42   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004d44   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004d46   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004d48   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004d4a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004d4c   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
004d4e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004d50   d066     bra     0x004e1e         	BRA	_00259_DS_
                                           _00255_DS_:
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTC & mask[pin])!=0);
004d52   0e06     movlw   0x06             	MOVLW	LOW(_mask)
004d54   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004d56   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004d58   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004d5a   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
004d5c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004d5e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004d60   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004d62   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004d64   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004d66   fff6
004d68   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004d6a   fff7
004d6c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004d6e   fff8
004d70   0009     tblrd*+                  	TBLRD*+	
004d72   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004d74   f001
004d76   5082     movf    0x82, 0x0, 0x0   	MOVF	_PORTC, W
004d78   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
004d7a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004d7c   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004d7e   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004d80   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004d82   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004d84   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
004d86   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004d88   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004d8a   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004d8c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004d8e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004d90   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
004d92   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004d94   d044     bra     0x004e1e         	BRA	_00259_DS_
                                           _00256_DS_:
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTD & mask[pin])!=0);
004d96   0e06     movlw   0x06             	MOVLW	LOW(_mask)
004d98   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004d9a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004d9c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004d9e   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
004da0   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004da2   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004da4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004da6   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004da8   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004daa   fff6
004dac   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004dae   fff7
004db0   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004db2   fff8
004db4   0009     tblrd*+                  	TBLRD*+	
004db6   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004db8   f001
004dba   5083     movf    0x83, 0x0, 0x0   	MOVF	_PORTD, W
004dbc   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
004dbe   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004dc0   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004dc2   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004dc4   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004dc6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004dc8   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
004dca   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004dcc   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004dce   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004dd0   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004dd2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004dd4   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
004dd6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004dd8   d022     bra     0x004e1e         	BRA	_00259_DS_
                                           _00257_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTE & mask[pin])!=0);
004dda   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004ddc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004dde   0e06     movlw   0x06             	MOVLW	LOW(_mask)
004de0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004de2   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
004de4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004de6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004de8   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004dea   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
004dec   fff6
004dee   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
004df0   fff7
004df2   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
004df4   fff8
004df6   0009     tblrd*+                  	TBLRD*+	
004df8   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
004dfa   f000
004dfc   5084     movf    0x84, 0x0, 0x0   	MOVF	_PORTE, W
004dfe   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
004e00   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004e02   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004e04   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004e06   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004e08   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004e0a   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
004e0c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004e0e   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004e10   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004e12   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004e14   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004e16   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
004e18   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004e1a   d001     bra     0x004e1e         	BRA	_00259_DS_
                                           _00258_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return 0;
004e1c   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00259_DS_:
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	}
004e1e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004e20   f003
004e22   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004e24   f002
004e26   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004e28   f001
004e2a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004e2c   f000
004e2e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e30   ffd9
004e32   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	void digitalwrite(u8 pin, u8 state)
003cd8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003cda   ffe5
003cdc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003cde   ffd9
003ce0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003ce2   ffe5
003ce4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003ce6   ffe5
003ce8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003cea   ffe5
003cec   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003cee   ffe5
003cf0   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003cf2   ffe5
003cf4   0e02     movlw   0x02             	MOVLW	0x02
003cf6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003cf8   f000
003cfa   0e03     movlw   0x03             	MOVLW	0x03
003cfc   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
003cfe   f001
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	switch (port[pin])
003d00   0e24     movlw   0x24             	MOVLW	LOW(_port)
003d02   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003d04   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003d06   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003d08   0e61     movlw   0x61             	MOVLW	HIGH(_port)
003d0a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003d0c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003d0e   0e00     movlw   0x00             	MOVLW	UPPER(_port)
003d10   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003d12   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003d14   fff6
003d16   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003d18   fff7
003d1a   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003d1c   fff8
003d1e   0009     tblrd*+                  	TBLRD*+	
003d20   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003d22   f002
003d24   0e05     movlw   0x05             	MOVLW	0x05
003d26   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
003d28   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
003d2a   d111     bra     0x003f4e         	BRA	_00227_DS_
003d2c   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
003d2e   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
003d30   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
003d32   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003d34   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
003d36   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003d38   0bfc     andlw   0xfc             	ANDLW	0xfc
003d3a   0f4a     addlw   0x4a             	ADDLW	LOW(_00248_DS_)
003d3c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d3e   0e3d     movlw   0x3d             	MOVLW	HIGH(_00248_DS_)
003d40   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
003d42   0e00     movlw   0x00             	MOVLW	UPPER(_00248_DS_)
003d44   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
003d46   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
003d48   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00248_DS_:
003d4a   efaf     goto    0x003d5e         	GOTO	_00206_DS_
003d4c   f01e
003d4e   efe1     goto    0x003dc2         	GOTO	_00210_DS_
003d50   f01e
003d52   ef13     goto    0x003e26         	GOTO	_00214_DS_
003d54   f01f
003d56   ef45     goto    0x003e8a         	GOTO	_00218_DS_
003d58   f01f
003d5a   ef77     goto    0x003eee         	GOTO	_00222_DS_
003d5c   f01f
                                           _00206_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATA=LATA | mask[pin];
003d5e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003d60   e015     bz      0x003d8c         	BZ	_00208_DS_
003d62   0e06     movlw   0x06             	MOVLW	LOW(_mask)
003d64   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003d66   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003d68   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003d6a   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
003d6c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003d6e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003d70   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003d72   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003d74   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003d76   fff6
003d78   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003d7a   fff7
003d7c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003d7e   fff8
003d80   0009     tblrd*+                  	TBLRD*+	
003d82   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003d84   f002
003d86   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003d88   1289     iorwf   0x89, 0x1, 0x0   	IORWF	_LATA, F
003d8a   d0e1     bra     0x003f4e         	BRA	_00227_DS_
                                           _00208_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATA=LATA & (255-mask[pin]);
003d8c   0e06     movlw   0x06             	MOVLW	LOW(_mask)
003d8e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003d90   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003d92   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003d94   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
003d96   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003d98   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003d9a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003d9c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003d9e   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003da0   fff6
003da2   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003da4   fff7
003da6   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003da8   fff8
003daa   0009     tblrd*+                  	TBLRD*+	
003dac   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003dae   f002
003db0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003db2   08ff     sublw   0xff             	SUBLW	0xff
003db4   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003db6   5089     movf    0x89, 0x0, 0x0   	MOVF	_LATA, W
003db8   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003dba   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003dbc   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
003dbe   6e89     movwf   0x89, 0x0        	MOVWF	_LATA
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
003dc0   d0c6     bra     0x003f4e         	BRA	_00227_DS_
                                           _00210_DS_:
                                           ;	.line	61; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATB=LATB | mask[pin]; 
003dc2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003dc4   e015     bz      0x003df0         	BZ	_00212_DS_
003dc6   0e06     movlw   0x06             	MOVLW	LOW(_mask)
003dc8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003dca   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003dcc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003dce   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
003dd0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003dd2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003dd4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003dd6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003dd8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003dda   fff6
003ddc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003dde   fff7
003de0   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003de2   fff8
003de4   0009     tblrd*+                  	TBLRD*+	
003de6   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003de8   f002
003dea   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003dec   128a     iorwf   0x8a, 0x1, 0x0   	IORWF	_LATB, F
003dee   d0af     bra     0x003f4e         	BRA	_00227_DS_
                                           _00212_DS_:
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATB=LATB & (255-mask[pin]);
003df0   0e06     movlw   0x06             	MOVLW	LOW(_mask)
003df2   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003df4   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003df6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003df8   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
003dfa   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003dfc   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003dfe   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003e00   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003e02   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003e04   fff6
003e06   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003e08   fff7
003e0a   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003e0c   fff8
003e0e   0009     tblrd*+                  	TBLRD*+	
003e10   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003e12   f002
003e14   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003e16   08ff     sublw   0xff             	SUBLW	0xff
003e18   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003e1a   508a     movf    0x8a, 0x0, 0x0   	MOVF	_LATB, W
003e1c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003e1e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003e20   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
003e22   6e8a     movwf   0x8a, 0x0        	MOVWF	_LATB
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
003e24   d094     bra     0x003f4e         	BRA	_00227_DS_
                                           _00214_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATC=LATC | mask[pin];
003e26   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003e28   e015     bz      0x003e54         	BZ	_00216_DS_
003e2a   0e06     movlw   0x06             	MOVLW	LOW(_mask)
003e2c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003e2e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003e30   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003e32   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
003e34   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003e36   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003e38   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003e3a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003e3c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003e3e   fff6
003e40   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003e42   fff7
003e44   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003e46   fff8
003e48   0009     tblrd*+                  	TBLRD*+	
003e4a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003e4c   f002
003e4e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003e50   128b     iorwf   0x8b, 0x1, 0x0   	IORWF	_LATC, F
003e52   d07d     bra     0x003f4e         	BRA	_00227_DS_
                                           _00216_DS_:
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATC=LATC & (255-mask[pin]);
003e54   0e06     movlw   0x06             	MOVLW	LOW(_mask)
003e56   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003e58   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003e5a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003e5c   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
003e5e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003e60   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003e62   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003e64   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003e66   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003e68   fff6
003e6a   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003e6c   fff7
003e6e   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003e70   fff8
003e72   0009     tblrd*+                  	TBLRD*+	
003e74   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003e76   f002
003e78   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003e7a   08ff     sublw   0xff             	SUBLW	0xff
003e7c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003e7e   508b     movf    0x8b, 0x0, 0x0   	MOVF	_LATC, W
003e80   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003e82   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003e84   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
003e86   6e8b     movwf   0x8b, 0x0        	MOVWF	_LATC
                                           ;	.line	67; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
003e88   d062     bra     0x003f4e         	BRA	_00227_DS_
                                           _00218_DS_:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATD=LATD | mask[pin]; 
003e8a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003e8c   e015     bz      0x003eb8         	BZ	_00220_DS_
003e8e   0e06     movlw   0x06             	MOVLW	LOW(_mask)
003e90   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003e92   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003e94   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003e96   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
003e98   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003e9a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003e9c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003e9e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003ea0   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003ea2   fff6
003ea4   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003ea6   fff7
003ea8   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003eaa   fff8
003eac   0009     tblrd*+                  	TBLRD*+	
003eae   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003eb0   f002
003eb2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003eb4   128c     iorwf   0x8c, 0x1, 0x0   	IORWF	_LATD, F
003eb6   d04b     bra     0x003f4e         	BRA	_00227_DS_
                                           _00220_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATD=LATD & (255-mask[pin]);
003eb8   0e06     movlw   0x06             	MOVLW	LOW(_mask)
003eba   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003ebc   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003ebe   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003ec0   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
003ec2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003ec4   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003ec6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003ec8   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003eca   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003ecc   fff6
003ece   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003ed0   fff7
003ed2   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003ed4   fff8
003ed6   0009     tblrd*+                  	TBLRD*+	
003ed8   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003eda   f002
003edc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003ede   08ff     sublw   0xff             	SUBLW	0xff
003ee0   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003ee2   508c     movf    0x8c, 0x0, 0x0   	MOVF	_LATD, W
003ee4   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003ee6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003ee8   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
003eea   6e8c     movwf   0x8c, 0x0        	MOVWF	_LATD
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
003eec   d030     bra     0x003f4e         	BRA	_00227_DS_
                                           _00222_DS_:
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATE=LATE | mask[pin]; 
003eee   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003ef0   e015     bz      0x003f1c         	BZ	_00224_DS_
003ef2   0e06     movlw   0x06             	MOVLW	LOW(_mask)
003ef4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003ef6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003ef8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003efa   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
003efc   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003efe   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003f00   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003f02   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003f04   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003f06   fff6
003f08   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003f0a   fff7
003f0c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003f0e   fff8
003f10   0009     tblrd*+                  	TBLRD*+	
003f12   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003f14   f001
003f16   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003f18   128d     iorwf   0x8d, 0x1, 0x0   	IORWF	_LATE, F
003f1a   d019     bra     0x003f4e         	BRA	_00227_DS_
                                           _00224_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATE=LATE & (255-mask[pin]);
003f1c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003f1e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003f20   0e06     movlw   0x06             	MOVLW	LOW(_mask)
003f22   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003f24   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
003f26   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003f28   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003f2a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003f2c   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
003f2e   fff6
003f30   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003f32   fff7
003f34   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
003f36   fff8
003f38   0009     tblrd*+                  	TBLRD*+	
003f3a   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003f3c   f000
003f3e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003f40   08ff     sublw   0xff             	SUBLW	0xff
003f42   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003f44   508d     movf    0x8d, 0x0, 0x0   	MOVF	_LATE, W
003f46   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003f48   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003f4a   1401     andwf   0x01, 0x0, 0x0   	ANDWF	r0x01, W
003f4c   6e8d     movwf   0x8d, 0x0        	MOVWF	_LATE
                                           _00227_DS_:
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	}
003f4e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003f50   f004
003f52   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003f54   f003
003f56   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003f58   f002
003f5a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003f5c   f001
003f5e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003f60   f000
003f62   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003f64   ffd9
003f66   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	void pinmode(u8 pin, u8 state)
003f68   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003f6a   ffe5
003f6c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003f6e   ffd9
003f70   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003f72   ffe5
003f74   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003f76   ffe5
003f78   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003f7a   ffe5
003f7c   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003f7e   ffe5
003f80   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003f82   ffe5
003f84   0e02     movlw   0x02             	MOVLW	0x02
003f86   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003f88   f000
003f8a   0e03     movlw   0x03             	MOVLW	0x03
003f8c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
003f8e   f001
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	switch (port[pin])
003f90   0e24     movlw   0x24             	MOVLW	LOW(_port)
003f92   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003f94   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003f96   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003f98   0e61     movlw   0x61             	MOVLW	HIGH(_port)
003f9a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003f9c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003f9e   0e00     movlw   0x00             	MOVLW	UPPER(_port)
003fa0   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003fa2   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003fa4   fff6
003fa6   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003fa8   fff7
003faa   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003fac   fff8
003fae   0009     tblrd*+                  	TBLRD*+	
003fb0   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003fb2   f002
003fb4   0e05     movlw   0x05             	MOVLW	0x05
003fb6   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
003fb8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
003fba   d111     bra     0x0041de         	BRA	_00180_DS_
003fbc   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
003fbe   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
003fc0   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
003fc2   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003fc4   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
003fc6   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003fc8   0bfc     andlw   0xfc             	ANDLW	0xfc
003fca   0fda     addlw   0xda             	ADDLW	LOW(_00201_DS_)
003fcc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003fce   0e3f     movlw   0x3f             	MOVLW	HIGH(_00201_DS_)
003fd0   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
003fd2   0e00     movlw   0x00             	MOVLW	UPPER(_00201_DS_)
003fd4   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
003fd6   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
003fd8   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00201_DS_:
003fda   eff7     goto    0x003fee         	GOTO	_00159_DS_
003fdc   f01f
003fde   ef29     goto    0x004052         	GOTO	_00163_DS_
003fe0   f020
003fe2   ef5b     goto    0x0040b6         	GOTO	_00167_DS_
003fe4   f020
003fe6   ef8d     goto    0x00411a         	GOTO	_00171_DS_
003fe8   f020
003fea   efbf     goto    0x00417e         	GOTO	_00175_DS_
003fec   f020
                                           _00159_DS_:
                                           ;	.line	49; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISA=TRISA | mask[pin];
003fee   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003ff0   e015     bz      0x00401c         	BZ	_00161_DS_
003ff2   0e06     movlw   0x06             	MOVLW	LOW(_mask)
003ff4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003ff6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003ff8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003ffa   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
003ffc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003ffe   6a04     clrf    0x04, 0x0        	CLRF	r0x04
004000   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004002   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
004004   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
004006   fff6
004008   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00400a   fff7
00400c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00400e   fff8
004010   0009     tblrd*+                  	TBLRD*+	
004012   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
004014   f002
004016   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004018   1292     iorwf   0x92, 0x1, 0x0   	IORWF	_TRISA, F
00401a   d0e1     bra     0x0041de         	BRA	_00180_DS_
                                           _00161_DS_:
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISA=TRISA & (255-mask[pin]);
00401c   0e06     movlw   0x06             	MOVLW	LOW(_mask)
00401e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004020   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004022   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004024   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
004026   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004028   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00402a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00402c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00402e   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
004030   fff6
004032   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
004034   fff7
004036   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
004038   fff8
00403a   0009     tblrd*+                  	TBLRD*+	
00403c   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00403e   f002
004040   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004042   08ff     sublw   0xff             	SUBLW	0xff
004044   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004046   5092     movf    0x92, 0x0, 0x0   	MOVF	_TRISA, W
004048   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00404a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00404c   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
00404e   6e92     movwf   0x92, 0x0        	MOVWF	_TRISA
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
004050   d0c6     bra     0x0041de         	BRA	_00180_DS_
                                           _00163_DS_:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISB=TRISB | mask[pin];
004052   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004054   e015     bz      0x004080         	BZ	_00165_DS_
004056   0e06     movlw   0x06             	MOVLW	LOW(_mask)
004058   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00405a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00405c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00405e   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
004060   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004062   6a04     clrf    0x04, 0x0        	CLRF	r0x04
004064   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004066   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
004068   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00406a   fff6
00406c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00406e   fff7
004070   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
004072   fff8
004074   0009     tblrd*+                  	TBLRD*+	
004076   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
004078   f002
00407a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00407c   1293     iorwf   0x93, 0x1, 0x0   	IORWF	_TRISB, F
00407e   d0af     bra     0x0041de         	BRA	_00180_DS_
                                           _00165_DS_:
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISB=TRISB & (255-mask[pin]);
004080   0e06     movlw   0x06             	MOVLW	LOW(_mask)
004082   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004084   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004086   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004088   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
00408a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00408c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00408e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004090   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
004092   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
004094   fff6
004096   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
004098   fff7
00409a   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00409c   fff8
00409e   0009     tblrd*+                  	TBLRD*+	
0040a0   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0040a2   f002
0040a4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0040a6   08ff     sublw   0xff             	SUBLW	0xff
0040a8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0040aa   5093     movf    0x93, 0x0, 0x0   	MOVF	_TRISB, W
0040ac   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0040ae   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0040b0   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
0040b2   6e93     movwf   0x93, 0x0        	MOVWF	_TRISB
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
0040b4   d094     bra     0x0041de         	BRA	_00180_DS_
                                           _00167_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISC=TRISC | mask[pin];
0040b6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0040b8   e015     bz      0x0040e4         	BZ	_00169_DS_
0040ba   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0040bc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0040be   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0040c0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0040c2   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0040c4   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0040c6   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0040c8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0040ca   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0040cc   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0040ce   fff6
0040d0   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0040d2   fff7
0040d4   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0040d6   fff8
0040d8   0009     tblrd*+                  	TBLRD*+	
0040da   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0040dc   f002
0040de   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0040e0   1294     iorwf   0x94, 0x1, 0x0   	IORWF	_TRISC, F
0040e2   d07d     bra     0x0041de         	BRA	_00180_DS_
                                           _00169_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISC=TRISC & (255-mask[pin]);
0040e4   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0040e6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0040e8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0040ea   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0040ec   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0040ee   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0040f0   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0040f2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0040f4   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0040f6   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0040f8   fff6
0040fa   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0040fc   fff7
0040fe   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
004100   fff8
004102   0009     tblrd*+                  	TBLRD*+	
004104   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
004106   f002
004108   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00410a   08ff     sublw   0xff             	SUBLW	0xff
00410c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00410e   5094     movf    0x94, 0x0, 0x0   	MOVF	_TRISC, W
004110   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
004112   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004114   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
004116   6e94     movwf   0x94, 0x0        	MOVWF	_TRISC
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
004118   d062     bra     0x0041de         	BRA	_00180_DS_
                                           _00171_DS_:
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISD=TRISD | mask[pin];
00411a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00411c   e015     bz      0x004148         	BZ	_00173_DS_
00411e   0e06     movlw   0x06             	MOVLW	LOW(_mask)
004120   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004122   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004124   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004126   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
004128   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00412a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00412c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00412e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
004130   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
004132   fff6
004134   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
004136   fff7
004138   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00413a   fff8
00413c   0009     tblrd*+                  	TBLRD*+	
00413e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
004140   f002
004142   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004144   1295     iorwf   0x95, 0x1, 0x0   	IORWF	_TRISD, F
004146   d04b     bra     0x0041de         	BRA	_00180_DS_
                                           _00173_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISD=TRISD & (255-mask[pin]);
004148   0e06     movlw   0x06             	MOVLW	LOW(_mask)
00414a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00414c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00414e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004150   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
004152   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004154   6a04     clrf    0x04, 0x0        	CLRF	r0x04
004156   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004158   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00415a   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00415c   fff6
00415e   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
004160   fff7
004162   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
004164   fff8
004166   0009     tblrd*+                  	TBLRD*+	
004168   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00416a   f002
00416c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00416e   08ff     sublw   0xff             	SUBLW	0xff
004170   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004172   5095     movf    0x95, 0x0, 0x0   	MOVF	_TRISD, W
004174   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
004176   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004178   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
00417a   6e95     movwf   0x95, 0x0        	MOVWF	_TRISD
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
00417c   d030     bra     0x0041de         	BRA	_00180_DS_
                                           _00175_DS_:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISE=TRISE | mask[pin];
00417e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004180   e015     bz      0x0041ac         	BZ	_00177_DS_
004182   0e06     movlw   0x06             	MOVLW	LOW(_mask)
004184   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004186   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004188   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00418a   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
00418c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00418e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004190   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004192   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004194   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004196   fff6
004198   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00419a   fff7
00419c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00419e   fff8
0041a0   0009     tblrd*+                  	TBLRD*+	
0041a2   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0041a4   f001
0041a6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0041a8   1296     iorwf   0x96, 0x1, 0x0   	IORWF	_TRISE, F
0041aa   d019     bra     0x0041de         	BRA	_00180_DS_
                                           _00177_DS_:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISE=TRISE & (255-mask[pin]);
0041ac   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0041ae   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0041b0   0e06     movlw   0x06             	MOVLW	LOW(_mask)
0041b2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0041b4   0e61     movlw   0x61             	MOVLW	HIGH(_mask)
0041b6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0041b8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0041ba   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0041bc   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0041be   fff6
0041c0   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0041c2   fff7
0041c4   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0041c6   fff8
0041c8   0009     tblrd*+                  	TBLRD*+	
0041ca   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0041cc   f000
0041ce   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0041d0   08ff     sublw   0xff             	SUBLW	0xff
0041d2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0041d4   5096     movf    0x96, 0x0, 0x0   	MOVF	_TRISE, W
0041d6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0041d8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0041da   1401     andwf   0x01, 0x0, 0x0   	ANDWF	r0x01, W
0041dc   6e96     movwf   0x96, 0x0        	MOVWF	_TRISE
                                           _00180_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	}
0041de   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0041e0   f004
0041e2   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0041e4   f003
0041e6   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0041e8   f002
0041ea   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0041ec   f001
0041ee   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0041f0   f000
0041f2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0041f4   ffd9
0041f6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/delayms.c	void Delayms(u16 milliseconds)
00626e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006270   ffe5
006272   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006274   ffd9
006276   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006278   ffe5
00627a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00627c   ffe5
00627e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006280   ffe5
006282   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006284   ffe5
006286   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
006288   ffe5
00628a   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00628c   ffe5
00628e   0e02     movlw   0x02             	MOVLW	0x02
006290   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006292   f000
006294   0e03     movlw   0x03             	MOVLW	0x03
006296   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006298   f001
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/core/delayms.c	u16 n100tcy = System_getPeripheralFrequency() / 100000;
00629a   ec33     call    0x004a66, 0x0    	CALL	_System_getCpuFrequency
00629c   f025
00629e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0062a0   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0062a2   f003
0062a4   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
0062a6   f004
0062a8   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
0062aa   f005
0062ac   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0062ae   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
0062b0   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
0062b2   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0062b4   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0062b6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0062b8   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
0062ba   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
0062bc   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0062be   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0062c0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0062c2   0e01     movlw   0x01             	MOVLW	0x01
0062c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0062c6   0e86     movlw   0x86             	MOVLW	0x86
0062c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0062ca   0ea0     movlw   0xa0             	MOVLW	0xa0
0062cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0062ce   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0062d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0062d2   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0062d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0062d6   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0062d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0062da   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0062dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0062de   ecfa     call    0x0059f4, 0x0    	CALL	__divulong
0062e0   f02c
0062e2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0062e4   0e08     movlw   0x08             	MOVLW	0x08
0062e6   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00151_DS_:
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/delayms.c	while (milliseconds--)
0062e8   c000     movff   0x000, 0x004     	MOVFF	r0x00, r0x04
0062ea   f004
0062ec   c001     movff   0x001, 0x005     	MOVFF	r0x01, r0x05
0062ee   f005
0062f0   0eff     movlw   0xff             	MOVLW	0xff
0062f2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0062f4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0062f6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0062f8   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
0062fa   e008     bz      0x00630c         	BZ	_00154_DS_
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/delayms.c	delay100tcy(n100tcy-3);
0062fc   c002     movff   0x002, 0x004     	MOVFF	r0x02, r0x04
0062fe   f004
006300   0efd     movlw   0xfd             	MOVLW	0xfd
006302   2604     addwf   0x04, 0x1, 0x0   	ADDWF	r0x04, F
006304   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
006306   ecb5     call    0x00616a, 0x0    	CALL	_delay100tcy
006308   f030
00630a   d7ee     bra     0x0062e8         	BRA	_00151_DS_
                                           _00154_DS_:
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/core/delayms.c	}
00630c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00630e   f005
006310   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
006312   f004
006314   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006316   f003
006318   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00631a   f002
00631c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00631e   f001
006320   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006322   f000
006324   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006326   ffd9
006328   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__System_getCpuFrequency	code
                                           _System_getCpuFrequency:
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u32 System_getCpuFrequency() 
004a66   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004a68   ffe5
004a6a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004a6c   ffe5
004a6e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004a70   ffe5
004a72   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004a74   ffe5
004a76   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004a78   ffe5
004a7a   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004a7c   ffe5
                                           ;	.line	242; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 0)
004a7e   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
004a80   0b03     andlw   0x03             	ANDLW	0x03
004a82   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004a84   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004a86   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
004a88   d091     bra     0x004bac         	BRA	_00116_DS_
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV  = ( System_readFlashMemory(__CONFIG1L) & 0b00011000 ) >> 3;
004a8a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004a8c   0e30     movlw   0x30             	MOVLW	0x30
004a8e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a90   0e00     movlw   0x00             	MOVLW	0x00
004a92   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004a94   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004a96   ec9f     call    0x00653e, 0x0    	CALL	_System_readFlashMemory
004a98   f032
004a9a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004a9c   0e04     movlw   0x04             	MOVLW	0x04
004a9e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004aa0   0e18     movlw   0x18             	MOVLW	0x18
004aa2   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
004aa4   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004aa6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004aa8   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004aaa   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
004aac   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004aae   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004ab0   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
004ab2   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004ab4   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004ab6   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
                                           ;	.line	269; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV_XTAL = cpudiv_xtal[CPUDIV];
004ab8   0ee2     movlw   0xe2             	MOVLW	LOW(_cpudiv_xtal)
004aba   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004abc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004abe   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004ac0   0e60     movlw   0x60             	MOVLW	HIGH(_cpudiv_xtal)
004ac2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004ac4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004ac6   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv_xtal)
004ac8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004aca   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004acc   fff6
004ace   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004ad0   fff7
004ad2   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004ad4   fff8
004ad6   0009     tblrd*+                  	TBLRD*+	
004ad8   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004ada   f001
                                           ;	.line	270; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc  = System_readFlashMemory(__CONFIG1H) & 0b00001111;
004adc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004ade   0e30     movlw   0x30             	MOVLW	0x30
004ae0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004ae2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004ae4   0e01     movlw   0x01             	MOVLW	0x01
004ae6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004ae8   ec9f     call    0x00653e, 0x0    	CALL	_System_readFlashMemory
004aea   f032
004aec   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004aee   0e04     movlw   0x04             	MOVLW	0x04
004af0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004af2   0e0f     movlw   0x0f             	MOVLW	0x0f
004af4   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV = cpudiv[CPUDIV];
004af6   0ede     movlw   0xde             	MOVLW	LOW(_cpudiv)
004af8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004afa   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
004afc   6a04     clrf    0x04, 0x0        	CLRF	r0x04
004afe   0e60     movlw   0x60             	MOVLW	HIGH(_cpudiv)
004b00   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
004b02   6a05     clrf    0x05, 0x0        	CLRF	r0x05
004b04   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv)
004b06   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
004b08   c003     movff   0x003, 0xff6     	MOVFF	r0x03, TBLPTRL
004b0a   fff6
004b0c   c004     movff   0x004, 0xff7     	MOVFF	r0x04, TBLPTRH
004b0e   fff7
004b10   c005     movff   0x005, 0xff8     	MOVFF	r0x05, TBLPTRU
004b12   fff8
004b14   0009     tblrd*+                  	TBLRD*+	
004b16   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
004b18   f000
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc >>=1;
004b1a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004b1c   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
                                           ;	.line	293; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if( (fosc==0) || (fosc==2) || (fosc==6) )
004b1e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004b20   e006     bz      0x004b2e         	BZ	_00110_DS_
004b22   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004b24   0a02     xorlw   0x02             	XORLW	0x02
004b26   e003     bz      0x004b2e         	BZ	_00110_DS_
004b28   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004b2a   0a06     xorlw   0x06             	XORLW	0x06
004b2c   e11f     bnz     0x004b6c         	BNZ	_00111_DS_
                                           _00110_DS_:
                                           ;	.line	295; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return CRYSTAL / CPUDIV_XTAL;
004b2e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004b30   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004b32   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004b34   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004b36   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004b38   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004b3a   0e7a     movlw   0x7a             	MOVLW	0x7a
004b3c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004b3e   0e12     movlw   0x12             	MOVLW	0x12
004b40   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004b42   0e00     movlw   0x00             	MOVLW	0x00
004b44   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004b46   ecca     call    0x005194, 0x0    	CALL	__divslong
004b48   f028
004b4a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004b4c   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
004b4e   f002
004b50   cff4     movff   0xff4, 0x003     	MOVFF	PRODH, r0x03
004b52   f003
004b54   cfe9     movff   0xfe9, 0x004     	MOVFF	FSR0L, r0x04
004b56   f004
004b58   0e08     movlw   0x08             	MOVLW	0x08
004b5a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004b5c   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
004b5e   ffe9
004b60   c003     movff   0x003, 0xff4     	MOVFF	r0x03, PRODH
004b62   fff4
004b64   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
004b66   fff3
004b68   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004b6a   d064     bra     0x004c34         	BRA	_00121_DS_
                                           _00111_DS_:
                                           ;	.line	299; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 96000000UL / CPUDIV;
004b6c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004b6e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004b70   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004b72   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004b74   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004b76   0e05     movlw   0x05             	MOVLW	0x05
004b78   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004b7a   0eb8     movlw   0xb8             	MOVLW	0xb8
004b7c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004b7e   0ed8     movlw   0xd8             	MOVLW	0xd8
004b80   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004b82   0e00     movlw   0x00             	MOVLW	0x00
004b84   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004b86   ecfa     call    0x0059f4, 0x0    	CALL	__divulong
004b88   f02c
004b8a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004b8c   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
004b8e   f001
004b90   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
004b92   f002
004b94   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
004b96   f003
004b98   0e08     movlw   0x08             	MOVLW	0x08
004b9a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004b9c   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
004b9e   ffe9
004ba0   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
004ba2   fff4
004ba4   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
004ba6   fff3
004ba8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004baa   d044     bra     0x004c34         	BRA	_00121_DS_
                                           _00116_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 1)
004bac   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
004bae   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004bb0   0a01     xorlw   0x01             	XORLW	0x01
004bb2   e106     bnz     0x004bc0         	BNZ	_00118_DS_
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 32768;
004bb4   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
004bb6   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
004bb8   0e80     movlw   0x80             	MOVLW	0x80
004bba   6ef3     movwf   0xf3, 0x0        	MOVWF	PRODL
004bbc   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
004bbe   d03a     bra     0x004c34         	BRA	_00121_DS_
                                           _00118_DS_:
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS >= 2)
004bc0   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
004bc2   0b03     andlw   0x03             	ANDLW	0x03
004bc4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004bc6   0e02     movlw   0x02             	MOVLW	0x02
004bc8   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004bca   e330     bnc     0x004c2c         	BNC	_00120_DS_
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ircf[OSCCONbits.IRCF];
004bcc   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
004bce   38e8     swapf   0xe8, 0x0, 0x0   	SWAPF	WREG, W
004bd0   0b07     andlw   0x07             	ANDLW	0x07
004bd2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004bd4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004bd6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004bd8   0e04     movlw   0x04             	MOVLW	0x04
004bda   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004bdc   ecd6     call    0x006bac, 0x0    	CALL	__mulint
004bde   f035
004be0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004be2   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
004be4   f001
004be6   0e04     movlw   0x04             	MOVLW	0x04
004be8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004bea   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004bec   0ee6     movlw   0xe6             	MOVLW	LOW(_ircf)
004bee   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004bf0   0e60     movlw   0x60             	MOVLW	HIGH(_ircf)
004bf2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004bf4   0e00     movlw   0x00             	MOVLW	UPPER(_ircf)
004bf6   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004bf8   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
004bfa   fff6
004bfc   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
004bfe   fff7
004c00   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
004c02   fff8
004c04   0009     tblrd*+                  	TBLRD*+	
004c06   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
004c08   f000
004c0a   0009     tblrd*+                  	TBLRD*+	
004c0c   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004c0e   f001
004c10   0009     tblrd*+                  	TBLRD*+	
004c12   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
004c14   f002
004c16   0009     tblrd*+                  	TBLRD*+	
004c18   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
004c1a   f003
004c1c   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
004c1e   ffe9
004c20   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
004c22   fff4
004c24   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
004c26   fff3
004c28   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004c2a   d004     bra     0x004c34         	BRA	_00121_DS_
                                           _00120_DS_:
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 0;
004c2c   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
004c2e   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
004c30   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
004c32   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00121_DS_:
                                           ;	.line	320; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	}
004c34   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004c36   f005
004c38   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004c3a   f004
004c3c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004c3e   f003
004c40   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004c42   f002
004c44   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004c46   f001
004c48   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004c4a   f000
004c4c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__System_readFlashMemory	code
                                           _System_readFlashMemory:
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u16 System_readFlashMemory(u32 address)
00653e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006540   ffe5
006542   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006544   ffd9
006546   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006548   ffe5
00654a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00654c   ffe5
00654e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006550   ffe5
006552   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006554   ffe5
006556   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
006558   ffe5
00655a   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00655c   ffe5
00655e   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
006560   ffe5
006562   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
006564   ffe5
006566   0e02     movlw   0x02             	MOVLW	0x02
006568   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00656a   f000
00656c   0e03     movlw   0x03             	MOVLW	0x03
00656e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006570   f001
006572   0e04     movlw   0x04             	MOVLW	0x04
006574   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
006576   f002
006578   0e05     movlw   0x05             	MOVLW	0x05
00657a   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
00657c   f003
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRU = address >> 16;
00657e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006580   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
006582   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
006584   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
006586   6a06     clrf    0x06, 0x0        	CLRF	r0x06
006588   6a07     clrf    0x07, 0x0        	CLRF	r0x07
00658a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00658c   6ef8     movwf   0xf8, 0x0        	MOVWF	_TBLPTRU
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRH = address >> 8;
00658e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006590   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
006592   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006594   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
006596   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
006598   6a05     clrf    0x05, 0x0        	CLRF	r0x05
00659a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00659c   6ef7     movwf   0xf7, 0x0        	MOVWF	_TBLPTRH
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRL = address;
00659e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0065a0   6ef6     movwf   0xf6, 0x0        	MOVWF	_TBLPTRL
0065a2   0009     tblrd*+                  	tblrd*+
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	l8 = TABLAT;
0065a4   cff5     movff   0xff5, 0x000     	MOVFF	_TABLAT, r0x00
0065a6   f000
0065a8   0009     tblrd*+                  	tblrd*+
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	h8 = TABLAT;
0065aa   cff5     movff   0xff5, 0x001     	MOVFF	_TABLAT, r0x01
0065ac   f001
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ((h8 << 8) + l8);
0065ae   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0065b0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0065b2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0065b4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0065b6   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0065b8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0065ba   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
0065bc   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0065be   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0065c0   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
0065c2   fff3
0065c4   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ;	.line	203; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	}
0065c6   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
0065c8   f007
0065ca   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
0065cc   f006
0065ce   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0065d0   f005
0065d2   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0065d4   f004
0065d6   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0065d8   f003
0065da   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0065dc   f002
0065de   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0065e0   f001
0065e2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0065e4   f000
0065e6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0065e8   ffd9
0065ea   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block for Ival
                                           	code
                                           _cpudiv:
0060de   0302     mulwf   0x02, 0x1        	DB	0x02, 0x03, 0x04, 0x06
0060e0   0604     decf    0x04, 0x1, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _cpudiv_xtal:
0060e2   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x03, 0x04
0060e4   0403     decf    0x03, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _ircf:
0060e6   7a12     btg     0x12, 0x5, 0x0   	DB	0x12, 0x7a, 0x00, 0x00, 0x48, 0xe8, 0x01, 0x00, 0x90, 0xd0, 0x03, 0x00
0060e8   0000     nop                      
0060ea   e848     dw      0xe848           
0060ec   0001     halt                     
0060ee   d090     bra     0x006210         
0060f0   0003     sleep                    
0060f2   a120     btfss   0x20, 0x0, 0x1   	DB	0x20, 0xa1, 0x07, 0x00, 0x40, 0x42, 0x0f, 0x00, 0x80, 0x84, 0x1e, 0x00
0060f4   0007     daw                      
0060f6   4240     rrncf   0x40, 0x1, 0x0   
0060f8   000f     tblwt+*                  
0060fa   8480     bsf     0x80, 0x2, 0x0   
0060fc   001e     dw      0x001e           
0060fe   0900     iorlw   0x00             	DB	0x00, 0x09, 0x3d, 0x00, 0x00, 0x12, 0x7a, 0x00
006100   003d     dw      0x003d           
006102   1200     iorwf   0x00, 0x1, 0x0   
006104   007a     dw      0x007a           
                                           ; ; Starting pCode block for Ival
                                           _mask:
006106   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
006108   0804     sublw   0x04             
00610a   2010     addwfc  0x10, 0x0, 0x0   
00610c   8040     bsf     0x40, 0x0, 0x0   
00610e   8040     bsf     0x40, 0x0, 0x0   
006110   0201     mulwf   0x01, 0x0        
006112   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
006114   0402     decf    0x02, 0x0, 0x0   
006116   2008     addwfc  0x08, 0x0, 0x0   
006118   0201     mulwf   0x01, 0x0        
00611a   0104     movlb   0x4              
00611c   0402     decf    0x02, 0x0, 0x0   
00611e   1008     iorwf   0x08, 0x0, 0x0   	DB	0x08, 0x10, 0x20, 0x40, 0x80, 0x10
006120   4020     rrncf   0x20, 0x0, 0x0   
006122   1080     iorwf   0x80, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _port:
006124   0101     movlb   0x1              	DB	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02
006126   0101     movlb   0x1              
006128   0101     movlb   0x1              
00612a   0101     movlb   0x1              
00612c   0202     mulwf   0x02, 0x0        
00612e   0202     mulwf   0x02, 0x0        
006130   0002     dw      0x0002           	DB	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
006132   0000     nop                      
006134   0000     nop                      
006136   0404     decf    0x04, 0x0, 0x0   
006138   0304     mulwf   0x04, 0x1        
00613a   0303     mulwf   0x03, 0x1        
00613c   0303     mulwf   0x03, 0x1        	DB	0x03, 0x03, 0x03, 0x03, 0x03, 0x00
00613e   0303     mulwf   0x03, 0x1        
006140   0003     sleep                    
                                           ; ; Starting pCode block
                                           ___str_0:
006142   6e28     movwf   0x28, 0x0        	DB	0x28, 0x6e, 0x75, 0x6c, 0x6c, 0x29, 0x00
006144   6c75     negf    0x75, 0x0        
006146   296c     incf    0x6c, 0x0, 0x1   
006148   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _dht_success:
00614a   0000     nop                      	DB	0x00, 0x00
                                           ; ; Starting pCode block for Ival
                                           _dht_notconnected:
00614c   0001     halt                     	DB	0x01, 0x00
                                           ; ; Starting pCode block for Ival
                                           _dht_checksumfailed:
00614e   0002     dw      0x0002           	DB	0x02, 0x00
                                           ; ; Starting pCode block for Ival
                                           _dhtPin:
006150   000f     tblwt+*                  	DB	0x0f, 0x00
                                           ; ; Starting pCode block
                                           ___str_1:
006152   6574     cpfsgt  0x74, 0x1        	DB	0x74, 0x65, 0x6d, 0x70, 0x3a, 0x20, 0x25, 0x69, 0x2e, 0x25, 0x69, 0x00
006154   706d     btg     0x6d, 0x0, 0x0   
006156   203a     addwfc  0x3a, 0x0, 0x0   
006158   6925     setf    0x25, 0x1        
00615a   252e     addwf   0x2e, 0x0, 0x1   
00615c   0069     dw      0x0069           
                                           ; ; Starting pCode block
                                           ___str_2:
00615e   7568     btg     0x68, 0x2, 0x1   	DB	0x68, 0x75, 0x6d, 0x3a, 0x20, 0x25, 0x69, 0x2e, 0x25, 0x69, 0x00
006160   3a6d     swapf   0x6d, 0x1, 0x0   
006162   2520     addwf   0x20, 0x0, 0x1   
006164   2e69     decfsz  0x69, 0x1, 0x0   
006166   6925     setf    0x25, 0x1        
006168   0000     nop                      


                                           ; Statistics:
                                           ; code size:	18768 (0x4950) bytes (14.32%)
                                           ;           	 9384 (0x24a8) words
                                           ; udata size:	  533 (0x0215) bytes (29.74%)
                                           ; access size:	   32 (0x0020) bytes


                                           	end
