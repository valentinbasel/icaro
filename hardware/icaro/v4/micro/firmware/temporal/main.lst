gplink-1.4.2 #1169 (Feb  7 2018)
Copyright (c) 1998-2015 gputils project
Listing File Generated: 9-9-2018  12:50:37
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	___uflags
                                           	global	__i
                                           	global	__currline
                                           	global	__initialized
                                           	global	__displaymode
                                           	global	__displaycontrol
                                           	global	__rw_pin
                                           	global	_loopvar
                                           	global	_timingindex
                                           	global	__cpu_clock_
                                           	global	__entry
                                           	global	__startup
                                           	global	_main
                                           	global	_phase
                                           	global	_needreordering
                                           	global	_timedivision
                                           	global	_mascaratotal
                                           	global	_timevalue
                                           	global	_timings
                                           	global	_activatedservos
                                           	global	_servovalues
                                           	global	_maxminpos
                                           	global	__rs_pin
                                           	global	__enable_pin
                                           	global	__data_pins
                                           	global	__displayfunction
                                           	global	__numlines
                                           	global	_contador
                                           	global	_dist
                                           	global	_System_readFlashMemory
                                           	global	_System_getCpuFrequency
                                           	global	_Delayms
                                           	global	_pinmode
                                           	global	_digitalwrite
                                           	global	_digitalread
                                           	global	_toggle
                                           	global	_servos_init
                                           	global	_ServoAttach
                                           	global	_ServoDetach
                                           	global	_ServoWrite
                                           	global	_ServoRead
                                           	global	_ServoMinimumPulse
                                           	global	_ServoMaximumPulse
                                           	global	_servos_interrupt
                                           	global	_analog_init
                                           	global	_analogreference
                                           	global	_analogread
                                           	global	_analogwrite_init
                                           	global	_analogwrite
                                           	global	_IO_init
                                           	global	_IO_digital
                                           	global	_Delayus
                                           	global	_pprintf
                                           	global	_psprintf2
                                           	global	_psprintf
                                           	global	_lcd_pulseEnable
                                           	global	_lcd_write4bits
                                           	global	_lcd_write8bits
                                           	global	_lcd_send
                                           	global	_lcd_write
                                           	global	_lcd_command
                                           	global	_lcd_setCursor
                                           	global	_lcd_print
                                           	global	_lcd_printf
                                           	global	_lcd_printNumber
                                           	global	_lcd_printFloat
                                           	global	_lcd_home
                                           	global	_lcd_clear
                                           	global	_lcd_begin
                                           	global	_lcd_init
                                           	global	_lcd_pins
                                           	global	_ping
                                           	global	_setup
                                           	global	_sensordigital
                                           	global	_enojado
                                           	global	_contento
                                           	global	_mostrar_datos
                                           	global	_seg_lineas
                                           	global	_robot2
                                           	global	_robot
                                           	global	_menu
                                           	global	_loop
                                           	global	_high_priority_isr
                                           	global	_low_priority_isr
                                           	global	_mask
                                           	global	_port
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget3
                                           	extern	__gptrput1
                                           	extern	__gptrput3
                                           	extern	__gptrget1
                                           	extern	__gptrget4
                                           	extern	__gptrget2
                                           	extern	_SPPDATAbits
                                           	extern	_SPPCFGbits
                                           	extern	_SPPEPSbits
                                           	extern	_SPPCONbits
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_LATDbits
                                           	extern	_LATEbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_FSR2Hbits
                                           	extern	_BSRbits
                                           	extern	_FSR1Hbits
                                           	extern	_FSR0Hbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_TBLPTRUbits
                                           	extern	_PCLATHbits
                                           	extern	_PCLATUbits
                                           	extern	_STKPTRbits
                                           	extern	_TOSUbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_stack_end
                                           	extern	_SPPDATA
                                           	extern	_SPPCFG
                                           	extern	_SPPEPS
                                           	extern	_SPPCON
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_LATD
                                           	extern	_LATE
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	__divslong
                                           	extern	__divulong
                                           	extern	__mulint
                                           	extern	_delay100tcy
                                           	extern	__modulong
                                           	extern	__moduint
                                           	extern	__divuint
                                           	extern	___fslt
                                           	extern	___fsdiv
                                           	extern	___fsadd
                                           	extern	___fs2uint
                                           	extern	___uint2fs
                                           	extern	___fssub
                                           	extern	___fsmul
                                           	extern	___sint2fs
                                           	extern	_cinit
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           INTCON	equ	0xff2
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TOSL	equ	0xffd
                                           TOSH	equ	0xffe
                                           TOSU	equ	0xfff
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           FSR2H	equ	0xfda
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           __rs_pin	db	0x08
                                           __rw_pin	db	0xff
                                           __enable_pin	db	0x09
                                           __i	db	0x00, 0x00
                                           _contador	db	0x00, 0x00
                                           _dist	db	0x00, 0x00
                                           ___uflags	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           r0x0e	res	1
                                           r0x0f	res	1
                                           r0x10	res	1
                                           r0x11	res	1
                                           r0x12	res	1
                                           r0x13	res	1
                                           r0x14	res	1
                                           r0x15	res	1
                                           r0x16	res	1
                                           r0x17	res	1
                                           r0x18	res	1
                                           r0x19	res	1
                                           r0x1a	res	1
                                           r0x1b	res	1
                                           r0x1c	res	1
                                           r0x1d	res	1
                                           r0x1e	res	1
                                           r0x1f	res	1
                                           r0x20	res	1
                                           
                                           udata_main_0	udata
                                           __cpu_clock_	res	4
                                           
                                           udata_main_1	udata
                                           _timingindex	res	1
                                           
                                           udata_main_2	udata
                                           _loopvar	res	1
                                           
                                           udata_main_3	udata
                                           __displaycontrol	res	1
                                           
                                           udata_main_4	udata
                                           __displaymode	res	1
                                           
                                           udata_main_5	udata
                                           __initialized	res	1
                                           
                                           udata_main_6	udata
                                           __currline	res	1
                                           
                                           udata_main_7	udata
                                           _pputchar	res	3
                                           
                                           udata_main_8	udata
                                           _servovalues	res	30
                                           
                                           udata_main_9	udata
                                           _maxminpos	res	60
                                           
                                           udata_main_10	udata
                                           _activatedservos	res	5
                                           
                                           udata_main_11	udata
                                           _ServosPulseDown_timingindex_1_28	res	1
                                           
                                           udata_main_12	udata
                                           _timings	res	150
                                           
                                           udata_main_13	udata
                                           _timevalue	res	30
                                           
                                           udata_main_14	udata
                                           _SortServoTimings_t_1_32	res	1
                                           
                                           udata_main_15	udata
                                           _SortServoTimings_totalservos_1_32	res	1
                                           
                                           udata_main_16	udata
                                           _SortServoTimings_numservos_1_32	res	1
                                           
                                           udata_main_17	udata
                                           _SortServoTimings_s_1_32	res	1
                                           
                                           udata_main_18	udata
                                           _mascaratotal	res	5
                                           
                                           udata_main_19	udata
                                           _pprinti_buffer_1_162	res	12
                                           
                                           udata_main_20	udata
                                           _pprintfl_buffer_1_172	res	12
                                           
                                           udata_main_21	udata
                                           _pprintfl_tmp_1_172	res	12
                                           
                                           udata_main_22	udata
                                           _pprintfl_helper_1_172	res	4
                                           
                                           udata_main_23	udata
                                           _pprint_scr_1_187	res	2
                                           
                                           udata_main_24	udata
                                           _psprintf2_out_1_208	res	3
                                           
                                           udata_main_25	udata
                                           __data_pins	res	8
                                           
                                           udata_main_26	udata
                                           __displayfunction	res	1
                                           
                                           udata_main_27	udata
                                           _lcd_setCursor_row_offsets_1_227	res	4
                                           
                                           udata_main_28	udata
                                           __numlines	res	1
                                           
                                           udata_main_29	udata
                                           _lcd_printNumber_buf_1_234	res	32
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main___entry	code	0X000C00
                                           __entry:
000c00   ef84     goto    0x006708         	goto	__startup
000c02   f033
                                           	
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_main_ivec_0x1_high_priority_isr	code	0X000C08
                                           ivec_0x1_high_priority_isr:
000c08   ef70     goto    0x0070e0         	GOTO	_high_priority_isr
000c0a   f038
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_main_ivec_0x2_low_priority_isr	code	0X000C18
                                           ivec_0x2_low_priority_isr:
000c18   efe5     goto    0x0071ca         	GOTO	_low_priority_isr
000c1a   f038
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__main	code
                                           _main:
                                           ;	.line	197; /home/vbasel/.icaro/v4/firmware/source/main.c	if (OSCCONbits.SCS > 0x01)
0076ee   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
0076f0   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0076f2   0f80     addlw   0x80             	ADDLW	0x80
0076f4   0f7e     addlw   0x7e             	ADDLW	0x7e
0076f6   e302     bnc     0x0076fc         	BNC	_01870_DS_
                                           _01866_DS_:
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/source/main.c	while (!OSCCONbits.IOFS);
0076f8   a4d3     btfss   0xd3, 0x2, 0x0   	BTFSS	_OSCCONbits, 2
0076fa   d7fe     bra     0x0076f8         	BRA	_01866_DS_
                                           _01870_DS_:
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/source/main.c	IO_init();
0076fc   eca1     call    0x007742, 0x0call    0x007742, 0x0 	CALL	_IO_init
0076fe   f03b
                                           ;	.line	244; /home/vbasel/.icaro/v4/firmware/source/main.c	IO_digital();
007700   ec06     call    0x000c0c, 0x0call    0x000c0c, 0x0 	CALL	_IO_digital
007702   f006
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/source/main.c	analog_init();
007704   ec6c     call    0x0078d8, 0x0call    0x0078d8, 0x0 	CALL	_analog_init
007706   f03c
                                           ;	.line	288; /home/vbasel/.icaro/v4/firmware/source/main.c	servos_init();
007708   ec2d     call    0x00685a, 0x0call    0x00685a, 0x0 	CALL	_servos_init
00770a   f034
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/source/main.c	setup();
00770c   eccf     call    0x00619e, 0x0call    0x00619e, 0x0 	CALL	_setup
00770e   f030
                                           _01872_DS_:
                                           ;	.line	327; /home/vbasel/.icaro/v4/firmware/source/main.c	loop();
007710   ec7c     call    0x0064f8, 0x0call    0x0064f8, 0x0 	CALL	_loop
007712   f032
007714   d7fd     bra     0x007710         	BRA	_01872_DS_
007716   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code
                                           _low_priority_isr:
                                           ;	.line	535; /home/vbasel/.icaro/v4/firmware/source/main.c	void low_priority_isr(void) __interrupt 2
0071ca   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
0071cc   ffe5
0071ce   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
0071d0   ffe5
0071d2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0071d4   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
0071d6   ffe5
0071d8   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
0071da   ffe5
0071dc   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
0071de   ffe5
0071e0   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
0071e2   ffe5
0071e4   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
0071e6   ffe5
0071e8   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
0071ea   ffe5
0071ec   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0071ee   ffe5
0071f0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0071f2   ffd9
0071f4   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
0071f6   ffe5
0071f8   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
0071fa   ffe5
0071fc   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
0071fe   ffe5
007200   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
007202   ffe5
                                           	
007204   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
007206   fff5
007208   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
00720a   fff8
00720c   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
00720e   fff7
007210   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
007212   fff6
                                           	
007214   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007216   ffd9
007218   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
00721a   fffb
00721c   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
00721e   fffa
007220   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
007222   ffea
007224   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
007226   ffe9
007228   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
00722a   fff4
00722c   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00722e   fff3
007230   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
007232   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
007234   ffe0
007236   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
007238   ffd8
00723a   0010     retfie  0x0              	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code
                                           _high_priority_isr:
                                           ;	.line	438; /home/vbasel/.icaro/v4/firmware/source/main.c	void high_priority_isr(void) __interrupt 1
0070e0   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
0070e2   ffe5
0070e4   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
0070e6   ffe5
0070e8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0070ea   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
0070ec   ffe5
0070ee   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
0070f0   ffe5
0070f2   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
0070f4   ffe5
0070f6   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
0070f8   ffe5
0070fa   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
0070fc   ffe5
0070fe   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
007100   ffe5
007102   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
007104   ffe5
007106   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
007108   ffd9
00710a   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
00710c   ffe5
00710e   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
007110   ffe5
007112   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
007114   ffe5
007116   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
007118   ffe5
                                           	
                                           ;	.line	475; /home/vbasel/.icaro/v4/firmware/source/main.c	servos_interrupt();
00711a   ec9d     call    0x00753a, 0x0call    0x00753a, 0x0 	CALL	_servos_interrupt
00711c   f03a
00711e   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
007120   fff5
007122   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
007124   fff8
007126   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
007128   fff7
00712a   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
00712c   fff6
                                           	
00712e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007130   ffd9
007132   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
007134   fffb
007136   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
007138   fffa
00713a   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00713c   ffea
00713e   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
007140   ffe9
007142   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
007144   fff4
007146   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
007148   fff3
00714a   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
00714c   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
00714e   ffe0
007150   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
007152   ffd8
007154   0010     retfie  0x0              	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main___startup	code
                                           __startup:
                                           	;	Initialize the stack pointer
006708   ee17     lfsr    0x1, 0x7ff       	lfsr	1, _stack_end
00670a   f0ff
00670c   ee27     lfsr    0x2, 0x7ff       	lfsr	2, _stack_end
00670e   f0ff
                                           	;	1st silicon does not do this on POR
006710   6af8     clrf    0xf8, 0x0        	clrf	_TBLPTRU, 0
                                           	;	Initialize the flash memory access configuration.
                                           	;	This is harmless for non-flash devices, so we do it on all parts.
006712   8ea6     bsf     0xa6, 0x7, 0x0   	bsf	0xa6, 7, 0 ; EECON1.EEPGD = 1, TBLPTR accesses program memory
006714   9ca6     bcf     0xa6, 0x6, 0x0   	bcf	0xa6, 6, 0 ; EECON1.CFGS = 0, TBLPTR accesses program memory
                                           	;	Load FSR0 with top of RAM.
006716   0ebf     movlw   0xbf             	movlw	0xbf
006718   6ee9     movwf   0xe9, 0x0        	movwf	_FSR0L, 0
00671a   0e0e     movlw   0x0e             	movlw	0x0e
00671c   6eea     movwf   0xea, 0x0        	movwf	_FSR0H, 0
                                           	;	Place 0xff at address 0x00 as a sentinel.
00671e   6800     setf    0x00, 0x0        	setf	0x00, 0
                                           clear_loop:
006720   6aed     clrf    0xed, 0x0        	clrf	_POSTDEC0, 0
006722   5000     movf    0x00, 0x0, 0x0   	movf	0x00, w, 0
006724   e1fd     bnz     0x006720         	bnz	clear_loop
                                           	;	TBLPTR = &cinit
006726   0e06     movlw   0x06             	movlw	low(_cinit)
006728   6ef6     movwf   0xf6, 0x0        	movwf	_TBLPTRL, 0
00672a   0e79     movlw   0x79             	movlw	high(_cinit)
00672c   6ef7     movwf   0xf7, 0x0        	movwf	_TBLPTRH, 0
00672e   0e00     movlw   0x00             	movlw	upper(_cinit)
006730   6ef8     movwf   0xf8, 0x0        	movwf	_TBLPTRU, 0
                                           	;	0x05 = cinit.num_init
006732   0009     tblrd*+                  	tblrd*+
006734   cff5     movff   0xff5, 0x005     	movff	_TABLAT, 0x05
006736   f005
006738   0009     tblrd*+                  	tblrd*+
00673a   cff5     movff   0xff5, 0x006     	movff	_TABLAT, (0x05 + 1)
00673c   f006
                                           	;	while (0x05)
00673e   d034     bra     0x0067a8         	bra	entry_loop_dec
                                           entry_loop:
                                           	;	Count down so we only have to look up the data in _cinit once.
                                           	;	At this point we know that TBLPTR points to the top of the current
                                           	;	entry in _cinit, so we can just start reading the from, to, and
                                           	;	size values.
                                           	;	Read the source address low.
                                           	;	0x00 = 0x07 ->from;
006740   0009     tblrd*+                  	tblrd*+
006742   cff5     movff   0xff5, 0x000     	movff	_TABLAT, 0x00
006744   f000
                                           	;	source address high
006746   0009     tblrd*+                  	tblrd*+
006748   cff5     movff   0xff5, 0x001     	movff	_TABLAT, (0x00 + 1)
00674a   f001
                                           	;	source address upper
00674c   0009     tblrd*+                  	tblrd*+
00674e   cff5     movff   0xff5, 0x002     	movff	_TABLAT, (0x00 + 2)
006750   f002
                                           	;	Skip a byte since it is stored as a 32bit int.
006752   0009     tblrd*+                  	tblrd*+
                                           	;	Read the destination address directly into FSR0
                                           	;	destination address low.
                                           	;	FSR0 = (unsigned short)0x07 ->to;
006754   0009     tblrd*+                  	tblrd*+
006756   cff5     movff   0xff5, 0xfe9     	movff	_TABLAT, _FSR0L
006758   ffe9
                                           	;	destination address high
00675a   0009     tblrd*+                  	tblrd*+
00675c   cff5     movff   0xff5, 0xfea     	movff	_TABLAT, _FSR0H
00675e   ffea
                                           	;	Skip two bytes since it is stored as a 32bit int.
006760   0009     tblrd*+                  	tblrd*+
006762   0009     tblrd*+                  	tblrd*+
                                           	;	Read the size of data to transfer to destination address.
                                           	;	0x03 = (unsigned short)0x07 ->size;
006764   0009     tblrd*+                  	tblrd*+
006766   cff5     movff   0xff5, 0x003     	movff	_TABLAT, 0x03
006768   f003
00676a   0009     tblrd*+                  	tblrd*+
00676c   cff5     movff   0xff5, 0x004     	movff	_TABLAT, (0x03 + 1)
00676e   f004
                                           	;	Skip two bytes since it is stored as a 32bit int.
006770   0009     tblrd*+                  	tblrd*+
006772   0009     tblrd*+                  	tblrd*+
                                           	;	0x00 = 0x07 ->from;
                                           	;	FSR0 = (unsigned short)0x07 ->to;
                                           	;	0x03 = (unsigned short)0x07 ->size;
                                           	;	The table pointer now points to the next entry. Save it
                                           	;	off since we will be using the table pointer to do the copying
                                           	;	for the entry.
                                           	;	0x07 = TBLPTR
006774   cff6     movff   0xff6, 0x007     	movff	_TBLPTRL, 0x07
006776   f007
006778   cff7     movff   0xff7, 0x008     	movff	_TBLPTRH, (0x07 + 1)
00677a   f008
00677c   cff8     movff   0xff8, 0x009     	movff	_TBLPTRU, (0x07 + 2)
00677e   f009
                                           	;	Now assign the source address to the table pointer.
                                           	;	TBLPTR = 0x00
006780   c000     movff   0x000, 0xff6     	movff	0x00, _TBLPTRL
006782   fff6
006784   c001     movff   0x001, 0xff7     	movff	(0x00 + 1), _TBLPTRH
006786   fff7
006788   c002     movff   0x002, 0xff8     	movff	(0x00 + 2), _TBLPTRU
00678a   fff8
00678c   d003     bra     0x006794         	bra	copy_loop_dec
                                           copy_loop:
00678e   0009     tblrd*+                  	tblrd*+
006790   cff5     movff   0xff5, 0xfee     	movff	_TABLAT, _POSTINC0
006792   ffee
                                           copy_loop_dec:
                                           	;	while (--0x03);
                                           	;	Decrement and test the byte counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
006794   0603     decf    0x03, 0x1, 0x0   	decf	0x03, f, 0
006796   e2fb     bc      0x00678e         	bc	copy_loop
006798   0604     decf    0x04, 0x1, 0x0   	decf	(0x03 + 1), f, 0
00679a   e2f9     bc      0x00678e         	bc	copy_loop
                                           	;	Restore the table pointer for the next entry.
                                           	;	TBLPTR = 0x07
00679c   c007     movff   0x007, 0xff6     	movff	0x07, _TBLPTRL
00679e   fff6
0067a0   c008     movff   0x008, 0xff7     	movff	(0x07 + 1), _TBLPTRH
0067a2   fff7
0067a4   c009     movff   0x009, 0xff8     	movff	(0x07 + 2), _TBLPTRU
0067a6   fff8
                                           entry_loop_dec:
                                           	;	while (--0x05);
                                           	;	Decrement and test the entry counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
0067a8   0605     decf    0x05, 0x1, 0x0   	decf	0x05, f, 0
0067aa   e2ca     bc      0x006740         	bc	entry_loop
0067ac   0606     decf    0x06, 0x1, 0x0   	decf	(0x05 + 1), f, 0
0067ae   e2c8     bc      0x006740         	bc	entry_loop
                                           	
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/source/crt0iz.c	main ();
0067b0   ec77     call    0x0076ee, 0x0call    0x0076ee, 0x0 	CALL	_main
0067b2   f03b
                                           lockup:
                                           	;	Returning from main will lock up.
0067b4   d7ff     bra     0x0067b4         	bra	lockup
                                           	
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	245; /home/vbasel/.icaro/v4/firmware/source/user.c	void loop()
0064f8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0064fa   ffe5
                                           ;	.line	247; /home/vbasel/.icaro/v4/firmware/source/user.c	menu();
0064fc   ec7d     call    0x0048fa, 0x0call    0x0048fa, 0x0 	CALL	_menu
0064fe   f024
006500   0104     movlb   0x4              	BANKSEL	(_contador + 1)
                                           ;	.line	248; /home/vbasel/.icaro/v4/firmware/source/user.c	switch(contador)
006502   51fb     movf    0xfb, 0x0, 0x1   	MOVF	(_contador + 1), W, B
006504   0f80     addlw   0x80             	ADDLW	0x80
006506   0f80     addlw   0x80             	ADDLW	0x80
006508   e102     bnz     0x00650e         	BNZ	_01849_DS_
00650a   0e01     movlw   0x01             	MOVLW	0x01
                                           ; removed redundant BANKSEL
00650c   5dfa     subwf   0xfa, 0x0, 0x1   	SUBWF	_contador, W, B
                                           _01849_DS_:
00650e   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
006510   d046     bra     0x00659e         	BRA	_01839_DS_
006512   0104     movlb   0x4              	BANKSEL	(_contador + 1)
006514   51fb     movf    0xfb, 0x0, 0x1   	MOVF	(_contador + 1), W, B
006516   0f80     addlw   0x80             	ADDLW	0x80
006518   0f80     addlw   0x80             	ADDLW	0x80
00651a   e102     bnz     0x006520         	BNZ	_01850_DS_
00651c   0e05     movlw   0x05             	MOVLW	0x05
                                           ; removed redundant BANKSEL
00651e   5dfa     subwf   0xfa, 0x0, 0x1   	SUBWF	_contador, W, B
                                           _01850_DS_:
006520   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
006522   d03d     bra     0x00659e         	BRA	_01839_DS_
006524   0104     movlb   0x4              	BANKSEL	_contador
006526   05fa     decf    0xfa, 0x0, 0x1   	DECF	_contador, W, B
006528   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00652a   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
00652c   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
00652e   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
006530   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
006532   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
006534   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
006536   0bfc     andlw   0xfc             	ANDLW	0xfc
006538   0f48     addlw   0x48             	ADDLW	LOW(_01851_DS_)
00653a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00653c   0e65     movlw   0x65             	MOVLW	HIGH(_01851_DS_)
00653e   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
006540   0e00     movlw   0x00             	MOVLW	UPPER(_01851_DS_)
006542   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
006544   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
006546   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01851_DS_:
006548   efac     goto    0x006558         	GOTO	_01835_DS_
00654a   f032
00654c   efb5     goto    0x00656a         	GOTO	_01836_DS_
00654e   f032
006550   efbe     goto    0x00657c         	GOTO	_01837_DS_
006552   f032
006554   efc7     goto    0x00658e         	GOTO	_01838_DS_
006556   f032
                                           _01835_DS_:
                                           ;	.line	252; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_clear();
006558   ec2f     call    0x00785e, 0x0call    0x00785e, 0x0 	CALL	_lcd_clear
00655a   f03c
                                           ;	.line	253; /home/vbasel/.icaro/v4/firmware/source/user.c	robot();
00655c   ec1c     call    0x004c38, 0x0call    0x004c38, 0x0 	CALL	_robot
00655e   f026
006560   0104     movlb   0x4              	BANKSEL	_contador
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/source/user.c	contador=0;
006562   6bfa     clrf    0xfa, 0x1        	CLRF	_contador, B
                                           ; removed redundant BANKSEL
006564   6bfb     clrf    0xfb, 0x1        	CLRF	(_contador + 1), B
                                           ;	.line	255; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=0;
006566   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	256; /home/vbasel/.icaro/v4/firmware/source/user.c	break;
006568   d01c     bra     0x0065a2         	BRA	_01841_DS_
                                           _01836_DS_:
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_clear();
00656a   ec2f     call    0x00785e, 0x0call    0x00785e, 0x0 	CALL	_lcd_clear
00656c   f03c
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/source/user.c	robot2();
00656e   ece8     call    0x004dd0, 0x0call    0x004dd0, 0x0 	CALL	_robot2
006570   f026
006572   0104     movlb   0x4              	BANKSEL	_contador
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/source/user.c	contador=0;
006574   6bfa     clrf    0xfa, 0x1        	CLRF	_contador, B
                                           ; removed redundant BANKSEL
006576   6bfb     clrf    0xfb, 0x1        	CLRF	(_contador + 1), B
                                           ;	.line	261; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=0;
006578   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	262; /home/vbasel/.icaro/v4/firmware/source/user.c	break;
00657a   d013     bra     0x0065a2         	BRA	_01841_DS_
                                           _01837_DS_:
                                           ;	.line	264; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_clear();
00657c   ec2f     call    0x00785e, 0x0call    0x00785e, 0x0 	CALL	_lcd_clear
00657e   f03c
                                           ;	.line	265; /home/vbasel/.icaro/v4/firmware/source/user.c	seg_lineas();
006580   ecec     call    0x006dd8, 0x0call    0x006dd8, 0x0 	CALL	_seg_lineas
006582   f036
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=0;
006584   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
006586   0104     movlb   0x4              	BANKSEL	_contador
                                           ;	.line	267; /home/vbasel/.icaro/v4/firmware/source/user.c	contador=0;
006588   6bfa     clrf    0xfa, 0x1        	CLRF	_contador, B
                                           ; removed redundant BANKSEL
00658a   6bfb     clrf    0xfb, 0x1        	CLRF	(_contador + 1), B
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/source/user.c	break;
00658c   d00a     bra     0x0065a2         	BRA	_01841_DS_
                                           _01838_DS_:
                                           ;	.line	270; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_clear();
00658e   ec2f     call    0x00785e, 0x0call    0x00785e, 0x0 	CALL	_lcd_clear
006590   f03c
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/source/user.c	mostrar_datos();
006592   ec51     call    0x005ea2, 0x0call    0x005ea2, 0x0 	CALL	_mostrar_datos
006594   f02f
006596   0104     movlb   0x4              	BANKSEL	_contador
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/source/user.c	contador=0;
006598   6bfa     clrf    0xfa, 0x1        	CLRF	_contador, B
                                           ; removed redundant BANKSEL
00659a   6bfb     clrf    0xfb, 0x1        	CLRF	(_contador + 1), B
                                           ;	.line	273; /home/vbasel/.icaro/v4/firmware/source/user.c	break;
00659c   d002     bra     0x0065a2         	BRA	_01841_DS_
                                           _01839_DS_:
                                           ;	.line	276; /home/vbasel/.icaro/v4/firmware/source/user.c	menu();
00659e   ec7d     call    0x0048fa, 0x0call    0x0048fa, 0x0 	CALL	_menu
0065a0   f024
                                           _01841_DS_:
                                           ;	.line	277; /home/vbasel/.icaro/v4/firmware/source/user.c	}
0065a2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0065a4   f000
0065a6   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__menu	code
                                           _menu:
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/source/user.c	void menu()
0048fa   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0048fc   ffe5
0048fe   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004900   ffe5
004902   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004904   ffe5
004906   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004908   ffe5
                                           _01806_DS_:
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/source/user.c	output_b=analogread(14);
00490a   0e0e     movlw   0x0e             	MOVLW	0x0e
00490c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00490e   ecc1     call    0x006b82, 0x0call    0x006b82, 0x0 	CALL	_analogread
004910   f035
004912   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004914   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
004916   f001
004918   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	201; /home/vbasel/.icaro/v4/firmware/source/user.c	sw=analogread(15);
00491a   0e0f     movlw   0x0f             	MOVLW	0x0f
00491c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00491e   ecc1     call    0x006b82, 0x0call    0x006b82, 0x0 	CALL	_analogread
004920   f035
004922   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004924   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
004926   f003
004928   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/source/user.c	if(output_b==0)
00492a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00492c   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
00492e   e118     bnz     0x004960         	BNZ	_01795_DS_
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_clear();
004930   ec2f     call    0x00785e, 0x0call    0x00785e, 0x0 	CALL	_lcd_clear
004932   f03c
004934   0104     movlb   0x4              	BANKSEL	_contador
                                           ;	.line	205; /home/vbasel/.icaro/v4/firmware/source/user.c	contador++;
004936   3ffa     incfsz  0xfa, 0x1, 0x1   	INCFSZ	_contador, F, B
004938   d001     bra     0x00493c         	BRA	_11892_DS_
                                           ; removed redundant BANKSEL
00493a   2bfb     incf    0xfb, 0x1, 0x1   	INCF	(_contador + 1), F, B
                                           _11892_DS_:
                                           ;	.line	206; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(10);
00493c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00493e   0e0a     movlw   0x0a             	MOVLW	0x0a
004940   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004942   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
004944   f031
004946   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004948   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00494a   0104     movlb   0x4              	BANKSEL	(_contador + 1)
                                           ;	.line	207; /home/vbasel/.icaro/v4/firmware/source/user.c	if(contador>4)contador=0;
00494c   51fb     movf    0xfb, 0x0, 0x1   	MOVF	(_contador + 1), W, B
00494e   0f80     addlw   0x80             	ADDLW	0x80
004950   0f80     addlw   0x80             	ADDLW	0x80
004952   e102     bnz     0x004958         	BNZ	_01828_DS_
004954   0e05     movlw   0x05             	MOVLW	0x05
                                           ; removed redundant BANKSEL
004956   5dfa     subwf   0xfa, 0x0, 0x1   	SUBWF	_contador, W, B
                                           _01828_DS_:
004958   e303     bnc     0x004960         	BNC	_01795_DS_
00495a   0104     movlb   0x4              	BANKSEL	_contador
00495c   6bfa     clrf    0xfa, 0x1        	CLRF	_contador, B
                                           ; removed redundant BANKSEL
00495e   6bfb     clrf    0xfb, 0x1        	CLRF	(_contador + 1), B
                                           _01795_DS_:
                                           ;	.line	209; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("prg: ");
004960   0e00     movlw   0x00             	MOVLW	UPPER(___str_9)
004962   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004964   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_9)
004966   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004968   0e36     movlw   0x36             	MOVLW	LOW(___str_9)
00496a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00496c   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
00496e   f037
004970   0e03     movlw   0x03             	MOVLW	0x03
004972   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	210; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_setCursor(6,0);
004974   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004976   0e06     movlw   0x06             	MOVLW	0x06
004978   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00497a   ecf3     call    0x006fe6, 0x0call    0x006fe6, 0x0 	CALL	_lcd_setCursor
00497c   f037
00497e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004980   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	211; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_printNumber(contador,10);
004982   0e0a     movlw   0x0a             	MOVLW	0x0a
004984   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004986   0104     movlb   0x4              	BANKSEL	(_contador + 1)
004988   51fb     movf    0xfb, 0x0, 0x1   	MOVF	(_contador + 1), W, B
00498a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00498c   51fa     movf    0xfa, 0x0, 0x1   	MOVF	_contador, W, B
00498e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004990   ecd8     call    0x0057b0, 0x0call    0x0057b0, 0x0 	CALL	_lcd_printNumber
004992   f02b
004994   0e03     movlw   0x03             	MOVLW	0x03
004996   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	212; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_setCursor(0,1);
004998   0e01     movlw   0x01             	MOVLW	0x01
00499a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00499c   0e00     movlw   0x00             	MOVLW	0x00
00499e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0049a0   ecf3     call    0x006fe6, 0x0call    0x006fe6, 0x0 	CALL	_lcd_setCursor
0049a2   f037
0049a4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0049a6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	214; /home/vbasel/.icaro/v4/firmware/source/user.c	switch(contador)
0049a8   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0049aa   0104     movlb   0x4              	BANKSEL	(_contador + 1)
0049ac   affb     btfss   0xfb, 0x7, 0x1   	BTFSS	(_contador + 1), 7, B
0049ae   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0049b0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0049b2   d059     bra     0x004a66         	BRA	_01801_DS_
                                           ; removed redundant BANKSEL
0049b4   51fb     movf    0xfb, 0x0, 0x1   	MOVF	(_contador + 1), W, B
0049b6   0f80     addlw   0x80             	ADDLW	0x80
0049b8   0f80     addlw   0x80             	ADDLW	0x80
0049ba   e102     bnz     0x0049c0         	BNZ	_01829_DS_
0049bc   0e05     movlw   0x05             	MOVLW	0x05
                                           ; removed redundant BANKSEL
0049be   5dfa     subwf   0xfa, 0x0, 0x1   	SUBWF	_contador, W, B
                                           _01829_DS_:
0049c0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0049c2   d051     bra     0x004a66         	BRA	_01801_DS_
0049c4   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0049c6   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0049c8   0104     movlb   0x4              	BANKSEL	_contador
0049ca   35fa     rlcf    0xfa, 0x0, 0x1   	RLCF	_contador, W, B
0049cc   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0049ce   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0049d0   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0049d2   0bfc     andlw   0xfc             	ANDLW	0xfc
0049d4   0fe4     addlw   0xe4             	ADDLW	LOW(_01830_DS_)
0049d6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0049d8   0e49     movlw   0x49             	MOVLW	HIGH(_01830_DS_)
0049da   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0049dc   0e00     movlw   0x00             	MOVLW	UPPER(_01830_DS_)
0049de   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0049e0   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0049e2   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01830_DS_:
0049e4   effc     goto    0x0049f8         	GOTO	_01796_DS_
0049e6   f024
0049e8   ef07     goto    0x004a0e         	GOTO	_01797_DS_
0049ea   f025
0049ec   ef12     goto    0x004a24         	GOTO	_01798_DS_
0049ee   f025
0049f0   ef1d     goto    0x004a3a         	GOTO	_01799_DS_
0049f2   f025
0049f4   ef28     goto    0x004a50         	GOTO	_01800_DS_
0049f6   f025
                                           _01796_DS_:
                                           ;	.line	217; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("menu ");
0049f8   0e00     movlw   0x00             	MOVLW	UPPER(___str_10)
0049fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0049fc   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_10)
0049fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a00   0e3c     movlw   0x3c             	MOVLW	LOW(___str_10)
004a02   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a04   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
004a06   f037
004a08   0e03     movlw   0x03             	MOVLW	0x03
004a0a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	218; /home/vbasel/.icaro/v4/firmware/source/user.c	break;
004a0c   d037     bra     0x004a7c         	BRA	_01802_DS_
                                           _01797_DS_:
                                           ;	.line	220; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("sumo bl ");
004a0e   0e00     movlw   0x00             	MOVLW	UPPER(___str_11)
004a10   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a12   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_11)
004a14   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a16   0e42     movlw   0x42             	MOVLW	LOW(___str_11)
004a18   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a1a   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
004a1c   f037
004a1e   0e03     movlw   0x03             	MOVLW	0x03
004a20   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	221; /home/vbasel/.icaro/v4/firmware/source/user.c	break;
004a22   d02c     bra     0x004a7c         	BRA	_01802_DS_
                                           _01798_DS_:
                                           ;	.line	223; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("sumo ng");
004a24   0e00     movlw   0x00             	MOVLW	UPPER(___str_12)
004a26   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a28   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_12)
004a2a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a2c   0e4c     movlw   0x4c             	MOVLW	LOW(___str_12)
004a2e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a30   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
004a32   f037
004a34   0e03     movlw   0x03             	MOVLW	0x03
004a36   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	224; /home/vbasel/.icaro/v4/firmware/source/user.c	break;
004a38   d021     bra     0x004a7c         	BRA	_01802_DS_
                                           _01799_DS_:
                                           ;	.line	226; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("seg_line ");
004a3a   0e00     movlw   0x00             	MOVLW	UPPER(___str_13)
004a3c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a3e   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_13)
004a40   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a42   0e54     movlw   0x54             	MOVLW	LOW(___str_13)
004a44   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a46   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
004a48   f037
004a4a   0e03     movlw   0x03             	MOVLW	0x03
004a4c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/source/user.c	break;
004a4e   d016     bra     0x004a7c         	BRA	_01802_DS_
                                           _01800_DS_:
                                           ;	.line	229; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("test");
004a50   0e00     movlw   0x00             	MOVLW	UPPER(___str_14)
004a52   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a54   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_14)
004a56   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a58   0e5e     movlw   0x5e             	MOVLW	LOW(___str_14)
004a5a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a5c   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
004a5e   f037
004a60   0e03     movlw   0x03             	MOVLW	0x03
004a62   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	230; /home/vbasel/.icaro/v4/firmware/source/user.c	break;
004a64   d00b     bra     0x004a7c         	BRA	_01802_DS_
                                           _01801_DS_:
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_printNumber(contador,10);
004a66   0e0a     movlw   0x0a             	MOVLW	0x0a
004a68   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a6a   0104     movlb   0x4              	BANKSEL	(_contador + 1)
004a6c   51fb     movf    0xfb, 0x0, 0x1   	MOVF	(_contador + 1), W, B
004a6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
004a70   51fa     movf    0xfa, 0x0, 0x1   	MOVF	_contador, W, B
004a72   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a74   ecd8     call    0x0057b0, 0x0call    0x0057b0, 0x0 	CALL	_lcd_printNumber
004a76   f02b
004a78   0e03     movlw   0x03             	MOVLW	0x03
004a7a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _01802_DS_:
                                           ;	.line	236; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_home();
004a7c   ec3c     call    0x007878, 0x0call    0x007878, 0x0 	CALL	_lcd_home
004a7e   f03c
                                           ;	.line	239; /home/vbasel/.icaro/v4/firmware/source/user.c	if(sw==0)
004a80   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004a82   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
004a84   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
004a86   d741     bra     0x00490a         	BRA	_01806_DS_
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/source/user.c	return ;
004a88   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004a8a   f003
004a8c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004a8e   f002
004a90   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004a92   f001
004a94   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004a96   f000
004a98   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__robot	code
                                           _robot:
                                           ;	.line	136; /home/vbasel/.icaro/v4/firmware/source/user.c	void robot()
004c38   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004c3a   ffe5
004c3c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004c3e   ffe5
004c40   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004c42   ffe5
004c44   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004c46   ffe5
004c48   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004c4a   ffe5
004c4c   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004c4e   ffe5
                                           ;	.line	142; /home/vbasel/.icaro/v4/firmware/source/user.c	int contador_t=0;
004c50   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004c52   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	143; /home/vbasel/.icaro/v4/firmware/source/user.c	for (a=0;a<6;a++)
004c54   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004c56   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01748_DS_:
                                           ;	.line	145; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_home();
004c58   ec3c     call    0x007878, 0x0call    0x007878, 0x0 	CALL	_lcd_home
004c5a   f03c
                                           ;	.line	146; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_printNumber(a,10);
004c5c   0e0a     movlw   0x0a             	MOVLW	0x0a
004c5e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004c60   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004c62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004c64   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004c66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004c68   ecd8     call    0x0057b0, 0x0call    0x0057b0, 0x0 	CALL	_lcd_printNumber
004c6a   f02b
004c6c   0e03     movlw   0x03             	MOVLW	0x03
004c6e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	147; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(1000);
004c70   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004c72   0ee8     movlw   0xe8             	MOVLW	0xe8
004c74   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004c76   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
004c78   f031
004c7a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004c7c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	143; /home/vbasel/.icaro/v4/firmware/source/user.c	for (a=0;a<6;a++)
004c7e   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
004c80   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
004c82   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004c84   0f80     addlw   0x80             	ADDLW	0x80
004c86   0f80     addlw   0x80             	ADDLW	0x80
004c88   e102     bnz     0x004c8e         	BNZ	_01782_DS_
004c8a   0e06     movlw   0x06             	MOVLW	0x06
004c8c   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01782_DS_:
004c8e   e3e4     bnc     0x004c58         	BNC	_01748_DS_
                                           _01745_DS_:
                                           ;	.line	150; /home/vbasel/.icaro/v4/firmware/source/user.c	while(analogread(15)>0)
004c90   0e0f     movlw   0x0f             	MOVLW	0x0f
004c92   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004c94   ecc1     call    0x006b82, 0x0call    0x006b82, 0x0 	CALL	_analogread
004c96   f035
004c98   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
004c9a   f003
004c9c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004c9e   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
004ca0   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
004ca2   d089     bra     0x004db6         	BRA	_01750_DS_
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/source/user.c	dist=ping();
004ca4   ec32     call    0x007064, 0x0call    0x007064, 0x0 	CALL	_ping
004ca6   f038
004ca8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004caa   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
004cac   f003
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/source/user.c	enojado();
004cae   ec34     call    0x007468, 0x0call    0x007468, 0x0 	CALL	_enojado
004cb0   f03a
                                           ;	.line	158; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=ICR_MOTS_INV_DE;
004cb2   0e30     movlw   0x30             	MOVLW	0x30
004cb4   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(1);
004cb6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004cb8   0e01     movlw   0x01             	MOVLW	0x01
004cba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004cbc   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
004cbe   f031
004cc0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004cc2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/source/user.c	contador_t++;
004cc4   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
004cc6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ;	.line	162; /home/vbasel/.icaro/v4/firmware/source/user.c	if (contador_t>50)
004cc8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004cca   0f80     addlw   0x80             	ADDLW	0x80
004ccc   0f80     addlw   0x80             	ADDLW	0x80
004cce   e102     bnz     0x004cd4         	BNZ	_01783_DS_
004cd0   0e33     movlw   0x33             	MOVLW	0x33
004cd2   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _01783_DS_:
004cd4   e304     bnc     0x004cde         	BNC	_01736_DS_
                                           ;	.line	164; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_clear();
004cd6   ec2f     call    0x00785e, 0x0call    0x00785e, 0x0 	CALL	_lcd_clear
004cd8   f03c
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/source/user.c	contador_t=0;
004cda   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004cdc   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01736_DS_:
                                           ;	.line	167; /home/vbasel/.icaro/v4/firmware/source/user.c	if (dist<23 && dist>0)
004cde   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004ce0   0f80     addlw   0x80             	ADDLW	0x80
004ce2   0f80     addlw   0x80             	ADDLW	0x80
004ce4   e102     bnz     0x004cea         	BNZ	_01784_DS_
004ce6   0e17     movlw   0x17             	MOVLW	0x17
004ce8   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01784_DS_:
004cea   e2d2     bc      0x004c90         	BC	_01745_DS_
004cec   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004cee   0f80     addlw   0x80             	ADDLW	0x80
004cf0   0f80     addlw   0x80             	ADDLW	0x80
004cf2   e102     bnz     0x004cf8         	BNZ	_01785_DS_
004cf4   0e01     movlw   0x01             	MOVLW	0x01
004cf6   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01785_DS_:
004cf8   e3cb     bnc     0x004c90         	BNC	_01745_DS_
                                           ;	.line	169; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_home();
004cfa   ec3c     call    0x007878, 0x0call    0x007878, 0x0 	CALL	_lcd_home
004cfc   f03c
                                           ;	.line	170; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("matar!");
004cfe   0e00     movlw   0x00             	MOVLW	UPPER(___str_8)
004d00   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d02   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_8)
004d04   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d06   0e2e     movlw   0x2e             	MOVLW	LOW(___str_8)
004d08   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d0a   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
004d0c   f037
004d0e   0e03     movlw   0x03             	MOVLW	0x03
004d10   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/source/user.c	while(band<10)
004d12   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004d14   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01739_DS_:
004d16   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004d18   0f80     addlw   0x80             	ADDLW	0x80
004d1a   0f80     addlw   0x80             	ADDLW	0x80
004d1c   e102     bnz     0x004d22         	BNZ	_01786_DS_
004d1e   0e0a     movlw   0x0a             	MOVLW	0x0a
004d20   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01786_DS_:
004d22   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004d24   d7b5     bra     0x004c90         	BRA	_01745_DS_
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_home();
004d26   ec3c     call    0x007878, 0x0call    0x007878, 0x0 	CALL	_lcd_home
004d28   f03c
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("matar!");
004d2a   0e00     movlw   0x00             	MOVLW	UPPER(___str_8)
004d2c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d2e   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_8)
004d30   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d32   0e2e     movlw   0x2e             	MOVLW	LOW(___str_8)
004d34   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d36   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
004d38   f037
004d3a   0e03     movlw   0x03             	MOVLW	0x03
004d3c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_setCursor(0,1);
004d3e   0e01     movlw   0x01             	MOVLW	0x01
004d40   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d42   0e00     movlw   0x00             	MOVLW	0x00
004d44   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004d46   ecf3     call    0x006fe6, 0x0call    0x006fe6, 0x0 	CALL	_lcd_setCursor
004d48   f037
004d4a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004d4c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_printNumber(band,10);
004d4e   0e0a     movlw   0x0a             	MOVLW	0x0a
004d50   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d52   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004d54   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d56   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004d58   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d5a   ecd8     call    0x0057b0, 0x0call    0x0057b0, 0x0 	CALL	_lcd_printNumber
004d5c   f02b
004d5e   0e03     movlw   0x03             	MOVLW	0x03
004d60   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	178; /home/vbasel/.icaro/v4/firmware/source/user.c	distancia_a1=analogread(13);
004d62   0e0d     movlw   0x0d             	MOVLW	0x0d
004d64   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d66   ecc1     call    0x006b82, 0x0call    0x006b82, 0x0 	CALL	_analogread
004d68   f035
004d6a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
004d6c   cff3     movff   0xff3, 0x005     	MOVFF	PRODL, r0x05
004d6e   f005
004d70   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	179; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=ICR_MOTS_AD;
004d72   0e60     movlw   0x60             	MOVLW	0x60
004d74   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/source/user.c	if (distancia_a1>140)
004d76   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
004d78   0f80     addlw   0x80             	ADDLW	0x80
004d7a   0f80     addlw   0x80             	ADDLW	0x80
004d7c   e102     bnz     0x004d82         	BNZ	_01787_DS_
004d7e   0e8d     movlw   0x8d             	MOVLW	0x8d
004d80   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
                                           _01787_DS_:
004d82   e3c9     bnc     0x004d16         	BNC	_01739_DS_
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=ICR_MOTS_AT;
004d84   0e90     movlw   0x90             	MOVLW	0x90
004d86   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	183; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(300);
004d88   0e01     movlw   0x01             	MOVLW	0x01
004d8a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d8c   0e2c     movlw   0x2c             	MOVLW	0x2c
004d8e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d90   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
004d92   f031
004d94   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004d96   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	184; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=ICR_MOTS_INV_DE;
004d98   0e30     movlw   0x30             	MOVLW	0x30
004d9a   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(600);
004d9c   0e02     movlw   0x02             	MOVLW	0x02
004d9e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004da0   0e58     movlw   0x58             	MOVLW	0x58
004da2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004da4   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
004da6   f031
004da8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004daa   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	186; /home/vbasel/.icaro/v4/firmware/source/user.c	band++;
004dac   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
004dae   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_clear();
004db0   ec2f     call    0x00785e, 0x0call    0x00785e, 0x0 	CALL	_lcd_clear
004db2   f03c
004db4   d7b0     bra     0x004d16         	BRA	_01739_DS_
                                           _01750_DS_:
004db6   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004db8   f005
004dba   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004dbc   f004
004dbe   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004dc0   f003
004dc2   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004dc4   f002
004dc6   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004dc8   f001
004dca   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004dcc   f000
004dce   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__robot2	code
                                           _robot2:
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/source/user.c	void robot2()
004dd0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004dd2   ffe5
004dd4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004dd6   ffe5
004dd8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004dda   ffe5
004ddc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004dde   ffe5
004de0   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004de2   ffe5
004de4   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004de6   ffe5
                                           ;	.line	84; /home/vbasel/.icaro/v4/firmware/source/user.c	int contador_t=0;
004de8   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004dea   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/source/user.c	for (a=0;a<6;a++)
004dec   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004dee   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01690_DS_:
                                           ;	.line	87; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_home();
004df0   ec3c     call    0x007878, 0x0call    0x007878, 0x0 	CALL	_lcd_home
004df2   f03c
                                           ;	.line	88; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_printNumber(a,10);
004df4   0e0a     movlw   0x0a             	MOVLW	0x0a
004df6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004df8   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004dfa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004dfc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004dfe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e00   ecd8     call    0x0057b0, 0x0call    0x0057b0, 0x0 	CALL	_lcd_printNumber
004e02   f02b
004e04   0e03     movlw   0x03             	MOVLW	0x03
004e06   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(1000);
004e08   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e0a   0ee8     movlw   0xe8             	MOVLW	0xe8
004e0c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e0e   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
004e10   f031
004e12   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004e14   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/source/user.c	for (a=0;a<6;a++)
004e16   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
004e18   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
004e1a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004e1c   0f80     addlw   0x80             	ADDLW	0x80
004e1e   0f80     addlw   0x80             	ADDLW	0x80
004e20   e102     bnz     0x004e26         	BNZ	_01724_DS_
004e22   0e06     movlw   0x06             	MOVLW	0x06
004e24   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01724_DS_:
004e26   e3e4     bnc     0x004df0         	BNC	_01690_DS_
                                           _01687_DS_:
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/source/user.c	while(analogread(15)>0)
004e28   0e0f     movlw   0x0f             	MOVLW	0x0f
004e2a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e2c   ecc1     call    0x006b82, 0x0call    0x006b82, 0x0 	CALL	_analogread
004e2e   f035
004e30   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
004e32   f003
004e34   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004e36   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
004e38   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
004e3a   d089     bra     0x004f4e         	BRA	_01692_DS_
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/source/user.c	dist=ping();
004e3c   ec32     call    0x007064, 0x0call    0x007064, 0x0 	CALL	_ping
004e3e   f038
004e40   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004e42   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
004e44   f003
                                           ;	.line	99; /home/vbasel/.icaro/v4/firmware/source/user.c	enojado();
004e46   ec34     call    0x007468, 0x0call    0x007468, 0x0 	CALL	_enojado
004e48   f03a
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=ICR_MOTS_INV_DE;
004e4a   0e30     movlw   0x30             	MOVLW	0x30
004e4c   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(1);
004e4e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004e50   0e01     movlw   0x01             	MOVLW	0x01
004e52   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e54   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
004e56   f031
004e58   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004e5a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/source/user.c	contador_t++;
004e5c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
004e5e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/source/user.c	if (contador_t>50)
004e60   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004e62   0f80     addlw   0x80             	ADDLW	0x80
004e64   0f80     addlw   0x80             	ADDLW	0x80
004e66   e102     bnz     0x004e6c         	BNZ	_01725_DS_
004e68   0e33     movlw   0x33             	MOVLW	0x33
004e6a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _01725_DS_:
004e6c   e304     bnc     0x004e76         	BNC	_01678_DS_
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_clear();
004e6e   ec2f     call    0x00785e, 0x0call    0x00785e, 0x0 	CALL	_lcd_clear
004e70   f03c
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/source/user.c	contador_t=0;
004e72   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004e74   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01678_DS_:
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/source/user.c	if (dist<23 && dist>0)
004e76   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004e78   0f80     addlw   0x80             	ADDLW	0x80
004e7a   0f80     addlw   0x80             	ADDLW	0x80
004e7c   e102     bnz     0x004e82         	BNZ	_01726_DS_
004e7e   0e17     movlw   0x17             	MOVLW	0x17
004e80   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01726_DS_:
004e82   e2d2     bc      0x004e28         	BC	_01687_DS_
004e84   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004e86   0f80     addlw   0x80             	ADDLW	0x80
004e88   0f80     addlw   0x80             	ADDLW	0x80
004e8a   e102     bnz     0x004e90         	BNZ	_01727_DS_
004e8c   0e01     movlw   0x01             	MOVLW	0x01
004e8e   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01727_DS_:
004e90   e3cb     bnc     0x004e28         	BNC	_01687_DS_
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_home();
004e92   ec3c     call    0x007878, 0x0call    0x007878, 0x0 	CALL	_lcd_home
004e94   f03c
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("matar!");
004e96   0e00     movlw   0x00             	MOVLW	UPPER(___str_8)
004e98   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e9a   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_8)
004e9c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e9e   0e2e     movlw   0x2e             	MOVLW	LOW(___str_8)
004ea0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004ea2   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
004ea4   f037
004ea6   0e03     movlw   0x03             	MOVLW	0x03
004ea8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	114; /home/vbasel/.icaro/v4/firmware/source/user.c	while(band<10)
004eaa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004eac   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01681_DS_:
004eae   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004eb0   0f80     addlw   0x80             	ADDLW	0x80
004eb2   0f80     addlw   0x80             	ADDLW	0x80
004eb4   e102     bnz     0x004eba         	BNZ	_01728_DS_
004eb6   0e0a     movlw   0x0a             	MOVLW	0x0a
004eb8   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01728_DS_:
004eba   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004ebc   d7b5     bra     0x004e28         	BRA	_01687_DS_
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_home();
004ebe   ec3c     call    0x007878, 0x0call    0x007878, 0x0 	CALL	_lcd_home
004ec0   f03c
                                           ;	.line	117; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("matar!");
004ec2   0e00     movlw   0x00             	MOVLW	UPPER(___str_8)
004ec4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004ec6   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_8)
004ec8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004eca   0e2e     movlw   0x2e             	MOVLW	LOW(___str_8)
004ecc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004ece   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
004ed0   f037
004ed2   0e03     movlw   0x03             	MOVLW	0x03
004ed4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	118; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_setCursor(0,1);
004ed6   0e01     movlw   0x01             	MOVLW	0x01
004ed8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004eda   0e00     movlw   0x00             	MOVLW	0x00
004edc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004ede   ecf3     call    0x006fe6, 0x0call    0x006fe6, 0x0 	CALL	_lcd_setCursor
004ee0   f037
004ee2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004ee4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	119; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_printNumber(band,10);
004ee6   0e0a     movlw   0x0a             	MOVLW	0x0a
004ee8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004eea   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004eec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004eee   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004ef0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004ef2   ecd8     call    0x0057b0, 0x0call    0x0057b0, 0x0 	CALL	_lcd_printNumber
004ef4   f02b
004ef6   0e03     movlw   0x03             	MOVLW	0x03
004ef8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	120; /home/vbasel/.icaro/v4/firmware/source/user.c	distancia_a1=analogread(13);
004efa   0e0d     movlw   0x0d             	MOVLW	0x0d
004efc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004efe   ecc1     call    0x006b82, 0x0call    0x006b82, 0x0 	CALL	_analogread
004f00   f035
004f02   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
004f04   cff3     movff   0xff3, 0x005     	MOVFF	PRODL, r0x05
004f06   f005
004f08   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	121; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=ICR_MOTS_AD;
004f0a   0e60     movlw   0x60             	MOVLW	0x60
004f0c   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	122; /home/vbasel/.icaro/v4/firmware/source/user.c	if (distancia_a1<50)
004f0e   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
004f10   0f80     addlw   0x80             	ADDLW	0x80
004f12   0f80     addlw   0x80             	ADDLW	0x80
004f14   e102     bnz     0x004f1a         	BNZ	_01729_DS_
004f16   0e32     movlw   0x32             	MOVLW	0x32
004f18   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
                                           _01729_DS_:
004f1a   e2c9     bc      0x004eae         	BC	_01681_DS_
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=ICR_MOTS_AT;
004f1c   0e90     movlw   0x90             	MOVLW	0x90
004f1e   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	125; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(300);
004f20   0e01     movlw   0x01             	MOVLW	0x01
004f22   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004f24   0e2c     movlw   0x2c             	MOVLW	0x2c
004f26   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004f28   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
004f2a   f031
004f2c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004f2e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=ICR_MOTS_INV_DE;
004f30   0e30     movlw   0x30             	MOVLW	0x30
004f32   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(600);
004f34   0e02     movlw   0x02             	MOVLW	0x02
004f36   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004f38   0e58     movlw   0x58             	MOVLW	0x58
004f3a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004f3c   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
004f3e   f031
004f40   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004f42   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	128; /home/vbasel/.icaro/v4/firmware/source/user.c	band++;
004f44   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
004f46   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
                                           ;	.line	129; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_clear();
004f48   ec2f     call    0x00785e, 0x0call    0x00785e, 0x0 	CALL	_lcd_clear
004f4a   f03c
004f4c   d7b0     bra     0x004eae         	BRA	_01681_DS_
                                           _01692_DS_:
004f4e   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004f50   f005
004f52   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004f54   f004
004f56   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004f58   f003
004f5a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004f5c   f002
004f5e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004f60   f001
004f62   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004f64   f000
004f66   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__seg_lineas	code
                                           _seg_lineas:
                                           ;	.line	56; /home/vbasel/.icaro/v4/firmware/source/user.c	void seg_lineas()
006dd8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006dda   ffe5
006ddc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006dde   ffe5
                                           ;	.line	60; /home/vbasel/.icaro/v4/firmware/source/user.c	for (a=0;a<6;a++)
006de0   6a00     clrf    0x00, 0x0        	CLRF	r0x00
006de2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01650_DS_:
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_home();
006de4   ec3c     call    0x007878, 0x0call    0x007878, 0x0 	CALL	_lcd_home
006de6   f03c
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_printNumber(a,10);
006de8   0e0a     movlw   0x0a             	MOVLW	0x0a
006dea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006dec   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006dee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006df0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006df2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006df4   ecd8     call    0x0057b0, 0x0call    0x0057b0, 0x0 	CALL	_lcd_printNumber
006df6   f02b
006df8   0e03     movlw   0x03             	MOVLW	0x03
006dfa   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(1000);
006dfc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006dfe   0ee8     movlw   0xe8             	MOVLW	0xe8
006e00   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006e02   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
006e04   f031
006e06   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006e08   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	60; /home/vbasel/.icaro/v4/firmware/source/user.c	for (a=0;a<6;a++)
006e0a   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
006e0c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
006e0e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006e10   0f80     addlw   0x80             	ADDLW	0x80
006e12   0f80     addlw   0x80             	ADDLW	0x80
006e14   e102     bnz     0x006e1a         	BNZ	_01670_DS_
006e16   0e06     movlw   0x06             	MOVLW	0x06
006e18   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _01670_DS_:
006e1a   e3e4     bnc     0x006de4         	BNC	_01650_DS_
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/source/user.c	contento();
006e1c   ec10     call    0x007420, 0x0call    0x007420, 0x0 	CALL	_contento
006e1e   f03a
                                           _01647_DS_:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/source/user.c	while(analogread(15)>0)
006e20   0e0f     movlw   0x0f             	MOVLW	0x0f
006e22   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006e24   ecc1     call    0x006b82, 0x0call    0x006b82, 0x0 	CALL	_analogread
006e26   f035
006e28   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
006e2a   f001
006e2c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006e2e   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
006e30   e014     bz      0x006e5a         	BZ	_01652_DS_
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/source/user.c	distancia=analogread(13);
006e32   0e0d     movlw   0x0d             	MOVLW	0x0d
006e34   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006e36   ecc1     call    0x006b82, 0x0call    0x006b82, 0x0 	CALL	_analogread
006e38   f035
006e3a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006e3c   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
006e3e   f001
006e40   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=ICR_MOTS_IZ;
006e42   0e40     movlw   0x40             	MOVLW	0x40
006e44   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/source/user.c	if(distancia<100)
006e46   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006e48   0f80     addlw   0x80             	ADDLW	0x80
006e4a   0f80     addlw   0x80             	ADDLW	0x80
006e4c   e102     bnz     0x006e52         	BNZ	_01671_DS_
006e4e   0e64     movlw   0x64             	MOVLW	0x64
006e50   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _01671_DS_:
006e52   e2e6     bc      0x006e20         	BC	_01647_DS_
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTD=ICR_MOTS_DE;
006e54   0e20     movlw   0x20             	MOVLW	0x20
006e56   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
006e58   d7e3     bra     0x006e20         	BRA	_01647_DS_
                                           _01652_DS_:
006e5a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006e5c   f001
006e5e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006e60   f000
006e62   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__mostrar_datos	code
                                           _mostrar_datos:
                                           ;	.line	28; /home/vbasel/.icaro/v4/firmware/source/user.c	void mostrar_datos()
005ea2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005ea4   ffe5
005ea6   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005ea8   ffe5
                                           ;	.line	31; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(500);
005eaa   0e01     movlw   0x01             	MOVLW	0x01
005eac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005eae   0ef4     movlw   0xf4             	MOVLW	0xf4
005eb0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005eb2   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
005eb4   f031
005eb6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005eb8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           _01625_DS_:
                                           ;	.line	32; /home/vbasel/.icaro/v4/firmware/source/user.c	while(analogread(15)>0)
005eba   0e0f     movlw   0x0f             	MOVLW	0x0f
005ebc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005ebe   ecc1     call    0x006b82, 0x0call    0x006b82, 0x0 	CALL	_analogread
005ec0   f035
005ec2   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
005ec4   f001
005ec6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005ec8   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
005eca   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
005ecc   d06c     bra     0x005fa6         	BRA	_01628_DS_
                                           ;	.line	36; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_home();
005ece   ec3c     call    0x007878, 0x0call    0x007878, 0x0 	CALL	_lcd_home
005ed0   f03c
                                           ;	.line	37; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("a1:");
005ed2   0e00     movlw   0x00             	MOVLW	UPPER(___str_5)
005ed4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005ed6   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_5)
005ed8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005eda   0e22     movlw   0x22             	MOVLW	LOW(___str_5)
005edc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005ede   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
005ee0   f037
005ee2   0e03     movlw   0x03             	MOVLW	0x03
005ee4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_setCursor(3,0); 
005ee6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005ee8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005eea   ecf3     call    0x006fe6, 0x0call    0x006fe6, 0x0 	CALL	_lcd_setCursor
005eec   f037
005eee   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005ef0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_printNumber(analogread(13),10);
005ef2   0e0d     movlw   0x0d             	MOVLW	0x0d
005ef4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005ef6   ecc1     call    0x006b82, 0x0call    0x006b82, 0x0 	CALL	_analogread
005ef8   f035
005efa   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005efc   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
005efe   f001
005f00   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005f02   0e0a     movlw   0x0a             	MOVLW	0x0a
005f04   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f06   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005f08   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f0a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005f0c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f0e   ecd8     call    0x0057b0, 0x0call    0x0057b0, 0x0 	CALL	_lcd_printNumber
005f10   f02b
005f12   0e03     movlw   0x03             	MOVLW	0x03
005f14   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	40; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_setCursor(0,1);
005f16   0e01     movlw   0x01             	MOVLW	0x01
005f18   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f1a   0e00     movlw   0x00             	MOVLW	0x00
005f1c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005f1e   ecf3     call    0x006fe6, 0x0call    0x006fe6, 0x0 	CALL	_lcd_setCursor
005f20   f037
005f22   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005f24   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	41; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("hc:");
005f26   0e00     movlw   0x00             	MOVLW	UPPER(___str_6)
005f28   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f2a   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_6)
005f2c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f2e   0e26     movlw   0x26             	MOVLW	LOW(___str_6)
005f30   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f32   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
005f34   f037
005f36   0e03     movlw   0x03             	MOVLW	0x03
005f38   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	42; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_setCursor(3,1);
005f3a   0e01     movlw   0x01             	MOVLW	0x01
005f3c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f3e   0e03     movlw   0x03             	MOVLW	0x03
005f40   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f42   ecf3     call    0x006fe6, 0x0call    0x006fe6, 0x0 	CALL	_lcd_setCursor
005f44   f037
005f46   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005f48   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	43; /home/vbasel/.icaro/v4/firmware/source/user.c	dist=ping();
005f4a   ec32     call    0x007064, 0x0call    0x007064, 0x0 	CALL	_ping
005f4c   f038
005f4e   0104     movlb   0x4              	BANKSEL	_dist
005f50   6ffc     movwf   0xfc, 0x1        	MOVWF	_dist, B
005f52   cff3     movff   0xff3, 0x4fd     	MOVFF	PRODL, (_dist + 1)
005f54   f4fd
                                           ; removed redundant BANKSEL
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/source/user.c	if (dist<16){
005f56   51fd     movf    0xfd, 0x0, 0x1   	MOVF	(_dist + 1), W, B
005f58   0f80     addlw   0x80             	ADDLW	0x80
005f5a   0f80     addlw   0x80             	ADDLW	0x80
005f5c   e102     bnz     0x005f62         	BNZ	_01639_DS_
005f5e   0e10     movlw   0x10             	MOVLW	0x10
                                           ; removed redundant BANKSEL
005f60   5dfc     subwf   0xfc, 0x0, 0x1   	SUBWF	_dist, W, B
                                           _01639_DS_:
005f62   e20c     bc      0x005f7c         	BC	_01623_DS_
                                           ;	.line	45; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_printNumber(dist,10);
005f64   0e0a     movlw   0x0a             	MOVLW	0x0a
005f66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f68   0104     movlb   0x4              	BANKSEL	(_dist + 1)
005f6a   51fd     movf    0xfd, 0x0, 0x1   	MOVF	(_dist + 1), W, B
005f6c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
005f6e   51fc     movf    0xfc, 0x0, 0x1   	MOVF	_dist, W, B
005f70   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f72   ecd8     call    0x0057b0, 0x0call    0x0057b0, 0x0 	CALL	_lcd_printNumber
005f74   f02b
005f76   0e03     movlw   0x03             	MOVLW	0x03
005f78   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
005f7a   d00a     bra     0x005f90         	BRA	_01624_DS_
                                           _01623_DS_:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("nnn");
005f7c   0e00     movlw   0x00             	MOVLW	UPPER(___str_7)
005f7e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f80   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_7)
005f82   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f84   0e2a     movlw   0x2a             	MOVLW	LOW(___str_7)
005f86   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f88   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
005f8a   f037
005f8c   0e03     movlw   0x03             	MOVLW	0x03
005f8e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _01624_DS_:
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(300);
005f90   0e01     movlw   0x01             	MOVLW	0x01
005f92   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f94   0e2c     movlw   0x2c             	MOVLW	0x2c
005f96   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f98   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
005f9a   f031
005f9c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005f9e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_clear();
005fa0   ec2f     call    0x00785e, 0x0call    0x00785e, 0x0 	CALL	_lcd_clear
005fa2   f03c
005fa4   d78a     bra     0x005eba         	BRA	_01625_DS_
                                           _01628_DS_:
005fa6   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005fa8   f001
005faa   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005fac   f000
005fae   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__contento	code
                                           _contento:
                                           ;	.line	20; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_setCursor(0,0);
007420   0e00     movlw   0x00             	MOVLW	0x00
007422   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
007424   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
007426   ecf3     call    0x006fe6, 0x0call    0x006fe6, 0x0 	CALL	_lcd_setCursor
007428   f037
00742a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00742c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	21; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print(" (.)(.) ");
00742e   0e00     movlw   0x00             	MOVLW	UPPER(___str_3)
007430   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007432   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_3)
007434   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007436   0e0e     movlw   0x0e             	MOVLW	LOW(___str_3)
007438   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00743a   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
00743c   f037
00743e   0e03     movlw   0x03             	MOVLW	0x03
007440   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	22; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_setCursor(0,1);
007442   0e01     movlw   0x01             	MOVLW	0x01
007444   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007446   0e00     movlw   0x00             	MOVLW	0x00
007448   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00744a   ecf3     call    0x006fe6, 0x0call    0x006fe6, 0x0 	CALL	_lcd_setCursor
00744c   f037
00744e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007450   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	23; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("  ----  ");
007452   0e00     movlw   0x00             	MOVLW	UPPER(___str_4)
007454   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007456   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_4)
007458   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00745a   0e18     movlw   0x18             	MOVLW	LOW(___str_4)
00745c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00745e   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
007460   f037
007462   0e03     movlw   0x03             	MOVLW	0x03
007464   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
007466   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__enojado	code
                                           _enojado:
                                           ;	.line	12; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_setCursor(0,0);
007468   0e00     movlw   0x00             	MOVLW	0x00
00746a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00746c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00746e   ecf3     call    0x006fe6, 0x0call    0x006fe6, 0x0 	CALL	_lcd_setCursor
007470   f037
007472   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007474   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	13; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print(" <.><.> ");
007476   0e00     movlw   0x00             	MOVLW	UPPER(___str_1)
007478   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00747a   0e5d     movlw   0x5d             	MOVLW	HIGH(___str_1)
00747c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00747e   0efa     movlw   0xfa             	MOVLW	LOW(___str_1)
007480   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007482   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
007484   f037
007486   0e03     movlw   0x03             	MOVLW	0x03
007488   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	14; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_setCursor(0,1);
00748a   0e01     movlw   0x01             	MOVLW	0x01
00748c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00748e   0e00     movlw   0x00             	MOVLW	0x00
007490   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
007492   ecf3     call    0x006fe6, 0x0call    0x006fe6, 0x0 	CALL	_lcd_setCursor
007494   f037
007496   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007498   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	15; /home/vbasel/.icaro/v4/firmware/source/user.c	lcd_print("  ####  ");
00749a   0e00     movlw   0x00             	MOVLW	UPPER(___str_2)
00749c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00749e   0e5e     movlw   0x5e             	MOVLW	HIGH(___str_2)
0074a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0074a2   0e04     movlw   0x04             	MOVLW	LOW(___str_2)
0074a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0074a6   ec32     call    0x006e64, 0x0call    0x006e64, 0x0 	CALL	_lcd_print
0074a8   f037
0074aa   0e03     movlw   0x03             	MOVLW	0x03
0074ac   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0074ae   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__sensordigital	code
                                           _sensordigital:
                                           ;	.line	120; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	int sensordigital(int valor)
0074f6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0074f8   ffe5
0074fa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0074fc   ffd9
0074fe   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007500   ffe5
007502   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
007504   ffe5
007506   0e02     movlw   0x02             	MOVLW	0x02
007508   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00750a   f000
00750c   0e03     movlw   0x03             	MOVLW	0x03
00750e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
007510   f001
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	temp=digitalread(valor);
007512   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
007514   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007516   ecd6     call    0x0045ac, 0x0call    0x0045ac, 0x0 	CALL	_digitalread
007518   f022
00751a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00751c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	125; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	if (temp==0)
00751e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
007520   e103     bnz     0x007528         	BNZ	_01605_DS_
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	return 1;
007522   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
007524   0e01     movlw   0x01             	MOVLW	0x01
007526   d002     bra     0x00752c         	BRA	_01607_DS_
                                           _01605_DS_:
                                           ;	.line	131; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	return 0;
007528   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
00752a   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _01607_DS_:
00752c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00752e   f001
007530   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
007532   f000
007534   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007536   ffd9
007538   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	TRISB=0; //defino PORTB como salida
00619e   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	90; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	PORTB=0; 
0061a0   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	PORTD=0;
0061a2   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG1,INPUT);
0061a4   0e01     movlw   0x01             	MOVLW	0x01
0061a6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061a8   0e15     movlw   0x15             	MOVLW	0x15
0061aa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061ac   eca7     call    0x003d4e, 0x0call    0x003d4e, 0x0 	CALL	_pinmode
0061ae   f01e
0061b0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0061b2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG2,INPUT);
0061b4   0e01     movlw   0x01             	MOVLW	0x01
0061b6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061b8   0e16     movlw   0x16             	MOVLW	0x16
0061ba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061bc   eca7     call    0x003d4e, 0x0call    0x003d4e, 0x0 	CALL	_pinmode
0061be   f01e
0061c0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0061c2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG3,TRIG);
0061c4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0061c6   0e17     movlw   0x17             	MOVLW	0x17
0061c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061ca   eca7     call    0x003d4e, 0x0call    0x003d4e, 0x0 	CALL	_pinmode
0061cc   f01e
0061ce   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0061d0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	96; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG4,ECHO);
0061d2   0e01     movlw   0x01             	MOVLW	0x01
0061d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061d6   0e18     movlw   0x18             	MOVLW	0x18
0061d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061da   eca7     call    0x003d4e, 0x0call    0x003d4e, 0x0 	CALL	_pinmode
0061dc   f01e
0061de   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0061e0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	97; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P1,OUTPUT);
0061e2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0061e4   0e19     movlw   0x19             	MOVLW	0x19
0061e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061e8   eca7     call    0x003d4e, 0x0call    0x003d4e, 0x0 	CALL	_pinmode
0061ea   f01e
0061ec   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0061ee   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	98; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P2,OUTPUT);
0061f0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0061f2   0e1a     movlw   0x1a             	MOVLW	0x1a
0061f4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061f6   eca7     call    0x003d4e, 0x0call    0x003d4e, 0x0 	CALL	_pinmode
0061f8   f01e
0061fa   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0061fc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	99; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P3,OUTPUT);
0061fe   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006200   0e1b     movlw   0x1b             	MOVLW	0x1b
006202   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006204   eca7     call    0x003d4e, 0x0call    0x003d4e, 0x0 	CALL	_pinmode
006206   f01e
006208   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00620a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P4,OUTPUT);
00620c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00620e   0e1c     movlw   0x1c             	MOVLW	0x1c
006210   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006212   eca7     call    0x003d4e, 0x0call    0x003d4e, 0x0 	CALL	_pinmode
006214   f01e
006216   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006218   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV1);
00621a   0e0a     movlw   0x0a             	MOVLW	0x0a
00621c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00621e   ece0     call    0x0041c0, 0x0call    0x0041c0, 0x0 	CALL	_ServoAttach
006220   f020
006222   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV2);
006224   0e0b     movlw   0x0b             	MOVLW	0x0b
006226   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006228   ece0     call    0x0041c0, 0x0call    0x0041c0, 0x0 	CALL	_ServoAttach
00622a   f020
00622c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV3);
00622e   0e0c     movlw   0x0c             	MOVLW	0x0c
006230   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006232   ece0     call    0x0041c0, 0x0call    0x0041c0, 0x0 	CALL	_ServoAttach
006234   f020
006236   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV4);
006238   0e09     movlw   0x09             	MOVLW	0x09
00623a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00623c   ece0     call    0x0041c0, 0x0call    0x0041c0, 0x0 	CALL	_ServoAttach
00623e   f020
006240   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	105; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV5);
006242   0e08     movlw   0x08             	MOVLW	0x08
006244   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006246   ece0     call    0x0041c0, 0x0call    0x0041c0, 0x0 	CALL	_ServoAttach
006248   f020
00624a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	113; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	lcd_init(1,4, 5,6, 0, 1, 2, 3, 0, 0, 0, 0); //1=4bit--0=8bits, RS, RW ,E, D4 ~ D8	
00624c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00624e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006250   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006252   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006254   0e03     movlw   0x03             	MOVLW	0x03
006256   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006258   0e02     movlw   0x02             	MOVLW	0x02
00625a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00625c   0e01     movlw   0x01             	MOVLW	0x01
00625e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006260   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006262   0e06     movlw   0x06             	MOVLW	0x06
006264   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006266   0e05     movlw   0x05             	MOVLW	0x05
006268   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00626a   0e04     movlw   0x04             	MOVLW	0x04
00626c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00626e   0e01     movlw   0x01             	MOVLW	0x01
006270   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006272   ec8b     call    0x005516, 0x0call    0x005516, 0x0 	CALL	_lcd_init
006274   f02a
006276   0e0c     movlw   0x0c             	MOVLW	0x0c
006278   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	lcd_begin(8, 2);
00627a   0e02     movlw   0x02             	MOVLW	0x02
00627c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00627e   0e08     movlw   0x08             	MOVLW	0x08
006280   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006282   ec32     call    0x005264, 0x0call    0x005264, 0x0 	CALL	_lcd_begin
006284   f029
006286   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006288   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	lcd_home();
00628a   ec3c     call    0x007878, 0x0call    0x007878, 0x0 	CALL	_lcd_home
00628c   f03c
00628e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ping	code
                                           _ping:
                                           ;	.line	27; /home/vbasel/.icaro/v4/firmware/icaro_lib/sensores.h	int ping()
007064   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007066   ffe5
007068   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00706a   ffe5
                                           _01572_DS_:
                                           ;	.line	31; /home/vbasel/.icaro/v4/firmware/icaro_lib/sensores.h	while (digitalread(24) == LOW) 
00706c   0e18     movlw   0x18             	MOVLW	0x18
00706e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007070   ecd6     call    0x0045ac, 0x0call    0x0045ac, 0x0 	CALL	_digitalread
007072   f022
007074   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
007076   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007078   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00707a   e117     bnz     0x0070aa         	BNZ	_01583_DS_
                                           ;	.line	33; /home/vbasel/.icaro/v4/firmware/icaro_lib/sensores.h	digitalwrite(23, HIGH);//Activa el disparador
00707c   0e01     movlw   0x01             	MOVLW	0x01
00707e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007080   0e17     movlw   0x17             	MOVLW	0x17
007082   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007084   ec78     call    0x003af0, 0x0call    0x003af0, 0x0 	CALL	_digitalwrite
007086   f01d
007088   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00708a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	34; /home/vbasel/.icaro/v4/firmware/icaro_lib/sensores.h	Delayus(50);//Espera 50 microsegundos (minimo 10)
00708c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00708e   0e32     movlw   0x32             	MOVLW	0x32
007090   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007092   ece8     call    0x0073d0, 0x0call    0x0073d0, 0x0 	CALL	_Delayus
007094   f039
007096   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007098   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	35; /home/vbasel/.icaro/v4/firmware/icaro_lib/sensores.h	digitalwrite(23, LOW);//Desactiva el disparador
00709a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00709c   0e17     movlw   0x17             	MOVLW	0x17
00709e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0070a0   ec78     call    0x003af0, 0x0call    0x003af0, 0x0 	CALL	_digitalwrite
0070a2   f01d
0070a4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0070a6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0070a8   d7e1     bra     0x00706c         	BRA	_01572_DS_
                                           _01583_DS_:
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/icaro_lib/sensores.h	while (digitalread(24) == HIGH) 
0070aa   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0070ac   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01575_DS_:
0070ae   0e18     movlw   0x18             	MOVLW	0x18
0070b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0070b2   ecd6     call    0x0045ac, 0x0call    0x0045ac, 0x0 	CALL	_digitalread
0070b4   f022
0070b6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0070b8   0a01     xorlw   0x01             	XORLW	0x01
0070ba   e10a     bnz     0x0070d0         	BNZ	_01577_DS_
                                           ;	.line	40; /home/vbasel/.icaro/v4/firmware/icaro_lib/sensores.h	Dato++;//El contador se incrementa hasta llegar el eco
0070bc   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0070be   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ;	.line	41; /home/vbasel/.icaro/v4/firmware/icaro_lib/sensores.h	Delayus(58);//Tiempo en recorrer dos centimetros 1 de ida 1 de vuelta
0070c0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0070c2   0e3a     movlw   0x3a             	MOVLW	0x3a
0070c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0070c6   ece8     call    0x0073d0, 0x0call    0x0073d0, 0x0 	CALL	_Delayus
0070c8   f039
0070ca   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0070cc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0070ce   d7ef     bra     0x0070ae         	BRA	_01575_DS_
                                           _01577_DS_:
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/icaro_lib/sensores.h	return Dato;
0070d0   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
0070d2   fff3
0070d4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0070d6   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0070d8   f001
0070da   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0070dc   f000
0070de   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_pins	code
                                           _lcd_pins:
                                           ;	.line	443; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_pins(u8 rs, u8 enable, u8 d0, u8 d1, u8 d2, u8 d3, u8 d4, u8 d5, u8 d6, u8 d7)
005a24   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005a26   ffe5
005a28   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005a2a   ffd9
005a2c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005a2e   ffe5
005a30   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005a32   ffe5
005a34   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005a36   ffe5
005a38   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005a3a   ffe5
005a3c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
005a3e   ffe5
005a40   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
005a42   ffe5
005a44   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
005a46   ffe5
005a48   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
005a4a   ffe5
005a4c   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
005a4e   ffe5
005a50   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
005a52   ffe5
005a54   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
005a56   ffe5
005a58   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
005a5a   ffe5
005a5c   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
005a5e   ffe5
005a60   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
005a62   ffe5
005a64   0e02     movlw   0x02             	MOVLW	0x02
005a66   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005a68   f000
005a6a   0e03     movlw   0x03             	MOVLW	0x03
005a6c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005a6e   f001
005a70   0e04     movlw   0x04             	MOVLW	0x04
005a72   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005a74   f002
005a76   0e05     movlw   0x05             	MOVLW	0x05
005a78   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
005a7a   f003
005a7c   0e06     movlw   0x06             	MOVLW	0x06
005a7e   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
005a80   f004
005a82   0e07     movlw   0x07             	MOVLW	0x07
005a84   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
005a86   f005
005a88   0e08     movlw   0x08             	MOVLW	0x08
005a8a   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
005a8c   f006
005a8e   0e09     movlw   0x09             	MOVLW	0x09
005a90   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
005a92   f007
005a94   0e0a     movlw   0x0a             	MOVLW	0x0a
005a96   cfdb     movff   0xfdb, 0x008     	MOVFF	PLUSW2, r0x08
005a98   f008
005a9a   0e0b     movlw   0x0b             	MOVLW	0x0b
005a9c   cfdb     movff   0xfdb, 0x009     	MOVFF	PLUSW2, r0x09
005a9e   f009
                                           ;	.line	445; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_init(((d4 + d5 + d6 + d7)==0), rs, -1, enable, d0, d1, d2, d3, d4, d5, d6, d7);
005aa0   c006     movff   0x006, 0x00a     	MOVFF	r0x06, r0x0a
005aa2   f00a
005aa4   6a0b     clrf    0x0b, 0x0        	CLRF	r0x0b
005aa6   c007     movff   0x007, 0x00c     	MOVFF	r0x07, r0x0c
005aa8   f00c
005aaa   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
005aac   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
005aae   260a     addwf   0x0a, 0x1, 0x0   	ADDWF	r0x0a, F
005ab0   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
005ab2   220b     addwfc  0x0b, 0x1, 0x0   	ADDWFC	r0x0b, F
005ab4   c008     movff   0x008, 0x00c     	MOVFF	r0x08, r0x0c
005ab6   f00c
005ab8   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
005aba   260a     addwf   0x0a, 0x1, 0x0   	ADDWF	r0x0a, F
005abc   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
005abe   220b     addwfc  0x0b, 0x1, 0x0   	ADDWFC	r0x0b, F
005ac0   c009     movff   0x009, 0x00c     	MOVFF	r0x09, r0x0c
005ac2   f00c
005ac4   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
005ac6   260a     addwf   0x0a, 0x1, 0x0   	ADDWF	r0x0a, F
005ac8   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
005aca   220b     addwfc  0x0b, 0x1, 0x0   	ADDWFC	r0x0b, F
005acc   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
005ace   e105     bnz     0x005ada         	BNZ	_01566_DS_
005ad0   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
005ad2   e103     bnz     0x005ada         	BNZ	_01566_DS_
005ad4   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
005ad6   2a0a     incf    0x0a, 0x1, 0x0   	INCF	r0x0a, F
005ad8   d001     bra     0x005adc         	BRA	_01567_DS_
                                           _01566_DS_:
005ada   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
                                           _01567_DS_:
005adc   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
005ade   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005ae0   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
005ae2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005ae4   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
005ae6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005ae8   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
005aea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005aec   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
005aee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005af0   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
005af2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005af4   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
005af6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005af8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005afa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005afc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005afe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005b00   68e5     setf    0xe5, 0x0        	SETF	POSTDEC1
005b02   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005b04   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005b06   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
005b08   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005b0a   ec8b     call    0x005516, 0x0call    0x005516, 0x0 	CALL	_lcd_init
005b0c   f02a
005b0e   0e0c     movlw   0x0c             	MOVLW	0x0c
005b10   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
005b12   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
005b14   f00d
005b16   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
005b18   f00c
005b1a   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
005b1c   f00b
005b1e   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
005b20   f00a
005b22   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
005b24   f009
005b26   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
005b28   f008
005b2a   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
005b2c   f007
005b2e   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
005b30   f006
005b32   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
005b34   f005
005b36   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
005b38   f004
005b3a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005b3c   f003
005b3e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005b40   f002
005b42   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005b44   f001
005b46   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005b48   f000
005b4a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005b4c   ffd9
005b4e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_init	code
                                           _lcd_init:
                                           ;	.line	405; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_init(u8 fourbitmode, u8 rs, u8 rw, u8 enable, 
005516   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005518   ffe5
00551a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00551c   ffd9
00551e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005520   ffe5
005522   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005524   ffe5
005526   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005528   ffe5
00552a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00552c   ffe5
00552e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
005530   ffe5
005532   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
005534   ffe5
005536   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
005538   ffe5
00553a   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
00553c   ffe5
00553e   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
005540   ffe5
005542   0e02     movlw   0x02             	MOVLW	0x02
005544   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005546   f000
005548   0e03     movlw   0x03             	MOVLW	0x03
00554a   cfdb     movff   0xfdb, 0x4f5     	MOVFF	PLUSW2, __rs_pin
00554c   f4f5
00554e   0e04     movlw   0x04             	MOVLW	0x04
005550   cfdb     movff   0xfdb, 0x4f6     	MOVFF	PLUSW2, __rw_pin
005552   f4f6
005554   0e05     movlw   0x05             	MOVLW	0x05
005556   cfdb     movff   0xfdb, 0x4f7     	MOVFF	PLUSW2, __enable_pin
005558   f4f7
00555a   0e06     movlw   0x06             	MOVLW	0x06
00555c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00555e   f001
005560   0e07     movlw   0x07             	MOVLW	0x07
005562   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005564   f002
005566   0e08     movlw   0x08             	MOVLW	0x08
005568   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
00556a   f003
00556c   0e09     movlw   0x09             	MOVLW	0x09
00556e   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
005570   f004
005572   0e0a     movlw   0x0a             	MOVLW	0x0a
005574   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
005576   f005
005578   0e0b     movlw   0x0b             	MOVLW	0x0b
00557a   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
00557c   f006
00557e   0e0c     movlw   0x0c             	MOVLW	0x0c
005580   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
005582   f007
005584   0e0d     movlw   0x0d             	MOVLW	0x0d
005586   cfdb     movff   0xfdb, 0x008     	MOVFF	PLUSW2, r0x08
005588   f008
                                           ;	.line	415; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_data_pins[0] = d0;
00558a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00558c   0105     movlb   0x5              	BANKSEL	__data_pins
00558e   6f60     movwf   0x60, 0x1        	MOVWF	__data_pins, B
                                           ;	.line	416; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_data_pins[1] = d1;
005590   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
005592   6f61     movwf   0x61, 0x1        	MOVWF	(__data_pins + 1), B
                                           ;	.line	417; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_data_pins[2] = d2;
005594   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
005596   6f62     movwf   0x62, 0x1        	MOVWF	(__data_pins + 2), B
                                           ;	.line	418; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_data_pins[3] = d3; 
005598   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
00559a   6f63     movwf   0x63, 0x1        	MOVWF	(__data_pins + 3), B
                                           ;	.line	419; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_data_pins[4] = d4;
00559c   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
                                           ; removed redundant BANKSEL
00559e   6f64     movwf   0x64, 0x1        	MOVWF	(__data_pins + 4), B
                                           ;	.line	420; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_data_pins[5] = d5;
0055a0   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
                                           ; removed redundant BANKSEL
0055a2   6f65     movwf   0x65, 0x1        	MOVWF	(__data_pins + 5), B
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_data_pins[6] = d6;
0055a4   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
                                           ; removed redundant BANKSEL
0055a6   6f66     movwf   0x66, 0x1        	MOVWF	(__data_pins + 6), B
                                           ;	.line	422; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_data_pins[7] = d7; 
0055a8   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
                                           ; removed redundant BANKSEL
0055aa   6f67     movwf   0x67, 0x1        	MOVWF	(__data_pins + 7), B
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	pinmode(_rs_pin, OUTPUT);
0055ac   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0055ae   0104     movlb   0x4              	BANKSEL	__rs_pin
0055b0   51f5     movf    0xf5, 0x0, 0x1   	MOVF	__rs_pin, W, B
0055b2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0055b4   eca7     call    0x003d4e, 0x0call    0x003d4e, 0x0 	CALL	_pinmode
0055b6   f01e
0055b8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0055ba   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	426; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	pinmode(_enable_pin, OUTPUT);
0055bc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0055be   0104     movlb   0x4              	BANKSEL	__enable_pin
0055c0   51f7     movf    0xf7, 0x0, 0x1   	MOVF	__enable_pin, W, B
0055c2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0055c4   eca7     call    0x003d4e, 0x0call    0x003d4e, 0x0 	CALL	_pinmode
0055c6   f01e
0055c8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0055ca   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	428; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	if (fourbitmode)
0055cc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0055ce   e01b     bz      0x005606         	BZ	_01536_DS_
0055d0   0105     movlb   0x5              	BANKSEL	__displayfunction
                                           ;	.line	430; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
0055d2   6bdb     clrf    0xdb, 0x1        	CLRF	__displayfunction, B
                                           ;	.line	431; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for (i = 0; i < 4; i++)
0055d4   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _01538_DS_:
                                           ;	.line	432; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	pinmode(_data_pins[i], OUTPUT);
0055d6   0e60     movlw   0x60             	MOVLW	LOW(__data_pins)
0055d8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0055da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0055dc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0055de   0e05     movlw   0x05             	MOVLW	HIGH(__data_pins)
0055e0   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0055e2   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0055e4   ffe9
0055e6   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0055e8   ffea
0055ea   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0055ec   f001
0055ee   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0055f0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0055f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0055f4   eca7     call    0x003d4e, 0x0call    0x003d4e, 0x0 	CALL	_pinmode
0055f6   f01e
0055f8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0055fa   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	431; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for (i = 0; i < 4; i++)
0055fc   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0055fe   0e04     movlw   0x04             	MOVLW	0x04
005600   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
005602   e3e9     bnc     0x0055d6         	BNC	_01538_DS_
005604   d01b     bra     0x00563c         	BRA	_01542_DS_
                                           _01536_DS_:
                                           ;	.line	436; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_displayfunction = LCD_8BITMODE | LCD_1LINE | LCD_5x8DOTS;
005606   0e10     movlw   0x10             	MOVLW	0x10
005608   0105     movlb   0x5              	BANKSEL	__displayfunction
00560a   6fdb     movwf   0xdb, 0x1        	MOVWF	__displayfunction, B
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for (i = 0; i < 8; i++)
00560c   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _01540_DS_:
                                           ;	.line	438; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	pinmode(_data_pins[i], OUTPUT);
00560e   0e60     movlw   0x60             	MOVLW	LOW(__data_pins)
005610   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
005612   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005614   6a02     clrf    0x02, 0x0        	CLRF	r0x02
005616   0e05     movlw   0x05             	MOVLW	HIGH(__data_pins)
005618   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00561a   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
00561c   ffe9
00561e   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
005620   ffea
005622   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
005624   f001
005626   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005628   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00562a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00562c   eca7     call    0x003d4e, 0x0call    0x003d4e, 0x0 	CALL	_pinmode
00562e   f01e
005630   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005632   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for (i = 0; i < 8; i++)
005634   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
005636   0e08     movlw   0x08             	MOVLW	0x08
005638   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00563a   e3e9     bnc     0x00560e         	BNC	_01540_DS_
                                           _01542_DS_:
00563c   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00563e   f008
005640   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
005642   f007
005644   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
005646   f006
005648   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00564a   f005
00564c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00564e   f004
005650   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005652   f003
005654   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005656   f002
005658   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00565a   f001
00565c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00565e   f000
005660   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005662   ffd9
005664   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_begin	code
                                           _lcd_begin:
                                           ;	.line	330; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_begin(u8 lines, u8 dotsize)
005264   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005266   ffe5
005268   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00526a   ffd9
00526c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00526e   ffe5
005270   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005272   ffe5
005274   0e02     movlw   0x02             	MOVLW	0x02
005276   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005278   f000
00527a   0e03     movlw   0x03             	MOVLW	0x03
00527c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00527e   f001
                                           ;	.line	332; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	if (lines > 1)
005280   0e02     movlw   0x02             	MOVLW	0x02
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_01502_DS_
                                           ; #	BSF	__displayfunction, 3, B
                                           ; #	MOVFF	r0x00, __numlines
                                           ;	.line	333; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_displayfunction |= LCD_2LINE;
005282   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	335; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_numlines = lines;
005284   e302     bnc     0x00528a         	BNC	_21893_DS_
005286   0105     movlb   0x5              	BANKSEL	__displayfunction
005288   87db     bsf     0xdb, 0x3, 0x1   	BSF	__displayfunction, 3, B
                                           _21893_DS_:
00528a   c000     movff   0x000, 0x5dc     	MOVFF	r0x00, __numlines
00528c   f5dc
00528e   0105     movlb   0x5              	BANKSEL	__currline
                                           ;	.line	336; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_currline = 0;
005290   6bd5     clrf    0xd5, 0x1        	CLRF	__currline, B
                                           ;	.line	339; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	if ((dotsize != 0) && (lines == 1))
005292   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005294   e005     bz      0x0052a0         	BZ	_01504_DS_
005296   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005298   0a01     xorlw   0x01             	XORLW	0x01
00529a   e102     bnz     0x0052a0         	BNZ	_01504_DS_
                                           _01526_DS_:
00529c   0105     movlb   0x5              	BANKSEL	__displayfunction
                                           ;	.line	340; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_displayfunction |= LCD_5x10DOTS;
00529e   85db     bsf     0xdb, 0x2, 0x1   	BSF	__displayfunction, 2, B
                                           _01504_DS_:
                                           ;	.line	342; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	Delayms(15);								// Wait more than 15 ms after VDD rises to 4.5V
0052a0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0052a2   0e0f     movlw   0x0f             	MOVLW	0x0f
0052a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052a6   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
0052a8   f031
0052aa   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0052ac   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	345; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	digitalwrite(_rs_pin, LOW);
0052ae   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0052b0   0104     movlb   0x4              	BANKSEL	__rs_pin
0052b2   51f5     movf    0xf5, 0x0, 0x1   	MOVF	__rs_pin, W, B
0052b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052b6   ec78     call    0x003af0, 0x0call    0x003af0, 0x0 	CALL	_digitalwrite
0052b8   f01d
0052ba   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0052bc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	digitalwrite(_enable_pin, LOW);
0052be   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0052c0   0104     movlb   0x4              	BANKSEL	__enable_pin
0052c2   51f7     movf    0xf7, 0x0, 0x1   	MOVF	__enable_pin, W, B
0052c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052c6   ec78     call    0x003af0, 0x0call    0x003af0, 0x0 	CALL	_digitalwrite
0052c8   f01d
0052ca   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0052cc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0052ce   0105     movlb   0x5              	BANKSEL	__displayfunction
                                           ;	.line	349; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	if (! (_displayfunction & LCD_8BITMODE) )
0052d0   b9db     btfsc   0xdb, 0x4, 0x1   	BTFSC	__displayfunction, 4, B
0052d2   d02a     bra     0x005328         	BRA	_01507_DS_
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_write4bits(0x03);
0052d4   0e03     movlw   0x03             	MOVLW	0x03
0052d6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052d8   ecb3     call    0x006f66, 0x0call    0x006f66, 0x0 	CALL	_lcd_write4bits
0052da   f037
0052dc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	355; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	Delayms(5);									// Wait for more than 4.1 ms
0052de   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0052e0   0e05     movlw   0x05             	MOVLW	0x05
0052e2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052e4   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
0052e6   f031
0052e8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0052ea   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	357; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_write4bits(0x03);
0052ec   0e03     movlw   0x03             	MOVLW	0x03
0052ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052f0   ecb3     call    0x006f66, 0x0call    0x006f66, 0x0 	CALL	_lcd_write4bits
0052f2   f037
0052f4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	358; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	Delayus(150);								// Wait more than 100 μs
0052f6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0052f8   0e96     movlw   0x96             	MOVLW	0x96
0052fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052fc   ece8     call    0x0073d0, 0x0call    0x0073d0, 0x0 	CALL	_Delayus
0052fe   f039
005300   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005302   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	360; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_write4bits(0x03); 
005304   0e03     movlw   0x03             	MOVLW	0x03
005306   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005308   ecb3     call    0x006f66, 0x0call    0x006f66, 0x0 	CALL	_lcd_write4bits
00530a   f037
00530c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	361; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	Delayus(150);								// Wait more than 100 μs
00530e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005310   0e96     movlw   0x96             	MOVLW	0x96
005312   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005314   ece8     call    0x0073d0, 0x0call    0x0073d0, 0x0 	CALL	_Delayus
005316   f039
005318   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00531a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	363; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_write4bits(0x02); 
00531c   0e02     movlw   0x02             	MOVLW	0x02
00531e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005320   ecb3     call    0x006f66, 0x0call    0x006f66, 0x0 	CALL	_lcd_write4bits
005322   f037
005324   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005326   d023     bra     0x00536e         	BRA	_01508_DS_
                                           _01507_DS_:
                                           ;	.line	371; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_command(LCD_FUNCTIONSET | _displayfunction);
005328   0e20     movlw   0x20             	MOVLW	0x20
00532a   0105     movlb   0x5              	BANKSEL	__displayfunction
00532c   11db     iorwf   0xdb, 0x0, 0x1   	IORWF	__displayfunction, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00532e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005330   ec8c     call    0x007718, 0x0call    0x007718, 0x0 	CALL	_lcd_command
005332   f03b
005334   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	Delayms(5);									// Wait for more than 4.1 ms
005336   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005338   0e05     movlw   0x05             	MOVLW	0x05
00533a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00533c   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
00533e   f031
005340   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005342   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	375; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_command(LCD_FUNCTIONSET | _displayfunction);
005344   0e20     movlw   0x20             	MOVLW	0x20
005346   0105     movlb   0x5              	BANKSEL	__displayfunction
005348   11db     iorwf   0xdb, 0x0, 0x1   	IORWF	__displayfunction, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00534a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00534c   ec8c     call    0x007718, 0x0call    0x007718, 0x0 	CALL	_lcd_command
00534e   f03b
005350   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	376; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	Delayms(5);									// Wait for more than 4.1 ms
005352   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005354   0e05     movlw   0x05             	MOVLW	0x05
005356   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005358   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
00535a   f031
00535c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00535e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	380; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_command(LCD_FUNCTIONSET | _displayfunction);
005360   0e20     movlw   0x20             	MOVLW	0x20
005362   0105     movlb   0x5              	BANKSEL	__displayfunction
005364   11db     iorwf   0xdb, 0x0, 0x1   	IORWF	__displayfunction, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
005366   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005368   ec8c     call    0x007718, 0x0call    0x007718, 0x0 	CALL	_lcd_command
00536a   f03b
00536c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           _01508_DS_:
                                           ;	.line	384; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_command(LCD_FUNCTIONSET | _displayfunction);  
00536e   0e20     movlw   0x20             	MOVLW	0x20
005370   0105     movlb   0x5              	BANKSEL	__displayfunction
005372   11db     iorwf   0xdb, 0x0, 0x1   	IORWF	__displayfunction, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
005374   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005376   ec8c     call    0x007718, 0x0call    0x007718, 0x0 	CALL	_lcd_command
005378   f03b
00537a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	387; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;  
00537c   0e04     movlw   0x04             	MOVLW	0x04
00537e   0105     movlb   0x5              	BANKSEL	__displaycontrol
005380   6fd2     movwf   0xd2, 0x1        	MOVWF	__displaycontrol, B
                                           ;	.line	388; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_command(LCD_DISPLAYCONTROL | _displaycontrol);
005382   0e0c     movlw   0x0c             	MOVLW	0x0c
005384   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005386   ec8c     call    0x007718, 0x0call    0x007718, 0x0 	CALL	_lcd_command
005388   f03b
00538a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	391; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_command(LCD_CLEARDISPLAY);  // clear display, set cursor position to zero
00538c   0e01     movlw   0x01             	MOVLW	0x01
00538e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005390   ec8c     call    0x007718, 0x0call    0x007718, 0x0 	CALL	_lcd_command
005392   f03b
005394   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	392; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	Delayms(2);
005396   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005398   0e02     movlw   0x02             	MOVLW	0x02
00539a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00539c   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
00539e   f031
0053a0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0053a2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
0053a4   0e02     movlw   0x02             	MOVLW	0x02
0053a6   0105     movlb   0x5              	BANKSEL	__displaymode
0053a8   6fd3     movwf   0xd3, 0x1        	MOVWF	__displaymode, B
                                           ;	.line	397; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_command(LCD_ENTRYMODESET | _displaymode);
0053aa   0e06     movlw   0x06             	MOVLW	0x06
0053ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0053ae   ec8c     call    0x007718, 0x0call    0x007718, 0x0 	CALL	_lcd_command
0053b0   f03b
0053b2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0053b4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0053b6   f001
0053b8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0053ba   f000
0053bc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0053be   ffd9
0053c0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_clear	code
                                           _lcd_clear:
                                           ;	.line	223; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_command(LCD_CLEARDISPLAY);  // clear display, set cursor position to zero
00785e   0e01     movlw   0x01             	MOVLW	0x01
007860   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007862   ec8c     call    0x007718, 0x0call    0x007718, 0x0 	CALL	_lcd_command
007864   f03b
007866   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	224; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	Delayms(2);									// Wait for more than 4.1 ms
007868   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00786a   0e02     movlw   0x02             	MOVLW	0x02
00786c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00786e   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
007870   f031
007872   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007874   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007876   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_home	code
                                           _lcd_home:
                                           ;	.line	213; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_command(LCD_RETURNHOME);
007878   0e02     movlw   0x02             	MOVLW	0x02
00787a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00787c   ec8c     call    0x007718, 0x0call    0x007718, 0x0 	CALL	_lcd_command
00787e   f03b
007880   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	214; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	Delayms(2);									// Wait for more than 4.1 ms
007882   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
007884   0e02     movlw   0x02             	MOVLW	0x02
007886   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007888   ecc1     call    0x006382, 0x0call    0x006382, 0x0 	CALL	_Delayms
00788a   f031
00788c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00788e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007890   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_printFloat	code
                                           _lcd_printFloat:
                                           ;	.line	169; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_printFloat(float number, u8 digits)
003864   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003866   ffe5
003868   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00386a   ffd9
00386c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00386e   ffe5
003870   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003872   ffe5
003874   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003876   ffe5
003878   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00387a   ffe5
00387c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00387e   ffe5
003880   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003882   ffe5
003884   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
003886   ffe5
003888   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
00388a   ffe5
00388c   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
00388e   ffe5
003890   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
003892   ffe5
003894   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
003896   ffe5
003898   0e02     movlw   0x02             	MOVLW	0x02
00389a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00389c   f000
00389e   0e03     movlw   0x03             	MOVLW	0x03
0038a0   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0038a2   f001
0038a4   0e04     movlw   0x04             	MOVLW	0x04
0038a6   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0038a8   f002
0038aa   0e05     movlw   0x05             	MOVLW	0x05
0038ac   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0038ae   f003
0038b0   0e06     movlw   0x06             	MOVLW	0x06
0038b2   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
0038b4   f004
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	if (number < 0.0)
0038b6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0038b8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0038ba   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0038bc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0038be   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0038c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0038c2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0038c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0038c6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0038c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0038ca   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0038cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0038ce   ec38     call    0x005c70, 0x0call    0x005c70, 0x0 	CALL	___fslt
0038d0   f02e
0038d2   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0038d4   0e08     movlw   0x08             	MOVLW	0x08
0038d6   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0038d8   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0038da   e006     bz      0x0038e8         	BZ	_01454_DS_
                                           ;	.line	178; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_write('-');
0038dc   0e2d     movlw   0x2d             	MOVLW	0x2d
0038de   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0038e0   ec4b     call    0x007696, 0x0call    0x007696, 0x0 	CALL	_lcd_write
0038e2   f03b
0038e4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	179; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	number = -number;
0038e6   7e03     btg     0x03, 0x7, 0x0   	BTG	r0x03, 7
                                           _01454_DS_:
                                           ;	.line	183; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	rounding = 0.5;
0038e8   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0038ea   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0038ec   6a07     clrf    0x07, 0x0        	CLRF	r0x07
0038ee   0e3f     movlw   0x3f             	MOVLW	0x3f
0038f0   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
                                           ;	.line	184; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for (i=0; i<digits; ++i)
0038f2   6a09     clrf    0x09, 0x0        	CLRF	r0x09
                                           _01462_DS_:
0038f4   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0038f6   5c09     subwf   0x09, 0x0, 0x0   	SUBWF	r0x09, W
0038f8   e21b     bc      0x003930         	BC	_01455_DS_
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	rounding /= 10.0;
0038fa   0e41     movlw   0x41             	MOVLW	0x41
0038fc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0038fe   0e20     movlw   0x20             	MOVLW	0x20
003900   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003902   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003904   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003906   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
003908   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00390a   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
00390c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00390e   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
003910   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003912   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003914   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003916   ecc7     call    0x00318e, 0x0call    0x00318e, 0x0 	CALL	___fsdiv
003918   f018
00391a   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00391c   cff3     movff   0xff3, 0x006     	MOVFF	PRODL, r0x06
00391e   f006
003920   cff4     movff   0xff4, 0x007     	MOVFF	PRODH, r0x07
003922   f007
003924   cfe9     movff   0xfe9, 0x008     	MOVFF	FSR0L, r0x08
003926   f008
003928   0e08     movlw   0x08             	MOVLW	0x08
00392a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	184; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for (i=0; i<digits; ++i)
00392c   2a09     incf    0x09, 0x1, 0x0   	INCF	r0x09, F
00392e   d7e2     bra     0x0038f4         	BRA	_01462_DS_
                                           _01455_DS_:
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	number += rounding;
003930   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
003932   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003934   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
003936   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003938   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
00393a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00393c   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00393e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003940   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003942   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003944   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003946   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003948   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00394a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00394c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00394e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003950   ecff     call    0x002dfe, 0x0call    0x002dfe, 0x0 	CALL	___fsadd
003952   f016
003954   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003956   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
003958   f001
00395a   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
00395c   f002
00395e   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
003960   f003
003962   0e08     movlw   0x08             	MOVLW	0x08
003964   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	int_part = (u16)number;
003966   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003968   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00396a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00396c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00396e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003970   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003972   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003974   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003976   eca4     call    0x006d48, 0x0call    0x006d48, 0x0 	CALL	___fs2uint
003978   f036
00397a   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00397c   cff3     movff   0xff3, 0x006     	MOVFF	PRODL, r0x06
00397e   f006
003980   0e04     movlw   0x04             	MOVLW	0x04
003982   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	remainder = number - (float)int_part;
003984   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
003986   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003988   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00398a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00398c   ec57     call    0x0072ae, 0x0call    0x0072ae, 0x0 	CALL	___uint2fs
00398e   f039
003990   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
003992   cff3     movff   0xff3, 0x008     	MOVFF	PRODL, r0x08
003994   f008
003996   cff4     movff   0xff4, 0x009     	MOVFF	PRODH, r0x09
003998   f009
00399a   cfe9     movff   0xfe9, 0x00a     	MOVFF	FSR0L, r0x0a
00399c   f00a
00399e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0039a0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0039a2   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
0039a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039a6   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
0039a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039aa   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
0039ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039ae   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
0039b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039b2   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0039b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039b6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039ba   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0039bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039be   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0039c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039c2   ece1     call    0x0053c2, 0x0call    0x0053c2, 0x0 	CALL	___fssub
0039c4   f029
0039c6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0039c8   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0039ca   f001
0039cc   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
0039ce   f002
0039d0   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
0039d2   f003
0039d4   0e08     movlw   0x08             	MOVLW	0x08
0039d6   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_printNumber(int_part, 10);
0039d8   0e0a     movlw   0x0a             	MOVLW	0x0a
0039da   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039dc   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0039de   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039e0   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0039e2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039e4   ecd8     call    0x0057b0, 0x0call    0x0057b0, 0x0 	CALL	_lcd_printNumber
0039e6   f02b
0039e8   0e03     movlw   0x03             	MOVLW	0x03
0039ea   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	if (digits > 0)
0039ec   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0039ee   e005     bz      0x0039fa         	BZ	_01458_DS_
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_write('.'); 
0039f0   0e2e     movlw   0x2e             	MOVLW	0x2e
0039f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039f4   ec4b     call    0x007696, 0x0call    0x007696, 0x0 	CALL	_lcd_write
0039f6   f03b
0039f8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           _01458_DS_:
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	while (digits-- > 0)
0039fa   c004     movff   0x004, 0x005     	MOVFF	r0x04, r0x05
0039fc   f005
0039fe   0604     decf    0x04, 0x1, 0x0   	DECF	r0x04, F
003a00   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003a02   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
003a04   d05c     bra     0x003abe         	BRA	_01464_DS_
                                           ;	.line	201; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	remainder *= 10.0;
003a06   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003a08   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a0a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003a0c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a0e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003a10   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a12   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003a14   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a16   0e41     movlw   0x41             	MOVLW	0x41
003a18   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a1a   0e20     movlw   0x20             	MOVLW	0x20
003a1c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a1e   0e00     movlw   0x00             	MOVLW	0x00
003a20   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003a22   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003a24   ec35     call    0x002a6a, 0x0call    0x002a6a, 0x0 	CALL	___fsmul
003a26   f015
003a28   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003a2a   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
003a2c   f001
003a2e   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
003a30   f002
003a32   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
003a34   f003
003a36   0e08     movlw   0x08             	MOVLW	0x08
003a38   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	toPrint = (unsigned int)remainder; //Integer part without use of math.h lib, I think better! (Fazzi)
003a3a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003a3c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a3e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003a40   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a42   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003a44   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a46   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003a48   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a4a   eca4     call    0x006d48, 0x0call    0x006d48, 0x0 	CALL	___fs2uint
003a4c   f036
003a4e   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003a50   0e04     movlw   0x04             	MOVLW	0x04
003a52   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	203; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_printNumber(toPrint, 10);
003a54   c005     movff   0x005, 0x006     	MOVFF	r0x05, r0x06
003a56   f006
003a58   0e0a     movlw   0x0a             	MOVLW	0x0a
003a5a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a5c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003a5e   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
003a60   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a62   ecd8     call    0x0057b0, 0x0call    0x0057b0, 0x0 	CALL	_lcd_printNumber
003a64   f02b
003a66   0e03     movlw   0x03             	MOVLW	0x03
003a68   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	remainder -= toPrint; 
003a6a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003a6c   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003a6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a70   ecab     call    0x007156, 0x0call    0x007156, 0x0 	CALL	___sint2fs
003a72   f038
003a74   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003a76   cff3     movff   0xff3, 0x006     	MOVFF	PRODL, r0x06
003a78   f006
003a7a   cff4     movff   0xff4, 0x007     	MOVFF	PRODH, r0x07
003a7c   f007
003a7e   cfe9     movff   0xfe9, 0x008     	MOVFF	FSR0L, r0x08
003a80   f008
003a82   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
003a84   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
003a86   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
003a88   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a8a   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
003a8c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a8e   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
003a90   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a92   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003a94   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a96   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003a98   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a9a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003a9c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a9e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003aa0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003aa2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003aa4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003aa6   ece1     call    0x0053c2, 0x0call    0x0053c2, 0x0 	CALL	___fssub
003aa8   f029
003aaa   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003aac   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
003aae   f001
003ab0   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
003ab2   f002
003ab4   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
003ab6   f003
003ab8   0e08     movlw   0x08             	MOVLW	0x08
003aba   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003abc   d79e     bra     0x0039fa         	BRA	_01458_DS_
                                           _01464_DS_:
003abe   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
003ac0   f00a
003ac2   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
003ac4   f009
003ac6   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
003ac8   f008
003aca   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
003acc   f007
003ace   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003ad0   f006
003ad2   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003ad4   f005
003ad6   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003ad8   f004
003ada   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003adc   f003
003ade   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003ae0   f002
003ae2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003ae4   f001
003ae6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003ae8   f000
003aea   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003aec   ffd9
003aee   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_printNumber	code
                                           _lcd_printNumber:
                                           ;	.line	145; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_printNumber(u16 n, u8 base)
0057b0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0057b2   ffe5
0057b4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0057b6   ffd9
0057b8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0057ba   ffe5
0057bc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0057be   ffe5
0057c0   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0057c2   ffe5
0057c4   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0057c6   ffe5
0057c8   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0057ca   ffe5
0057cc   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0057ce   ffe5
0057d0   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
0057d2   ffe5
0057d4   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
0057d6   ffe5
0057d8   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
0057da   ffe5
0057dc   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
0057de   ffe5
0057e0   0e02     movlw   0x02             	MOVLW	0x02
0057e2   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0057e4   f000
0057e6   0e03     movlw   0x03             	MOVLW	0x03
0057e8   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0057ea   f001
0057ec   0e04     movlw   0x04             	MOVLW	0x04
0057ee   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0057f0   f002
                                           ;	.line	150; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	if (n == 0)
0057f2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0057f4   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
0057f6   e106     bnz     0x005804         	BNZ	_01430_DS_
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_write('0');
0057f8   0e30     movlw   0x30             	MOVLW	0x30
0057fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0057fc   ec4b     call    0x007696, 0x0call    0x007696, 0x0 	CALL	_lcd_write
0057fe   f03b
005800   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	153; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	return;
005802   d05c     bra     0x0058bc         	BRA	_01422_DS_
                                           _01430_DS_:
                                           ;	.line	156; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	while (n > 0)
005804   6a03     clrf    0x03, 0x0        	CLRF	r0x03
005806   6a04     clrf    0x04, 0x0        	CLRF	r0x04
                                           _01415_DS_:
005808   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00580a   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
00580c   e02f     bz      0x00586c         	BZ	_01433_DS_
                                           ;	.line	158; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	buf[i++] = n % base;
00580e   c003     movff   0x003, 0x005     	MOVFF	r0x03, r0x05
005810   f005
005812   c004     movff   0x004, 0x006     	MOVFF	r0x04, r0x06
005814   f006
005816   4a03     infsnz  0x03, 0x1, 0x0   	INFSNZ	r0x03, F
005818   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
00581a   0ed2     movlw   0xd2             	MOVLW	LOW(_lcd_printNumber_buf_1_234)
00581c   2605     addwf   0x05, 0x1, 0x0   	ADDWF	r0x05, F
00581e   0e04     movlw   0x04             	MOVLW	HIGH(_lcd_printNumber_buf_1_234)
005820   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
005822   c002     movff   0x002, 0x007     	MOVFF	r0x02, r0x07
005824   f007
005826   6a08     clrf    0x08, 0x0        	CLRF	r0x08
005828   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00582a   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
00582c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00582e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005830   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005832   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005834   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005836   ec1f     call    0x00643e, 0x0call    0x00643e, 0x0 	CALL	__moduint
005838   f032
00583a   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
00583c   0e04     movlw   0x04             	MOVLW	0x04
00583e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
005840   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
005842   ffe9
005844   c006     movff   0x006, 0xfea     	MOVFF	r0x06, FSR0H
005846   ffea
005848   c009     movff   0x009, 0xfef     	MOVFF	r0x09, INDF0
00584a   ffef
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	n /= base;
00584c   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
00584e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005850   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
005852   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005854   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005856   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005858   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00585a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00585c   ec2c     call    0x006658, 0x0call    0x006658, 0x0 	CALL	__divuint
00585e   f033
005860   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005862   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
005864   f001
005866   0e04     movlw   0x04             	MOVLW	0x04
005868   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00586a   d7ce     bra     0x005808         	BRA	_01415_DS_
                                           _01433_DS_:
00586c   c003     movff   0x003, 0x000     	MOVFF	r0x03, r0x00
00586e   f000
005870   c004     movff   0x004, 0x001     	MOVFF	r0x04, r0x01
005872   f001
                                           _01420_DS_:
                                           ;	.line	162; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for (; i > 0; i--)
005874   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005876   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
005878   e021     bz      0x0058bc         	BZ	_01422_DS_
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x02
                                           ; #	DECF	r0x02, F
                                           ;	.line	163; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_write((char) (buf[i - 1] < 10 ? '0' + buf[i - 1] : 'A' + buf[i - 1] - 10));
00587a   0400     decf    0x00, 0x0, 0x0   	DECF	r0x00, W
00587c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00587e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
005880   0ed2     movlw   0xd2             	MOVLW	LOW(_lcd_printNumber_buf_1_234)
005882   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
005884   0e04     movlw   0x04             	MOVLW	HIGH(_lcd_printNumber_buf_1_234)
005886   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
005888   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00588a   ffe9
00588c   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
00588e   ffea
005890   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
005892   f002
005894   0e0a     movlw   0x0a             	MOVLW	0x0a
005896   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
005898   e205     bc      0x0058a4         	BC	_01426_DS_
00589a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00589c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00589e   0e30     movlw   0x30             	MOVLW	0x30
0058a0   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
0058a2   d003     bra     0x0058aa         	BRA	_01427_DS_
                                           _01426_DS_:
0058a4   0e37     movlw   0x37             	MOVLW	0x37
0058a6   2402     addwf   0x02, 0x0, 0x0   	ADDWF	r0x02, W
0058a8   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
                                           _01427_DS_:
0058aa   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0058ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0058ae   ec4b     call    0x007696, 0x0call    0x007696, 0x0 	CALL	_lcd_write
0058b0   f03b
0058b2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	162; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for (; i > 0; i--)
0058b4   0eff     movlw   0xff             	MOVLW	0xff
0058b6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0058b8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0058ba   d7dc     bra     0x005874         	BRA	_01420_DS_
                                           _01422_DS_:
0058bc   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
0058be   f009
0058c0   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
0058c2   f008
0058c4   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
0058c6   f007
0058c8   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
0058ca   f006
0058cc   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0058ce   f005
0058d0   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0058d2   f004
0058d4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0058d6   f003
0058d8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0058da   f002
0058dc   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0058de   f001
0058e0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0058e2   f000
0058e4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0058e6   ffd9
0058e8   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_printf	code
                                           _lcd_printf:
                                           ;	.line	133; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_printf(char *fmt, ...)
00723c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00723e   ffe5
007240   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
007242   ffd9
007244   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007246   ffe5
007248   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00724a   ffe5
00724c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00724e   ffe5
                                           ;	.line	137; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	va_start(args, fmt);
007250   0e02     movlw   0x02             	MOVLW	0x02
007252   24d9     addwf   0xd9, 0x0, 0x0   	ADDWF	FSR2L, W
007254   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
007256   0e00     movlw   0x00             	MOVLW	0x00
007258   20da     addwfc  0xda, 0x0, 0x0   	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVWF	r0x01
00725a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
00725c   0e80     movlw   0x80             	MOVLW	0x80
00725e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
007260   0e03     movlw   0x03             	MOVLW	0x03
007262   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
007264   0e00     movlw   0x00             	MOVLW	0x00
007266   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
007268   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
                                           ;	.line	138; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	pprintf(lcd_write, fmt, args);
00726a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00726c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00726e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
007270   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007272   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
007274   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007276   0e04     movlw   0x04             	MOVLW	0x04
007278   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
00727a   ffe5
00727c   0e03     movlw   0x03             	MOVLW	0x03
00727e   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
007280   ffe5
007282   0e02     movlw   0x02             	MOVLW	0x02
007284   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
007286   ffe5
007288   0e00     movlw   0x00             	MOVLW	UPPER(_lcd_write)
00728a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00728c   0e76     movlw   0x76             	MOVLW	HIGH(_lcd_write)
00728e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007290   0e96     movlw   0x96             	MOVLW	LOW(_lcd_write)
007292   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007294   ec21     call    0x006a42, 0x0call    0x006a42, 0x0 	CALL	_pprintf
007296   f035
007298   0e09     movlw   0x09             	MOVLW	0x09
00729a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	139; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	va_end(args);
00729c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00729e   f002
0072a0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0072a2   f001
0072a4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0072a6   f000
0072a8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0072aa   ffd9
0072ac   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_print	code
                                           _lcd_print:
                                           ;	.line	122; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_print(char *string)
006e64   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006e66   ffe5
006e68   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006e6a   ffd9
006e6c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006e6e   ffe5
006e70   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006e72   ffe5
006e74   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006e76   ffe5
006e78   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006e7a   ffe5
006e7c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
006e7e   ffe5
006e80   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
006e82   ffe5
006e84   0e02     movlw   0x02             	MOVLW	0x02
006e86   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006e88   f000
006e8a   0e03     movlw   0x03             	MOVLW	0x03
006e8c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006e8e   f001
006e90   0e04     movlw   0x04             	MOVLW	0x04
006e92   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
006e94   f002
                                           ;	.line	125; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for( i=0; string[i]; i++)
006e96   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01401_DS_:
006e98   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
006e9a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
006e9c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
006e9e   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
006ea0   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
006ea2   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
006ea4   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
006ea6   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
006ea8   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
006eaa   ffe9
006eac   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
006eae   fff3
006eb0   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
006eb2   f03b
006eb4   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
006eb6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
006eb8   e007     bz      0x006ec8         	BZ	_01403_DS_
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_write(string[i]);
006eba   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
006ebc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006ebe   ec4b     call    0x007696, 0x0call    0x007696, 0x0 	CALL	_lcd_write
006ec0   f03b
006ec2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	125; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for( i=0; string[i]; i++)
006ec4   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
006ec6   d7e8     bra     0x006e98         	BRA	_01401_DS_
                                           _01403_DS_:
006ec8   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
006eca   f005
006ecc   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
006ece   f004
006ed0   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006ed2   f003
006ed4   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006ed6   f002
006ed8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006eda   f001
006edc   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006ede   f000
006ee0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006ee2   ffd9
006ee4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_setCursor	code
                                           _lcd_setCursor:
                                           ;	.line	97; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_setCursor(u8 col, u8 row)
006fe6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006fe8   ffe5
006fea   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006fec   ffd9
006fee   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006ff0   ffe5
006ff2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006ff4   ffe5
006ff6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006ff8   ffe5
006ffa   0e02     movlw   0x02             	MOVLW	0x02
006ffc   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006ffe   f000
007000   0e03     movlw   0x03             	MOVLW	0x03
007002   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
007004   f001
007006   0105     movlb   0x5              	BANKSEL	_lcd_setCursor_row_offsets_1_227
                                           ;	.line	99; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	u8 row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
007008   6b7a     clrf    0x7a, 0x1        	CLRF	_lcd_setCursor_row_offsets_1_227, B
00700a   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
00700c   6f7b     movwf   0x7b, 0x1        	MOVWF	(_lcd_setCursor_row_offsets_1_227 + 1), B
00700e   0e14     movlw   0x14             	MOVLW	0x14
                                           ; removed redundant BANKSEL
007010   6f7c     movwf   0x7c, 0x1        	MOVWF	(_lcd_setCursor_row_offsets_1_227 + 2), B
007012   0e54     movlw   0x54             	MOVLW	0x54
                                           ; removed redundant BANKSEL
007014   6f7d     movwf   0x7d, 0x1        	MOVWF	(_lcd_setCursor_row_offsets_1_227 + 3), B
007016   0105     movlb   0x5              	BANKSEL	__numlines
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	if (_numlines==1) {
007018   51dc     movf    0xdc, 0x0, 0x1   	MOVF	__numlines, W, B
00701a   0a01     xorlw   0x01             	XORLW	0x01
00701c   e107     bnz     0x00702c         	BNZ	_01387_DS_
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	row_offsets[1] = 0x14;
00701e   0e14     movlw   0x14             	MOVLW	0x14
007020   0105     movlb   0x5              	BANKSEL	(_lcd_setCursor_row_offsets_1_227 + 1)
007022   6f7b     movwf   0x7b, 0x1        	MOVWF	(_lcd_setCursor_row_offsets_1_227 + 1), B
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	row_offsets[2] = 0x28;
007024   0e28     movlw   0x28             	MOVLW	0x28
                                           ; removed redundant BANKSEL
007026   6f7c     movwf   0x7c, 0x1        	MOVWF	(_lcd_setCursor_row_offsets_1_227 + 2), B
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	row_offsets[3] = 0x3C;
007028   0e3c     movlw   0x3c             	MOVLW	0x3c
                                           ; removed redundant BANKSEL
00702a   6f7d     movwf   0x7d, 0x1        	MOVWF	(_lcd_setCursor_row_offsets_1_227 + 3), B
                                           _01387_DS_:
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_command(LCD_SETDDRAMADDR | (col + row_offsets[row]));
00702c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00702e   0e7a     movlw   0x7a             	MOVLW	LOW(_lcd_setCursor_row_offsets_1_227)
007030   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
007032   0e05     movlw   0x05             	MOVLW	HIGH(_lcd_setCursor_row_offsets_1_227)
007034   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
007036   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
007038   ffe9
00703a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00703c   ffea
00703e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
007040   f001
007042   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
007044   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
007046   8e00     bsf     0x00, 0x7, 0x0   	BSF	r0x00, 7
007048   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00704a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00704c   ec8c     call    0x007718, 0x0call    0x007718, 0x0 	CALL	_lcd_command
00704e   f03b
007050   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007052   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
007054   f002
007056   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
007058   f001
00705a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00705c   f000
00705e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007060   ffd9
007062   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_command	code
                                           _lcd_command:
                                           ;	.line	90; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_command(u8 value)
007718   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00771a   ffe5
00771c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00771e   ffd9
007720   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007722   ffe5
007724   0e02     movlw   0x02             	MOVLW	0x02
007726   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
007728   f000
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_send(value, LOW);
00772a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00772c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00772e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007730   ec8c     call    0x007318, 0x0call    0x007318, 0x0 	CALL	_lcd_send
007732   f039
007734   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007736   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007738   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00773a   f000
00773c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00773e   ffd9
007740   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_write	code
                                           _lcd_write:
                                           ;	.line	84; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_write(u8 value)
007696   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
007698   ffe5
00769a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00769c   ffd9
00769e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0076a0   ffe5
0076a2   0e02     movlw   0x02             	MOVLW	0x02
0076a4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0076a6   f000
                                           ;	.line	86; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_send(value, HIGH);
0076a8   0e01     movlw   0x01             	MOVLW	0x01
0076aa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0076ac   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0076ae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0076b0   ec8c     call    0x007318, 0x0call    0x007318, 0x0 	CALL	_lcd_send
0076b2   f039
0076b4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0076b6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0076b8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0076ba   f000
0076bc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0076be   ffd9
0076c0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_send	code
                                           _lcd_send:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_send(u8 value, u8 mode)
007318   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00731a   ffe5
00731c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00731e   ffd9
007320   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007322   ffe5
007324   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
007326   ffe5
007328   0e02     movlw   0x02             	MOVLW	0x02
00732a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00732c   f000
00732e   0e03     movlw   0x03             	MOVLW	0x03
007330   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
007332   f001
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	digitalwrite(_rs_pin, mode);
007334   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
007336   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007338   0104     movlb   0x4              	BANKSEL	__rs_pin
00733a   51f5     movf    0xf5, 0x0, 0x1   	MOVF	__rs_pin, W, B
00733c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00733e   ec78     call    0x003af0, 0x0call    0x003af0, 0x0 	CALL	_digitalwrite
007340   f01d
007342   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007344   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007346   0105     movlb   0x5              	BANKSEL	__displayfunction
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	if (_displayfunction & LCD_8BITMODE)
007348   a9db     btfss   0xdb, 0x4, 0x1   	BTFSS	__displayfunction, 4, B
00734a   d006     bra     0x007358         	BRA	_01364_DS_
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_write8bits(value); 
00734c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00734e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007350   ec73     call    0x006ee6, 0x0call    0x006ee6, 0x0 	CALL	_lcd_write8bits
007352   f037
007354   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
007356   d00b     bra     0x00736e         	BRA	_01366_DS_
                                           _01364_DS_:
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_write4bits(value >> 4);	// Upper 4 bits first
007358   3800     swapf   0x00, 0x0, 0x0   	SWAPF	r0x00, W
00735a   0b0f     andlw   0x0f             	ANDLW	0x0f
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
00735c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00735e   ecb3     call    0x006f66, 0x0call    0x006f66, 0x0 	CALL	_lcd_write4bits
007360   f037
007362   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_write4bits(value);	    // Lower 4 bits second
007364   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
007366   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007368   ecb3     call    0x006f66, 0x0call    0x006f66, 0x0 	CALL	_lcd_write4bits
00736a   f037
00736c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           _01366_DS_:
00736e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
007370   f001
007372   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
007374   f000
007376   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007378   ffd9
00737a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_write8bits	code
                                           _lcd_write8bits:
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_write8bits(u8 value)
006ee6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006ee8   ffe5
006eea   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006eec   ffd9
006eee   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006ef0   ffe5
006ef2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006ef4   ffe5
006ef6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006ef8   ffe5
006efa   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006efc   ffe5
006efe   0e02     movlw   0x02             	MOVLW	0x02
006f00   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006f02   f000
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for (i = 0; i < 8; i++)
006f04   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01344_DS_:
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	digitalwrite(_data_pins[i], (value >> i) & 0x01);
006f06   0e60     movlw   0x60             	MOVLW	LOW(__data_pins)
006f08   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
006f0a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
006f0c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
006f0e   0e05     movlw   0x05             	MOVLW	HIGH(__data_pins)
006f10   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
006f12   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
006f14   ffe9
006f16   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
006f18   ffea
006f1a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
006f1c   f002
006f1e   c000     movff   0x000, 0x003     	MOVFF	r0x00, r0x03
006f20   f003
006f22   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006f24   e005     bz      0x006f30         	BZ	_01355_DS_
006f26   6ce8     negf    0xe8, 0x0        	NEGF	WREG
006f28   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01356_DS_:
006f2a   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
006f2c   0f01     addlw   0x01             	ADDLW	0x01
006f2e   e3fd     bnc     0x006f2a         	BNC	_01356_DS_
                                           _01355_DS_:
006f30   0e01     movlw   0x01             	MOVLW	0x01
006f32   1603     andwf   0x03, 0x1, 0x0   	ANDWF	r0x03, F
006f34   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
006f36   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006f38   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006f3a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006f3c   ec78     call    0x003af0, 0x0call    0x003af0, 0x0 	CALL	_digitalwrite
006f3e   f01d
006f40   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006f42   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for (i = 0; i < 8; i++)
006f44   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
006f46   0e08     movlw   0x08             	MOVLW	0x08
006f48   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
006f4a   e3dd     bnc     0x006f06         	BNC	_01344_DS_
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_pulseEnable();
006f4c   ecdd     call    0x0077ba, 0x0call    0x0077ba, 0x0 	CALL	_lcd_pulseEnable
006f4e   f03b
006f50   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006f52   f003
006f54   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006f56   f002
006f58   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006f5a   f001
006f5c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006f5e   f000
006f60   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006f62   ffd9
006f64   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_write4bits	code
                                           _lcd_write4bits:
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	void lcd_write4bits(u8 value)
006f66   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006f68   ffe5
006f6a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006f6c   ffd9
006f6e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006f70   ffe5
006f72   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006f74   ffe5
006f76   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006f78   ffe5
006f7a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006f7c   ffe5
006f7e   0e02     movlw   0x02             	MOVLW	0x02
006f80   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006f82   f000
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for (i = 0; i < 4; i++)
006f84   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01324_DS_:
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	digitalwrite(_data_pins[i], (value >> i) & 0x01);
006f86   0e60     movlw   0x60             	MOVLW	LOW(__data_pins)
006f88   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
006f8a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
006f8c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
006f8e   0e05     movlw   0x05             	MOVLW	HIGH(__data_pins)
006f90   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
006f92   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
006f94   ffe9
006f96   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
006f98   ffea
006f9a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
006f9c   f002
006f9e   c000     movff   0x000, 0x003     	MOVFF	r0x00, r0x03
006fa0   f003
006fa2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006fa4   e005     bz      0x006fb0         	BZ	_01335_DS_
006fa6   6ce8     negf    0xe8, 0x0        	NEGF	WREG
006fa8   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01336_DS_:
006faa   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
006fac   0f01     addlw   0x01             	ADDLW	0x01
006fae   e3fd     bnc     0x006faa         	BNC	_01336_DS_
                                           _01335_DS_:
006fb0   0e01     movlw   0x01             	MOVLW	0x01
006fb2   1603     andwf   0x03, 0x1, 0x0   	ANDWF	r0x03, F
006fb4   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
006fb6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006fb8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006fba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006fbc   ec78     call    0x003af0, 0x0call    0x003af0, 0x0 	CALL	_digitalwrite
006fbe   f01d
006fc0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006fc2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	for (i = 0; i < 4; i++)
006fc4   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
006fc6   0e04     movlw   0x04             	MOVLW	0x04
006fc8   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
006fca   e3dd     bnc     0x006f86         	BNC	_01324_DS_
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	lcd_pulseEnable();
006fcc   ecdd     call    0x0077ba, 0x0call    0x0077ba, 0x0 	CALL	_lcd_pulseEnable
006fce   f03b
006fd0   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006fd2   f003
006fd4   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006fd6   f002
006fd8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006fda   f001
006fdc   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006fde   f000
006fe0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006fe2   ffd9
006fe4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd_pulseEnable	code
                                           _lcd_pulseEnable:
                                           ;	.line	43; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	digitalwrite(_enable_pin, HIGH);
0077ba   0e01     movlw   0x01             	MOVLW	0x01
0077bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0077be   0104     movlb   0x4              	BANKSEL	__enable_pin
0077c0   51f7     movf    0xf7, 0x0, 0x1   	MOVF	__enable_pin, W, B
0077c2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0077c4   ec78     call    0x003af0, 0x0call    0x003af0, 0x0 	CALL	_digitalwrite
0077c6   f01d
0077c8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0077ca   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	45; /home/vbasel/.icaro/v4/firmware/libraries/lcdlib.c	digitalwrite(_enable_pin, LOW);
0077cc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0077ce   0104     movlb   0x4              	BANKSEL	__enable_pin
0077d0   51f7     movf    0xf7, 0x0, 0x1   	MOVF	__enable_pin, W, B
0077d2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0077d4   ec78     call    0x003af0, 0x0call    0x003af0, 0x0 	CALL	_digitalwrite
0077d6   f01d
0077d8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0077da   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0077dc   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__psprintf	code
                                           _psprintf:
                                           ;	.line	506; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 psprintf(u8 *out, const u8 *format, ...)
006cb6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006cb8   ffe5
006cba   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006cbc   ffd9
006cbe   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006cc0   ffe5
006cc2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006cc4   ffe5
006cc6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006cc8   ffe5
006cca   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006ccc   ffe5
006cce   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
006cd0   ffe5
                                           ;	.line	510; /home/vbasel/.icaro/v4/firmware/core/stdio.c	va_start(args, format);
006cd2   0e05     movlw   0x05             	MOVLW	0x05
006cd4   24d9     addwf   0xd9, 0x0, 0x0   	ADDWF	FSR2L, W
006cd6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006cd8   0e00     movlw   0x00             	MOVLW	0x00
006cda   20da     addwfc  0xda, 0x0, 0x0   	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVWF	r0x01
006cdc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
006cde   0e80     movlw   0x80             	MOVLW	0x80
006ce0   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
006ce2   0e03     movlw   0x03             	MOVLW	0x03
006ce4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
006ce6   0e00     movlw   0x00             	MOVLW	0x00
006ce8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
006cea   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
                                           ;	.line	511; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprint(&out, format, args);
006cec   0e02     movlw   0x02             	MOVLW	0x02
006cee   24d9     addwf   0xd9, 0x0, 0x0   	ADDWF	FSR2L, W
006cf0   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
006cf2   0e00     movlw   0x00             	MOVLW	0x00
006cf4   20da     addwfc  0xda, 0x0, 0x0   	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
                                           ; #	MOVWF	r0x04
                                           ; #	MOVWF	r0x04
006cf6   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; #	MOVF	r0x03, W
                                           ; #	MOVWF	r0x03
006cf8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006cfa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006cfc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006cfe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006d00   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006d02   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006d04   0e07     movlw   0x07             	MOVLW	0x07
006d06   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
006d08   ffe5
006d0a   0e06     movlw   0x06             	MOVLW	0x06
006d0c   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
006d0e   ffe5
006d10   0e05     movlw   0x05             	MOVLW	0x05
006d12   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
006d14   ffe5
006d16   0e80     movlw   0x80             	MOVLW	0x80
006d18   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006d1a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
006d1c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006d1e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
006d20   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006d22   ec32     call    0x001a64, 0x0call    0x001a64, 0x0 	CALL	_pprint
006d24   f00d
006d26   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006d28   0e09     movlw   0x09             	MOVLW	0x09
006d2a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
006d2c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006d2e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
006d30   f004
006d32   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006d34   f003
006d36   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006d38   f002
006d3a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006d3c   f001
006d3e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006d40   f000
006d42   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006d44   ffd9
006d46   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__psprintf2	code
                                           _psprintf2:
                                           ;	.line	500; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 psprintf2(u8 *out, const u8 *format, va_list args)
0067b6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0067b8   ffe5
0067ba   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0067bc   ffd9
0067be   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0067c0   ffe5
0067c2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0067c4   ffe5
0067c6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0067c8   ffe5
0067ca   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0067cc   ffe5
0067ce   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0067d0   ffe5
0067d2   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0067d4   ffe5
0067d6   0e02     movlw   0x02             	MOVLW	0x02
0067d8   cfdb     movff   0xfdb, 0x5c5     	MOVFF	PLUSW2, _psprintf2_out_1_208
0067da   f5c5
0067dc   0e03     movlw   0x03             	MOVLW	0x03
0067de   cfdb     movff   0xfdb, 0x5c6     	MOVFF	PLUSW2, (_psprintf2_out_1_208 + 1)
0067e0   f5c6
0067e2   0e04     movlw   0x04             	MOVLW	0x04
0067e4   cfdb     movff   0xfdb, 0x5c7     	MOVFF	PLUSW2, (_psprintf2_out_1_208 + 2)
0067e6   f5c7
0067e8   0e05     movlw   0x05             	MOVLW	0x05
0067ea   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0067ec   f000
0067ee   0e06     movlw   0x06             	MOVLW	0x06
0067f0   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0067f2   f001
0067f4   0e07     movlw   0x07             	MOVLW	0x07
0067f6   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0067f8   f002
0067fa   0e08     movlw   0x08             	MOVLW	0x08
0067fc   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0067fe   f003
006800   0e09     movlw   0x09             	MOVLW	0x09
006802   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
006804   f004
006806   0e0a     movlw   0x0a             	MOVLW	0x0a
006808   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
00680a   f005
                                           ;	.line	502; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprint(&out, format, args);
00680c   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00680e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006810   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
006812   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006814   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
006816   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006818   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00681a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00681c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00681e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006820   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006822   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006824   0e80     movlw   0x80             	MOVLW	0x80
006826   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006828   0e05     movlw   0x05             	MOVLW	HIGH(_psprintf2_out_1_208)
00682a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00682c   0ec5     movlw   0xc5             	MOVLW	LOW(_psprintf2_out_1_208)
00682e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006830   ec32     call    0x001a64, 0x0call    0x001a64, 0x0 	CALL	_pprint
006832   f00d
006834   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006836   0e09     movlw   0x09             	MOVLW	0x09
006838   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00683a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00683c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00683e   f005
006840   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
006842   f004
006844   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006846   f003
006848   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00684a   f002
00684c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00684e   f001
006850   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006852   f000
006854   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006856   ffd9
006858   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pprintf	code
                                           _pprintf:
                                           ;	.line	486; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 pprintf(funcout func, const u8 *format, va_list args)
006a42   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006a44   ffe5
006a46   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006a48   ffd9
006a4a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006a4c   ffe5
006a4e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006a50   ffe5
006a52   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006a54   ffe5
006a56   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006a58   ffe5
006a5a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
006a5c   ffe5
006a5e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
006a60   ffe5
006a62   0e02     movlw   0x02             	MOVLW	0x02
006a64   cfdb     movff   0xfdb, 0x5c2     	MOVFF	PLUSW2, _pputchar
006a66   f5c2
006a68   0e03     movlw   0x03             	MOVLW	0x03
006a6a   cfdb     movff   0xfdb, 0x5c3     	MOVFF	PLUSW2, (_pputchar + 1)
006a6c   f5c3
006a6e   0e04     movlw   0x04             	MOVLW	0x04
006a70   cfdb     movff   0xfdb, 0x5c4     	MOVFF	PLUSW2, (_pputchar + 2)
006a72   f5c4
006a74   0e05     movlw   0x05             	MOVLW	0x05
006a76   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006a78   f000
006a7a   0e06     movlw   0x06             	MOVLW	0x06
006a7c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006a7e   f001
006a80   0e07     movlw   0x07             	MOVLW	0x07
006a82   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
006a84   f002
006a86   0e08     movlw   0x08             	MOVLW	0x08
006a88   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
006a8a   f003
006a8c   0e09     movlw   0x09             	MOVLW	0x09
006a8e   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
006a90   f004
006a92   0e0a     movlw   0x0a             	MOVLW	0x0a
006a94   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
006a96   f005
                                           ;	.line	492; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprint(0, format, args);
006a98   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
006a9a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006a9c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
006a9e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006aa0   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
006aa2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006aa4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006aa6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006aa8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006aaa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006aac   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006aae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006ab0   0e00     movlw   0x00             	MOVLW	0x00
006ab2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006ab4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006ab6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006ab8   ec32     call    0x001a64, 0x0call    0x001a64, 0x0 	CALL	_pprint
006aba   f00d
006abc   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006abe   0e09     movlw   0x09             	MOVLW	0x09
006ac0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
006ac2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006ac4   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
006ac6   f005
006ac8   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
006aca   f004
006acc   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006ace   f003
006ad0   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006ad2   f002
006ad4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006ad6   f001
006ad8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006ada   f000
006adc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006ade   ffd9
006ae0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pprint	code
                                           _pprint:
                                           ;	.line	338; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static u8 pprint(u8 **out, const u8 *format, va_list args)
001a64   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001a66   ffe5
001a68   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001a6a   ffd9
001a6c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001a6e   ffe5
001a70   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001a72   ffe5
001a74   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001a76   ffe5
001a78   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001a7a   ffe5
001a7c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
001a7e   ffe5
001a80   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
001a82   ffe5
001a84   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
001a86   ffe5
001a88   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
001a8a   ffe5
001a8c   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
001a8e   ffe5
001a90   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
001a92   ffe5
001a94   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
001a96   ffe5
001a98   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
001a9a   ffe5
001a9c   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
001a9e   ffe5
001aa0   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
001aa2   ffe5
001aa4   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
001aa6   ffe5
001aa8   c00f     movff   0x00f, 0xfe5     	MOVFF	r0x0f, POSTDEC1
001aaa   ffe5
001aac   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
001aae   ffe5
001ab0   c011     movff   0x011, 0xfe5     	MOVFF	r0x11, POSTDEC1
001ab2   ffe5
001ab4   c012     movff   0x012, 0xfe5     	MOVFF	r0x12, POSTDEC1
001ab6   ffe5
001ab8   c013     movff   0x013, 0xfe5     	MOVFF	r0x13, POSTDEC1
001aba   ffe5
001abc   c014     movff   0x014, 0xfe5     	MOVFF	r0x14, POSTDEC1
001abe   ffe5
001ac0   c015     movff   0x015, 0xfe5     	MOVFF	r0x15, POSTDEC1
001ac2   ffe5
001ac4   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
001ac6   ffe5
001ac8   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
001aca   ffe5
001acc   c018     movff   0x018, 0xfe5     	MOVFF	r0x18, POSTDEC1
001ace   ffe5
001ad0   c019     movff   0x019, 0xfe5     	MOVFF	r0x19, POSTDEC1
001ad2   ffe5
001ad4   0e02     movlw   0x02             	MOVLW	0x02
001ad6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
001ad8   f000
001ada   0e03     movlw   0x03             	MOVLW	0x03
001adc   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
001ade   f001
001ae0   0e04     movlw   0x04             	MOVLW	0x04
001ae2   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
001ae4   f002
001ae6   0e05     movlw   0x05             	MOVLW	0x05
001ae8   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
001aea   f003
001aec   0e06     movlw   0x06             	MOVLW	0x06
001aee   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
001af0   f004
001af2   0e07     movlw   0x07             	MOVLW	0x07
001af4   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
001af6   f005
001af8   0e08     movlw   0x08             	MOVLW	0x08
001afa   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
001afc   f006
001afe   0e09     movlw   0x09             	MOVLW	0x09
001b00   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
001b02   f007
001b04   0e0a     movlw   0x0a             	MOVLW	0x0a
001b06   cfdb     movff   0xfdb, 0x008     	MOVFF	PLUSW2, r0x08
001b08   f008
                                           ;	.line	342; /home/vbasel/.icaro/v4/firmware/core/stdio.c	register u8 pc = 0;
001b0a   6a09     clrf    0x09, 0x0        	CLRF	r0x09
                                           ;	.line	343; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 precision = 2; // default value is 2 digits fractional part
001b0c   0e02     movlw   0x02             	MOVLW	0x02
001b0e   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
                                           _01130_DS_:
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (; *format != 0; ++format)
001b10   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
001b12   ffe9
001b14   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
001b16   fff3
001b18   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001b1a   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
001b1c   f03b
001b1e   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
001b20   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001b22   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
001b24   ef05     goto    0x00240a         	GOTO	_01118_DS_
001b26   f012
                                           ;	.line	350; /home/vbasel/.icaro/v4/firmware/core/stdio.c	islong = 0;                 // default is 16-bit
001b28   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
                                           ;	.line	352; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '%')
001b2a   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001b2c   0a25     xorlw   0x25             	XORLW	0x25
001b2e   e002     bz      0x001b34         	BZ	_01252_DS_
001b30   efec     goto    0x0023d8         	GOTO	_01113_DS_
001b32   f011
                                           _01252_DS_:
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width = pad = 0;		// default is left justify, no zero padded
001b34   6a0b     clrf    0x0b, 0x0        	CLRF	r0x0b
001b36   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
                                           ;	.line	355; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;				// get the next format identifier
001b38   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001b3a   e302     bnc     0x001b40         	BNC	_01253_DS_
001b3c   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
001b3e   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01253_DS_:
                                           ;	.line	357; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '\0')	// end of line
001b40   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
001b42   ffe9
001b44   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
001b46   fff3
001b48   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001b4a   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
001b4c   f03b
001b4e   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
001b50   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001b52   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
001b54   ef05     goto    0x00240a         	GOTO	_01118_DS_
001b56   f012
                                           ;	.line	360; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '%')		// error
001b58   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001b5a   0a25     xorlw   0x25             	XORLW	0x25
001b5c   e102     bnz     0x001b62         	BNZ	_01255_DS_
001b5e   efec     goto    0x0023d8         	GOTO	_01113_DS_
001b60   f011
                                           _01255_DS_:
                                           ;	.line	363; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '-')		// right justify
001b62   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001b64   0a2d     xorlw   0x2d             	XORLW	0x2d
001b66   e106     bnz     0x001b74         	BNZ	_01155_DS_
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;
001b68   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001b6a   e302     bnc     0x001b70         	BNC	_01258_DS_
001b6c   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
001b6e   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01258_DS_:
                                           ;	.line	366; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pad = PAD_RIGHT;
001b70   0e01     movlw   0x01             	MOVLW	0x01
001b72   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
                                           _01155_DS_:
                                           ;	.line	369; /home/vbasel/.icaro/v4/firmware/core/stdio.c	while (*format == '0')	// field is padded with 0's instead of blanks
001b74   c003     movff   0x003, 0x00e     	MOVFF	r0x03, r0x0e
001b76   f00e
001b78   c004     movff   0x004, 0x00f     	MOVFF	r0x04, r0x0f
001b7a   f00f
001b7c   c005     movff   0x005, 0x010     	MOVFF	r0x05, r0x10
001b7e   f010
                                           _01083_DS_:
001b80   c00e     movff   0x00e, 0xfe9     	MOVFF	r0x0e, FSR0L
001b82   ffe9
001b84   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
001b86   fff3
001b88   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001b8a   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
001b8c   f03b
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
001b8e   0a30     xorlw   0x30             	XORLW	0x30
001b90   e106     bnz     0x001b9e         	BNZ	_01123_DS_
                                           ;	.line	371; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;
001b92   2a0e     incf    0x0e, 0x1, 0x0   	INCF	r0x0e, F
001b94   e302     bnc     0x001b9a         	BNC	_01261_DS_
001b96   4a0f     infsnz  0x0f, 0x1, 0x0   	INFSNZ	r0x0f, F
001b98   2a10     incf    0x10, 0x1, 0x0   	INCF	r0x10, F
                                           _01261_DS_:
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pad |= PAD_ZERO;
001b9a   820b     bsf     0x0b, 0x1, 0x0   	BSF	r0x0b, 1
001b9c   d7f1     bra     0x001b80         	BRA	_01083_DS_
                                           _01123_DS_:
                                           ;	.line	375; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
001b9e   c00e     movff   0x00e, 0xfe9     	MOVFF	r0x0e, FSR0L
001ba0   ffe9
001ba2   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
001ba4   fff3
001ba6   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001ba8   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
001baa   f03b
001bac   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001bae   0e30     movlw   0x30             	MOVLW	0x30
001bb0   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
001bb2   e313     bnc     0x001bda         	BNC	_01183_DS_
001bb4   0e3a     movlw   0x3a             	MOVLW	0x3a
001bb6   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
001bb8   e210     bc      0x001bda         	BC	_01183_DS_
                                           ; ;multiply lit val:0x0a by variable r0x0d and store in r0x0d
                                           ;	.line	377; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width *= 10;
001bba   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001bbc   0d0a     mullw   0x0a             	MULLW	0x0a
001bbe   cff3     movff   0xff3, 0x00d     	MOVFF	PRODL, r0x0d
001bc0   f00d
                                           ;	.line	378; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width += *format - '0';
001bc2   0ed0     movlw   0xd0             	MOVLW	0xd0
001bc4   2611     addwf   0x11, 0x1, 0x0   	ADDWF	r0x11, F
001bc6   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001bc8   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
001bca   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001bcc   2412     addwf   0x12, 0x0, 0x0   	ADDWF	r0x12, W
001bce   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
                                           ;	.line	375; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
001bd0   2a0e     incf    0x0e, 0x1, 0x0   	INCF	r0x0e, F
001bd2   e302     bnc     0x001bd8         	BNC	_01265_DS_
001bd4   4a0f     infsnz  0x0f, 0x1, 0x0   	INFSNZ	r0x0f, F
001bd6   2a10     incf    0x10, 0x1, 0x0   	INCF	r0x10, F
                                           _01265_DS_:
001bd8   d7e2     bra     0x001b9e         	BRA	_01123_DS_
                                           _01183_DS_:
001bda   c00e     movff   0x00e, 0x003     	MOVFF	r0x0e, r0x03
001bdc   f003
001bde   c00f     movff   0x00f, 0x004     	MOVFF	r0x0f, r0x04
001be0   f004
001be2   c010     movff   0x010, 0x005     	MOVFF	r0x10, r0x05
001be4   f005
                                           ;	.line	388; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '.')		// float precision
001be6   c00e     movff   0x00e, 0xfe9     	MOVFF	r0x0e, FSR0L
001be8   ffe9
001bea   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
001bec   fff3
001bee   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001bf0   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
001bf2   f03b
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
001bf4   0a2e     xorlw   0x2e             	XORLW	0x2e
001bf6   e134     bnz     0x001c60         	BNZ	_01089_DS_
                                           ;	.line	390; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;
001bf8   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001bfa   0f01     addlw   0x01             	ADDLW	0x01
001bfc   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001bfe   0e00     movlw   0x00             	MOVLW	0x00
001c00   200f     addwfc  0x0f, 0x0, 0x0   	ADDWFC	r0x0f, W
001c02   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
001c04   0e00     movlw   0x00             	MOVLW	0x00
001c06   2010     addwfc  0x10, 0x0, 0x0   	ADDWFC	r0x10, W
001c08   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
                                           ;	.line	391; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision = 0;
001c0a   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
001c0c   c003     movff   0x003, 0x00e     	MOVFF	r0x03, r0x0e
001c0e   f00e
001c10   c004     movff   0x004, 0x00f     	MOVFF	r0x04, r0x0f
001c12   f00f
001c14   c005     movff   0x005, 0x010     	MOVFF	r0x05, r0x10
001c16   f010
                                           _01127_DS_:
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
001c18   c00e     movff   0x00e, 0xfe9     	MOVFF	r0x0e, FSR0L
001c1a   ffe9
001c1c   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
001c1e   fff3
001c20   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001c22   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
001c24   f03b
001c26   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001c28   0e30     movlw   0x30             	MOVLW	0x30
001c2a   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
001c2c   e313     bnc     0x001c54         	BNC	_01184_DS_
001c2e   0e3a     movlw   0x3a             	MOVLW	0x3a
001c30   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
001c32   e210     bc      0x001c54         	BC	_01184_DS_
                                           ; ;multiply lit val:0x0a by variable r0x0a and store in r0x0a
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision *= 10;
001c34   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
001c36   0d0a     mullw   0x0a             	MULLW	0x0a
001c38   cff3     movff   0xff3, 0x00a     	MOVFF	PRODL, r0x0a
001c3a   f00a
                                           ;	.line	396; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision += *format - '0';
001c3c   0ed0     movlw   0xd0             	MOVLW	0xd0
001c3e   2611     addwf   0x11, 0x1, 0x0   	ADDWF	r0x11, F
001c40   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
001c42   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
001c44   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001c46   2412     addwf   0x12, 0x0, 0x0   	ADDWF	r0x12, W
001c48   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
001c4a   2a0e     incf    0x0e, 0x1, 0x0   	INCF	r0x0e, F
001c4c   e302     bnc     0x001c52         	BNC	_01270_DS_
001c4e   4a0f     infsnz  0x0f, 0x1, 0x0   	INFSNZ	r0x0f, F
001c50   2a10     incf    0x10, 0x1, 0x0   	INCF	r0x10, F
                                           _01270_DS_:
001c52   d7e2     bra     0x001c18         	BRA	_01127_DS_
                                           _01184_DS_:
001c54   c00e     movff   0x00e, 0x003     	MOVFF	r0x0e, r0x03
001c56   f003
001c58   c00f     movff   0x00f, 0x004     	MOVFF	r0x0f, r0x04
001c5a   f004
001c5c   c010     movff   0x010, 0x005     	MOVFF	r0x10, r0x05
001c5e   f005
                                           _01089_DS_:
                                           ;	.line	400; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'f') 	// float
001c60   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
001c62   ffe9
001c64   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
001c66   fff3
001c68   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001c6a   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
001c6c   f03b
                                           ; #	MOVWF	r0x0e
                                           ; #	MOVF	r0x0e, W
001c6e   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
001c70   0a66     xorlw   0x66             	XORLW	0x66
001c72   e001     bz      0x001c76         	BZ	_01272_DS_
001c74   d040     bra     0x001cf6         	BRA	_01091_DS_
                                           _01272_DS_:
                                           ;	.line	402; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprintfl(out, va_arg(args, float), width, pad, separator, precision);
001c76   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001c78   0f04     addlw   0x04             	ADDLW	0x04
001c7a   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001c7c   0e00     movlw   0x00             	MOVLW	0x00
001c7e   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001c80   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001c82   0e00     movlw   0x00             	MOVLW	0x00
001c84   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001c86   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001c88   c00f     movff   0x00f, 0x006     	MOVFF	r0x0f, r0x06
001c8a   f006
001c8c   c010     movff   0x010, 0x007     	MOVFF	r0x10, r0x07
001c8e   f007
001c90   c011     movff   0x011, 0x008     	MOVFF	r0x11, r0x08
001c92   f008
001c94   0efc     movlw   0xfc             	MOVLW	0xfc
001c96   260f     addwf   0x0f, 0x1, 0x0   	ADDWF	r0x0f, F
001c98   0eff     movlw   0xff             	MOVLW	0xff
001c9a   2210     addwfc  0x10, 0x1, 0x0   	ADDWFC	r0x10, F
001c9c   2211     addwfc  0x11, 0x1, 0x0   	ADDWFC	r0x11, F
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVWF	r0x0f
001c9e   c00f     movff   0x00f, 0xfe9     	MOVFF	r0x0f, FSR0L
001ca0   ffe9
001ca2   c010     movff   0x010, 0xff3     	MOVFF	r0x10, PRODL
001ca4   fff3
001ca6   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001ca8   ece0     call    0x0075c0, 0x0call    0x0075c0, 0x0 	CALL	__gptrget4
001caa   f03a
001cac   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001cae   cff3     movff   0xff3, 0x010     	MOVFF	PRODL, r0x10
001cb0   f010
001cb2   cff4     movff   0xff4, 0x011     	MOVFF	PRODH, r0x11
001cb4   f011
001cb6   cfe9     movff   0xfe9, 0x012     	MOVFF	FSR0L, r0x12
001cb8   f012
001cba   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
001cbc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cbe   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001cc0   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001cc2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cc4   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001cc6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cc8   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
001cca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ccc   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001cce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cd0   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001cd2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cd4   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001cd6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cd8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001cda   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cdc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001cde   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ce0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001ce2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ce4   ec55     call    0x0024aa, 0x0call    0x0024aa, 0x0 	CALL	_pprintfl
001ce6   f012
001ce8   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001cea   0e0b     movlw   0x0b             	MOVLW	0x0b
001cec   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001cee   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001cf0   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	403; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
001cf2   efff     goto    0x0023fe         	GOTO	_01117_DS_
001cf4   f011
                                           _01091_DS_:
                                           ;	.line	406; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 's')		// string
001cf6   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001cf8   0a73     xorlw   0x73             	XORLW	0x73
001cfa   e001     bz      0x001cfe         	BZ	_01274_DS_
001cfc   d052     bra     0x001da2         	BRA	_01093_DS_
                                           _01274_DS_:
                                           ;	.line	408; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 *s = va_arg(args, u8*);
001cfe   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001d00   0f03     addlw   0x03             	ADDLW	0x03
001d02   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001d04   0e00     movlw   0x00             	MOVLW	0x00
001d06   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001d08   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001d0a   0e00     movlw   0x00             	MOVLW	0x00
001d0c   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001d0e   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001d10   c00f     movff   0x00f, 0x006     	MOVFF	r0x0f, r0x06
001d12   f006
001d14   c010     movff   0x010, 0x007     	MOVFF	r0x10, r0x07
001d16   f007
001d18   c011     movff   0x011, 0x008     	MOVFF	r0x11, r0x08
001d1a   f008
001d1c   0efd     movlw   0xfd             	MOVLW	0xfd
001d1e   260f     addwf   0x0f, 0x1, 0x0   	ADDWF	r0x0f, F
001d20   0eff     movlw   0xff             	MOVLW	0xff
001d22   2210     addwfc  0x10, 0x1, 0x0   	ADDWFC	r0x10, F
001d24   2211     addwfc  0x11, 0x1, 0x0   	ADDWFC	r0x11, F
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVWF	r0x0f
001d26   c00f     movff   0x00f, 0xfe9     	MOVFF	r0x0f, FSR0L
001d28   ffe9
001d2a   c010     movff   0x010, 0xff3     	MOVFF	r0x10, PRODL
001d2c   fff3
001d2e   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001d30   ec00     call    0x007600, 0x0call    0x007600, 0x0 	CALL	__gptrget3
001d32   f03b
001d34   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001d36   cff3     movff   0xff3, 0x010     	MOVFF	PRODL, r0x10
001d38   f010
001d3a   cff4     movff   0xff4, 0x011     	MOVFF	PRODH, r0x11
001d3c   f011
001d3e   c00f     movff   0x00f, 0x012     	MOVFF	r0x0f, r0x12
001d40   f012
001d42   c010     movff   0x010, 0x013     	MOVFF	r0x10, r0x13
001d44   f013
001d46   c011     movff   0x011, 0x014     	MOVFF	r0x11, r0x14
001d48   f014
                                           ;	.line	409; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprints(out, s?s:"(null)", width, pad);
001d4a   1010     iorwf   0x10, 0x0, 0x0   	IORWF	r0x10, W
001d4c   1011     iorwf   0x11, 0x0, 0x0   	IORWF	r0x11, W
001d4e   e007     bz      0x001d5e         	BZ	_01135_DS_
001d50   c012     movff   0x012, 0x00f     	MOVFF	r0x12, r0x0f
001d52   f00f
001d54   c013     movff   0x013, 0x010     	MOVFF	r0x13, r0x10
001d56   f010
001d58   c014     movff   0x014, 0x011     	MOVFF	r0x14, r0x11
001d5a   f011
001d5c   d006     bra     0x001d6a         	BRA	_01136_DS_
                                           _01135_DS_:
001d5e   0e00     movlw   0x00             	MOVLW	UPPER(___str_0)
001d60   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001d62   0e5d     movlw   0x5d             	MOVLW	HIGH(___str_0)
001d64   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001d66   0ef2     movlw   0xf2             	MOVLW	LOW(___str_0)
001d68   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
                                           _01136_DS_:
001d6a   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001d6c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d6e   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001d70   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d72   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001d74   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d76   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001d78   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d7a   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001d7c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d7e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001d80   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d82   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001d84   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d86   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001d88   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d8a   ecab     call    0x004756, 0x0call    0x004756, 0x0 	CALL	_pprints
001d8c   f023
001d8e   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001d90   0e08     movlw   0x08             	MOVLW	0x08
001d92   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001d94   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
001d96   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001d98   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001d9a   2410     addwf   0x10, 0x0, 0x0   	ADDWF	r0x10, W
001d9c   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           ;	.line	410; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
001d9e   efff     goto    0x0023fe         	GOTO	_01117_DS_
001da0   f011
                                           _01093_DS_:
                                           ;	.line	413; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'l')		// long support
001da2   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001da4   0a6c     xorlw   0x6c             	XORLW	0x6c
001da6   e106     bnz     0x001db4         	BNZ	_01095_DS_
                                           ;	.line	415; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;
001da8   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001daa   e302     bnc     0x001db0         	BNC	_01277_DS_
001dac   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
001dae   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01277_DS_:
                                           ;	.line	416; /home/vbasel/.icaro/v4/firmware/core/stdio.c	islong = 1;
001db0   0e01     movlw   0x01             	MOVLW	0x01
001db2   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
                                           _01095_DS_:
                                           ;	.line	419; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'u')		// decimal (10) unsigned (0) integer
001db4   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
001db6   ffe9
001db8   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
001dba   fff3
001dbc   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001dbe   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
001dc0   f03b
                                           ; #	MOVWF	r0x0e
                                           ; #	MOVF	r0x0e, W
001dc2   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
001dc4   0a75     xorlw   0x75             	XORLW	0x75
001dc6   e001     bz      0x001dca         	BZ	_01279_DS_
001dc8   d06c     bra     0x001ea2         	BRA	_01097_DS_
                                           _01279_DS_:
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
001dca   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001dcc   e023     bz      0x001e14         	BZ	_01137_DS_
001dce   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001dd0   0f04     addlw   0x04             	ADDLW	0x04
001dd2   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001dd4   0e00     movlw   0x00             	MOVLW	0x00
001dd6   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001dd8   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001dda   0e00     movlw   0x00             	MOVLW	0x00
001ddc   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001dde   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001de0   c00f     movff   0x00f, 0x006     	MOVFF	r0x0f, r0x06
001de2   f006
001de4   c010     movff   0x010, 0x007     	MOVFF	r0x10, r0x07
001de6   f007
001de8   c011     movff   0x011, 0x008     	MOVFF	r0x11, r0x08
001dea   f008
001dec   0efc     movlw   0xfc             	MOVLW	0xfc
001dee   260f     addwf   0x0f, 0x1, 0x0   	ADDWF	r0x0f, F
001df0   0eff     movlw   0xff             	MOVLW	0xff
001df2   2210     addwfc  0x10, 0x1, 0x0   	ADDWFC	r0x10, F
001df4   2211     addwfc  0x11, 0x1, 0x0   	ADDWFC	r0x11, F
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVWF	r0x0f
001df6   c00f     movff   0x00f, 0xfe9     	MOVFF	r0x0f, FSR0L
001df8   ffe9
001dfa   c010     movff   0x010, 0xff3     	MOVFF	r0x10, PRODL
001dfc   fff3
001dfe   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001e00   ece0     call    0x0075c0, 0x0call    0x0075c0, 0x0 	CALL	__gptrget4
001e02   f03a
001e04   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001e06   cff3     movff   0xff3, 0x010     	MOVFF	PRODL, r0x10
001e08   f010
001e0a   cff4     movff   0xff4, 0x011     	MOVFF	PRODH, r0x11
001e0c   f011
001e0e   cfe9     movff   0xfe9, 0x012     	MOVFF	FSR0L, r0x12
001e10   f012
001e12   d024     bra     0x001e5c         	BRA	_01138_DS_
                                           _01137_DS_:
001e14   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001e16   0f02     addlw   0x02             	ADDLW	0x02
001e18   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001e1a   0e00     movlw   0x00             	MOVLW	0x00
001e1c   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001e1e   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
001e20   0e00     movlw   0x00             	MOVLW	0x00
001e22   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001e24   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
001e26   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
001e28   f006
001e2a   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
001e2c   f007
001e2e   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
001e30   f008
001e32   0efe     movlw   0xfe             	MOVLW	0xfe
001e34   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
001e36   0eff     movlw   0xff             	MOVLW	0xff
001e38   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
001e3a   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
001e3c   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
001e3e   ffe9
001e40   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
001e42   fff3
001e44   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
001e46   ec61     call    0x0076c2, 0x0call    0x0076c2, 0x0 	CALL	__gptrget2
001e48   f03b
001e4a   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001e4c   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
001e4e   f014
001e50   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
001e52   f00f
001e54   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
001e56   f010
001e58   6a11     clrf    0x11, 0x0        	CLRF	r0x11
001e5a   6a12     clrf    0x12, 0x0        	CLRF	r0x12
                                           _01138_DS_:
                                           ;	.line	422; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 10, 0, width, pad, separator, 'a');
001e5c   0e61     movlw   0x61             	MOVLW	0x61
001e5e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e60   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001e62   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001e64   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e66   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001e68   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e6a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001e6c   0e0a     movlw   0x0a             	MOVLW	0x0a
001e6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e70   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001e72   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e74   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
001e76   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e78   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001e7a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e7c   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001e7e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e80   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001e82   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e84   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001e86   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e88   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001e8a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e8c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001e8e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e90   ec7e     call    0x0034fc, 0x0call    0x0034fc, 0x0 	CALL	_pprinti
001e92   f01a
001e94   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001e96   0e0e     movlw   0x0e             	MOVLW	0x0e
001e98   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001e9a   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
001e9c   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	423; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
001e9e   efff     goto    0x0023fe         	GOTO	_01117_DS_
001ea0   f011
                                           _01097_DS_:
                                           ;	.line	426; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'd' || *format == 'i') // decimal (10) signed (1) integer
001ea2   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001ea4   0a64     xorlw   0x64             	XORLW	0x64
001ea6   e004     bz      0x001eb0         	BZ	_01098_DS_
001ea8   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001eaa   0a69     xorlw   0x69             	XORLW	0x69
001eac   e001     bz      0x001eb0         	BZ	_01098_DS_
001eae   d075     bra     0x001f9a         	BRA	_01099_DS_
                                           _01098_DS_:
                                           ;	.line	428; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
001eb0   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001eb2   e023     bz      0x001efa         	BZ	_01139_DS_
001eb4   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001eb6   0f04     addlw   0x04             	ADDLW	0x04
001eb8   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001eba   0e00     movlw   0x00             	MOVLW	0x00
001ebc   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001ebe   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
001ec0   0e00     movlw   0x00             	MOVLW	0x00
001ec2   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001ec4   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
001ec6   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
001ec8   f006
001eca   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
001ecc   f007
001ece   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
001ed0   f008
001ed2   0efc     movlw   0xfc             	MOVLW	0xfc
001ed4   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
001ed6   0eff     movlw   0xff             	MOVLW	0xff
001ed8   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
001eda   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
001edc   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
001ede   ffe9
001ee0   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
001ee2   fff3
001ee4   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
001ee6   ece0     call    0x0075c0, 0x0call    0x0075c0, 0x0 	CALL	__gptrget4
001ee8   f03a
001eea   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001eec   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
001eee   f014
001ef0   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
001ef2   f015
001ef4   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
001ef6   f016
001ef8   d024     bra     0x001f42         	BRA	_01140_DS_
                                           _01139_DS_:
001efa   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001efc   0f02     addlw   0x02             	ADDLW	0x02
001efe   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
001f00   0e00     movlw   0x00             	MOVLW	0x00
001f02   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001f04   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
001f06   0e00     movlw   0x00             	MOVLW	0x00
001f08   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001f0a   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
001f0c   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
001f0e   f006
001f10   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
001f12   f007
001f14   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
001f16   f008
001f18   0efe     movlw   0xfe             	MOVLW	0xfe
001f1a   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
001f1c   0eff     movlw   0xff             	MOVLW	0xff
001f1e   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
001f20   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
001f22   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
001f24   ffe9
001f26   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
001f28   fff3
001f2a   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
001f2c   ec61     call    0x0076c2, 0x0call    0x0076c2, 0x0 	CALL	__gptrget2
001f2e   f03b
001f30   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
001f32   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
001f34   f018
001f36   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
001f38   f013
001f3a   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
001f3c   f014
001f3e   6a15     clrf    0x15, 0x0        	CLRF	r0x15
001f40   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01140_DS_:
001f42   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
001f44   f00f
001f46   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
001f48   f010
001f4a   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
001f4c   f011
001f4e   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
001f50   f012
                                           ;	.line	429; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 10, 1, width, pad, separator, 'a');
001f52   0e61     movlw   0x61             	MOVLW	0x61
001f54   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f56   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001f58   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001f5a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f5c   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001f5e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f60   0e01     movlw   0x01             	MOVLW	0x01
001f62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f64   0e0a     movlw   0x0a             	MOVLW	0x0a
001f66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f68   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001f6a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f6c   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
001f6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f70   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001f72   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f74   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001f76   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f78   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001f7a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f7c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001f7e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f80   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001f82   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f84   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001f86   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f88   ec7e     call    0x0034fc, 0x0call    0x0034fc, 0x0 	CALL	_pprinti
001f8a   f01a
001f8c   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001f8e   0e0e     movlw   0x0e             	MOVLW	0x0e
001f90   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001f92   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
001f94   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	430; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
001f96   efff     goto    0x0023fe         	GOTO	_01117_DS_
001f98   f011
                                           _01099_DS_:
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'x' || *format == 'p')	// unsigned (0) lower ('a') hexa (16) or pointer
001f9a   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001f9c   0a78     xorlw   0x78             	XORLW	0x78
001f9e   e004     bz      0x001fa8         	BZ	_01101_DS_
001fa0   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001fa2   0a70     xorlw   0x70             	XORLW	0x70
001fa4   e001     bz      0x001fa8         	BZ	_01101_DS_
001fa6   d073     bra     0x00208e         	BRA	_01102_DS_
                                           _01101_DS_:
                                           ;	.line	435; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
001fa8   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001faa   e023     bz      0x001ff2         	BZ	_01141_DS_
001fac   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001fae   0f04     addlw   0x04             	ADDLW	0x04
001fb0   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001fb2   0e00     movlw   0x00             	MOVLW	0x00
001fb4   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001fb6   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
001fb8   0e00     movlw   0x00             	MOVLW	0x00
001fba   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001fbc   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
001fbe   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
001fc0   f006
001fc2   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
001fc4   f007
001fc6   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
001fc8   f008
001fca   0efc     movlw   0xfc             	MOVLW	0xfc
001fcc   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
001fce   0eff     movlw   0xff             	MOVLW	0xff
001fd0   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
001fd2   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
001fd4   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
001fd6   ffe9
001fd8   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
001fda   fff3
001fdc   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
001fde   ece0     call    0x0075c0, 0x0call    0x0075c0, 0x0 	CALL	__gptrget4
001fe0   f03a
001fe2   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001fe4   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
001fe6   f014
001fe8   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
001fea   f015
001fec   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
001fee   f016
001ff0   d024     bra     0x00203a         	BRA	_01142_DS_
                                           _01141_DS_:
001ff2   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001ff4   0f02     addlw   0x02             	ADDLW	0x02
001ff6   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
001ff8   0e00     movlw   0x00             	MOVLW	0x00
001ffa   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001ffc   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
001ffe   0e00     movlw   0x00             	MOVLW	0x00
002000   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
002002   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
002004   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
002006   f006
002008   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
00200a   f007
00200c   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
00200e   f008
002010   0efe     movlw   0xfe             	MOVLW	0xfe
002012   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
002014   0eff     movlw   0xff             	MOVLW	0xff
002016   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
002018   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
00201a   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
00201c   ffe9
00201e   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
002020   fff3
002022   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
002024   ec61     call    0x0076c2, 0x0call    0x0076c2, 0x0 	CALL	__gptrget2
002026   f03b
002028   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
00202a   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
00202c   f018
00202e   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
002030   f013
002032   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
002034   f014
002036   6a15     clrf    0x15, 0x0        	CLRF	r0x15
002038   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01142_DS_:
00203a   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
00203c   f00f
00203e   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
002040   f010
002042   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
002044   f011
002046   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
002048   f012
                                           ;	.line	436; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 16, 0, width, pad, separator, 'a');
00204a   0e61     movlw   0x61             	MOVLW	0x61
00204c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00204e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002050   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002052   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002054   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002056   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002058   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00205a   0e10     movlw   0x10             	MOVLW	0x10
00205c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00205e   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002060   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002062   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
002064   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002066   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
002068   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00206a   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
00206c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00206e   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002070   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002072   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002074   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002076   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002078   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00207a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00207c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00207e   ec7e     call    0x0034fc, 0x0call    0x0034fc, 0x0 	CALL	_pprinti
002080   f01a
002082   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
002084   0e0e     movlw   0x0e             	MOVLW	0x0e
002086   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002088   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
00208a   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
00208c   d1b8     bra     0x0023fe         	BRA	_01117_DS_
                                           _01102_DS_:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'X' || *format == 'P')	// unsigned (0) upper ('A') hexa (16) or pointer
00208e   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002090   0a58     xorlw   0x58             	XORLW	0x58
002092   e004     bz      0x00209c         	BZ	_01104_DS_
002094   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002096   0a50     xorlw   0x50             	XORLW	0x50
002098   e001     bz      0x00209c         	BZ	_01104_DS_
00209a   d073     bra     0x002182         	BRA	_01105_DS_
                                           _01104_DS_:
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
00209c   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
00209e   e023     bz      0x0020e6         	BZ	_01143_DS_
0020a0   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0020a2   0f04     addlw   0x04             	ADDLW	0x04
0020a4   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
0020a6   0e00     movlw   0x00             	MOVLW	0x00
0020a8   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0020aa   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
0020ac   0e00     movlw   0x00             	MOVLW	0x00
0020ae   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0020b0   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
0020b2   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
0020b4   f006
0020b6   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
0020b8   f007
0020ba   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
0020bc   f008
0020be   0efc     movlw   0xfc             	MOVLW	0xfc
0020c0   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
0020c2   0eff     movlw   0xff             	MOVLW	0xff
0020c4   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
0020c6   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
0020c8   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
0020ca   ffe9
0020cc   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
0020ce   fff3
0020d0   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
0020d2   ece0     call    0x0075c0, 0x0call    0x0075c0, 0x0 	CALL	__gptrget4
0020d4   f03a
0020d6   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
0020d8   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
0020da   f014
0020dc   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
0020de   f015
0020e0   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
0020e2   f016
0020e4   d024     bra     0x00212e         	BRA	_01144_DS_
                                           _01143_DS_:
0020e6   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0020e8   0f02     addlw   0x02             	ADDLW	0x02
0020ea   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
0020ec   0e00     movlw   0x00             	MOVLW	0x00
0020ee   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0020f0   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
0020f2   0e00     movlw   0x00             	MOVLW	0x00
0020f4   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0020f6   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
0020f8   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
0020fa   f006
0020fc   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
0020fe   f007
002100   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
002102   f008
002104   0efe     movlw   0xfe             	MOVLW	0xfe
002106   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
002108   0eff     movlw   0xff             	MOVLW	0xff
00210a   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
00210c   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
00210e   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
002110   ffe9
002112   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
002114   fff3
002116   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
002118   ec61     call    0x0076c2, 0x0call    0x0076c2, 0x0 	CALL	__gptrget2
00211a   f03b
00211c   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
00211e   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
002120   f018
002122   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
002124   f013
002126   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
002128   f014
00212a   6a15     clrf    0x15, 0x0        	CLRF	r0x15
00212c   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01144_DS_:
00212e   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
002130   f00f
002132   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
002134   f010
002136   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
002138   f011
00213a   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
00213c   f012
                                           ;	.line	443; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 16, 0, width, pad, separator, 'A');
00213e   0e41     movlw   0x41             	MOVLW	0x41
002140   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002142   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002144   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002146   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002148   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
00214a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00214c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00214e   0e10     movlw   0x10             	MOVLW	0x10
002150   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002152   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002154   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002156   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
002158   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00215a   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
00215c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00215e   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
002160   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002162   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002164   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002166   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002168   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00216a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00216c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00216e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002170   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002172   ec7e     call    0x0034fc, 0x0call    0x0034fc, 0x0 	CALL	_pprinti
002174   f01a
002176   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
002178   0e0e     movlw   0x0e             	MOVLW	0x0e
00217a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00217c   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
00217e   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	444; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
002180   d13e     bra     0x0023fe         	BRA	_01117_DS_
                                           _01105_DS_:
                                           ;	.line	447; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'b')		// binary
002182   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002184   0a62     xorlw   0x62             	XORLW	0x62
002186   e001     bz      0x00218a         	BZ	_01293_DS_
002188   d073     bra     0x002270         	BRA	_01108_DS_
                                           _01293_DS_:
                                           ;	.line	449; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
00218a   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
00218c   e023     bz      0x0021d4         	BZ	_01145_DS_
00218e   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
002190   0f04     addlw   0x04             	ADDLW	0x04
002192   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
002194   0e00     movlw   0x00             	MOVLW	0x00
002196   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
002198   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
00219a   0e00     movlw   0x00             	MOVLW	0x00
00219c   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
00219e   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
0021a0   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
0021a2   f006
0021a4   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
0021a6   f007
0021a8   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
0021aa   f008
0021ac   0efc     movlw   0xfc             	MOVLW	0xfc
0021ae   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
0021b0   0eff     movlw   0xff             	MOVLW	0xff
0021b2   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
0021b4   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
0021b6   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
0021b8   ffe9
0021ba   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
0021bc   fff3
0021be   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
0021c0   ece0     call    0x0075c0, 0x0call    0x0075c0, 0x0 	CALL	__gptrget4
0021c2   f03a
0021c4   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
0021c6   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
0021c8   f014
0021ca   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
0021cc   f015
0021ce   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
0021d0   f016
0021d2   d024     bra     0x00221c         	BRA	_01146_DS_
                                           _01145_DS_:
0021d4   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0021d6   0f02     addlw   0x02             	ADDLW	0x02
0021d8   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
0021da   0e00     movlw   0x00             	MOVLW	0x00
0021dc   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0021de   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
0021e0   0e00     movlw   0x00             	MOVLW	0x00
0021e2   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0021e4   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
0021e6   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
0021e8   f006
0021ea   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
0021ec   f007
0021ee   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
0021f0   f008
0021f2   0efe     movlw   0xfe             	MOVLW	0xfe
0021f4   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
0021f6   0eff     movlw   0xff             	MOVLW	0xff
0021f8   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
0021fa   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
0021fc   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
0021fe   ffe9
002200   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
002202   fff3
002204   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
002206   ec61     call    0x0076c2, 0x0call    0x0076c2, 0x0 	CALL	__gptrget2
002208   f03b
00220a   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
00220c   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
00220e   f018
002210   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
002212   f013
002214   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
002216   f014
002218   6a15     clrf    0x15, 0x0        	CLRF	r0x15
00221a   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01146_DS_:
00221c   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
00221e   f00f
002220   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
002222   f010
002224   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
002226   f011
002228   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
00222a   f012
                                           ;	.line	450; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 2, 0, width, pad, separator, 'a');
00222c   0e61     movlw   0x61             	MOVLW	0x61
00222e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002230   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002232   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002234   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002236   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002238   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00223a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00223c   0e02     movlw   0x02             	MOVLW	0x02
00223e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002240   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002242   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002244   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
002246   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002248   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
00224a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00224c   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
00224e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002250   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002252   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002254   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002256   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002258   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00225a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00225c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00225e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002260   ec7e     call    0x0034fc, 0x0call    0x0034fc, 0x0 	CALL	_pprinti
002262   f01a
002264   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
002266   0e0e     movlw   0x0e             	MOVLW	0x0e
002268   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00226a   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
00226c   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	451; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
00226e   d0c7     bra     0x0023fe         	BRA	_01117_DS_
                                           _01108_DS_:
                                           ;	.line	454; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'o')		// octal
002270   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002272   0a6f     xorlw   0x6f             	XORLW	0x6f
002274   e001     bz      0x002278         	BZ	_01295_DS_
002276   d073     bra     0x00235e         	BRA	_01110_DS_
                                           _01295_DS_:
                                           ;	.line	456; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
002278   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
00227a   e023     bz      0x0022c2         	BZ	_01147_DS_
00227c   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
00227e   0f04     addlw   0x04             	ADDLW	0x04
002280   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
002282   0e00     movlw   0x00             	MOVLW	0x00
002284   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
002286   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
002288   0e00     movlw   0x00             	MOVLW	0x00
00228a   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
00228c   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
00228e   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
002290   f006
002292   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
002294   f007
002296   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
002298   f008
00229a   0efc     movlw   0xfc             	MOVLW	0xfc
00229c   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
00229e   0eff     movlw   0xff             	MOVLW	0xff
0022a0   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
0022a2   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
0022a4   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
0022a6   ffe9
0022a8   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
0022aa   fff3
0022ac   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
0022ae   ece0     call    0x0075c0, 0x0call    0x0075c0, 0x0 	CALL	__gptrget4
0022b0   f03a
0022b2   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
0022b4   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
0022b6   f014
0022b8   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
0022ba   f015
0022bc   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
0022be   f016
0022c0   d024     bra     0x00230a         	BRA	_01148_DS_
                                           _01147_DS_:
0022c2   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0022c4   0f02     addlw   0x02             	ADDLW	0x02
0022c6   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
0022c8   0e00     movlw   0x00             	MOVLW	0x00
0022ca   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0022cc   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
0022ce   0e00     movlw   0x00             	MOVLW	0x00
0022d0   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0022d2   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
0022d4   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
0022d6   f006
0022d8   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
0022da   f007
0022dc   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
0022de   f008
0022e0   0efe     movlw   0xfe             	MOVLW	0xfe
0022e2   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
0022e4   0eff     movlw   0xff             	MOVLW	0xff
0022e6   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
0022e8   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
0022ea   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
0022ec   ffe9
0022ee   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
0022f0   fff3
0022f2   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
0022f4   ec61     call    0x0076c2, 0x0call    0x0076c2, 0x0 	CALL	__gptrget2
0022f6   f03b
0022f8   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
0022fa   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
0022fc   f018
0022fe   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
002300   f013
002302   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
002304   f014
002306   6a15     clrf    0x15, 0x0        	CLRF	r0x15
002308   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01148_DS_:
00230a   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
00230c   f00f
00230e   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
002310   f010
002312   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
002314   f011
002316   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
002318   f012
                                           ;	.line	457; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 8, 0, width, pad, separator, 'a');
00231a   0e61     movlw   0x61             	MOVLW	0x61
00231c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00231e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002320   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002322   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002324   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002326   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002328   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00232a   0e08     movlw   0x08             	MOVLW	0x08
00232c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00232e   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002330   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002332   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
002334   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002336   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
002338   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00233a   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
00233c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00233e   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002340   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002342   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002344   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002346   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002348   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00234a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00234c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00234e   ec7e     call    0x0034fc, 0x0call    0x0034fc, 0x0 	CALL	_pprinti
002350   f01a
002352   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
002354   0e0e     movlw   0x0e             	MOVLW	0x0e
002356   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002358   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
00235a   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	458; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
00235c   d050     bra     0x0023fe         	BRA	_01117_DS_
                                           _01110_DS_:
                                           ;	.line	461; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'c') 	// ascii
00235e   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002360   0a63     xorlw   0x63             	XORLW	0x63
002362   e001     bz      0x002366         	BZ	_01297_DS_
002364   d04c     bra     0x0023fe         	BRA	_01117_DS_
                                           _01297_DS_:
                                           ;	.line	463; /home/vbasel/.icaro/v4/firmware/core/stdio.c	scr[0] = va_arg(args, u16);
002366   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
002368   0f02     addlw   0x02             	ADDLW	0x02
00236a   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
00236c   0e00     movlw   0x00             	MOVLW	0x00
00236e   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
002370   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
002372   0e00     movlw   0x00             	MOVLW	0x00
002374   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
002376   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
002378   c00c     movff   0x00c, 0x006     	MOVFF	r0x0c, r0x06
00237a   f006
00237c   c00e     movff   0x00e, 0x007     	MOVFF	r0x0e, r0x07
00237e   f007
002380   c00f     movff   0x00f, 0x008     	MOVFF	r0x0f, r0x08
002382   f008
002384   0efe     movlw   0xfe             	MOVLW	0xfe
002386   260c     addwf   0x0c, 0x1, 0x0   	ADDWF	r0x0c, F
002388   0eff     movlw   0xff             	MOVLW	0xff
00238a   220e     addwfc  0x0e, 0x1, 0x0   	ADDWFC	r0x0e, F
00238c   220f     addwfc  0x0f, 0x1, 0x0   	ADDWFC	r0x0f, F
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVWF	r0x0f
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVF	r0x0e, W
                                           ; #	MOVF	r0x0e, W
                                           ; #	MOVWF	r0x0e
                                           ; #	MOVF	r0x0e, W
                                           ; #	MOVF	r0x0c, W
                                           ; #	MOVF	r0x0c, W
                                           ; #	MOVWF	r0x0c
00238e   c00c     movff   0x00c, 0xfe9     	MOVFF	r0x0c, FSR0L
002390   ffe9
002392   c00e     movff   0x00e, 0xff3     	MOVFF	r0x0e, PRODL
002394   fff3
002396   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002398   ec61     call    0x0076c2, 0x0call    0x0076c2, 0x0 	CALL	__gptrget2
00239a   f03b
00239c   0105     movlb   0x5              	BANKSEL	_pprint_scr_1_187
00239e   6fc8     movwf   0xc8, 0x1        	MOVWF	_pprint_scr_1_187, B
                                           ; removed redundant BANKSEL
                                           ;	.line	464; /home/vbasel/.icaro/v4/firmware/core/stdio.c	scr[1] = '\0';
0023a0   6bc9     clrf    0xc9, 0x1        	CLRF	(_pprint_scr_1_187 + 1), B
                                           ;	.line	465; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprints(out, scr, width, pad);
0023a2   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
0023a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023a6   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
0023a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023aa   0e80     movlw   0x80             	MOVLW	0x80
0023ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023ae   0e05     movlw   0x05             	MOVLW	HIGH(_pprint_scr_1_187)
0023b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023b2   0ec8     movlw   0xc8             	MOVLW	LOW(_pprint_scr_1_187)
0023b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023b6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0023b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023ba   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0023bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023be   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0023c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023c2   ecab     call    0x004756, 0x0call    0x004756, 0x0 	CALL	_pprints
0023c4   f023
0023c6   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
0023c8   0e08     movlw   0x08             	MOVLW	0x08
0023ca   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0023cc   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
0023ce   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
0023d0   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
0023d2   240c     addwf   0x0c, 0x0, 0x0   	ADDWF	r0x0c, W
0023d4   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           ;	.line	466; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
0023d6   d013     bra     0x0023fe         	BRA	_01117_DS_
                                           _01113_DS_:
                                           ;	.line	473; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, *format);
0023d8   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0023da   ffe9
0023dc   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
0023de   fff3
0023e0   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0023e2   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
0023e4   f03b
                                           ; #	MOVWF	r0x0b
                                           ; #	MOVF	r0x0b, W
0023e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023e8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0023ea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023ec   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0023ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023f0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0023f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023f4   ecd8     call    0x005fb0, 0x0call    0x005fb0, 0x0 	CALL	_pprintc
0023f6   f02f
0023f8   0e04     movlw   0x04             	MOVLW	0x04
0023fa   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	474; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
0023fc   2a09     incf    0x09, 0x1, 0x0   	INCF	r0x09, F
                                           _01117_DS_:
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (; *format != 0; ++format)
0023fe   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
002400   e302     bnc     0x002406         	BNC	_01298_DS_
002402   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
002404   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01298_DS_:
002406   ef88     goto    0x001b10         	GOTO	_01130_DS_
002408   f00d
                                           _01118_DS_:
                                           ;	.line	477; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (out) **out = '\0';
00240a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00240c   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
00240e   1002     iorwf   0x02, 0x0, 0x0   	IORWF	r0x02, W
002410   e014     bz      0x00243a         	BZ	_01120_DS_
002412   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
002414   ffe9
002416   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
002418   fff3
00241a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00241c   ec00     call    0x007600, 0x0call    0x007600, 0x0 	CALL	__gptrget3
00241e   f03b
002420   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002422   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
002424   f001
002426   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
002428   f002
00242a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00242c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00242e   ffe9
002430   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
002432   fff3
002434   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002436   ec61     call    0x0078c2, 0x0call    0x0078c2, 0x0 	CALL	__gptrput1
002438   f03c
                                           _01120_DS_:
                                           ;	.line	478; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pc;
00243a   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
00243c   cfe4     movff   0xfe4, 0x019     	MOVFF	PREINC1, r0x19
00243e   f019
002440   cfe4     movff   0xfe4, 0x018     	MOVFF	PREINC1, r0x18
002442   f018
002444   cfe4     movff   0xfe4, 0x017     	MOVFF	PREINC1, r0x17
002446   f017
002448   cfe4     movff   0xfe4, 0x016     	MOVFF	PREINC1, r0x16
00244a   f016
00244c   cfe4     movff   0xfe4, 0x015     	MOVFF	PREINC1, r0x15
00244e   f015
002450   cfe4     movff   0xfe4, 0x014     	MOVFF	PREINC1, r0x14
002452   f014
002454   cfe4     movff   0xfe4, 0x013     	MOVFF	PREINC1, r0x13
002456   f013
002458   cfe4     movff   0xfe4, 0x012     	MOVFF	PREINC1, r0x12
00245a   f012
00245c   cfe4     movff   0xfe4, 0x011     	MOVFF	PREINC1, r0x11
00245e   f011
002460   cfe4     movff   0xfe4, 0x010     	MOVFF	PREINC1, r0x10
002462   f010
002464   cfe4     movff   0xfe4, 0x00f     	MOVFF	PREINC1, r0x0f
002466   f00f
002468   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
00246a   f00e
00246c   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
00246e   f00d
002470   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
002472   f00c
002474   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
002476   f00b
002478   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
00247a   f00a
00247c   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
00247e   f009
002480   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
002482   f008
002484   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
002486   f007
002488   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00248a   f006
00248c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00248e   f005
002490   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002492   f004
002494   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002496   f003
002498   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00249a   f002
00249c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00249e   f001
0024a0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0024a2   f000
0024a4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0024a6   ffd9
0024a8   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pprintfl	code
                                           _pprintfl:
                                           ;	.line	178; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static u8 pprintfl(u8 **out, float value, u8 width, u8 pad, u8 separator, u8 precision)
0024aa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0024ac   ffe5
0024ae   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0024b0   ffd9
0024b2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0024b4   ffe5
0024b6   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0024b8   ffe5
0024ba   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0024bc   ffe5
0024be   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0024c0   ffe5
0024c2   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0024c4   ffe5
0024c6   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0024c8   ffe5
0024ca   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
0024cc   ffe5
0024ce   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
0024d0   ffe5
0024d2   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
0024d4   ffe5
0024d6   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
0024d8   ffe5
0024da   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
0024dc   ffe5
0024de   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
0024e0   ffe5
0024e2   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
0024e4   ffe5
0024e6   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
0024e8   ffe5
0024ea   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
0024ec   ffe5
0024ee   c00f     movff   0x00f, 0xfe5     	MOVFF	r0x0f, POSTDEC1
0024f0   ffe5
0024f2   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
0024f4   ffe5
0024f6   c011     movff   0x011, 0xfe5     	MOVFF	r0x11, POSTDEC1
0024f8   ffe5
0024fa   c012     movff   0x012, 0xfe5     	MOVFF	r0x12, POSTDEC1
0024fc   ffe5
0024fe   c013     movff   0x013, 0xfe5     	MOVFF	r0x13, POSTDEC1
002500   ffe5
002502   c014     movff   0x014, 0xfe5     	MOVFF	r0x14, POSTDEC1
002504   ffe5
002506   c015     movff   0x015, 0xfe5     	MOVFF	r0x15, POSTDEC1
002508   ffe5
00250a   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
00250c   ffe5
00250e   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
002510   ffe5
002512   c018     movff   0x018, 0xfe5     	MOVFF	r0x18, POSTDEC1
002514   ffe5
002516   c019     movff   0x019, 0xfe5     	MOVFF	r0x19, POSTDEC1
002518   ffe5
00251a   c01a     movff   0x01a, 0xfe5     	MOVFF	r0x1a, POSTDEC1
00251c   ffe5
00251e   c01b     movff   0x01b, 0xfe5     	MOVFF	r0x1b, POSTDEC1
002520   ffe5
002522   c01c     movff   0x01c, 0xfe5     	MOVFF	r0x1c, POSTDEC1
002524   ffe5
002526   c01d     movff   0x01d, 0xfe5     	MOVFF	r0x1d, POSTDEC1
002528   ffe5
00252a   c01e     movff   0x01e, 0xfe5     	MOVFF	r0x1e, POSTDEC1
00252c   ffe5
00252e   c01f     movff   0x01f, 0xfe5     	MOVFF	r0x1f, POSTDEC1
002530   ffe5
002532   c020     movff   0x020, 0xfe5     	MOVFF	r0x20, POSTDEC1
002534   ffe5
002536   0e02     movlw   0x02             	MOVLW	0x02
002538   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00253a   f000
00253c   0e03     movlw   0x03             	MOVLW	0x03
00253e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002540   f001
002542   0e04     movlw   0x04             	MOVLW	0x04
002544   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
002546   f002
002548   0e05     movlw   0x05             	MOVLW	0x05
00254a   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
00254c   f003
00254e   0e06     movlw   0x06             	MOVLW	0x06
002550   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
002552   f004
002554   0e07     movlw   0x07             	MOVLW	0x07
002556   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
002558   f005
00255a   0e08     movlw   0x08             	MOVLW	0x08
00255c   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
00255e   f006
002560   0e09     movlw   0x09             	MOVLW	0x09
002562   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
002564   f007
002566   0e0a     movlw   0x0a             	MOVLW	0x0a
002568   cfdb     movff   0xfdb, 0x008     	MOVFF	PLUSW2, r0x08
00256a   f008
00256c   0e0c     movlw   0x0c             	MOVLW	0x0c
00256e   cfdb     movff   0xfdb, 0x009     	MOVFF	PLUSW2, r0x09
002570   f009
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u32 int_part  = 0;
002572   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
002574   6a0b     clrf    0x0b, 0x0        	CLRF	r0x0b
002576   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
002578   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
                                           ;	.line	188; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u32 frac_part = 0;
00257a   6a0e     clrf    0x0e, 0x0        	CLRF	r0x0e
00257c   6a0f     clrf    0x0f, 0x0        	CLRF	r0x0f
00257e   6a10     clrf    0x10, 0x0        	CLRF	r0x10
002580   6a11     clrf    0x11, 0x0        	CLRF	r0x11
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 buffer[PRINTF_BUF_LEN], *string = buffer;
002582   0e05     movlw   0x05             	MOVLW	HIGH(_pprintfl_buffer_1_172)
002584   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
002586   0e48     movlw   0x48             	MOVLW	LOW(_pprintfl_buffer_1_172)
002588   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
00258a   0e80     movlw   0x80             	MOVLW	0x80
00258c   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 tmp[PRINTF_BUF_LEN], *s = tmp;
00258e   0e05     movlw   0x05             	MOVLW	HIGH(_pprintfl_tmp_1_172)
002590   6e16     movwf   0x16, 0x0        	MOVWF	r0x16
002592   0e54     movlw   0x54             	MOVLW	LOW(_pprintfl_tmp_1_172)
002594   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
002596   0e80     movlw   0x80             	MOVLW	0x80
002598   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 count = 0, m, t;
00259a   6a18     clrf    0x18, 0x0        	CLRF	r0x18
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 length = PRINTF_BUF_LEN - 1;
00259c   0e0b     movlw   0x0b             	MOVLW	0x0b
00259e   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/stdio.c	helper.f = value;
0025a0   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0025a2   0105     movlb   0x5              	BANKSEL	_pprintfl_helper_1_172
0025a4   6f76     movwf   0x76, 0x1        	MOVWF	_pprintfl_helper_1_172, B
0025a6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
0025a8   6f77     movwf   0x77, 0x1        	MOVWF	(_pprintfl_helper_1_172 + 1), B
0025aa   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
                                           ; removed redundant BANKSEL
0025ac   6f78     movwf   0x78, 0x1        	MOVWF	(_pprintfl_helper_1_172 + 2), B
0025ae   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
                                           ; removed redundant BANKSEL
0025b0   6f79     movwf   0x79, 0x1        	MOVWF	(_pprintfl_helper_1_172 + 3), B
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (helper.l < 0)
0025b2   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
                                           ; removed redundant BANKSEL
0025b4   af79     btfss   0x79, 0x7, 0x1   	BTFSS	(_pprintfl_helper_1_172 + 3), 7, B
0025b6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0025b8   e323     bnc     0x002600         	BNC	_00949_DS_
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (width && (pad & PAD_ZERO))
0025ba   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
0025bc   e012     bz      0x0025e2         	BZ	_00945_DS_
0025be   a208     btfss   0x08, 0x1, 0x0   	BTFSS	r0x08, 1
0025c0   d010     bra     0x0025e2         	BRA	_00945_DS_
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, '-');
0025c2   0e2d     movlw   0x2d             	MOVLW	0x2d
0025c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025c6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0025c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025ca   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0025cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025ce   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0025d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025d2   ecd8     call    0x005fb0, 0x0call    0x005fb0, 0x0 	CALL	_pprintc
0025d4   f02f
0025d6   0e04     movlw   0x04             	MOVLW	0x04
0025d8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	203; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++count;
0025da   0e01     movlw   0x01             	MOVLW	0x01
0025dc   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/core/stdio.c	--width;
0025de   0607     decf    0x07, 0x1, 0x0   	DECF	r0x07, F
0025e0   d00f     bra     0x002600         	BRA	_00949_DS_
                                           _00945_DS_:
                                           ;	.line	208; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = '-';
0025e2   0e2d     movlw   0x2d             	MOVLW	0x2d
0025e4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025e6   c012     movff   0x012, 0xfe9     	MOVFF	r0x12, FSR0L
0025e8   ffe9
0025ea   c013     movff   0x013, 0xff3     	MOVFF	r0x13, PRODL
0025ec   fff3
0025ee   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
0025f0   ec61     call    0x0078c2, 0x0call    0x0078c2, 0x0 	CALL	__gptrput1
0025f2   f03c
0025f4   2a12     incf    0x12, 0x1, 0x0   	INCF	r0x12, F
0025f6   e302     bnc     0x0025fc         	BNC	_01038_DS_
0025f8   4a13     infsnz  0x13, 0x1, 0x0   	INFSNZ	r0x13, F
0025fa   2a14     incf    0x14, 0x1, 0x0   	INCF	r0x14, F
                                           _01038_DS_:
                                           ;	.line	209; /home/vbasel/.icaro/v4/firmware/core/stdio.c	length--;
0025fc   0e0a     movlw   0x0a             	MOVLW	0x0a
0025fe   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
                                           _00949_DS_:
002600   0105     movlb   0x5              	BANKSEL	(_pprintfl_helper_1_172 + 2)
                                           ;	.line	215; /home/vbasel/.icaro/v4/firmware/core/stdio.c	exponent = ((helper.l >> 23) & 0xFF) - 127;	
002602   3578     rlcf    0x78, 0x0, 0x1   	RLCF	(_pprintfl_helper_1_172 + 2), W, B
                                           ; removed redundant BANKSEL
002604   3579     rlcf    0x79, 0x0, 0x1   	RLCF	(_pprintfl_helper_1_172 + 3), W, B
002606   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002608   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00260a   0e81     movlw   0x81             	MOVLW	0x81
00260c   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
                                           ; removed redundant BANKSEL
                                           ;	.line	218; /home/vbasel/.icaro/v4/firmware/core/stdio.c	mantissa = (helper.l & 0x7FFFFF) | 0x800000;
00260e   5176     movf    0x76, 0x0, 0x1   	MOVF	_pprintfl_helper_1_172, W, B
002610   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; removed redundant BANKSEL
002612   5177     movf    0x77, 0x0, 0x1   	MOVF	(_pprintfl_helper_1_172 + 1), W, B
002614   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002616   0e7f     movlw   0x7f             	MOVLW	0x7f
                                           ; removed redundant BANKSEL
002618   1578     andwf   0x78, 0x0, 0x1   	ANDWF	(_pprintfl_helper_1_172 + 2), W, B
00261a   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
00261c   6a1a     clrf    0x1a, 0x0        	CLRF	r0x1a
00261e   8e06     bsf     0x06, 0x7, 0x0   	BSF	r0x06, 7
                                           ;	.line	231; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (exponent >= 31)
002620   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002622   0f80     addlw   0x80             	ADDLW	0x80
002624   0f61     addlw   0x61             	ADDLW	0x61
002626   e321     bnc     0x00266a         	BNC	_00960_DS_
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[0] = '+';
002628   0e2b     movlw   0x2b             	MOVLW	0x2b
00262a   0105     movlb   0x5              	BANKSEL	_pprintfl_buffer_1_172
00262c   6f48     movwf   0x48, 0x1        	MOVWF	_pprintfl_buffer_1_172, B
                                           ;	.line	234; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[1] = 'i';
00262e   0e69     movlw   0x69             	MOVLW	0x69
                                           ; removed redundant BANKSEL
002630   6f49     movwf   0x49, 0x1        	MOVWF	(_pprintfl_buffer_1_172 + 1), B
                                           ;	.line	235; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[2] = 'n';
002632   0e6e     movlw   0x6e             	MOVLW	0x6e
                                           ; removed redundant BANKSEL
002634   6f4a     movwf   0x4a, 0x1        	MOVWF	(_pprintfl_buffer_1_172 + 2), B
                                           ;	.line	236; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[3] = 'f';
002636   0e66     movlw   0x66             	MOVLW	0x66
                                           ; removed redundant BANKSEL
002638   6f4b     movwf   0x4b, 0x1        	MOVWF	(_pprintfl_buffer_1_172 + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[4] = '\0';
00263a   6b4c     clrf    0x4c, 0x1        	CLRF	(_pprintfl_buffer_1_172 + 4), B
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprints(out, buffer, width, pad);
00263c   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
00263e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002640   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
002642   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002644   0e80     movlw   0x80             	MOVLW	0x80
002646   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002648   0e05     movlw   0x05             	MOVLW	HIGH(_pprintfl_buffer_1_172)
00264a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00264c   0e48     movlw   0x48             	MOVLW	LOW(_pprintfl_buffer_1_172)
00264e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002650   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002652   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002654   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002656   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002658   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00265a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00265c   ecab     call    0x004756, 0x0call    0x004756, 0x0 	CALL	_pprints
00265e   f023
002660   6e1b     movwf   0x1b, 0x0        	MOVWF	r0x1b
002662   0e08     movlw   0x08             	MOVLW	0x08
002664   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002666   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
002668   d1bb     bra     0x0029e0         	BRA	_00981_DS_
                                           _00960_DS_:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/core/stdio.c	else if (exponent < -23)
00266a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00266c   0f80     addlw   0x80             	ADDLW	0x80
00266e   0f97     addlw   0x97             	ADDLW	0x97
002670   e209     bc      0x002684         	BC	_00957_DS_
                                           ;	.line	251; /home/vbasel/.icaro/v4/firmware/core/stdio.c	int_part  = 0;
002672   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
002674   6a0b     clrf    0x0b, 0x0        	CLRF	r0x0b
002676   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
002678   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
                                           ;	.line	252; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part = 0;
00267a   6a0e     clrf    0x0e, 0x0        	CLRF	r0x0e
00267c   6a0f     clrf    0x0f, 0x0        	CLRF	r0x0f
00267e   6a10     clrf    0x10, 0x0        	CLRF	r0x10
002680   6a11     clrf    0x11, 0x0        	CLRF	r0x11
002682   d09d     bra     0x0027be         	BRA	_00961_DS_
                                           _00957_DS_:
                                           ;	.line	255; /home/vbasel/.icaro/v4/firmware/core/stdio.c	else if (exponent >= 23)
002684   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002686   0f80     addlw   0x80             	ADDLW	0x80
002688   0f69     addlw   0x69             	ADDLW	0x69
00268a   e325     bnc     0x0026d6         	BNC	_00954_DS_
                                           ;	.line	257; /home/vbasel/.icaro/v4/firmware/core/stdio.c	int_part = mantissa << (exponent - 23);
00268c   c003     movff   0x003, 0x01b     	MOVFF	r0x03, r0x1b
00268e   f01b
002690   6a1c     clrf    0x1c, 0x0        	CLRF	r0x1c
002692   be03     btfsc   0x03, 0x7, 0x0   	BTFSC	r0x03, 7
002694   681c     setf    0x1c, 0x0        	SETF	r0x1c
002696   0ee9     movlw   0xe9             	MOVLW	0xe9
002698   261b     addwf   0x1b, 0x1, 0x0   	ADDWF	r0x1b, F
00269a   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
00269c   061c     decf    0x1c, 0x1, 0x0   	DECF	r0x1c, F
00269e   c004     movff   0x004, 0x00a     	MOVFF	r0x04, r0x0a
0026a0   f00a
0026a2   c005     movff   0x005, 0x00b     	MOVFF	r0x05, r0x0b
0026a4   f00b
0026a6   c006     movff   0x006, 0x00c     	MOVFF	r0x06, r0x0c
0026a8   f00c
0026aa   c01a     movff   0x01a, 0x00d     	MOVFF	r0x1a, r0x0d
0026ac   f00d
0026ae   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
0026b0   e011     bz      0x0026d4         	BZ	_01045_DS_
0026b2   e609     bn      0x0026c6         	BN	_01048_DS_
0026b4   6ce8     negf    0xe8, 0x0        	NEGF	WREG
0026b6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01046_DS_:
0026b8   360a     rlcf    0x0a, 0x1, 0x0   	RLCF	r0x0a, F
0026ba   360b     rlcf    0x0b, 0x1, 0x0   	RLCF	r0x0b, F
0026bc   360c     rlcf    0x0c, 0x1, 0x0   	RLCF	r0x0c, F
0026be   360d     rlcf    0x0d, 0x1, 0x0   	RLCF	r0x0d, F
0026c0   0f01     addlw   0x01             	ADDLW	0x01
0026c2   e3fa     bnc     0x0026b8         	BNC	_01046_DS_
0026c4   d07c     bra     0x0027be         	BRA	_00961_DS_
                                           _01048_DS_:
0026c6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01047_DS_:
0026c8   320d     rrcf    0x0d, 0x1, 0x0   	RRCF	r0x0d, F
0026ca   320c     rrcf    0x0c, 0x1, 0x0   	RRCF	r0x0c, F
0026cc   320b     rrcf    0x0b, 0x1, 0x0   	RRCF	r0x0b, F
0026ce   320a     rrcf    0x0a, 0x1, 0x0   	RRCF	r0x0a, F
0026d0   0f01     addlw   0x01             	ADDLW	0x01
0026d2   e3fa     bnc     0x0026c8         	BNC	_01047_DS_
                                           _01045_DS_:
0026d4   d074     bra     0x0027be         	BRA	_00961_DS_
                                           _00954_DS_:
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/core/stdio.c	else if (exponent >= 0) 
0026d6   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0026d8   ae03     btfss   0x03, 0x7, 0x0   	BTFSS	r0x03, 7
0026da   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0026dc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0026de   d04a     bra     0x002774         	BRA	_00951_DS_
                                           ;	.line	262; /home/vbasel/.icaro/v4/firmware/core/stdio.c	int_part = mantissa >> (23 - exponent);
0026e0   c003     movff   0x003, 0x01b     	MOVFF	r0x03, r0x1b
0026e2   f01b
0026e4   6a1c     clrf    0x1c, 0x0        	CLRF	r0x1c
0026e6   be03     btfsc   0x03, 0x7, 0x0   	BTFSC	r0x03, 7
0026e8   681c     setf    0x1c, 0x0        	SETF	r0x1c
0026ea   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
0026ec   0817     sublw   0x17             	SUBLW	0x17
0026ee   6e1d     movwf   0x1d, 0x0        	MOVWF	r0x1d
0026f0   0e00     movlw   0x00             	MOVLW	0x00
0026f2   541c     subfwb  0x1c, 0x0, 0x0   	SUBFWB	r0x1c, W
0026f4   c004     movff   0x004, 0x00a     	MOVFF	r0x04, r0x0a
0026f6   f00a
0026f8   c005     movff   0x005, 0x00b     	MOVFF	r0x05, r0x0b
0026fa   f00b
0026fc   c006     movff   0x006, 0x00c     	MOVFF	r0x06, r0x0c
0026fe   f00c
002700   c01a     movff   0x01a, 0x00d     	MOVFF	r0x1a, r0x0d
002702   f00d
002704   501d     movf    0x1d, 0x0, 0x0   	MOVF	r0x1d, W
002706   e011     bz      0x00272a         	BZ	_01049_DS_
002708   e609     bn      0x00271c         	BN	_01052_DS_
00270a   6ce8     negf    0xe8, 0x0        	NEGF	WREG
00270c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01050_DS_:
00270e   320d     rrcf    0x0d, 0x1, 0x0   	RRCF	r0x0d, F
002710   320c     rrcf    0x0c, 0x1, 0x0   	RRCF	r0x0c, F
002712   320b     rrcf    0x0b, 0x1, 0x0   	RRCF	r0x0b, F
002714   320a     rrcf    0x0a, 0x1, 0x0   	RRCF	r0x0a, F
002716   0f01     addlw   0x01             	ADDLW	0x01
002718   e3fa     bnc     0x00270e         	BNC	_01050_DS_
00271a   d007     bra     0x00272a         	BRA	_01049_DS_
                                           _01052_DS_:
00271c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01051_DS_:
00271e   360a     rlcf    0x0a, 0x1, 0x0   	RLCF	r0x0a, F
002720   360b     rlcf    0x0b, 0x1, 0x0   	RLCF	r0x0b, F
002722   360c     rlcf    0x0c, 0x1, 0x0   	RLCF	r0x0c, F
002724   360d     rlcf    0x0d, 0x1, 0x0   	RLCF	r0x0d, F
002726   0f01     addlw   0x01             	ADDLW	0x01
002728   e3fa     bnc     0x00271e         	BNC	_01051_DS_
                                           _01049_DS_:
                                           ;	.line	263; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part = (mantissa << (exponent + 1)) & 0xFFFFFF; // mfh
00272a   4a1b     infsnz  0x1b, 0x1, 0x0   	INFSNZ	r0x1b, F
00272c   2a1c     incf    0x1c, 0x1, 0x0   	INCF	r0x1c, F
00272e   c004     movff   0x004, 0x01d     	MOVFF	r0x04, r0x1d
002730   f01d
002732   c005     movff   0x005, 0x01e     	MOVFF	r0x05, r0x1e
002734   f01e
002736   c006     movff   0x006, 0x01f     	MOVFF	r0x06, r0x1f
002738   f01f
00273a   c01a     movff   0x01a, 0x020     	MOVFF	r0x1a, r0x20
00273c   f020
00273e   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
002740   e011     bz      0x002764         	BZ	_01053_DS_
002742   e609     bn      0x002756         	BN	_01056_DS_
002744   6ce8     negf    0xe8, 0x0        	NEGF	WREG
002746   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01054_DS_:
002748   361d     rlcf    0x1d, 0x1, 0x0   	RLCF	r0x1d, F
00274a   361e     rlcf    0x1e, 0x1, 0x0   	RLCF	r0x1e, F
00274c   361f     rlcf    0x1f, 0x1, 0x0   	RLCF	r0x1f, F
00274e   3620     rlcf    0x20, 0x1, 0x0   	RLCF	r0x20, F
002750   0f01     addlw   0x01             	ADDLW	0x01
002752   e3fa     bnc     0x002748         	BNC	_01054_DS_
002754   d007     bra     0x002764         	BRA	_01053_DS_
                                           _01056_DS_:
002756   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01055_DS_:
002758   3220     rrcf    0x20, 0x1, 0x0   	RRCF	r0x20, F
00275a   321f     rrcf    0x1f, 0x1, 0x0   	RRCF	r0x1f, F
00275c   321e     rrcf    0x1e, 0x1, 0x0   	RRCF	r0x1e, F
00275e   321d     rrcf    0x1d, 0x1, 0x0   	RRCF	r0x1d, F
002760   0f01     addlw   0x01             	ADDLW	0x01
002762   e3fa     bnc     0x002758         	BNC	_01055_DS_
                                           _01053_DS_:
002764   501d     movf    0x1d, 0x0, 0x0   	MOVF	r0x1d, W
002766   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
002768   501e     movf    0x1e, 0x0, 0x0   	MOVF	r0x1e, W
00276a   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
00276c   501f     movf    0x1f, 0x0, 0x0   	MOVF	r0x1f, W
00276e   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
002770   6a11     clrf    0x11, 0x0        	CLRF	r0x11
002772   d025     bra     0x0027be         	BRA	_00961_DS_
                                           _00951_DS_:
                                           ;	.line	267; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part = (mantissa & 0xFFFFFF) >> -(exponent + 1);
002774   6a1a     clrf    0x1a, 0x0        	CLRF	r0x1a
002776   6a1b     clrf    0x1b, 0x0        	CLRF	r0x1b
002778   be03     btfsc   0x03, 0x7, 0x0   	BTFSC	r0x03, 7
00277a   681b     setf    0x1b, 0x0        	SETF	r0x1b
00277c   4a03     infsnz  0x03, 0x1, 0x0   	INFSNZ	r0x03, F
00277e   2a1b     incf    0x1b, 0x1, 0x0   	INCF	r0x1b, F
002780   1e1b     comf    0x1b, 0x1, 0x0   	COMF	r0x1b, F
002782   6c03     negf    0x03, 0x0        	NEGF	r0x03
002784   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
002786   2a1b     incf    0x1b, 0x1, 0x0   	INCF	r0x1b, F
002788   c004     movff   0x004, 0x00e     	MOVFF	r0x04, r0x0e
00278a   f00e
00278c   c005     movff   0x005, 0x00f     	MOVFF	r0x05, r0x0f
00278e   f00f
002790   c006     movff   0x006, 0x010     	MOVFF	r0x06, r0x10
002792   f010
002794   c01a     movff   0x01a, 0x011     	MOVFF	r0x1a, r0x11
002796   f011
002798   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00279a   e011     bz      0x0027be         	BZ	_00961_DS_
00279c   e609     bn      0x0027b0         	BN	_01063_DS_
00279e   6ce8     negf    0xe8, 0x0        	NEGF	WREG
0027a0   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01061_DS_:
0027a2   3211     rrcf    0x11, 0x1, 0x0   	RRCF	r0x11, F
0027a4   3210     rrcf    0x10, 0x1, 0x0   	RRCF	r0x10, F
0027a6   320f     rrcf    0x0f, 0x1, 0x0   	RRCF	r0x0f, F
0027a8   320e     rrcf    0x0e, 0x1, 0x0   	RRCF	r0x0e, F
0027aa   0f01     addlw   0x01             	ADDLW	0x01
0027ac   e3fa     bnc     0x0027a2         	BNC	_01061_DS_
0027ae   d007     bra     0x0027be         	BRA	_00961_DS_
                                           _01063_DS_:
0027b0   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01062_DS_:
0027b2   360e     rlcf    0x0e, 0x1, 0x0   	RLCF	r0x0e, F
0027b4   360f     rlcf    0x0f, 0x1, 0x0   	RLCF	r0x0f, F
0027b6   3610     rlcf    0x10, 0x1, 0x0   	RLCF	r0x10, F
0027b8   3611     rlcf    0x11, 0x1, 0x0   	RLCF	r0x11, F
0027ba   0f01     addlw   0x01             	ADDLW	0x01
0027bc   e3fa     bnc     0x0027b2         	BNC	_01062_DS_
                                           _00961_DS_:
                                           ;	.line	270; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (int_part == 0)
0027be   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
0027c0   100b     iorwf   0x0b, 0x0, 0x0   	IORWF	r0x0b, W
0027c2   100c     iorwf   0x0c, 0x0, 0x0   	IORWF	r0x0c, W
0027c4   100d     iorwf   0x0d, 0x0, 0x0   	IORWF	r0x0d, W
0027c6   e10f     bnz     0x0027e6         	BNZ	_00992_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = '0';
0027c8   0e30     movlw   0x30             	MOVLW	0x30
0027ca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0027cc   c012     movff   0x012, 0xfe9     	MOVFF	r0x12, FSR0L
0027ce   ffe9
0027d0   c013     movff   0x013, 0xff3     	MOVFF	r0x13, PRODL
0027d2   fff3
0027d4   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
0027d6   ec61     call    0x0078c2, 0x0call    0x0078c2, 0x0 	CALL	__gptrput1
0027d8   f03c
0027da   2a12     incf    0x12, 0x1, 0x0   	INCF	r0x12, F
0027dc   e302     bnc     0x0027e2         	BNC	_01064_DS_
0027de   4a13     infsnz  0x13, 0x1, 0x0   	INFSNZ	r0x13, F
0027e0   2a14     incf    0x14, 0x1, 0x0   	INCF	r0x14, F
                                           _01064_DS_:
                                           ;	.line	273; /home/vbasel/.icaro/v4/firmware/core/stdio.c	length--;
0027e2   0619     decf    0x19, 0x1, 0x0   	DECF	r0x19, F
0027e4   d078     bra     0x0028d6         	BRA	_00970_DS_
                                           _00992_DS_:
                                           ;	.line	279; /home/vbasel/.icaro/v4/firmware/core/stdio.c	while (int_part)
0027e6   c015     movff   0x015, 0x003     	MOVFF	r0x15, r0x03
0027e8   f003
0027ea   c016     movff   0x016, 0x004     	MOVFF	r0x16, r0x04
0027ec   f004
0027ee   c017     movff   0x017, 0x005     	MOVFF	r0x17, r0x05
0027f0   f005
0027f2   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0027f4   c019     movff   0x019, 0x015     	MOVFF	r0x19, r0x15
0027f6   f015
                                           _00962_DS_:
0027f8   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
0027fa   100b     iorwf   0x0b, 0x0, 0x0   	IORWF	r0x0b, W
0027fc   100c     iorwf   0x0c, 0x0, 0x0   	IORWF	r0x0c, W
0027fe   100d     iorwf   0x0d, 0x0, 0x0   	IORWF	r0x0d, W
002800   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
002802   d03c     bra     0x00287c         	BRA	_01000_DS_
                                           ;	.line	281; /home/vbasel/.icaro/v4/firmware/core/stdio.c	t = int_part % 10;		// decimal base
002804   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002806   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002808   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00280a   0e0a     movlw   0x0a             	MOVLW	0x0a
00280c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00280e   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002810   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002812   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002814   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002816   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002818   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00281a   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
00281c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00281e   ec75     call    0x0058ea, 0x0call    0x0058ea, 0x0 	CALL	__modulong
002820   f02c
002822   6e16     movwf   0x16, 0x0        	MOVWF	r0x16
002824   0e08     movlw   0x08             	MOVLW	0x08
002826   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	282; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*s++ = t + '0';
002828   0e30     movlw   0x30             	MOVLW	0x30
00282a   2616     addwf   0x16, 0x1, 0x0   	ADDWF	r0x16, F
00282c   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
00282e   ffe5
002830   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002832   ffe9
002834   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
002836   fff3
002838   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00283a   ec61     call    0x0078c2, 0x0call    0x0078c2, 0x0 	CALL	__gptrput1
00283c   f03c
00283e   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
002840   e302     bnc     0x002846         	BNC	_01065_DS_
002842   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
002844   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01065_DS_:
                                           ;	.line	283; /home/vbasel/.icaro/v4/firmware/core/stdio.c	int_part /= 10;
002846   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002848   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00284a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00284c   0e0a     movlw   0x0a             	MOVLW	0x0a
00284e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002850   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002852   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002854   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002856   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002858   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
00285a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00285c   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
00285e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002860   eca8     call    0x005b50, 0x0call    0x005b50, 0x0 	CALL	__divulong
002862   f02d
002864   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
002866   cff3     movff   0xff3, 0x00b     	MOVFF	PRODL, r0x0b
002868   f00b
00286a   cff4     movff   0xff4, 0x00c     	MOVFF	PRODH, r0x0c
00286c   f00c
00286e   cfe9     movff   0xfe9, 0x00d     	MOVFF	FSR0L, r0x0d
002870   f00d
002872   0e08     movlw   0x08             	MOVLW	0x08
002874   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/core/stdio.c	m++;					// string's length counter
002876   2a06     incf    0x06, 0x1, 0x0   	INCF	r0x06, F
                                           ;	.line	285; /home/vbasel/.icaro/v4/firmware/core/stdio.c	length--;
002878   0615     decf    0x15, 0x1, 0x0   	DECF	r0x15, F
00287a   d7be     bra     0x0027f8         	BRA	_00962_DS_
                                           _01000_DS_:
                                           ;	.line	288; /home/vbasel/.icaro/v4/firmware/core/stdio.c	while (m--)
00287c   c015     movff   0x015, 0x019     	MOVFF	r0x15, r0x19
00287e   f019
002880   c012     movff   0x012, 0x00a     	MOVFF	r0x12, r0x0a
002882   f00a
002884   c013     movff   0x013, 0x00b     	MOVFF	r0x13, r0x0b
002886   f00b
002888   c014     movff   0x014, 0x00c     	MOVFF	r0x14, r0x0c
00288a   f00c
                                           _00965_DS_:
00288c   c006     movff   0x006, 0x00d     	MOVFF	r0x06, r0x0d
00288e   f00d
002890   0606     decf    0x06, 0x1, 0x0   	DECF	r0x06, F
002892   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002894   e01a     bz      0x0028ca         	BZ	_01001_DS_
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = *--s;
002896   0eff     movlw   0xff             	MOVLW	0xff
002898   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
00289a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00289c   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
00289e   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0028a0   ffe9
0028a2   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
0028a4   fff3
0028a6   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0028a8   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
0028aa   f03b
0028ac   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
0028ae   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
0028b0   ffe5
0028b2   c00a     movff   0x00a, 0xfe9     	MOVFF	r0x0a, FSR0L
0028b4   ffe9
0028b6   c00b     movff   0x00b, 0xff3     	MOVFF	r0x0b, PRODL
0028b8   fff3
0028ba   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
0028bc   ec61     call    0x0078c2, 0x0call    0x0078c2, 0x0 	CALL	__gptrput1
0028be   f03c
0028c0   2a0a     incf    0x0a, 0x1, 0x0   	INCF	r0x0a, F
0028c2   e3e4     bnc     0x00288c         	BNC	_00965_DS_
0028c4   4a0b     infsnz  0x0b, 0x1, 0x0   	INFSNZ	r0x0b, F
0028c6   2a0c     incf    0x0c, 0x1, 0x0   	INCF	r0x0c, F
                                           _01066_DS_:
0028c8   d7e1     bra     0x00288c         	BRA	_00965_DS_
                                           _01001_DS_:
0028ca   c00a     movff   0x00a, 0x012     	MOVFF	r0x0a, r0x12
0028cc   f012
0028ce   c00b     movff   0x00b, 0x013     	MOVFF	r0x0b, r0x13
0028d0   f013
0028d2   c00c     movff   0x00c, 0x014     	MOVFF	r0x0c, r0x14
0028d4   f014
                                           _00970_DS_:
                                           ;	.line	303; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (precision > 6)
0028d6   0e07     movlw   0x07             	MOVLW	0x07
0028d8   5c09     subwf   0x09, 0x0, 0x0   	SUBWF	r0x09, W
0028da   e302     bnc     0x0028e0         	BNC	_00972_DS_
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision = 6;
0028dc   0e06     movlw   0x06             	MOVLW	0x06
0028de   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           _00972_DS_:
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (precision > length)
0028e0   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
                                           ; #	SUBWF	r0x19, W
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00974_DS_
                                           ; #	MOVFF	r0x19, r0x09
                                           ; #	MOVLW	0x01
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision = length;
0028e2   5c19     subwf   0x19, 0x0, 0x0   	SUBWF	r0x19, W
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (precision >= 1)
0028e4   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
0028e6   c019     movff   0x019, 0x009     	MOVFF	r0x19, r0x09
0028e8   f009
0028ea   0e01     movlw   0x01             	MOVLW	0x01
0028ec   5c09     subwf   0x09, 0x0, 0x0   	SUBWF	r0x09, W
0028ee   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
0028f0   d057     bra     0x0029a0         	BRA	_00977_DS_
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = '.';
0028f2   0e2e     movlw   0x2e             	MOVLW	0x2e
0028f4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0028f6   c012     movff   0x012, 0xfe9     	MOVFF	r0x12, FSR0L
0028f8   ffe9
0028fa   c013     movff   0x013, 0xff3     	MOVFF	r0x13, PRODL
0028fc   fff3
0028fe   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
002900   ec61     call    0x0078c2, 0x0call    0x0078c2, 0x0 	CALL	__gptrput1
002902   f03c
002904   2a12     incf    0x12, 0x1, 0x0   	INCF	r0x12, F
002906   e302     bnc     0x00290c         	BNC	_01070_DS_
002908   4a13     infsnz  0x13, 0x1, 0x0   	INFSNZ	r0x13, F
00290a   2a14     incf    0x14, 0x1, 0x0   	INCF	r0x14, F
                                           _01070_DS_:
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (m = 0; m < precision; m++)
00290c   c012     movff   0x012, 0x003     	MOVFF	r0x12, r0x03
00290e   f003
002910   c013     movff   0x013, 0x004     	MOVFF	r0x13, r0x04
002912   f004
002914   c014     movff   0x014, 0x005     	MOVFF	r0x14, r0x05
002916   f005
002918   6a06     clrf    0x06, 0x0        	CLRF	r0x06
                                           _00979_DS_:
00291a   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
00291c   5c06     subwf   0x06, 0x0, 0x0   	SUBWF	r0x06, W
00291e   e23a     bc      0x002994         	BC	_01002_DS_
                                           ;	.line	320; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part = (frac_part << 3) + (frac_part << 1); 
002920   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002922   240e     addwf   0x0e, 0x0, 0x0   	ADDWF	r0x0e, W
002924   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
002926   340f     rlcf    0x0f, 0x0, 0x0   	RLCF	r0x0f, W
002928   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
00292a   3410     rlcf    0x10, 0x0, 0x0   	RLCF	r0x10, W
00292c   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
00292e   3411     rlcf    0x11, 0x0, 0x0   	RLCF	r0x11, W
002930   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
002932   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
002934   260a     addwf   0x0a, 0x1, 0x0   	ADDWF	r0x0a, F
002936   360b     rlcf    0x0b, 0x1, 0x0   	RLCF	r0x0b, F
002938   360c     rlcf    0x0c, 0x1, 0x0   	RLCF	r0x0c, F
00293a   360d     rlcf    0x0d, 0x1, 0x0   	RLCF	r0x0d, F
00293c   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
00293e   260a     addwf   0x0a, 0x1, 0x0   	ADDWF	r0x0a, F
002940   360b     rlcf    0x0b, 0x1, 0x0   	RLCF	r0x0b, F
002942   360c     rlcf    0x0c, 0x1, 0x0   	RLCF	r0x0c, F
002944   360d     rlcf    0x0d, 0x1, 0x0   	RLCF	r0x0d, F
002946   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002948   240e     addwf   0x0e, 0x0, 0x0   	ADDWF	r0x0e, W
00294a   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
00294c   340f     rlcf    0x0f, 0x0, 0x0   	RLCF	r0x0f, W
00294e   6e16     movwf   0x16, 0x0        	MOVWF	r0x16
002950   3410     rlcf    0x10, 0x0, 0x0   	RLCF	r0x10, W
002952   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
002954   3411     rlcf    0x11, 0x0, 0x0   	RLCF	r0x11, W
002956   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
002958   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
00295a   240a     addwf   0x0a, 0x0, 0x0   	ADDWF	r0x0a, W
00295c   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
00295e   5016     movf    0x16, 0x0, 0x0   	MOVF	r0x16, W
002960   200b     addwfc  0x0b, 0x0, 0x0   	ADDWFC	r0x0b, W
002962   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
002964   5017     movf    0x17, 0x0, 0x0   	MOVF	r0x17, W
002966   200c     addwfc  0x0c, 0x0, 0x0   	ADDWFC	r0x0c, W
002968   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
00296a   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
00296c   200d     addwfc  0x0d, 0x0, 0x0   	ADDWFC	r0x0d, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = (frac_part >> 24) + '0';
00296e   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
002970   0e30     movlw   0x30             	MOVLW	0x30
002972   260a     addwf   0x0a, 0x1, 0x0   	ADDWF	r0x0a, F
002974   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
002976   ffe5
002978   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
00297a   ffe9
00297c   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
00297e   fff3
002980   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
002982   ec61     call    0x0078c2, 0x0call    0x0078c2, 0x0 	CALL	__gptrput1
002984   f03c
002986   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
002988   e302     bnc     0x00298e         	BNC	_01072_DS_
00298a   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
00298c   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01072_DS_:
                                           ;	.line	324; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part &= 0xFFFFFF;
00298e   6a11     clrf    0x11, 0x0        	CLRF	r0x11
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (m = 0; m < precision; m++)
002990   2a06     incf    0x06, 0x1, 0x0   	INCF	r0x06, F
002992   d7c3     bra     0x00291a         	BRA	_00979_DS_
                                           _01002_DS_:
002994   c003     movff   0x003, 0x012     	MOVFF	r0x03, r0x12
002996   f012
002998   c004     movff   0x004, 0x013     	MOVFF	r0x04, r0x13
00299a   f013
00299c   c005     movff   0x005, 0x014     	MOVFF	r0x05, r0x14
00299e   f014
                                           _00977_DS_:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = '\0';
0029a0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0029a2   c012     movff   0x012, 0xfe9     	MOVFF	r0x12, FSR0L
0029a4   ffe9
0029a6   c013     movff   0x013, 0xff3     	MOVFF	r0x13, PRODL
0029a8   fff3
0029aa   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
0029ac   ec61     call    0x0078c2, 0x0call    0x0078c2, 0x0 	CALL	__gptrput1
0029ae   f03c
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return count + pprints(out, buffer, width, pad);
0029b0   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
0029b2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0029b4   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
0029b6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0029b8   0e80     movlw   0x80             	MOVLW	0x80
0029ba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0029bc   0e05     movlw   0x05             	MOVLW	HIGH(_pprintfl_buffer_1_172)
0029be   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0029c0   0e48     movlw   0x48             	MOVLW	LOW(_pprintfl_buffer_1_172)
0029c2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0029c4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0029c6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0029c8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0029ca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0029cc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0029ce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0029d0   ecab     call    0x004756, 0x0call    0x004756, 0x0 	CALL	_pprints
0029d2   f023
0029d4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0029d6   0e08     movlw   0x08             	MOVLW	0x08
0029d8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0029da   5018     movf    0x18, 0x0, 0x0   	MOVF	r0x18, W
0029dc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0029de   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00981_DS_:
0029e0   cfe4     movff   0xfe4, 0x020     	MOVFF	PREINC1, r0x20
0029e2   f020
0029e4   cfe4     movff   0xfe4, 0x01f     	MOVFF	PREINC1, r0x1f
0029e6   f01f
0029e8   cfe4     movff   0xfe4, 0x01e     	MOVFF	PREINC1, r0x1e
0029ea   f01e
0029ec   cfe4     movff   0xfe4, 0x01d     	MOVFF	PREINC1, r0x1d
0029ee   f01d
0029f0   cfe4     movff   0xfe4, 0x01c     	MOVFF	PREINC1, r0x1c
0029f2   f01c
0029f4   cfe4     movff   0xfe4, 0x01b     	MOVFF	PREINC1, r0x1b
0029f6   f01b
0029f8   cfe4     movff   0xfe4, 0x01a     	MOVFF	PREINC1, r0x1a
0029fa   f01a
0029fc   cfe4     movff   0xfe4, 0x019     	MOVFF	PREINC1, r0x19
0029fe   f019
002a00   cfe4     movff   0xfe4, 0x018     	MOVFF	PREINC1, r0x18
002a02   f018
002a04   cfe4     movff   0xfe4, 0x017     	MOVFF	PREINC1, r0x17
002a06   f017
002a08   cfe4     movff   0xfe4, 0x016     	MOVFF	PREINC1, r0x16
002a0a   f016
002a0c   cfe4     movff   0xfe4, 0x015     	MOVFF	PREINC1, r0x15
002a0e   f015
002a10   cfe4     movff   0xfe4, 0x014     	MOVFF	PREINC1, r0x14
002a12   f014
002a14   cfe4     movff   0xfe4, 0x013     	MOVFF	PREINC1, r0x13
002a16   f013
002a18   cfe4     movff   0xfe4, 0x012     	MOVFF	PREINC1, r0x12
002a1a   f012
002a1c   cfe4     movff   0xfe4, 0x011     	MOVFF	PREINC1, r0x11
002a1e   f011
002a20   cfe4     movff   0xfe4, 0x010     	MOVFF	PREINC1, r0x10
002a22   f010
002a24   cfe4     movff   0xfe4, 0x00f     	MOVFF	PREINC1, r0x0f
002a26   f00f
002a28   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
002a2a   f00e
002a2c   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
002a2e   f00d
002a30   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
002a32   f00c
002a34   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
002a36   f00b
002a38   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
002a3a   f00a
002a3c   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
002a3e   f009
002a40   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
002a42   f008
002a44   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
002a46   f007
002a48   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
002a4a   f006
002a4c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
002a4e   f005
002a50   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002a52   f004
002a54   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002a56   f003
002a58   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002a5a   f002
002a5c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002a5e   f001
002a60   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002a62   f000
002a64   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002a66   ffd9
002a68   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pprinti	code
                                           _pprinti:
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static u8 pprinti(u8 **out, u32 i, u8 islong, u8 base, u8 sign, u8 width, u8 pad, u8 separator, u8 letterbase)
0034fc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0034fe   ffe5
003500   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003502   ffd9
003504   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003506   ffe5
003508   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00350a   ffe5
00350c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00350e   ffe5
003510   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003512   ffe5
003514   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003516   ffe5
003518   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00351a   ffe5
00351c   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00351e   ffe5
003520   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
003522   ffe5
003524   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
003526   ffe5
003528   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
00352a   ffe5
00352c   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
00352e   ffe5
003530   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
003532   ffe5
003534   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
003536   ffe5
003538   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
00353a   ffe5
00353c   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
00353e   ffe5
003540   c00f     movff   0x00f, 0xfe5     	MOVFF	r0x0f, POSTDEC1
003542   ffe5
003544   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
003546   ffe5
003548   c011     movff   0x011, 0xfe5     	MOVFF	r0x11, POSTDEC1
00354a   ffe5
00354c   c012     movff   0x012, 0xfe5     	MOVFF	r0x12, POSTDEC1
00354e   ffe5
003550   c013     movff   0x013, 0xfe5     	MOVFF	r0x13, POSTDEC1
003552   ffe5
003554   c014     movff   0x014, 0xfe5     	MOVFF	r0x14, POSTDEC1
003556   ffe5
003558   c015     movff   0x015, 0xfe5     	MOVFF	r0x15, POSTDEC1
00355a   ffe5
00355c   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
00355e   ffe5
003560   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
003562   ffe5
003564   c018     movff   0x018, 0xfe5     	MOVFF	r0x18, POSTDEC1
003566   ffe5
003568   c019     movff   0x019, 0xfe5     	MOVFF	r0x19, POSTDEC1
00356a   ffe5
00356c   c01a     movff   0x01a, 0xfe5     	MOVFF	r0x1a, POSTDEC1
00356e   ffe5
003570   c01b     movff   0x01b, 0xfe5     	MOVFF	r0x1b, POSTDEC1
003572   ffe5
003574   0e02     movlw   0x02             	MOVLW	0x02
003576   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003578   f000
00357a   0e03     movlw   0x03             	MOVLW	0x03
00357c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00357e   f001
003580   0e04     movlw   0x04             	MOVLW	0x04
003582   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
003584   f002
003586   0e05     movlw   0x05             	MOVLW	0x05
003588   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
00358a   f003
00358c   0e06     movlw   0x06             	MOVLW	0x06
00358e   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
003590   f004
003592   0e07     movlw   0x07             	MOVLW	0x07
003594   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
003596   f005
003598   0e08     movlw   0x08             	MOVLW	0x08
00359a   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
00359c   f006
00359e   0e09     movlw   0x09             	MOVLW	0x09
0035a0   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
0035a2   f007
0035a4   0e0a     movlw   0x0a             	MOVLW	0x0a
0035a6   cfdb     movff   0xfdb, 0x008     	MOVFF	PLUSW2, r0x08
0035a8   f008
0035aa   0e0b     movlw   0x0b             	MOVLW	0x0b
0035ac   cfdb     movff   0xfdb, 0x009     	MOVFF	PLUSW2, r0x09
0035ae   f009
0035b0   0e0c     movlw   0x0c             	MOVLW	0x0c
0035b2   cfdb     movff   0xfdb, 0x00a     	MOVFF	PLUSW2, r0x0a
0035b4   f00a
0035b6   0e0d     movlw   0x0d             	MOVLW	0x0d
0035b8   cfdb     movff   0xfdb, 0x00b     	MOVFF	PLUSW2, r0x0b
0035ba   f00b
0035bc   0e0f     movlw   0x0f             	MOVLW	0x0f
0035be   cfdb     movff   0xfdb, 0x00c     	MOVFF	PLUSW2, r0x0c
0035c0   f00c
                                           ;	.line	119; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 neg = 0, pc = 0;
0035c2   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
0035c4   6a0e     clrf    0x0e, 0x0        	CLRF	r0x0e
                                           ;	.line	120; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u32 t, uns32 = i;
0035c6   c003     movff   0x003, 0x00f     	MOVFF	r0x03, r0x0f
0035c8   f00f
0035ca   c004     movff   0x004, 0x010     	MOVFF	r0x04, r0x10
0035cc   f010
0035ce   c005     movff   0x005, 0x011     	MOVFF	r0x05, r0x11
0035d0   f011
0035d2   c006     movff   0x006, 0x012     	MOVFF	r0x06, r0x12
0035d4   f012
                                           ;	.line	122; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (i == 0)
0035d6   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0035d8   1004     iorwf   0x04, 0x0, 0x0   	IORWF	r0x04, W
0035da   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
0035dc   1006     iorwf   0x06, 0x0, 0x0   	IORWF	r0x06, W
0035de   e11b     bnz     0x003616         	BNZ	_00871_DS_
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[0] = '0';
0035e0   0e30     movlw   0x30             	MOVLW	0x30
0035e2   0105     movlb   0x5              	BANKSEL	_pprinti_buffer_1_162
0035e4   6f3c     movwf   0x3c, 0x1        	MOVWF	_pprinti_buffer_1_162, B
                                           ; removed redundant BANKSEL
                                           ;	.line	125; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[1] = '\0';
0035e6   6b3d     clrf    0x3d, 0x1        	CLRF	(_pprinti_buffer_1_162 + 1), B
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprints(out, buffer, width, pad);
0035e8   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
0035ea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0035ec   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
0035ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0035f0   0e80     movlw   0x80             	MOVLW	0x80
0035f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0035f4   0e05     movlw   0x05             	MOVLW	HIGH(_pprinti_buffer_1_162)
0035f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0035f8   0e3c     movlw   0x3c             	MOVLW	LOW(_pprinti_buffer_1_162)
0035fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0035fc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0035fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003600   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003602   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003604   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003606   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003608   ecab     call    0x004756, 0x0call    0x004756, 0x0 	CALL	_pprints
00360a   f023
00360c   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
00360e   0e08     movlw   0x08             	MOVLW	0x08
003610   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003612   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
003614   d0ec     bra     0x0037ee         	BRA	_00892_DS_
                                           _00871_DS_:
                                           ;	.line	130; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if  ( (sign) && (base == 10) )          // decimal signed number ?
003616   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
003618   e036     bz      0x003686         	BZ	_00879_DS_
00361a   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
00361c   0a0a     xorlw   0x0a             	XORLW	0x0a
00361e   e133     bnz     0x003686         	BNZ	_00879_DS_
                                           ;	.line	132; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if ( (islong) && ((s32)i < 0) )     // negative 32-bit ?
003620   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
003622   e01c     bz      0x00365c         	BZ	_00873_DS_
003624   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003626   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
003628   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00362a   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
00362c   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00362e   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
003630   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
003632   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
003634   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003636   ae15     btfss   0x15, 0x7, 0x0   	BTFSS	r0x15, 7
003638   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00363a   e310     bnc     0x00365c         	BNC	_00873_DS_
                                           ;	.line	134; /home/vbasel/.icaro/v4/firmware/core/stdio.c	neg = 1;
00363c   0e01     movlw   0x01             	MOVLW	0x01
00363e   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
                                           ;	.line	135; /home/vbasel/.icaro/v4/firmware/core/stdio.c	uns32 = - (s32)i;
003640   1c15     comf    0x15, 0x0, 0x0   	COMF	r0x15, W
003642   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
003644   1c14     comf    0x14, 0x0, 0x0   	COMF	r0x14, W
003646   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
003648   1c13     comf    0x13, 0x0, 0x0   	COMF	r0x13, W
00364a   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
00364c   1c09     comf    0x09, 0x0, 0x0   	COMF	r0x09, W
00364e   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
003650   2a0f     incf    0x0f, 0x1, 0x0   	INCF	r0x0f, F
003652   e104     bnz     0x00365c         	BNZ	_00873_DS_
003654   2a10     incf    0x10, 0x1, 0x0   	INCF	r0x10, F
003656   e102     bnz     0x00365c         	BNZ	_00873_DS_
003658   4a11     infsnz  0x11, 0x1, 0x0   	INFSNZ	r0x11, F
00365a   2a12     incf    0x12, 0x1, 0x0   	INCF	r0x12, F
                                           _00873_DS_:
                                           ;	.line	137; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if ( (!islong) && ((s16)i < 0) )    // negative 16-bit ?
00365c   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
00365e   e113     bnz     0x003686         	BNZ	_00879_DS_
003660   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003662   ae04     btfss   0x04, 0x7, 0x0   	BTFSS	r0x04, 7
003664   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003666   e30f     bnc     0x003686         	BNC	_00879_DS_
                                           ;	.line	139; /home/vbasel/.icaro/v4/firmware/core/stdio.c	neg = 1;
003668   0e01     movlw   0x01             	MOVLW	0x01
00366a   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
                                           ;	.line	140; /home/vbasel/.icaro/v4/firmware/core/stdio.c	uns32 = - (s16)i;
00366c   1e04     comf    0x04, 0x1, 0x0   	COMF	r0x04, F
00366e   6c03     negf    0x03, 0x0        	NEGF	r0x03
003670   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
003672   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
003674   c003     movff   0x003, 0x00f     	MOVFF	r0x03, r0x0f
003676   f00f
003678   c004     movff   0x004, 0x010     	MOVFF	r0x04, r0x10
00367a   f010
00367c   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
00367e   be04     btfsc   0x04, 0x7, 0x0   	BTFSC	r0x04, 7
003680   0eff     movlw   0xff             	MOVLW	0xff
003682   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
003684   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
                                           _00879_DS_:
                                           ;	.line	145; /home/vbasel/.icaro/v4/firmware/core/stdio.c	string = buffer + PRINTF_BUF_LEN - 1;
003686   0e05     movlw   0x05             	MOVLW	HIGH(_pprinti_buffer_1_162 + 11)
003688   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00368a   0e47     movlw   0x47             	MOVLW	LOW(_pprinti_buffer_1_162 + 11)
00368c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00368e   0e80     movlw   0x80             	MOVLW	0x80
003690   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
                                           ;	.line	146; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string = '\0';
003692   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003694   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
003696   ffe9
003698   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
00369a   fff3
00369c   ec61     call    0x0078c2, 0x0call    0x0078c2, 0x0 	CALL	__gptrput1
00369e   f03c
                                           ;	.line	148; /home/vbasel/.icaro/v4/firmware/core/stdio.c	while (uns32)
0036a0   c003     movff   0x003, 0x006     	MOVFF	r0x03, r0x06
0036a2   f006
0036a4   c004     movff   0x004, 0x007     	MOVFF	r0x04, r0x07
0036a6   f007
0036a8   c005     movff   0x005, 0x009     	MOVFF	r0x05, r0x09
0036aa   f009
                                           _00883_DS_:
0036ac   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
0036ae   1010     iorwf   0x10, 0x0, 0x0   	IORWF	r0x10, W
0036b0   1011     iorwf   0x11, 0x0, 0x0   	IORWF	r0x11, W
0036b2   1012     iorwf   0x12, 0x0, 0x0   	IORWF	r0x12, W
0036b4   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
0036b6   d05a     bra     0x00376c         	BRA	_00907_DS_
                                           ;	.line	150; /home/vbasel/.icaro/v4/firmware/core/stdio.c	t = uns32 % base;
0036b8   c008     movff   0x008, 0x013     	MOVFF	r0x08, r0x13
0036ba   f013
0036bc   6a14     clrf    0x14, 0x0        	CLRF	r0x14
0036be   6a15     clrf    0x15, 0x0        	CLRF	r0x15
0036c0   6a16     clrf    0x16, 0x0        	CLRF	r0x16
0036c2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0036c4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0036c6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0036c8   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
0036ca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036cc   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
0036ce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036d0   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
0036d2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036d4   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
0036d6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036d8   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
0036da   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036dc   ec75     call    0x0058ea, 0x0call    0x0058ea, 0x0 	CALL	__modulong
0036de   f02c
0036e0   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
0036e2   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
0036e4   f018
0036e6   cff4     movff   0xff4, 0x019     	MOVFF	PRODH, r0x19
0036e8   f019
0036ea   cfe9     movff   0xfe9, 0x01a     	MOVFF	FSR0L, r0x1a
0036ec   f01a
0036ee   0e08     movlw   0x08             	MOVLW	0x08
0036f0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	151; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if ( t >= 10 )
0036f2   0e00     movlw   0x00             	MOVLW	0x00
0036f4   5c1a     subwf   0x1a, 0x0, 0x0   	SUBWF	r0x1a, W
0036f6   e108     bnz     0x003708         	BNZ	_00938_DS_
0036f8   0e00     movlw   0x00             	MOVLW	0x00
0036fa   5c19     subwf   0x19, 0x0, 0x0   	SUBWF	r0x19, W
0036fc   e105     bnz     0x003708         	BNZ	_00938_DS_
0036fe   0e00     movlw   0x00             	MOVLW	0x00
003700   5c18     subwf   0x18, 0x0, 0x0   	SUBWF	r0x18, W
003702   e102     bnz     0x003708         	BNZ	_00938_DS_
003704   0e0a     movlw   0x0a             	MOVLW	0x0a
003706   5c17     subwf   0x17, 0x0, 0x0   	SUBWF	r0x17, W
                                           _00938_DS_:
003708   e306     bnc     0x003716         	BNC	_00882_DS_
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/core/stdio.c	t += letterbase - '0' - 10;
00370a   c00c     movff   0x00c, 0x01b     	MOVFF	r0x0c, r0x1b
00370c   f01b
00370e   0ec6     movlw   0xc6             	MOVLW	0xc6
003710   261b     addwf   0x1b, 0x1, 0x0   	ADDWF	r0x1b, F
003712   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
003714   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
                                           _00882_DS_:
                                           ;	.line	153; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*--string = t + '0';
003716   0eff     movlw   0xff             	MOVLW	0xff
003718   2606     addwf   0x06, 0x1, 0x0   	ADDWF	r0x06, F
00371a   2207     addwfc  0x07, 0x1, 0x0   	ADDWFC	r0x07, F
00371c   2209     addwfc  0x09, 0x1, 0x0   	ADDWFC	r0x09, F
00371e   0e30     movlw   0x30             	MOVLW	0x30
003720   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
003722   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
003724   ffe5
003726   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
003728   ffe9
00372a   c007     movff   0x007, 0xff3     	MOVFF	r0x07, PRODL
00372c   fff3
00372e   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
003730   ec61     call    0x0078c2, 0x0call    0x0078c2, 0x0 	CALL	__gptrput1
003732   f03c
                                           ;	.line	154; /home/vbasel/.icaro/v4/firmware/core/stdio.c	uns32 /= base;
003734   5016     movf    0x16, 0x0, 0x0   	MOVF	r0x16, W
003736   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003738   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
00373a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00373c   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
00373e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003740   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
003742   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003744   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
003746   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003748   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
00374a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00374c   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
00374e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003750   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
003752   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003754   eca8     call    0x005b50, 0x0call    0x005b50, 0x0 	CALL	__divulong
003756   f02d
003758   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
00375a   cff3     movff   0xff3, 0x010     	MOVFF	PRODL, r0x10
00375c   f010
00375e   cff4     movff   0xff4, 0x011     	MOVFF	PRODH, r0x11
003760   f011
003762   cfe9     movff   0xfe9, 0x012     	MOVFF	FSR0L, r0x12
003764   f012
003766   0e08     movlw   0x08             	MOVLW	0x08
003768   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00376a   d7a0     bra     0x0036ac         	BRA	_00883_DS_
                                           _00907_DS_:
00376c   c006     movff   0x006, 0x003     	MOVFF	r0x06, r0x03
00376e   f003
003770   c007     movff   0x007, 0x004     	MOVFF	r0x07, r0x04
003772   f004
003774   c009     movff   0x009, 0x005     	MOVFF	r0x09, r0x05
003776   f005
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (neg)
003778   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
00377a   e021     bz      0x0037be         	BZ	_00891_DS_
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (width && (pad & PAD_ZERO))
00377c   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
00377e   e012     bz      0x0037a4         	BZ	_00887_DS_
003780   a20b     btfss   0x0b, 0x1, 0x0   	BTFSS	r0x0b, 1
003782   d010     bra     0x0037a4         	BRA	_00887_DS_
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, '-');
003784   0e2d     movlw   0x2d             	MOVLW	0x2d
003786   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003788   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00378a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00378c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00378e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003790   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003792   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003794   ecd8     call    0x005fb0, 0x0call    0x005fb0, 0x0 	CALL	_pprintc
003796   f02f
003798   0e04     movlw   0x04             	MOVLW	0x04
00379a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	162; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
00379c   0e01     movlw   0x01             	MOVLW	0x01
00379e   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
                                           ;	.line	163; /home/vbasel/.icaro/v4/firmware/core/stdio.c	--width;
0037a0   060a     decf    0x0a, 0x1, 0x0   	DECF	r0x0a, F
0037a2   d00d     bra     0x0037be         	BRA	_00891_DS_
                                           _00887_DS_:
                                           ;	.line	167; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*--string = '-';
0037a4   0eff     movlw   0xff             	MOVLW	0xff
0037a6   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
0037a8   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0037aa   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0037ac   0e2d     movlw   0x2d             	MOVLW	0x2d
0037ae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0037b0   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0037b2   ffe9
0037b4   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
0037b6   fff3
0037b8   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0037ba   ec61     call    0x0078c2, 0x0call    0x0078c2, 0x0 	CALL	__gptrput1
0037bc   f03c
                                           _00891_DS_:
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pc + pprints(out, string, width, pad);
0037be   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
0037c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0037c2   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
0037c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0037c6   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0037c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0037ca   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0037cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0037ce   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0037d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0037d2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0037d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0037d6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0037d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0037da   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0037dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0037de   ecab     call    0x004756, 0x0call    0x004756, 0x0 	CALL	_pprints
0037e0   f023
0037e2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0037e4   0e08     movlw   0x08             	MOVLW	0x08
0037e6   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0037e8   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
0037ea   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0037ec   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00892_DS_:
0037ee   cfe4     movff   0xfe4, 0x01b     	MOVFF	PREINC1, r0x1b
0037f0   f01b
0037f2   cfe4     movff   0xfe4, 0x01a     	MOVFF	PREINC1, r0x1a
0037f4   f01a
0037f6   cfe4     movff   0xfe4, 0x019     	MOVFF	PREINC1, r0x19
0037f8   f019
0037fa   cfe4     movff   0xfe4, 0x018     	MOVFF	PREINC1, r0x18
0037fc   f018
0037fe   cfe4     movff   0xfe4, 0x017     	MOVFF	PREINC1, r0x17
003800   f017
003802   cfe4     movff   0xfe4, 0x016     	MOVFF	PREINC1, r0x16
003804   f016
003806   cfe4     movff   0xfe4, 0x015     	MOVFF	PREINC1, r0x15
003808   f015
00380a   cfe4     movff   0xfe4, 0x014     	MOVFF	PREINC1, r0x14
00380c   f014
00380e   cfe4     movff   0xfe4, 0x013     	MOVFF	PREINC1, r0x13
003810   f013
003812   cfe4     movff   0xfe4, 0x012     	MOVFF	PREINC1, r0x12
003814   f012
003816   cfe4     movff   0xfe4, 0x011     	MOVFF	PREINC1, r0x11
003818   f011
00381a   cfe4     movff   0xfe4, 0x010     	MOVFF	PREINC1, r0x10
00381c   f010
00381e   cfe4     movff   0xfe4, 0x00f     	MOVFF	PREINC1, r0x0f
003820   f00f
003822   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
003824   f00e
003826   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
003828   f00d
00382a   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
00382c   f00c
00382e   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
003830   f00b
003832   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
003834   f00a
003836   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
003838   f009
00383a   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00383c   f008
00383e   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
003840   f007
003842   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003844   f006
003846   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003848   f005
00384a   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00384c   f004
00384e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003850   f003
003852   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003854   f002
003856   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003858   f001
00385a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00385c   f000
00385e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003860   ffd9
003862   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pprints	code
                                           _pprints:
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static int pprints(u8 **out, const u8 *string, u8 width, u8 pad)
004756   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004758   ffe5
00475a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00475c   ffd9
00475e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004760   ffe5
004762   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004764   ffe5
004766   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004768   ffe5
00476a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00476c   ffe5
00476e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004770   ffe5
004772   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004774   ffe5
004776   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004778   ffe5
00477a   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
00477c   ffe5
00477e   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
004780   ffe5
004782   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
004784   ffe5
004786   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
004788   ffe5
00478a   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
00478c   ffe5
00478e   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
004790   ffe5
004792   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
004794   ffe5
004796   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
004798   ffe5
00479a   0e02     movlw   0x02             	MOVLW	0x02
00479c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00479e   f000
0047a0   0e03     movlw   0x03             	MOVLW	0x03
0047a2   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0047a4   f001
0047a6   0e04     movlw   0x04             	MOVLW	0x04
0047a8   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0047aa   f002
0047ac   0e05     movlw   0x05             	MOVLW	0x05
0047ae   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0047b0   f003
0047b2   0e06     movlw   0x06             	MOVLW	0x06
0047b4   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
0047b6   f004
0047b8   0e07     movlw   0x07             	MOVLW	0x07
0047ba   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
0047bc   f005
0047be   0e08     movlw   0x08             	MOVLW	0x08
0047c0   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
0047c2   f006
0047c4   0e09     movlw   0x09             	MOVLW	0x09
0047c6   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
0047c8   f007
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/core/stdio.c	register u8 pc = 0;
0047ca   6a08     clrf    0x08, 0x0        	CLRF	r0x08
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 padchar = ' ';
0047cc   0e20     movlw   0x20             	MOVLW	0x20
0047ce   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (width > 0)
0047d0   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0047d2   e022     bz      0x004818         	BZ	_00798_DS_
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (ptr = string; *ptr; ++ptr)
0047d4   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
0047d6   c003     movff   0x003, 0x00b     	MOVFF	r0x03, r0x0b
0047d8   f00b
0047da   c004     movff   0x004, 0x00c     	MOVFF	r0x04, r0x0c
0047dc   f00c
0047de   c005     movff   0x005, 0x00d     	MOVFF	r0x05, r0x0d
0047e0   f00d
                                           _00805_DS_:
0047e2   c00b     movff   0x00b, 0xfe9     	MOVFF	r0x0b, FSR0L
0047e4   ffe9
0047e6   c00c     movff   0x00c, 0xff3     	MOVFF	r0x0c, PRODL
0047e8   fff3
0047ea   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
0047ec   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
0047ee   f03b
0047f0   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
0047f2   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
0047f4   e006     bz      0x004802         	BZ	_00791_DS_
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++len;
0047f6   2a0a     incf    0x0a, 0x1, 0x0   	INCF	r0x0a, F
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (ptr = string; *ptr; ++ptr)
0047f8   2a0b     incf    0x0b, 0x1, 0x0   	INCF	r0x0b, F
0047fa   e3f3     bnc     0x0047e2         	BNC	_00805_DS_
0047fc   4a0c     infsnz  0x0c, 0x1, 0x0   	INFSNZ	r0x0c, F
0047fe   2a0d     incf    0x0d, 0x1, 0x0   	INCF	r0x0d, F
                                           _00861_DS_:
004800   d7f0     bra     0x0047e2         	BRA	_00805_DS_
                                           _00791_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (len >= width)
004802   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
004804   5c0a     subwf   0x0a, 0x0, 0x0   	SUBWF	r0x0a, W
004806   e302     bnc     0x00480c         	BNC	_00793_DS_
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width = 0;
004808   6a06     clrf    0x06, 0x0        	CLRF	r0x06
00480a   d002     bra     0x004810         	BRA	_00794_DS_
                                           _00793_DS_:
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width -= len;
00480c   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
00480e   5e06     subwf   0x06, 0x1, 0x0   	SUBWF	r0x06, F
                                           _00794_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (pad & PAD_ZERO) padchar = '0';
004810   a207     btfss   0x07, 0x1, 0x0   	BTFSS	r0x07, 1
004812   d002     bra     0x004818         	BRA	_00798_DS_
004814   0e30     movlw   0x30             	MOVLW	0x30
004816   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           _00798_DS_:
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (!(pad & PAD_RIGHT))
004818   b007     btfsc   0x07, 0x0, 0x0   	BTFSC	r0x07, 0
00481a   d019     bra     0x00484e         	BRA	_00830_DS_
00481c   6a07     clrf    0x07, 0x0        	CLRF	r0x07
00481e   c006     movff   0x006, 0x00a     	MOVFF	r0x06, r0x0a
004820   f00a
                                           _00808_DS_:
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; width > 0; --width)
004822   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
004824   e105     bnz     0x004830         	BNZ	_00807_DS_
004826   c007     movff   0x007, 0x008     	MOVFF	r0x07, r0x08
004828   f008
00482a   c00a     movff   0x00a, 0x006     	MOVFF	r0x0a, r0x06
00482c   f006
00482e   d00f     bra     0x00484e         	BRA	_00830_DS_
                                           _00807_DS_:
                                           ;	.line	84; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, padchar);
004830   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
004832   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004834   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004836   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004838   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00483a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00483c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00483e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004840   ecd8     call    0x005fb0, 0x0call    0x005fb0, 0x0 	CALL	_pprintc
004842   f02f
004844   0e04     movlw   0x04             	MOVLW	0x04
004846   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
004848   2a07     incf    0x07, 0x1, 0x0   	INCF	r0x07, F
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; width > 0; --width)
00484a   060a     decf    0x0a, 0x1, 0x0   	DECF	r0x0a, F
00484c   d7ea     bra     0x004822         	BRA	_00808_DS_
                                           _00830_DS_:
00484e   c008     movff   0x008, 0x007     	MOVFF	r0x08, r0x07
004850   f007
                                           _00811_DS_:
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *string ; ++string)
004852   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
004854   ffe9
004856   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
004858   fff3
00485a   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00485c   ecef     call    0x0077de, 0x0call    0x0077de, 0x0 	CALL	__gptrget1
00485e   f03b
004860   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
004862   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
004864   e012     bz      0x00488a         	BZ	_00832_DS_
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, *string);
004866   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
004868   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00486a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00486c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00486e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004870   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004872   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004874   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004876   ecd8     call    0x005fb0, 0x0call    0x005fb0, 0x0 	CALL	_pprintc
004878   f02f
00487a   0e04     movlw   0x04             	MOVLW	0x04
00487c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
00487e   2a07     incf    0x07, 0x1, 0x0   	INCF	r0x07, F
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *string ; ++string)
004880   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
004882   e3e7     bnc     0x004852         	BNC	_00811_DS_
004884   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
004886   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _00865_DS_:
004888   d7e4     bra     0x004852         	BRA	_00811_DS_
                                           _00832_DS_:
00488a   c007     movff   0x007, 0x003     	MOVFF	r0x07, r0x03
00488c   f003
00488e   c006     movff   0x006, 0x004     	MOVFF	r0x06, r0x04
004890   f004
                                           _00814_DS_:
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; width > 0; --width)
004892   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004894   e00f     bz      0x0048b4         	BZ	_00803_DS_
                                           ;	.line	97; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, padchar);
004896   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
004898   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00489a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00489c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00489e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0048a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048a2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0048a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048a6   ecd8     call    0x005fb0, 0x0call    0x005fb0, 0x0 	CALL	_pprintc
0048a8   f02f
0048aa   0e04     movlw   0x04             	MOVLW	0x04
0048ac   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	98; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
0048ae   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; width > 0; --width)
0048b0   0604     decf    0x04, 0x1, 0x0   	DECF	r0x04, F
0048b2   d7ef     bra     0x004892         	BRA	_00814_DS_
                                           ; =DF= MOVFF: replaced by CRLF/SETF
                                           _00803_DS_:
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pc;
0048b4   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
0048b6   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0048b8   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
0048ba   f00e
0048bc   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
0048be   f00d
0048c0   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
0048c2   f00c
0048c4   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
0048c6   f00b
0048c8   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
0048ca   f00a
0048cc   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
0048ce   f009
0048d0   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
0048d2   f008
0048d4   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
0048d6   f007
0048d8   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
0048da   f006
0048dc   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0048de   f005
0048e0   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0048e2   f004
0048e4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0048e6   f003
0048e8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0048ea   f002
0048ec   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0048ee   f001
0048f0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0048f2   f000
0048f4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0048f6   ffd9
0048f8   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pprintc	code
                                           _pprintc:
                                           ;	.line	42; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static void pprintc(u8 **str, u8 c)
005fb0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005fb2   ffe5
005fb4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005fb6   ffd9
005fb8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005fba   ffe5
005fbc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005fbe   ffe5
005fc0   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005fc2   ffe5
005fc4   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005fc6   ffe5
005fc8   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
005fca   ffe5
005fcc   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
005fce   ffe5
005fd0   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
005fd2   ffe5
005fd4   0e02     movlw   0x02             	MOVLW	0x02
005fd6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005fd8   f000
005fda   0e03     movlw   0x03             	MOVLW	0x03
005fdc   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005fde   f001
005fe0   0e04     movlw   0x04             	MOVLW	0x04
005fe2   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005fe4   f002
005fe6   0e05     movlw   0x05             	MOVLW	0x05
005fe8   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
005fea   f003
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (str)
005fec   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005fee   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
005ff0   1002     iorwf   0x02, 0x0, 0x0   	IORWF	r0x02, W
005ff2   e033     bz      0x00605a         	BZ	_00778_DS_
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/core/stdio.c	**str = c;
005ff4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005ff6   ffe9
005ff8   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
005ffa   fff3
005ffc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005ffe   ec00     call    0x007600, 0x0call    0x007600, 0x0 	CALL	__gptrget3
006000   f03b
006002   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
006004   cff3     movff   0xff3, 0x005     	MOVFF	PRODL, r0x05
006006   f005
006008   cff4     movff   0xff4, 0x006     	MOVFF	PRODH, r0x06
00600a   f006
00600c   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00600e   ffe5
006010   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
006012   ffe9
006014   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
006016   fff3
006018   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
00601a   ec61     call    0x0078c2, 0x0call    0x0078c2, 0x0 	CALL	__gptrput1
00601c   f03c
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++(*str);
00601e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
006020   ffe9
006022   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
006024   fff3
006026   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006028   ec00     call    0x007600, 0x0call    0x007600, 0x0 	CALL	__gptrget3
00602a   f03b
00602c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00602e   cff3     movff   0xff3, 0x005     	MOVFF	PRODL, r0x05
006030   f005
006032   cff4     movff   0xff4, 0x006     	MOVFF	PRODH, r0x06
006034   f006
006036   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
006038   e302     bnc     0x00603e         	BNC	_00785_DS_
00603a   4a05     infsnz  0x05, 0x1, 0x0   	INFSNZ	r0x05, F
00603c   2a06     incf    0x06, 0x1, 0x0   	INCF	r0x06, F
                                           _00785_DS_:
00603e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
006040   ffe5
006042   c005     movff   0x005, 0xff4     	MOVFF	r0x05, PRODH
006044   fff4
006046   c006     movff   0x006, 0xff6     	MOVFF	r0x06, TBLPTRL
006048   fff6
00604a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00604c   ffe9
00604e   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
006050   fff3
006052   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006054   ec20     call    0x007840, 0x0call    0x007840, 0x0 	CALL	__gptrput3
006056   f03c
006058   d016     bra     0x006086         	BRA	_00780_DS_
                                           _00778_DS_:
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pputchar(c);
00605a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00605c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00605e   cff2     movff   0xff2, 0xfe5     	MOVFF	INTCON, POSTDEC1
006060   ffe5
006062   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	INTCON, 7
006064   0005     push                     	PUSH	
006066   0e84     movlw   0x84             	MOVLW	LOW(_00786_DS_)
006068   6efd     movwf   0xfd, 0x0        	MOVWF	TOSL
00606a   0e60     movlw   0x60             	MOVLW	HIGH(_00786_DS_)
00606c   6efe     movwf   0xfe, 0x0        	MOVWF	TOSH
00606e   0e00     movlw   0x00             	MOVLW	UPPER(_00786_DS_)
006070   6eff     movwf   0xff, 0x0        	MOVWF	TOSU
006072   bee4     btfsc   0xe4, 0x7, 0x0   	BTFSC	PREINC1, 7
006074   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	INTCON, 7
006076   c5c4     movff   0x5c4, 0xffb     	MOVFF	(_pputchar + 2), PCLATU
006078   fffb
00607a   c5c3     movff   0x5c3, 0xffa     	MOVFF	(_pputchar + 1), PCLATH
00607c   fffa
00607e   0105     movlb   0x5              	BANKSEL	_pputchar
006080   51c2     movf    0xc2, 0x0, 0x1   	MOVF	_pputchar, W, B
006082   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00786_DS_:
006084   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           _00780_DS_:
006086   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
006088   f006
00608a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00608c   f005
00608e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
006090   f004
006092   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006094   f003
006096   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006098   f002
00609a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00609c   f001
00609e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0060a0   f000
0060a2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0060a4   ffd9
0060a6   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/delayus.c	void Delayus(unsigned int microseconds)
0073d0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0073d2   ffe5
0073d4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0073d6   ffd9
0073d8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0073da   ffe5
0073dc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0073de   ffe5
0073e0   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0073e2   ffe5
0073e4   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0073e6   ffe5
0073e8   0e02     movlw   0x02             	MOVLW	0x02
0073ea   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0073ec   f000
0073ee   0e03     movlw   0x03             	MOVLW	0x03
0073f0   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0073f2   f001
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/delayus.c	for (i=0; i<microseconds; i++)
0073f4   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0073f6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _00761_DS_:
0073f8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0073fa   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
0073fc   e102     bnz     0x007402         	BNZ	_00772_DS_
0073fe   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
007400   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _00772_DS_:
007402   e203     bc      0x00740a         	BC	_00763_DS_
007404   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
007406   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
007408   d7f7     bra     0x0073f8         	BRA	_00761_DS_
                                           _00763_DS_:
00740a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00740c   f003
00740e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
007410   f002
007412   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
007414   f001
007416   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
007418   f000
00741a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00741c   ffd9
00741e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__IO_digital	code
                                           _IO_digital:
                                           ;	.line	123; /home/vbasel/.icaro/v4/firmware/core/io.c	ADCON1 = 0x0F;				// AN0 to AN12 Digital I/O
000c0c   0e0f     movlw   0x0f             	MOVLW	0x0f
000c0e   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/core/io.c	CMCON = 0x07;               // Comparators as Digital I/O
000c10   0e07     movlw   0x07             	MOVLW	0x07
000c12   6eb4     movwf   0xb4, 0x0        	MOVWF	_CMCON
000c14   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__IO_init	code
                                           _IO_init:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/io.c	LATA  = 0x00;
007742   6a89     clrf    0x89, 0x0        	CLRF	_LATA
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/io.c	LATB  = 0x00;
007744   6a8a     clrf    0x8a, 0x0        	CLRF	_LATB
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/io.c	LATC  = 0x00;
007746   6a8b     clrf    0x8b, 0x0        	CLRF	_LATC
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/core/io.c	LATD  = 0x00; 
007748   6a8c     clrf    0x8c, 0x0        	CLRF	_LATD
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/io.c	LATE  = 0x00; 
00774a   6a8d     clrf    0x8d, 0x0        	CLRF	_LATE
                                           ;	.line	83; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISA = 0x00;
00774c   6a92     clrf    0x92, 0x0        	CLRF	_TRISA
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISB = 0x00;
00774e   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC0 = 0x00;
007750   9094     bcf     0x94, 0x0, 0x0   	BCF	_TRISCbits, 0
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC1 = 0x00;
007752   9294     bcf     0x94, 0x1, 0x0   	BCF	_TRISCbits, 1
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC2 = 0x00;
007754   9494     bcf     0x94, 0x2, 0x0   	BCF	_TRISCbits, 2
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC6 = 0x00;
007756   9c94     bcf     0x94, 0x6, 0x0   	BCF	_TRISCbits, 6
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC7 = 0x00;
007758   9e94     bcf     0x94, 0x7, 0x0   	BCF	_TRISCbits, 7
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISD = 0x00; 
00775a   6a95     clrf    0x95, 0x0        	CLRF	_TRISD
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISE = 0x00; 
00775c   6a96     clrf    0x96, 0x0        	CLRF	_TRISE
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTA  = 0x00;
00775e   6a80     clrf    0x80, 0x0        	CLRF	_PORTA
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTB  = 0x00;
007760   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTC  = 0x00;
007762   6a82     clrf    0x82, 0x0        	CLRF	_PORTC
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTD  = 0x00; 
007764   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	113; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTE  = 0x00; 
007766   6a84     clrf    0x84, 0x0        	CLRF	_PORTE
007768   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogwrite	code
                                           _analogwrite:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogwrite(u8 pin, u16 duty)
006c1e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006c20   ffe5
006c22   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006c24   ffd9
006c26   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006c28   ffe5
006c2a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006c2c   ffe5
006c2e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006c30   ffe5
006c32   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006c34   ffe5
006c36   0e02     movlw   0x02             	MOVLW	0x02
006c38   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006c3a   f000
006c3c   0e03     movlw   0x03             	MOVLW	0x03
006c3e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006c40   f001
006c42   0e04     movlw   0x04             	MOVLW	0x04
006c44   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
006c46   f002
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/core/analog.c	switch (pin)
006c48   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006c4a   0a0b     xorlw   0x0b             	XORLW	0x0b
006c4c   e017     bz      0x006c7c         	BZ	_00731_DS_
006c4e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006c50   0a0c     xorlw   0x0c             	XORLW	0x0c
006c52   e125     bnz     0x006c9e         	BNZ	_00732_DS_
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON  = 0b00001100;
006c54   0e0c     movlw   0x0c             	MOVLW	0x0c
006c56   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR1L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
006c58   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
006c5a   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
006c5c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
006c5e   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
006c60   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006c62   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
006c64   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
006c66   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
006c68   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006c6a   6ebe     movwf   0xbe, 0x0        	MOVWF	_CCPR1L
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
006c6c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006c6e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006c70   0e03     movlw   0x03             	MOVLW	0x03
006c72   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
006c74   3800     swapf   0x00, 0x0, 0x0   	SWAPF	r0x00, W
006c76   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	r0x03, W
006c78   12bd     iorwf   0xbd, 0x1, 0x0   	IORWF	_CCP1CON, F
                                           ;	.line	309; /home/vbasel/.icaro/v4/firmware/core/analog.c	break;
006c7a   d011     bra     0x006c9e         	BRA	_00732_DS_
                                           _00731_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON  = 0b00001100;
006c7c   0e0c     movlw   0x0c             	MOVLW	0x0c
006c7e   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR2L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
006c80   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
006c82   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
006c84   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
006c86   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
006c88   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006c8a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
006c8c   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
006c8e   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
006c90   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006c92   6ebb     movwf   0xbb, 0x0        	MOVWF	_CCPR2L
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
006c94   0e03     movlw   0x03             	MOVLW	0x03
006c96   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
006c98   3801     swapf   0x01, 0x0, 0x0   	SWAPF	r0x01, W
006c9a   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
006c9c   12ba     iorwf   0xba, 0x1, 0x0   	IORWF	_CCP2CON, F
                                           _00732_DS_:
                                           ;	.line	321; /home/vbasel/.icaro/v4/firmware/core/analog.c	PIR1bits.TMR2IF = 0;
006c9e   929e     bcf     0x9e, 0x1, 0x0   	BCF	_PIR1bits, 1
006ca0   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006ca2   f003
006ca4   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006ca6   f002
006ca8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006caa   f001
006cac   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006cae   f000
006cb0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006cb2   ffd9
006cb4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogwrite_init	code
                                           _analogwrite_init:
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/core/analog.c	PR2 = 0xFF;                         // set PWM period to the max. to get 10-bit res.
007914   68cb     setf    0xcb, 0x0        	SETF	_PR2
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/core/analog.c	T2CON = 0b00000100;                 // Timer2 on, prescaler is 1
007916   0e04     movlw   0x04             	MOVLW	0x04
007918   6eca     movwf   0xca, 0x0        	MOVWF	_T2CON
00791a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	134; /home/vbasel/.icaro/v4/firmware/core/analog.c	u16 analogread(u8 channel)
006b82   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006b84   ffe5
006b86   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006b88   ffd9
006b8a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006b8c   ffe5
006b8e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006b90   ffe5
006b92   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006b94   ffe5
006b96   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006b98   ffe5
006b9a   0e02     movlw   0x02             	MOVLW	0x02
006b9c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006b9e   f000
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(channel>=13 && channel<=20)
006ba0   0e0d     movlw   0x0d             	MOVLW	0x0d
006ba2   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
006ba4   e30b     bnc     0x006bbc         	BNC	_00684_DS_
006ba6   0e15     movlw   0x15             	MOVLW	0x15
006ba8   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
006baa   e208     bc      0x006bbc         	BC	_00684_DS_
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0=(channel-13) << 2;   // A0 = 13, ..., A4 = 17
006bac   0ef3     movlw   0xf3             	MOVLW	0xf3
006bae   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
006bb0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
006bb2   4401     rlncf   0x01, 0x0, 0x0   	RLNCF	r0x01, W
006bb4   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
006bb6   0bfc     andlw   0xfc             	ANDLW	0xfc
006bb8   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
006bba   d007     bra     0x006bca         	BRA	_00685_DS_
                                           _00684_DS_:
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(channel<=5)
006bbc   0e06     movlw   0x06             	MOVLW	0x06
006bbe   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
006bc0   e204     bc      0x006bca         	BC	_00685_DS_
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0 = channel << 2;      // A0 = 0, ..., A4 = 4
006bc2   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
006bc4   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
006bc6   0bfc     andlw   0xfc             	ANDLW	0xfc
006bc8   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
                                           _00685_DS_:
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON=1;                  // A/D Converter module is enabled
006bca   80c2     bsf     0xc2, 0x0, 0x0   	BSF	_ADCON0bits, 0
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
006bcc   0e09     movlw   0x09             	MOVLW	0x09
006bce   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006bd0   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00693_DS_:
006bd2   0000     nop                      	NOP
006bd4   0eff     movlw   0xff             	MOVLW	0xff
006bd6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
006bd8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
006bda   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006bdc   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
006bde   e1f9     bnz     0x006bd2         	BNZ	_00693_DS_
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.GO=1;                    // Start A/D Conversion
006be0   82c2     bsf     0xc2, 0x1, 0x0   	BSF	_ADCON0bits, 1
                                           _00688_DS_:
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/core/analog.c	while (ADCON0bits.GO);              // Wait for conversion stop
006be2   b2c2     btfsc   0xc2, 0x1, 0x0   	BTFSC	_ADCON0bits, 1
006be4   d7fe     bra     0x006be2         	BRA	_00688_DS_
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/core/analog.c	result = ADRESH << 8;
006be6   cfc4     movff   0xfc4, 0x000     	MOVFF	_ADRESH, r0x00
006be8   f000
006bea   6a01     clrf    0x01, 0x0        	CLRF	r0x01
006bec   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006bee   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
006bf0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/analog.c	result += ADRESL;
006bf2   cfc3     movff   0xfc3, 0x000     	MOVFF	_ADRESL, r0x00
006bf4   f000
006bf6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
006bf8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006bfa   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
006bfc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006bfe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON = 0;                // A/D Converter module is disabled
006c00   90c2     bcf     0xc2, 0x0, 0x0   	BCF	_ADCON0bits, 0
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/analog.c	return(result);
006c02   c003     movff   0x003, 0xff3     	MOVFF	r0x03, PRODL
006c04   fff3
006c06   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006c08   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006c0a   f003
006c0c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006c0e   f002
006c10   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006c12   f001
006c14   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006c16   f000
006c18   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006c1a   ffd9
006c1c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogreference	code
                                           _analogreference:
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogreference(u8 Type)
00776a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00776c   ffe5
00776e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
007770   ffd9
007772   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007774   ffe5
007776   0e02     movlw   0x02             	MOVLW	0x02
007778   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00777a   f000
                                           ; #	MOVF	r0x00, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00665_DS_
                                           ; #	GOTO	_00667_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(Type == DEFAULT)			//the default analog reference of 5 volts (on 5V Arduino boards) or 3.3 volts (on 3.3V Arduino boards)
00777c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x00;			//Vref+ = VDD
00777e   e004     bz      0x007788         	BZ	_00667_DS_
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(Type == EXTERNAL)	//the voltage applied to the AREF pin (0 to 5V only) is used as the reference.
007780   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
007782   0a01     xorlw   0x01             	XORLW	0x01
007784   e101     bnz     0x007788         	BNZ	_00667_DS_
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x10;			//Vref+ = External source
007786   88c1     bsf     0xc1, 0x4, 0x0   	BSF	_ADCON1, 4
                                           _00667_DS_:
007788   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00778a   f000
00778c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00778e   ffd9
007790   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	36; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISA=TRISA | 0x2F;
0078d8   0e2f     movlw   0x2f             	MOVLW	0x2f
0078da   1292     iorwf   0x92, 0x1, 0x0   	IORWF	_TRISA, F
                                           ;	.line	37; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISE=TRISE | 0x07;	
0078dc   0e07     movlw   0x07             	MOVLW	0x07
0078de   1296     iorwf   0x96, 0x1, 0x0   	IORWF	_TRISE, F
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1=0x07;
0078e0   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON2=0xBD;
0078e2   0ebd     movlw   0xbd             	MOVLW	0xbd
0078e4   6ec0     movwf   0xc0, 0x0        	MOVWF	_ADCON2
0078e6   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	547; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (PIR1bits.TMR1IF)
00753a   a09e     btfss   0x9e, 0x0, 0x0   	BTFSS	_PIR1bits, 0
00753c   d01f     bra     0x00757c         	BRA	_00652_DS_
00753e   0104     movlb   0x4              	BANKSEL	_phase
                                           ;	.line	553; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (phase)
007540   51f2     movf    0xf2, 0x0, 0x1   	MOVF	_phase, W, B
007542   e00b     bz      0x00755a         	BZ	_00648_DS_
                                           ;	.line	555; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseUp();
007544   ec49     call    0x007892, 0x0call    0x007892, 0x0 	CALL	_ServosPulseUp
007546   f03c
                                           ;	.line	557; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0xe9;//0xe9;
007548   0ee9     movlw   0xe9             	MOVLW	0xe9
00754a   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	558; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0x59;
00754c   0e59     movlw   0x59             	MOVLW	0x59
00754e   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ;	.line	560; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=1;
007550   0e01     movlw   0x01             	MOVLW	0x01
007552   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
007554   0104     movlb   0x4              	BANKSEL	_phase
                                           ;	.line	561; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 0;
007556   6bf2     clrf    0xf2, 0x1        	CLRF	_phase, B
007558   d010     bra     0x00757a         	BRA	_00649_DS_
                                           _00648_DS_:
                                           ;	.line	569; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseDown();
00755a   ec33     call    0x005666, 0x0call    0x005666, 0x0 	CALL	_ServosPulseDown
00755c   f02b
                                           ;	.line	573; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0x32;
00755e   0e32     movlw   0x32             	MOVLW	0x32
007560   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	574; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0xeb;
007562   0eeb     movlw   0xeb             	MOVLW	0xeb
007564   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00646_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
007566   0104     movlb   0x4              	BANKSEL	_needreordering
                                           ;	.line	576; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (needreordering)
007568   51f3     movf    0xf3, 0x0, 0x1   	MOVF	_needreordering, W, B
                                           ;	.line	577; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	SortServoTimings(); // This takes more than 1 ms, but it's call only if needed.
00756a   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
                                           ;	.line	578; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
00756c   ec0e     call    0x000c1c, 0x0call    0x000c1c, 0x0 	CALL	_SortServoTimings
00756e   f006
007570   0e21     movlw   0x21             	MOVLW	0x21
007572   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	579; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 1;  			//This indicates that after next interrupt it will start the servos cycle.
007574   0e01     movlw   0x01             	MOVLW	0x01
007576   0104     movlb   0x4              	BANKSEL	_phase
007578   6ff2     movwf   0xf2, 0x1        	MOVWF	_phase, B
                                           _00649_DS_:
                                           ;	.line	583; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF=0;
00757a   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           _00652_DS_:
                                           ;	.line	585; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
00757c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	530; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMaximumPulse(unsigned char servo,int max_microseconds)
0068fe   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006900   ffe5
006902   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006904   ffd9
006906   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006908   ffe5
00690a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00690c   ffe5
00690e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006910   ffe5
006912   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006914   ffe5
006916   0e02     movlw   0x02             	MOVLW	0x02
006918   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00691a   f000
00691c   0e03     movlw   0x03             	MOVLW	0x03
00691e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006920   f001
006922   0e04     movlw   0x04             	MOVLW	0x04
006924   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
006926   f002
                                           ;	.line	533; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
006928   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00622_DS_
                                           ; #	GOTO	_00627_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	534; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
00692a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds < MIDUS) max_microseconds = MIDUS;
00692c   e22e     bc      0x00698a         	BC	_00627_DS_
00692e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006930   0f80     addlw   0x80             	ADDLW	0x80
006932   0f7b     addlw   0x7b             	ADDLW	0x7b
006934   e102     bnz     0x00693a         	BNZ	_00639_DS_
006936   0edc     movlw   0xdc             	MOVLW	0xdc
006938   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00639_DS_:
00693a   e204     bc      0x006944         	BC	_00624_DS_
00693c   0edc     movlw   0xdc             	MOVLW	0xdc
00693e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
006940   0e05     movlw   0x05             	MOVLW	0x05
006942   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00624_DS_:
                                           ;	.line	538; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds > MAXUS) max_microseconds = MAXUS;
006944   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006946   0f80     addlw   0x80             	ADDLW	0x80
006948   0f77     addlw   0x77             	ADDLW	0x77
00694a   e102     bnz     0x006950         	BNZ	_00640_DS_
00694c   0ec5     movlw   0xc5             	MOVLW	0xc5
00694e   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00640_DS_:
006950   e304     bnc     0x00695a         	BNC	_00626_DS_
006952   0ec4     movlw   0xc4             	MOVLW	0xc4
006954   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
006956   0e09     movlw   0x09             	MOVLW	0x09
006958   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00626_DS_:
                                           ;	.line	541; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][servo]=(max_microseconds - MINUS)>>3;   // 125 < final_max < 250
00695a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00695c   0eb4     movlw   0xb4             	MOVLW	LOW(_maxminpos + 30)
00695e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
006960   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos + 30)
006962   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
006964   0e0c     movlw   0x0c             	MOVLW	0x0c
006966   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
006968   0efe     movlw   0xfe             	MOVLW	0xfe
00696a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00696c   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
00696e   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
006970   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
006972   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
006974   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
006976   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
006978   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
00697a   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
00697c   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
00697e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
006980   ffe9
006982   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
006984   ffea
006986   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
006988   ffef
                                           _00627_DS_:
00698a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00698c   f003
00698e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006990   f002
006992   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006994   f001
006996   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006998   f000
00699a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00699c   ffd9
00699e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	516; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMinimumPulse(unsigned char servo,int min_microseconds)
0069a0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0069a2   ffe5
0069a4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0069a6   ffd9
0069a8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0069aa   ffe5
0069ac   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0069ae   ffe5
0069b0   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0069b2   ffe5
0069b4   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0069b6   ffe5
0069b8   0e02     movlw   0x02             	MOVLW	0x02
0069ba   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0069bc   f000
0069be   0e03     movlw   0x03             	MOVLW	0x03
0069c0   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0069c2   f001
0069c4   0e04     movlw   0x04             	MOVLW	0x04
0069c6   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0069c8   f002
                                           ;	.line	519; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
0069ca   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00598_DS_
                                           ; #	GOTO	_00603_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
0069cc   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	523; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds < MINUS) min_microseconds = MINUS;
0069ce   e22e     bc      0x006a2c         	BC	_00603_DS_
0069d0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0069d2   0f80     addlw   0x80             	ADDLW	0x80
0069d4   0f7f     addlw   0x7f             	ADDLW	0x7f
0069d6   e102     bnz     0x0069dc         	BNZ	_00615_DS_
0069d8   0ef4     movlw   0xf4             	MOVLW	0xf4
0069da   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00615_DS_:
0069dc   e204     bc      0x0069e6         	BC	_00600_DS_
0069de   0ef4     movlw   0xf4             	MOVLW	0xf4
0069e0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0069e2   0e01     movlw   0x01             	MOVLW	0x01
0069e4   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00600_DS_:
                                           ;	.line	524; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds > MIDUS) min_microseconds = MIDUS;
0069e6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0069e8   0f80     addlw   0x80             	ADDLW	0x80
0069ea   0f7b     addlw   0x7b             	ADDLW	0x7b
0069ec   e102     bnz     0x0069f2         	BNZ	_00616_DS_
0069ee   0edd     movlw   0xdd             	MOVLW	0xdd
0069f0   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00616_DS_:
0069f2   e304     bnc     0x0069fc         	BNC	_00602_DS_
0069f4   0edc     movlw   0xdc             	MOVLW	0xdc
0069f6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0069f8   0e05     movlw   0x05             	MOVLW	0x05
0069fa   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00602_DS_:
                                           ;	.line	527; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][servo]=(min_microseconds - MINUS)>>3;   // 0 < final_min < 125
0069fc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0069fe   0e96     movlw   0x96             	MOVLW	LOW(_maxminpos)
006a00   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
006a02   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos)
006a04   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
006a06   0e0c     movlw   0x0c             	MOVLW	0x0c
006a08   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
006a0a   0efe     movlw   0xfe             	MOVLW	0xfe
006a0c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
006a0e   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
006a10   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
006a12   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
006a14   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
006a16   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
006a18   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
006a1a   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
006a1c   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
006a1e   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
006a20   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
006a22   ffe9
006a24   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
006a26   ffea
006a28   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
006a2a   ffef
                                           _00603_DS_:
006a2c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006a2e   f003
006a30   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006a32   f002
006a34   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006a36   f001
006a38   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006a3a   f000
006a3c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006a3e   ffd9
006a40   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	508; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	unsigned char ServoRead(unsigned char servo)
0074b0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0074b2   ffe5
0074b4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0074b6   ffd9
0074b8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0074ba   ffe5
0074bc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0074be   ffe5
0074c0   0e02     movlw   0x02             	MOVLW	0x02
0074c2   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0074c4   f000
                                           ;	.line	510; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)        // test if numservo is valid
0074c6   0e1e     movlw   0x1e             	MOVLW	0x1e
0074c8   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0074ca   e302     bnc     0x0074d0         	BNC	_00586_DS_
                                           ;	.line	511; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return 0;
0074cc   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0074ce   d00c     bra     0x0074e8         	BRA	_00587_DS_
                                           _00586_DS_:
                                           ;	.line	513; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return servovalues[servo];
0074d0   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0074d2   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
0074d4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0074d6   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
0074d8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0074da   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0074dc   ffe9
0074de   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0074e0   ffea
0074e2   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0074e4   f000
0074e6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00587_DS_:
0074e8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0074ea   f001
0074ec   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0074ee   f000
0074f0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0074f2   ffd9
0074f4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	484; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoWrite(unsigned char servo,unsigned char degrees)
00737c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00737e   ffe5
007380   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
007382   ffd9
007384   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007386   ffe5
007388   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00738a   ffe5
00738c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00738e   ffe5
007390   0e02     movlw   0x02             	MOVLW	0x02
007392   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
007394   f000
007396   0e03     movlw   0x03             	MOVLW	0x03
007398   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00739a   f001
                                           ;	.line	491; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
00739c   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00574_DS_
                                           ; #	GOTO	_00575_DS_
                                           ; #	CLRF	r0x02
                                           ;	.line	492; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
00739e   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	503; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[servo]= value;
0073a0   e20e     bc      0x0073be         	BC	_00575_DS_
0073a2   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0073a4   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
0073a6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0073a8   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
0073aa   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0073ac   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0073ae   ffe9
0073b0   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0073b2   ffea
0073b4   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
0073b6   ffef
                                           ;	.line	505; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
0073b8   0e01     movlw   0x01             	MOVLW	0x01
0073ba   0104     movlb   0x4              	BANKSEL	_needreordering
0073bc   6ff3     movwf   0xf3, 0x1        	MOVWF	_needreordering, B
                                           _00575_DS_:
0073be   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0073c0   f002
0073c2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0073c4   f001
0073c6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0073c8   f000
0073ca   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0073cc   ffd9
0073ce   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	459; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoDetach(unsigned char pin)
004f68   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f6a   ffe5
004f6c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f6e   ffd9
004f70   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004f72   ffe5
004f74   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004f76   ffe5
004f78   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004f7a   ffe5
004f7c   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004f7e   ffe5
004f80   0e02     movlw   0x02             	MOVLW	0x02
004f82   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004f84   f000
                                           ;	.line	461; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
004f86   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00551_DS_
                                           ; #	GOTO	_00558_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	463; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
004f88   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004f8a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004f8c   d0a5     bra     0x0050d8         	BRA	_00558_DS_
004f8e   0ed4     movlw   0xd4             	MOVLW	LOW(_port)
004f90   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004f92   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004f94   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004f96   0e5d     movlw   0x5d             	MOVLW	HIGH(_port)
004f98   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004f9a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004f9c   0e00     movlw   0x00             	MOVLW	UPPER(_port)
004f9e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004fa0   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004fa2   fff6
004fa4   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004fa6   fff7
004fa8   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004faa   fff8
004fac   0009     tblrd*+                  	TBLRD*+	
004fae   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004fb0   f001
004fb2   0e05     movlw   0x05             	MOVLW	0x05
004fb4   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
004fb6   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004fb8   d08f     bra     0x0050d8         	BRA	_00558_DS_
004fba   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
004fbc   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
004fbe   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
004fc0   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
004fc2   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
004fc4   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
004fc6   0bfc     andlw   0xfc             	ANDLW	0xfc
004fc8   0fd8     addlw   0xd8             	ADDLW	LOW(_00568_DS_)
004fca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004fcc   0e4f     movlw   0x4f             	MOVLW	HIGH(_00568_DS_)
004fce   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
004fd0   0e00     movlw   0x00             	MOVLW	UPPER(_00568_DS_)
004fd2   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
004fd4   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
004fd6   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00568_DS_:
004fd8   eff6     goto    0x004fec         	GOTO	_00552_DS_
004fda   f027
004fdc   ef0e     goto    0x00501c         	GOTO	_00553_DS_
004fde   f028
004fe0   ef26     goto    0x00504c         	GOTO	_00554_DS_
004fe2   f028
004fe4   ef3e     goto    0x00507c         	GOTO	_00555_DS_
004fe6   f028
004fe8   ef56     goto    0x0050ac         	GOTO	_00556_DS_
004fea   f028
                                           _00552_DS_:
                                           ;	.line	465; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pA: activatedservos[pA] = activatedservos[pA] ^ mask[pin];
004fec   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
004fee   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004ff0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004ff2   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004ff4   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
004ff6   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004ff8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004ffa   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004ffc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004ffe   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
005000   fff6
005002   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
005004   fff7
005006   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
005008   fff8
00500a   0009     tblrd*+                  	TBLRD*+	
00500c   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00500e   f001
005010   0105     movlb   0x5              	BANKSEL	_activatedservos
005012   5168     movf    0x68, 0x0, 0x1   	MOVF	_activatedservos, W, B
005014   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
005016   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
005018   6f68     movwf   0x68, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	466; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00501a   d05e     bra     0x0050d8         	BRA	_00558_DS_
                                           _00553_DS_:
                                           ;	.line	467; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pB: activatedservos[pB] = activatedservos[pB] ^ mask[pin];
00501c   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
00501e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
005020   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005022   6a02     clrf    0x02, 0x0        	CLRF	r0x02
005024   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
005026   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005028   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00502a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00502c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00502e   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
005030   fff6
005032   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
005034   fff7
005036   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
005038   fff8
00503a   0009     tblrd*+                  	TBLRD*+	
00503c   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00503e   f001
005040   0105     movlb   0x5              	BANKSEL	(_activatedservos + 1)
005042   5169     movf    0x69, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
005044   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
005046   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
005048   6f69     movwf   0x69, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	468; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00504a   d046     bra     0x0050d8         	BRA	_00558_DS_
                                           _00554_DS_:
                                           ;	.line	470; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pC: activatedservos[pC] = activatedservos[pC] ^ mask[pin];
00504c   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
00504e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
005050   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005052   6a02     clrf    0x02, 0x0        	CLRF	r0x02
005054   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
005056   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005058   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00505a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00505c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00505e   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
005060   fff6
005062   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
005064   fff7
005066   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
005068   fff8
00506a   0009     tblrd*+                  	TBLRD*+	
00506c   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00506e   f001
005070   0105     movlb   0x5              	BANKSEL	(_activatedservos + 2)
005072   516a     movf    0x6a, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
005074   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
005076   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
005078   6f6a     movwf   0x6a, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	471; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00507a   d02e     bra     0x0050d8         	BRA	_00558_DS_
                                           _00555_DS_:
                                           ;	.line	474; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pD: activatedservos[pD] = activatedservos[pD] ^ mask[pin];
00507c   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
00507e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
005080   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005082   6a02     clrf    0x02, 0x0        	CLRF	r0x02
005084   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
005086   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005088   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00508a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00508c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00508e   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
005090   fff6
005092   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
005094   fff7
005096   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
005098   fff8
00509a   0009     tblrd*+                  	TBLRD*+	
00509c   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00509e   f001
0050a0   0105     movlb   0x5              	BANKSEL	(_activatedservos + 3)
0050a2   516b     movf    0x6b, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
0050a4   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
0050a6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0050a8   6f6b     movwf   0x6b, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	475; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0050aa   d016     bra     0x0050d8         	BRA	_00558_DS_
                                           _00556_DS_:
                                           ;	.line	478; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pE: activatedservos[pE] = activatedservos[pE] ^ mask[pin];
0050ac   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0050ae   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0050b0   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
0050b2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0050b4   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
0050b6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0050b8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0050ba   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0050bc   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0050be   fff6
0050c0   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0050c2   fff7
0050c4   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0050c6   fff8
0050c8   0009     tblrd*+                  	TBLRD*+	
0050ca   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0050cc   f000
0050ce   0105     movlb   0x5              	BANKSEL	(_activatedservos + 4)
0050d0   516c     movf    0x6c, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
0050d2   1a00     xorwf   0x00, 0x1, 0x0   	XORWF	r0x00, F
0050d4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0050d6   6f6c     movwf   0x6c, 0x1        	MOVWF	(_activatedservos + 4), B
                                           _00558_DS_:
                                           ;	.line	481; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
0050d8   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0050da   f003
0050dc   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0050de   f002
0050e0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0050e2   f001
0050e4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0050e6   f000
0050e8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0050ea   ffd9
0050ec   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoAttach(unsigned char pin)
0041c0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0041c2   ffe5
0041c4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0041c6   ffd9
0041c8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0041ca   ffe5
0041cc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0041ce   ffe5
0041d0   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0041d2   ffe5
0041d4   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0041d6   ffe5
0041d8   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0041da   ffe5
0041dc   0e02     movlw   0x02             	MOVLW	0x02
0041de   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0041e0   f000
                                           ;	.line	426; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
0041e2   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00528_DS_
                                           ; #	GOTO	_00535_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	428; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
0041e4   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0041e6   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0041e8   d0e1     bra     0x0043ac         	BRA	_00535_DS_
0041ea   0ed4     movlw   0xd4             	MOVLW	LOW(_port)
0041ec   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0041ee   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0041f0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0041f2   0e5d     movlw   0x5d             	MOVLW	HIGH(_port)
0041f4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0041f6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0041f8   0e00     movlw   0x00             	MOVLW	UPPER(_port)
0041fa   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0041fc   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0041fe   fff6
004200   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004202   fff7
004204   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004206   fff8
004208   0009     tblrd*+                  	TBLRD*+	
00420a   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00420c   f001
00420e   0e05     movlw   0x05             	MOVLW	0x05
004210   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
004212   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004214   d0cb     bra     0x0043ac         	BRA	_00535_DS_
004216   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
004218   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
00421a   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
00421c   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00421e   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
004220   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
004222   0bfc     andlw   0xfc             	ANDLW	0xfc
004224   0f34     addlw   0x34             	ADDLW	LOW(_00545_DS_)
004226   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004228   0e42     movlw   0x42             	MOVLW	HIGH(_00545_DS_)
00422a   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00422c   0e00     movlw   0x00             	MOVLW	UPPER(_00545_DS_)
00422e   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
004230   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
004232   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00545_DS_:
004234   ef24     goto    0x004248         	GOTO	_00529_DS_
004236   f021
004238   ef48     goto    0x004290         	GOTO	_00530_DS_
00423a   f021
00423c   ef6c     goto    0x0042d8         	GOTO	_00531_DS_
00423e   f021
004240   ef90     goto    0x004320         	GOTO	_00532_DS_
004242   f021
004244   efb4     goto    0x004368         	GOTO	_00533_DS_
004246   f021
                                           _00529_DS_:
                                           ;	.line	431; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pA] = activatedservos[pA] | mask[pin];  // list pin as servo driver.
004248   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
00424a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00424c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00424e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004250   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
004252   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004254   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004256   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004258   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00425a   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00425c   fff6
00425e   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004260   fff7
004262   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004264   fff8
004266   0009     tblrd*+                  	TBLRD*+	
004268   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00426a   f004
00426c   0105     movlb   0x5              	BANKSEL	_activatedservos
00426e   5168     movf    0x68, 0x0, 0x1   	MOVF	_activatedservos, W, B
004270   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
004272   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
004274   6f68     movwf   0x68, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	432; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISA = TRISA & (~mask[pin]); 					// set as output pin
004276   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004278   fff6
00427a   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00427c   fff7
00427e   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004280   fff8
004282   0009     tblrd*+                  	TBLRD*+	
004284   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004286   f001
004288   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
00428a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00428c   1692     andwf   0x92, 0x1, 0x0   	ANDWF	_TRISA, F
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00428e   d08e     bra     0x0043ac         	BRA	_00535_DS_
                                           _00530_DS_:
                                           ;	.line	435; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pB] = activatedservos[pB] | mask[pin];  // list pin as servo driver.
004290   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
004292   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004294   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004296   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004298   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
00429a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00429c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00429e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0042a0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0042a2   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0042a4   fff6
0042a6   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0042a8   fff7
0042aa   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0042ac   fff8
0042ae   0009     tblrd*+                  	TBLRD*+	
0042b0   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0042b2   f004
0042b4   0105     movlb   0x5              	BANKSEL	(_activatedservos + 1)
0042b6   5169     movf    0x69, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
0042b8   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0042ba   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
0042bc   6f69     movwf   0x69, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	436; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISB = TRISB & (~mask[pin]); 					// set as output pin
0042be   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0042c0   fff6
0042c2   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0042c4   fff7
0042c6   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0042c8   fff8
0042ca   0009     tblrd*+                  	TBLRD*+	
0042cc   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0042ce   f001
0042d0   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
0042d2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0042d4   1693     andwf   0x93, 0x1, 0x0   	ANDWF	_TRISB, F
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0042d6   d06a     bra     0x0043ac         	BRA	_00535_DS_
                                           _00531_DS_:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pC] = activatedservos[pC] | mask[pin];  // list pin as servo driver.
0042d8   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
0042da   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0042dc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0042de   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0042e0   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
0042e2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0042e4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0042e6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0042e8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0042ea   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0042ec   fff6
0042ee   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0042f0   fff7
0042f2   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0042f4   fff8
0042f6   0009     tblrd*+                  	TBLRD*+	
0042f8   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0042fa   f004
0042fc   0105     movlb   0x5              	BANKSEL	(_activatedservos + 2)
0042fe   516a     movf    0x6a, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
004300   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
004302   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
004304   6f6a     movwf   0x6a, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	441; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISC = TRISC & (~mask[pin]); 					// set as output pin
004306   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004308   fff6
00430a   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00430c   fff7
00430e   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004310   fff8
004312   0009     tblrd*+                  	TBLRD*+	
004314   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004316   f001
004318   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
00431a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00431c   1694     andwf   0x94, 0x1, 0x0   	ANDWF	_TRISC, F
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00431e   d046     bra     0x0043ac         	BRA	_00535_DS_
                                           _00532_DS_:
                                           ;	.line	446; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pD] = activatedservos[pD] | mask[pin];  // list pin as servo driver.
004320   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
004322   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004324   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004326   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004328   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
00432a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00432c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00432e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004330   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004332   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004334   fff6
004336   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004338   fff7
00433a   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00433c   fff8
00433e   0009     tblrd*+                  	TBLRD*+	
004340   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
004342   f004
004344   0105     movlb   0x5              	BANKSEL	(_activatedservos + 3)
004346   516b     movf    0x6b, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
004348   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00434a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
00434c   6f6b     movwf   0x6b, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	447; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISD = TRISD & (~mask[pin]); 					// set as output pin
00434e   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004350   fff6
004352   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004354   fff7
004356   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004358   fff8
00435a   0009     tblrd*+                  	TBLRD*+	
00435c   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00435e   f001
004360   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
004362   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004364   1695     andwf   0x95, 0x1, 0x0   	ANDWF	_TRISD, F
                                           ;	.line	448; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
004366   d022     bra     0x0043ac         	BRA	_00535_DS_
                                           _00533_DS_:
                                           ;	.line	452; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pE] = activatedservos[pE] | mask[pin];  // list pin as servo driver.
004368   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00436a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00436c   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
00436e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004370   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
004372   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004374   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004376   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004378   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00437a   fff6
00437c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00437e   fff7
004380   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
004382   fff8
004384   0009     tblrd*+                  	TBLRD*+	
004386   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
004388   f003
00438a   0105     movlb   0x5              	BANKSEL	(_activatedservos + 4)
00438c   516c     movf    0x6c, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
00438e   1203     iorwf   0x03, 0x1, 0x0   	IORWF	r0x03, F
004390   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
004392   6f6c     movwf   0x6c, 0x1        	MOVWF	(_activatedservos + 4), B
                                           ;	.line	453; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISE = TRISE & (~mask[pin]); 					// set as output pin
004394   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
004396   fff6
004398   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00439a   fff7
00439c   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00439e   fff8
0043a0   0009     tblrd*+                  	TBLRD*+	
0043a2   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0043a4   f000
0043a6   1e00     comf    0x00, 0x1, 0x0   	COMF	r0x00, F
0043a8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0043aa   1696     andwf   0x96, 0x1, 0x0   	ANDWF	_TRISE, F
                                           _00535_DS_:
                                           ;	.line	456; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
0043ac   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0043ae   f004
0043b0   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0043b2   f003
0043b4   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0043b6   f002
0043b8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0043ba   f001
0043bc   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0043be   f000
0043c0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0043c2   ffd9
0043c4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void SortServoTimings()
000c1c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000c1e   ffe5
000c20   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000c22   ffe5
000c24   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000c26   ffe5
000c28   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
000c2a   ffe5
000c2c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000c2e   ffe5
000c30   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
000c32   ffe5
000c34   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
000c36   ffe5
000c38   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000c3a   6bd7     clrf    0xd7, 0x1        	CLRF	_SortServoTimings_t_1_32, B
                                           _00411_DS_:
000c3c   0e1e     movlw   0x1e             	MOVLW	0x1e
000c3e   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
000c40   5dd7     subwf   0xd7, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_32, W, B
000c42   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000c44   d066     bra     0x000d12         	BRA	_00358_DS_
                                           ;	.line	256; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=255; 
000c46   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000c48   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000c4a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000c4c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000c4e   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
000c50   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c52   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c54   ffe9
000c56   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c58   ffea
000c5a   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	257; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
000c5c   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000c5e   0d05     mullw   0x05             	MULLW	0x05
000c60   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c62   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c64   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c66   f000
000c68   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c6a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c6c   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
000c6e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c70   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c72   ffe9
000c74   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c76   ffea
000c78   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000c7a   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000c7c   0d05     mullw   0x05             	MULLW	0x05
000c7e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c80   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c82   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c84   f000
000c86   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c88   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c8a   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
000c8c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c8e   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000c90   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000c92   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c94   ffe9
000c96   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c98   ffea
000c9a   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000c9c   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000c9e   0d05     mullw   0x05             	MULLW	0x05
000ca0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000ca2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ca4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ca6   f000
000ca8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000caa   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cac   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
000cae   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cb0   0e02     movlw   0x02             	MOVLW	0x02
000cb2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cb4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cb6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cb8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000cba   ffe9
000cbc   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000cbe   ffea
000cc0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	263; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000cc2   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000cc4   0d05     mullw   0x05             	MULLW	0x05
000cc6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cc8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cca   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ccc   f000
000cce   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cd0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cd2   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
000cd4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cd6   0e03     movlw   0x03             	MOVLW	0x03
000cd8   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cda   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cdc   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cde   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ce0   ffe9
000ce2   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ce4   ffea
000ce6   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000ce8   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000cea   0d05     mullw   0x05             	MULLW	0x05
000cec   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cee   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cf0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000cf2   f000
000cf4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cf6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cf8   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
000cfa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cfc   0e04     movlw   0x04             	MOVLW	0x04
000cfe   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000d00   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d02   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000d04   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d06   ffe9
000d08   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d0a   ffea
000d0c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000d0e   2bd7     incf    0xd7, 0x1, 0x1   	INCF	_SortServoTimings_t_1_32, F, B
000d10   d795     bra     0x000c3c         	BRA	_00411_DS_
                                           _00358_DS_:
000d12   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d14   6bd7     clrf    0xd7, 0x1        	CLRF	_SortServoTimings_t_1_32, B
                                           _00414_DS_:
000d16   0e05     movlw   0x05             	MOVLW	0x05
000d18   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
000d1a   5dd7     subwf   0xd7, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_32, W, B
000d1c   e20d     bc      0x000d38         	BC	_00359_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[t]=0x00;
000d1e   0e6d     movlw   0x6d             	MOVLW	LOW(_mascaratotal)
                                           ; removed redundant BANKSEL
000d20   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000d22   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d24   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d26   0e05     movlw   0x05             	MOVLW	HIGH(_mascaratotal)
000d28   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d2a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d2c   ffe9
000d2e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d30   ffea
000d32   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d34   2bd7     incf    0xd7, 0x1, 0x1   	INCF	_SortServoTimings_t_1_32, F, B
000d36   d7ef     bra     0x000d16         	BRA	_00414_DS_
                                           _00359_DS_:
000d38   0105     movlb   0x5              	BANKSEL	_SortServoTimings_totalservos_1_32
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos=0; // Total servos revised. This helps to keep within "while"
000d3a   6bd8     clrf    0xd8, 0x1        	CLRF	_SortServoTimings_totalservos_1_32, B
000d3c   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	275; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t=0;           // Index to go through timevalue and timings tables.
000d3e   6bd7     clrf    0xd7, 0x1        	CLRF	_SortServoTimings_t_1_32, B
                                           _00407_DS_:
                                           ;	.line	276; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	while(totalservos<TotalPICpins)
000d40   0e1e     movlw   0x1e             	MOVLW	0x1e
000d42   0105     movlb   0x5              	BANKSEL	_SortServoTimings_totalservos_1_32
000d44   5dd8     subwf   0xd8, 0x0, 0x1   	SUBWF	_SortServoTimings_totalservos_1_32, W, B
000d46   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d48   ef21     goto    0x001a42         	GOTO	_00409_DS_
000d4a   f00d
                                           ;	.line	278; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000d4c   0e01     movlw   0x01             	MOVLW	0x01
000d4e   0105     movlb   0x5              	BANKSEL	_SortServoTimings_numservos_1_32
000d50   6fd9     movwf   0xd9, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
000d52   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
                                           ;	.line	280; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
000d54   6bda     clrf    0xda, 0x1        	CLRF	_SortServoTimings_s_1_32, B
                                           _00417_DS_:
000d56   0e1e     movlw   0x1e             	MOVLW	0x1e
000d58   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
000d5a   5dda     subwf   0xda, 0x0, 0x1   	SUBWF	_SortServoTimings_s_1_32, W, B
000d5c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d5e   ef9d     goto    0x00193a         	GOTO	_00406_DS_
000d60   f00c
                                           ;	.line	283; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[s])
000d62   0ed4     movlw   0xd4             	MOVLW	LOW(_port)
                                           ; removed redundant BANKSEL
000d64   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000d66   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d68   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d6a   0e5d     movlw   0x5d             	MOVLW	HIGH(_port)
000d6c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d6e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000d70   0e00     movlw   0x00             	MOVLW	UPPER(_port)
000d72   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000d74   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000d76   fff6
000d78   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000d7a   fff7
000d7c   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000d7e   fff8
000d80   0009     tblrd*+                  	TBLRD*+	
000d82   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000d84   f000
000d86   0e05     movlw   0x05             	MOVLW	0x05
000d88   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000d8a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d8c   ef99     goto    0x001932         	GOTO	_00418_DS_
000d8e   f00c
000d90   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
000d92   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
000d94   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
000d96   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d98   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
000d9a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d9c   0bfc     andlw   0xfc             	ANDLW	0xfc
000d9e   0fae     addlw   0xae             	ADDLW	LOW(_00498_DS_)
000da0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000da2   0e0d     movlw   0x0d             	MOVLW	HIGH(_00498_DS_)
000da4   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
000da6   0e00     movlw   0x00             	MOVLW	UPPER(_00498_DS_)
000da8   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
000daa   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
000dac   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00498_DS_:
000dae   efe1     goto    0x000dc2         	GOTO	_00360_DS_
000db0   f006
000db2   ef02     goto    0x001004         	GOTO	_00369_DS_
000db4   f008
000db6   ef27     goto    0x00124e         	GOTO	_00378_DS_
000db8   f009
000dba   ef50     goto    0x0014a0         	GOTO	_00387_DS_
000dbc   f00a
000dbe   ef76     goto    0x0016ec         	GOTO	_00396_DS_
000dc0   f00b
                                           _00360_DS_:
                                           ;	.line	286; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pA] & activatedservos[pA]){
000dc2   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
000dc4   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
000dc6   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000dc8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000dca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000dcc   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
000dce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000dd0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000dd2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000dd4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000dd6   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000dd8   fff6
000dda   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000ddc   fff7
000dde   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000de0   fff8
000de2   0009     tblrd*+                  	TBLRD*+	
000de4   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000de6   f000
000de8   0105     movlb   0x5              	BANKSEL	_mascaratotal
000dea   516d     movf    0x6d, 0x0, 0x1   	MOVF	_mascaratotal, W, B
000dec   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000dee   0105     movlb   0x5              	BANKSEL	_activatedservos
000df0   5168     movf    0x68, 0x0, 0x1   	MOVF	_activatedservos, W, B
000df2   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000df4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000df6   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
000df8   ef99     goto    0x001932         	GOTO	_00418_DS_
000dfa   f00c
                                           ;	.line	289; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
000dfc   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
000dfe   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
000e00   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000e02   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e04   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e06   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
000e08   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e0a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e0c   ffe9
000e0e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e10   ffea
000e12   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000e14   f000
000e16   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
000e18   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
000e1a   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000e1c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e1e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000e20   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
000e22   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000e24   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000e26   ffe9
000e28   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000e2a   ffea
000e2c   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000e2e   f001
000e30   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000e32   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000e34   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000e36   d08d     bra     0x000f52         	BRA	_00364_DS_
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
000e38   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000e3a   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000e3c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e3e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e40   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
000e42   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e44   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
000e46   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
000e48   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000e4a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e4c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e4e   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
000e50   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e52   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000e54   ffe9
000e56   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000e58   ffea
000e5a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000e5c   f002
000e5e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e60   ffe9
000e62   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e64   ffea
000e66   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000e68   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
000e6a   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	291; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=mask[s];
000e6c   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000e6e   0d05     mullw   0x05             	MULLW	0x05
000e70   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000e72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e74   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000e76   f000
000e78   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000e7a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000e7c   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
000e7e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e80   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
000e82   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
000e84   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000e86   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e88   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e8a   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
000e8c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e8e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
000e90   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000e92   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
000e94   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
000e96   fff6
000e98   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
000e9a   fff7
000e9c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
000e9e   fff8
000ea0   0009     tblrd*+                  	TBLRD*+	
000ea2   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
000ea4   f002
000ea6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ea8   ffe9
000eaa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000eac   ffea
000eae   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000eb0   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
000eb2   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000eb4   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000eb6   0d05     mullw   0x05             	MULLW	0x05
000eb8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000eba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ebc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ebe   f000
000ec0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ec2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ec4   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
000ec6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000ec8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000eca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ecc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ece   ffe9
000ed0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ed2   ffea
000ed4   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	294; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000ed6   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000ed8   0d05     mullw   0x05             	MULLW	0x05
000eda   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000edc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ede   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ee0   f000
000ee2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ee4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ee6   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
000ee8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000eea   0e02     movlw   0x02             	MOVLW	0x02
000eec   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000eee   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000ef0   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ef2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ef4   ffe9
000ef6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ef8   ffea
000efa   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	297; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000efc   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000efe   0d05     mullw   0x05             	MULLW	0x05
000f00   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f02   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f04   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f06   f000
000f08   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f0a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f0c   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
000f0e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f10   0e03     movlw   0x03             	MOVLW	0x03
000f12   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f14   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f16   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f18   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f1a   ffe9
000f1c   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f1e   ffea
000f20   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000f22   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000f24   0d05     mullw   0x05             	MULLW	0x05
000f26   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f28   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f2a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f2c   f000
000f2e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f30   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f32   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
000f34   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f36   0e04     movlw   0x04             	MOVLW	0x04
000f38   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f3a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f3c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f3e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f40   ffe9
000f42   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f44   ffea
000f46   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000f48   0e01     movlw   0x01             	MOVLW	0x01
000f4a   0105     movlb   0x5              	BANKSEL	_SortServoTimings_numservos_1_32
000f4c   6fd9     movwf   0xd9, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
000f4e   ef99     goto    0x001932         	GOTO	_00418_DS_
000f50   f00c
                                           _00364_DS_:
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
000f52   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
000f54   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
000f56   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000f58   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000f5a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000f5c   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
000f5e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f60   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f62   ffe9
000f64   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f66   ffea
000f68   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000f6a   f000
000f6c   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
000f6e   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
000f70   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000f72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f74   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000f76   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
000f78   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000f7a   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000f7c   ffe9
000f7e   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000f80   ffea
000f82   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000f84   f001
000f86   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000f88   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
000f8a   e002     bz      0x000f90         	BZ	_00502_DS_
000f8c   ef99     goto    0x001932         	GOTO	_00418_DS_
000f8e   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00502_DS_:
000f90   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	305; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA] |= mask[s];
000f92   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000f94   0d05     mullw   0x05             	MULLW	0x05
000f96   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f98   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f9a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f9c   f000
000f9e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fa0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000fa2   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
000fa4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
000fa6   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000fa8   0d05     mullw   0x05             	MULLW	0x05
000faa   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000fac   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000fae   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
000fb0   f002
000fb2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fb4   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
000fb6   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
000fb8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000fba   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
000fbc   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
000fbe   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000fc0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
000fc2   6a05     clrf    0x05, 0x0        	CLRF	r0x05
000fc4   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
000fc6   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
000fc8   6a06     clrf    0x06, 0x0        	CLRF	r0x06
000fca   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000fcc   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
000fce   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
000fd0   fff6
000fd2   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
000fd4   fff7
000fd6   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
000fd8   fff8
000fda   0009     tblrd*+                  	TBLRD*+	
000fdc   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
000fde   f004
000fe0   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000fe2   ffe9
000fe4   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000fe6   ffea
000fe8   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000fea   f002
000fec   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000fee   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
000ff0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ff2   ffe9
000ff4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ff6   ffea
000ff8   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
000ffa   ffef
000ffc   0105     movlb   0x5              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
000ffe   2bd9     incf    0xd9, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;      		
001000   ef99     goto    0x001932         	GOTO	_00418_DS_
001002   f00c
                                           _00369_DS_:
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pB] & activatedservos[pB]){
001004   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
001006   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
001008   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00100a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00100c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00100e   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
001010   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001012   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001014   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001016   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001018   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00101a   fff6
00101c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00101e   fff7
001020   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
001022   fff8
001024   0009     tblrd*+                  	TBLRD*+	
001026   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001028   f000
00102a   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 1)
00102c   516e     movf    0x6e, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
00102e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001030   0105     movlb   0x5              	BANKSEL	(_activatedservos + 1)
001032   5169     movf    0x69, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
001034   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001036   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001038   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
00103a   ef99     goto    0x001932         	GOTO	_00418_DS_
00103c   f00c
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
00103e   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
001040   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
001042   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001044   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001046   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001048   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
00104a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00104c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00104e   ffe9
001050   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001052   ffea
001054   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001056   f000
001058   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
00105a   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
00105c   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
00105e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001060   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001062   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
001064   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001066   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001068   ffe9
00106a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00106c   ffea
00106e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001070   f001
001072   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001074   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001076   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001078   d08d     bra     0x001194         	BRA	_00373_DS_
                                           ;	.line	315; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
00107a   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
00107c   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
00107e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001080   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001082   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
001084   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001086   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
001088   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
00108a   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00108c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00108e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001090   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
001092   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001094   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001096   ffe9
001098   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
00109a   ffea
00109c   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00109e   f002
0010a0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010a2   ffe9
0010a4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010a6   ffea
0010a8   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0010aa   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0010ac   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0010ae   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0010b0   0d05     mullw   0x05             	MULLW	0x05
0010b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010b8   f000
0010ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010be   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0010c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010c2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010c4   ffe9
0010c6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010c8   ffea
0010ca   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=mask[s];
0010cc   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0010ce   0d05     mullw   0x05             	MULLW	0x05
0010d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010d6   f000
0010d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010dc   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0010de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010e0   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0010e2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0010e4   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
0010e6   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
0010e8   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0010ea   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0010ec   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0010ee   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
0010f0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0010f2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0010f4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0010f6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0010f8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0010fa   fff6
0010fc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0010fe   fff7
001100   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001102   fff8
001104   0009     tblrd*+                  	TBLRD*+	
001106   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001108   f002
00110a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00110c   ffe9
00110e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001110   ffea
001112   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001114   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001116   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
001118   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00111a   0d05     mullw   0x05             	MULLW	0x05
00111c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00111e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001120   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001122   f000
001124   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001126   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001128   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00112a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00112c   0e02     movlw   0x02             	MOVLW	0x02
00112e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001130   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001132   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001134   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001136   ffe9
001138   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00113a   ffea
00113c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
00113e   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001140   0d05     mullw   0x05             	MULLW	0x05
001142   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001144   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001146   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001148   f000
00114a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00114c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00114e   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
001150   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001152   0e03     movlw   0x03             	MOVLW	0x03
001154   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001156   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001158   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00115a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00115c   ffe9
00115e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001160   ffea
001162   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	325; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001164   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001166   0d05     mullw   0x05             	MULLW	0x05
001168   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00116a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00116c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00116e   f000
001170   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001172   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001174   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
001176   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001178   0e04     movlw   0x04             	MOVLW	0x04
00117a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00117c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00117e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001180   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001182   ffe9
001184   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001186   ffea
001188   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	327; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00118a   0e01     movlw   0x01             	MOVLW	0x01
00118c   0105     movlb   0x5              	BANKSEL	_SortServoTimings_numservos_1_32
00118e   6fd9     movwf   0xd9, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
001190   ef99     goto    0x001932         	GOTO	_00418_DS_
001192   f00c
                                           _00373_DS_:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001194   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
001196   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
001198   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00119a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00119c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00119e   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
0011a0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011a2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0011a4   ffe9
0011a6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0011a8   ffea
0011aa   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0011ac   f000
0011ae   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
0011b0   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
0011b2   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0011b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011b6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0011b8   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
0011ba   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0011bc   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0011be   ffe9
0011c0   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0011c2   ffea
0011c4   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0011c6   f001
0011c8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0011ca   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0011cc   e002     bz      0x0011d2         	BZ	_00507_DS_
0011ce   ef99     goto    0x001932         	GOTO	_00418_DS_
0011d0   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00507_DS_:
0011d2   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	330; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB] |= mask[s];
0011d4   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0011d6   0d05     mullw   0x05             	MULLW	0x05
0011d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0011de   f000
0011e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0011e4   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0011e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011e8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0011ea   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
0011ec   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0011ee   0d05     mullw   0x05             	MULLW	0x05
0011f0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011f2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0011f4   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0011f6   f002
0011f8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011fa   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0011fc   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0011fe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001200   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
001202   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001204   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
001206   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
001208   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00120a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00120c   6a05     clrf    0x05, 0x0        	CLRF	r0x05
00120e   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
001210   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001212   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001214   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001216   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001218   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00121a   fff6
00121c   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
00121e   fff7
001220   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001222   fff8
001224   0009     tblrd*+                  	TBLRD*+	
001226   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001228   f004
00122a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00122c   ffe9
00122e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001230   ffea
001232   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001234   f002
001236   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001238   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00123a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00123c   ffe9
00123e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001240   ffea
001242   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001244   ffef
001246   0105     movlb   0x5              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001248   2bd9     incf    0xd9, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           ;	.line	333; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00124a   ef99     goto    0x001932         	GOTO	_00418_DS_
00124c   f00c
                                           _00378_DS_:
                                           ;	.line	337; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pC] & activatedservos[pC]){
00124e   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
001250   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
001252   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001254   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001256   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001258   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
00125a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00125c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00125e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001260   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001262   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001264   fff6
001266   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001268   fff7
00126a   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00126c   fff8
00126e   0009     tblrd*+                  	TBLRD*+	
001270   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001272   f000
001274   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 2)
001276   516f     movf    0x6f, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
001278   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00127a   0105     movlb   0x5              	BANKSEL	(_activatedservos + 2)
00127c   516a     movf    0x6a, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
00127e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001280   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001282   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001284   ef99     goto    0x001932         	GOTO	_00418_DS_
001286   f00c
                                           ;	.line	340; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001288   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
00128a   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
00128c   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00128e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001290   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001292   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
001294   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001296   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001298   ffe9
00129a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00129c   ffea
00129e   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0012a0   f000
0012a2   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
0012a4   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
0012a6   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0012a8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0012aa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0012ac   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
0012ae   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0012b0   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0012b2   ffe9
0012b4   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0012b6   ffea
0012b8   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0012ba   f001
0012bc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0012be   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0012c0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0012c2   d08d     bra     0x0013de         	BRA	_00382_DS_
                                           ;	.line	341; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
0012c4   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
0012c6   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0012c8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0012ca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0012cc   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
0012ce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0012d0   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
0012d2   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
0012d4   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0012d6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0012d8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0012da   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
0012dc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0012de   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0012e0   ffe9
0012e2   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0012e4   ffea
0012e6   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0012e8   f002
0012ea   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0012ec   ffe9
0012ee   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0012f0   ffea
0012f2   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0012f4   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0012f6   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	342; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0012f8   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0012fa   0d05     mullw   0x05             	MULLW	0x05
0012fc   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0012fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001300   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001302   f000
001304   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001306   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001308   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00130a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00130c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00130e   ffe9
001310   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001312   ffea
001314   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	343; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001316   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001318   0d05     mullw   0x05             	MULLW	0x05
00131a   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00131c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00131e   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001320   f000
001322   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001324   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001326   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
001328   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00132a   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00132c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00132e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001330   ffe9
001332   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001334   ffea
001336   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	344; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=mask[s];
001338   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00133a   0d05     mullw   0x05             	MULLW	0x05
00133c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00133e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001340   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001342   f000
001344   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001346   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001348   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00134a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00134c   0e02     movlw   0x02             	MOVLW	0x02
00134e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001350   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001352   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001354   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
001356   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
001358   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00135a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00135c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00135e   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
001360   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001362   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001364   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001366   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001368   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00136a   fff6
00136c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00136e   fff7
001370   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001372   fff8
001374   0009     tblrd*+                  	TBLRD*+	
001376   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001378   f002
00137a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00137c   ffe9
00137e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001380   ffea
001382   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001384   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001386   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
001388   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00138a   0d05     mullw   0x05             	MULLW	0x05
00138c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00138e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001390   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001392   f000
001394   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001396   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001398   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00139a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00139c   0e03     movlw   0x03             	MOVLW	0x03
00139e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013a2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013a4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013a6   ffe9
0013a8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013aa   ffea
0013ac   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	349; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
0013ae   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0013b0   0d05     mullw   0x05             	MULLW	0x05
0013b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0013b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0013b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0013b8   f000
0013ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0013bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013be   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0013c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013c2   0e04     movlw   0x04             	MOVLW	0x04
0013c4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013c6   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013cc   ffe9
0013ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013d0   ffea
0013d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	351; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
0013d4   0e01     movlw   0x01             	MOVLW	0x01
0013d6   0105     movlb   0x5              	BANKSEL	_SortServoTimings_numservos_1_32
0013d8   6fd9     movwf   0xd9, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
0013da   ef99     goto    0x001932         	GOTO	_00418_DS_
0013dc   f00c
                                           _00382_DS_:
                                           ;	.line	353; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
0013de   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
0013e0   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
0013e2   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0013e4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0013e6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0013e8   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
0013ea   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013ec   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013ee   ffe9
0013f0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013f2   ffea
0013f4   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0013f6   f000
0013f8   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
0013fa   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
0013fc   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0013fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001400   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001402   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
001404   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001406   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001408   ffe9
00140a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00140c   ffea
00140e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001410   f001
001412   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001414   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001416   e002     bz      0x00141c         	BZ	_00512_DS_
001418   ef99     goto    0x001932         	GOTO	_00418_DS_
00141a   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00512_DS_:
00141c   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC] |= mask[s];
00141e   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001420   0d05     mullw   0x05             	MULLW	0x05
001422   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001424   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001426   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001428   f000
00142a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00142c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00142e   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
001430   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001432   0e02     movlw   0x02             	MOVLW	0x02
001434   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001436   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001438   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
00143a   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00143c   0d05     mullw   0x05             	MULLW	0x05
00143e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001440   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001442   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001444   f002
001446   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001448   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
00144a   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00144c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00144e   0e02     movlw   0x02             	MOVLW	0x02
001450   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001452   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001454   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001456   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
001458   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
00145a   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00145c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00145e   6a05     clrf    0x05, 0x0        	CLRF	r0x05
001460   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
001462   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001464   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001466   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001468   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
00146a   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00146c   fff6
00146e   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001470   fff7
001472   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001474   fff8
001476   0009     tblrd*+                  	TBLRD*+	
001478   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00147a   f004
00147c   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00147e   ffe9
001480   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001482   ffea
001484   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001486   f002
001488   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00148a   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00148c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00148e   ffe9
001490   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001492   ffea
001494   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001496   ffef
001498   0105     movlb   0x5              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	355; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
00149a   2bd9     incf    0xd9, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           ;	.line	357; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00149c   ef99     goto    0x001932         	GOTO	_00418_DS_
00149e   f00c
                                           _00387_DS_:
                                           ;	.line	362; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pD] & activatedservos[pD]){
0014a0   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
0014a2   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
0014a4   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0014a6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014a8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014aa   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
0014ac   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014ae   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014b0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0014b2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0014b4   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0014b6   fff6
0014b8   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0014ba   fff7
0014bc   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0014be   fff8
0014c0   0009     tblrd*+                  	TBLRD*+	
0014c2   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0014c4   f000
0014c6   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 3)
0014c8   5170     movf    0x70, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0014ca   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014cc   0105     movlb   0x5              	BANKSEL	(_activatedservos + 3)
0014ce   516b     movf    0x6b, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
0014d0   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014d2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0014d4   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
0014d6   ef99     goto    0x001932         	GOTO	_00418_DS_
0014d8   f00c
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
0014da   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
0014dc   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
0014de   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0014e0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014e2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014e4   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
0014e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0014ea   ffe9
0014ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0014ee   ffea
0014f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0014f2   f000
0014f4   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
0014f6   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
0014f8   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0014fa   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0014fc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014fe   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
001500   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001502   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001504   ffe9
001506   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001508   ffea
00150a   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
00150c   f001
00150e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001510   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001512   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001514   d08c     bra     0x00162e         	BRA	_00391_DS_
                                           ;	.line	366; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001516   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001518   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
00151a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00151c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00151e   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
001520   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001522   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
001524   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
001526   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001528   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00152a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00152c   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
00152e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001530   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001532   ffe9
001534   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001536   ffea
001538   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00153a   f002
00153c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00153e   ffe9
001540   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001542   ffea
001544   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001546   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001548   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	367; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
00154a   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00154c   0d05     mullw   0x05             	MULLW	0x05
00154e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001550   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001552   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001554   f000
001556   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001558   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00155a   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00155c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00155e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001560   ffe9
001562   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001564   ffea
001566   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	368; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001568   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00156a   0d05     mullw   0x05             	MULLW	0x05
00156c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00156e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001570   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001572   f000
001574   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001576   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001578   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00157a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00157c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00157e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001580   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001582   ffe9
001584   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001586   ffea
001588   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	369; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
00158a   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00158c   0d05     mullw   0x05             	MULLW	0x05
00158e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001590   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001592   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001594   f000
001596   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001598   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00159a   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00159c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00159e   0e02     movlw   0x02             	MOVLW	0x02
0015a0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015a2   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015a4   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015a6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015a8   ffe9
0015aa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015ac   ffea
0015ae   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	370; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=mask[s];
0015b0   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0015b2   0d05     mullw   0x05             	MULLW	0x05
0015b4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0015b6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0015b8   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0015ba   f000
0015bc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0015be   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c0   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0015c2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0015c4   0e03     movlw   0x03             	MOVLW	0x03
0015c6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015ca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015cc   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
0015ce   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
0015d0   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0015d2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0015d4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0015d6   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
0015d8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0015da   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0015dc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0015de   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0015e0   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0015e2   fff6
0015e4   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0015e6   fff7
0015e8   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0015ea   fff8
0015ec   0009     tblrd*+                  	TBLRD*+	
0015ee   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0015f0   f002
0015f2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015f4   ffe9
0015f6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015f8   ffea
0015fa   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0015fc   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0015fe   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001600   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001602   0d05     mullw   0x05             	MULLW	0x05
001604   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001606   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001608   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00160a   f000
00160c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00160e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001610   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
001612   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001614   0e04     movlw   0x04             	MOVLW	0x04
001616   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001618   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00161a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00161c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00161e   ffe9
001620   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001622   ffea
001624   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	374; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
001626   0e01     movlw   0x01             	MOVLW	0x01
001628   0105     movlb   0x5              	BANKSEL	_SortServoTimings_numservos_1_32
00162a   6fd9     movwf   0xd9, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
00162c   d182     bra     0x001932         	BRA	_00418_DS_
                                           _00391_DS_:
                                           ;	.line	376; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
00162e   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
001630   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
001632   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001634   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001636   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001638   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
00163a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00163c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00163e   ffe9
001640   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001642   ffea
001644   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001646   f000
001648   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
00164a   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
00164c   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
00164e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001650   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001652   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
001654   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001656   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001658   ffe9
00165a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00165c   ffea
00165e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001660   f001
001662   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001664   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001666   e001     bz      0x00166a         	BZ	_00517_DS_
001668   d164     bra     0x001932         	BRA	_00418_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00517_DS_:
00166a   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	377; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD] |= mask[s];
00166c   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00166e   0d05     mullw   0x05             	MULLW	0x05
001670   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001672   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001674   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001676   f000
001678   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00167a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00167c   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00167e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001680   0e03     movlw   0x03             	MOVLW	0x03
001682   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001684   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001686   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
001688   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00168a   0d05     mullw   0x05             	MULLW	0x05
00168c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00168e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001690   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001692   f002
001694   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001696   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001698   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00169a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00169c   0e03     movlw   0x03             	MOVLW	0x03
00169e   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0016a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0016a2   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0016a4   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
0016a6   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
0016a8   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0016aa   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0016ac   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0016ae   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
0016b0   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0016b2   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0016b4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016b6   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0016b8   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0016ba   fff6
0016bc   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0016be   fff7
0016c0   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0016c2   fff8
0016c4   0009     tblrd*+                  	TBLRD*+	
0016c6   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0016c8   f004
0016ca   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0016cc   ffe9
0016ce   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0016d0   ffea
0016d2   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0016d4   f002
0016d6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0016d8   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0016da   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0016dc   ffe9
0016de   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0016e0   ffea
0016e2   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
0016e4   ffef
0016e6   0105     movlb   0x5              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	378; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
0016e8   2bd9     incf    0xd9, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           ;	.line	380; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0016ea   d123     bra     0x001932         	BRA	_00418_DS_
                                           _00396_DS_:
                                           ;	.line	385; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pE] & activatedservos[pE]){
0016ec   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
0016ee   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
0016f0   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0016f2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0016f4   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0016f6   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
0016f8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0016fa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0016fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016fe   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001700   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001702   fff6
001704   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001706   fff7
001708   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00170a   fff8
00170c   0009     tblrd*+                  	TBLRD*+	
00170e   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001710   f000
001712   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 4)
001714   5171     movf    0x71, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001716   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001718   0105     movlb   0x5              	BANKSEL	(_activatedservos + 4)
00171a   516c     movf    0x6c, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
00171c   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00171e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001720   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001722   d107     bra     0x001932         	BRA	_00418_DS_
                                           ;	.line	388; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001724   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
001726   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
001728   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00172a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00172c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00172e   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
001730   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001732   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001734   ffe9
001736   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001738   ffea
00173a   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00173c   f000
00173e   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
001740   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
001742   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
001744   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001746   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001748   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
00174a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00174c   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
00174e   ffe9
001750   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001752   ffea
001754   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001756   f001
001758   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00175a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00175c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00175e   d08b     bra     0x001876         	BRA	_00400_DS_
                                           ;	.line	389; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001760   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001762   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
001764   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001766   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001768   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
00176a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00176c   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
00176e   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
001770   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001772   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001774   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001776   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
001778   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00177a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00177c   ffe9
00177e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001780   ffea
001782   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001784   f002
001786   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001788   ffe9
00178a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00178c   ffea
00178e   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001790   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001792   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	390; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
001794   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001796   0d05     mullw   0x05             	MULLW	0x05
001798   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00179a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00179c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00179e   f000
0017a0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017a2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017a4   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0017a6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017a8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017aa   ffe9
0017ac   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017ae   ffea
0017b0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	391; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
0017b2   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0017b4   0d05     mullw   0x05             	MULLW	0x05
0017b6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017b8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017ba   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017bc   f000
0017be   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017c0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017c2   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0017c4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017c6   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0017c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017cc   ffe9
0017ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017d0   ffea
0017d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	392; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
0017d4   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0017d6   0d05     mullw   0x05             	MULLW	0x05
0017d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017de   f000
0017e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017e4   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0017e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017e8   0e02     movlw   0x02             	MOVLW	0x02
0017ea   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017ec   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0017ee   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017f0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017f2   ffe9
0017f4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017f6   ffea
0017f8   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
0017fa   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0017fc   0d05     mullw   0x05             	MULLW	0x05
0017fe   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001800   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001802   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001804   f000
001806   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001808   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00180a   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00180c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00180e   0e03     movlw   0x03             	MOVLW	0x03
001810   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001812   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001814   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001816   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001818   ffe9
00181a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00181c   ffea
00181e   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	394; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=mask[s];
001820   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001822   0d05     mullw   0x05             	MULLW	0x05
001824   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001826   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001828   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00182a   f000
00182c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00182e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001830   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
001832   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001834   0e04     movlw   0x04             	MOVLW	0x04
001836   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001838   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00183a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00183c   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
00183e   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
001840   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001842   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001844   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001846   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
001848   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00184a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00184c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00184e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001850   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001852   fff6
001854   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001856   fff7
001858   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00185a   fff8
00185c   0009     tblrd*+                  	TBLRD*+	
00185e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001860   f002
001862   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001864   ffe9
001866   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001868   ffea
00186a   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
00186c   ffef
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00186e   0e01     movlw   0x01             	MOVLW	0x01
001870   0105     movlb   0x5              	BANKSEL	_SortServoTimings_numservos_1_32
001872   6fd9     movwf   0xd9, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
001874   d05e     bra     0x001932         	BRA	_00418_DS_
                                           _00400_DS_:
                                           ;	.line	397; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001876   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
001878   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
00187a   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00187c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00187e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001880   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
001882   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001884   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001886   ffe9
001888   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00188a   ffea
00188c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00188e   f000
001890   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
001892   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
001894   25d7     addwf   0xd7, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
001896   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001898   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00189a   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
00189c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00189e   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0018a0   ffe9
0018a2   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0018a4   ffea
0018a6   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0018a8   f001
0018aa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0018ac   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0018ae   e001     bz      0x0018b2         	BZ	_00522_DS_
0018b0   d040     bra     0x001932         	BRA	_00418_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00522_DS_:
0018b2   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	398; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE] |= mask[s];
0018b4   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0018b6   0d05     mullw   0x05             	MULLW	0x05
0018b8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018ba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0018bc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0018be   f000
0018c0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018c2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018c4   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0018c6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0018c8   0e04     movlw   0x04             	MOVLW	0x04
0018ca   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018cc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ce   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
0018d0   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0018d2   0d05     mullw   0x05             	MULLW	0x05
0018d4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018d6   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0018d8   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0018da   f002
0018dc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018de   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e0   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0018e2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0018e4   0e04     movlw   0x04             	MOVLW	0x04
0018e6   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ea   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0018ec   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
0018ee   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
0018f0   25da     addwf   0xda, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0018f2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0018f4   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0018f6   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
0018f8   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0018fa   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0018fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0018fe   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001900   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
001902   fff6
001904   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001906   fff7
001908   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
00190a   fff8
00190c   0009     tblrd*+                  	TBLRD*+	
00190e   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001910   f004
001912   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001914   ffe9
001916   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001918   ffea
00191a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00191c   f002
00191e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001920   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
001922   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001924   ffe9
001926   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001928   ffea
00192a   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
00192c   ffef
00192e   0105     movlb   0x5              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	399; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001930   2bd9     incf    0xd9, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           _00418_DS_:
001932   0105     movlb   0x5              	BANKSEL	_SortServoTimings_s_1_32
                                           ;	.line	280; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
001934   2bda     incf    0xda, 0x1, 0x1   	INCF	_SortServoTimings_s_1_32, F, B
001936   efab     goto    0x000d56         	GOTO	_00417_DS_
001938   f006
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00406_DS_:
00193a   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	405; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pA] |= timings[t][pA];
00193c   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00193e   0d05     mullw   0x05             	MULLW	0x05
001940   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001942   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001944   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001946   f000
001948   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00194a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00194c   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00194e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001950   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001952   ffe9
001954   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001956   ffea
001958   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00195a   f000
00195c   0105     movlb   0x5              	BANKSEL	_mascaratotal
00195e   516d     movf    0x6d, 0x0, 0x1   	MOVF	_mascaratotal, W, B
001960   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001962   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001964   6f6d     movwf   0x6d, 0x1        	MOVWF	_mascaratotal, B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001966   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	406; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pB] |= timings[t][pB];
001968   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00196a   0d05     mullw   0x05             	MULLW	0x05
00196c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00196e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001970   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001972   f000
001974   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001976   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001978   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00197a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00197c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00197e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001980   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001982   ffe9
001984   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001986   ffea
001988   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00198a   f000
00198c   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 1)
00198e   516e     movf    0x6e, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
001990   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001992   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001994   6f6e     movwf   0x6e, 0x1        	MOVWF	(_mascaratotal + 1), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001996   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	408; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pC] |= timings[t][pC];
001998   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00199a   0d05     mullw   0x05             	MULLW	0x05
00199c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00199e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019a0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019a2   f000
0019a4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019a6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019a8   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0019aa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019ac   0e02     movlw   0x02             	MOVLW	0x02
0019ae   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019b0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019b2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019b4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019b6   ffe9
0019b8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ba   ffea
0019bc   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019be   f000
0019c0   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 2)
0019c2   516f     movf    0x6f, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
0019c4   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019c8   6f6f     movwf   0x6f, 0x1        	MOVWF	(_mascaratotal + 2), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0019ca   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	411; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pD] |= timings[t][pD];
0019cc   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0019ce   0d05     mullw   0x05             	MULLW	0x05
0019d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0019d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019d6   f000
0019d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019dc   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0019de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019e0   0e03     movlw   0x03             	MOVLW	0x03
0019e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019e4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019e6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019ea   ffe9
0019ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ee   ffea
0019f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019f2   f000
0019f4   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 3)
0019f6   5170     movf    0x70, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0019f8   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019fa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019fc   6f70     movwf   0x70, 0x1        	MOVWF	(_mascaratotal + 3), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0019fe   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	414; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pE] |= timings[t][pE];
001a00   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001a02   0d05     mullw   0x05             	MULLW	0x05
001a04   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001a06   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001a08   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001a0a   f000
001a0c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001a0e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a10   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
001a12   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001a14   0e04     movlw   0x04             	MOVLW	0x04
001a16   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a18   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001a1a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001a1c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001a1e   ffe9
001a20   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001a22   ffea
001a24   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001a26   f000
001a28   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 4)
001a2a   5171     movf    0x71, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001a2c   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001a2e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001a30   6f71     movwf   0x71, 0x1        	MOVWF	(_mascaratotal + 4), B
001a32   0105     movlb   0x5              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	417; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos += numservos;
001a34   51d9     movf    0xd9, 0x0, 0x1   	MOVF	_SortServoTimings_numservos_1_32, W, B
001a36   0105     movlb   0x5              	BANKSEL	_SortServoTimings_totalservos_1_32
001a38   27d8     addwf   0xd8, 0x1, 0x1   	ADDWF	_SortServoTimings_totalservos_1_32, F, B
001a3a   0105     movlb   0x5              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	418; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t++;
001a3c   2bd7     incf    0xd7, 0x1, 0x1   	INCF	_SortServoTimings_t_1_32, F, B
001a3e   efa0     goto    0x000d40         	GOTO	_00407_DS_
001a40   f006
                                           _00409_DS_:
001a42   0104     movlb   0x4              	BANKSEL	_needreordering
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=0;  // This indicates that servo timings are sorted.
001a44   6bf3     clrf    0xf3, 0x1        	CLRF	_needreordering, B
001a46   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
001a48   f006
001a4a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
001a4c   f005
001a4e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001a50   f004
001a52   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001a54   f003
001a56   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001a58   f002
001a5a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001a5c   f001
001a5e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001a60   f000
001a62   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
007892   0105     movlb   0x5              	BANKSEL	_activatedservos
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA | activatedservos[pA];
007894   5168     movf    0x68, 0x0, 0x1   	MOVF	_activatedservos, W, B
007896   1280     iorwf   0x80, 0x1, 0x0   	IORWF	_PORTA, F
                                           ; removed redundant BANKSEL
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB | activatedservos[pB];
007898   5169     movf    0x69, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
00789a   1281     iorwf   0x81, 0x1, 0x0   	IORWF	_PORTB, F
                                           ; removed redundant BANKSEL
                                           ;	.line	235; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC | activatedservos[pC];
00789c   516a     movf    0x6a, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
00789e   1282     iorwf   0x82, 0x1, 0x0   	IORWF	_PORTC, F
                                           ; removed redundant BANKSEL
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD | activatedservos[pD];
0078a0   516b     movf    0x6b, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
0078a2   1283     iorwf   0x83, 0x1, 0x0   	IORWF	_PORTD, F
                                           ; removed redundant BANKSEL
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE | activatedservos[pE];
0078a4   516c     movf    0x6c, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
0078a6   1284     iorwf   0x84, 0x1, 0x0   	IORWF	_PORTE, F
0078a8   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void ServosPulseDown()
005666   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005668   ffe5
00566a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00566c   ffd9
00566e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005670   ffe5
005672   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005674   ffe5
005676   0105     movlb   0x5              	BANKSEL	_ServosPulseDown_timingindex_1_28
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	volatile unsigned char timingindex = 0;
005678   6bd6     clrf    0xd6, 0x1        	CLRF	_ServosPulseDown_timingindex_1_28, B
00567a   0104     movlb   0x4              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
00567c   6bf4     clrf    0xf4, 0x1        	CLRF	_timedivision, B
                                           _00331_DS_:
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (timevalue[timingindex] == timedivision)
00567e   0e1e     movlw   0x1e             	MOVLW	LOW(_timevalue)
005680   0105     movlb   0x5              	BANKSEL	_ServosPulseDown_timingindex_1_28
005682   25d6     addwf   0xd6, 0x0, 0x1   	ADDWF	_ServosPulseDown_timingindex_1_28, W, B
005684   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005686   6a01     clrf    0x01, 0x0        	CLRF	r0x01
005688   0e05     movlw   0x05             	MOVLW	HIGH(_timevalue)
00568a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00568c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00568e   ffe9
005690   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
005692   ffea
005694   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
005696   f000
005698   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00569a   0104     movlb   0x4              	BANKSEL	_timedivision
00569c   19f4     xorwf   0xf4, 0x0, 0x1   	XORWF	_timedivision, W, B
00569e   e001     bz      0x0056a2         	BZ	_00342_DS_
0056a0   d06a     bra     0x005776         	BRA	_00329_DS_
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           _00342_DS_:
0056a2   0105     movlb   0x5              	BANKSEL	_ServosPulseDown_timingindex_1_28
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA ^ timings[timingindex][pA];
0056a4   51d6     movf    0xd6, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
0056a6   0d05     mullw   0x05             	MULLW	0x05
0056a8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0056aa   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0056ac   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0056ae   f000
0056b0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0056b2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0056b4   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0056b6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0056b8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0056ba   ffe9
0056bc   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0056be   ffea
0056c0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0056c2   f000
0056c4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0056c6   1a80     xorwf   0x80, 0x1, 0x0   	XORWF	_PORTA, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB ^ timings[timingindex][pB];
0056c8   51d6     movf    0xd6, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
0056ca   0d05     mullw   0x05             	MULLW	0x05
0056cc   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0056ce   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0056d0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0056d2   f000
0056d4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0056d6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0056d8   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
0056da   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0056dc   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0056de   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0056e0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0056e2   ffe9
0056e4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0056e6   ffea
0056e8   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0056ea   f000
0056ec   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0056ee   1a81     xorwf   0x81, 0x1, 0x0   	XORWF	_PORTB, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC ^ timings[timingindex][pC];
0056f0   51d6     movf    0xd6, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
0056f2   0d05     mullw   0x05             	MULLW	0x05
0056f4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0056f6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0056f8   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0056fa   f000
0056fc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0056fe   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005700   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
005702   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005704   0e02     movlw   0x02             	MOVLW	0x02
005706   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005708   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00570a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00570c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00570e   ffe9
005710   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
005712   ffea
005714   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
005716   f000
005718   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00571a   1a82     xorwf   0x82, 0x1, 0x0   	XORWF	_PORTC, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD ^ timings[timingindex][pD];
00571c   51d6     movf    0xd6, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
00571e   0d05     mullw   0x05             	MULLW	0x05
005720   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
005722   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005724   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
005726   f000
005728   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00572a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00572c   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00572e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005730   0e03     movlw   0x03             	MOVLW	0x03
005732   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005734   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
005736   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
005738   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00573a   ffe9
00573c   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00573e   ffea
005740   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
005742   f000
005744   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005746   1a83     xorwf   0x83, 0x1, 0x0   	XORWF	_PORTD, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE ^ timings[timingindex][pE];
005748   51d6     movf    0xd6, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
00574a   0d05     mullw   0x05             	MULLW	0x05
00574c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00574e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005750   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
005752   f000
005754   0e00     movlw   0x00             	MOVLW	LOW(_timings)
005756   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005758   0e04     movlw   0x04             	MOVLW	HIGH(_timings)
00575a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00575c   0e04     movlw   0x04             	MOVLW	0x04
00575e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005760   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
005762   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
005764   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005766   ffe9
005768   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00576a   ffea
00576c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00576e   f000
005770   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005772   1a84     xorwf   0x84, 0x1, 0x0   	XORWF	_PORTE, F
                                           ; removed redundant BANKSEL
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timingindex++;
005774   2bd6     incf    0xd6, 0x1, 0x1   	INCF	_ServosPulseDown_timingindex_1_28, F, B
                                           _00329_DS_:
005776   0e07     movlw   0x07             	movlw	7
005778   6fd1     movwf   0xd1, 0x1        	movwf	_loopvar
                                           bucle:
00577a   0000     nop                      	NOP
00577c   0000     nop                      	NOP
00577e   0000     nop                      	NOP
005780   0000     nop                      	NOP
005782   0000     nop                      	NOP
005784   0000     nop                      	NOP
005786   0000     nop                      	NOP
005788   0000     nop                      	NOP
00578a   0000     nop                      	NOP
00578c   0000     nop                      	NOP
00578e   0000     nop                      	NOP
005790   2fd1     decfsz  0xd1, 0x1, 0x1   	decfsz	_loopvar,1
005792   efbd     goto    0x00577a         	goto	bucle
005794   f02b
                                           	
005796   0104     movlb   0x4              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
005798   2bf4     incf    0xf4, 0x1, 0x1   	INCF	_timedivision, F, B
00579a   0efb     movlw   0xfb             	MOVLW	0xfb
                                           ; removed redundant BANKSEL
00579c   5df4     subwf   0xf4, 0x0, 0x1   	SUBWF	_timedivision, W, B
00579e   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
0057a0   d76e     bra     0x00567e         	BRA	_00331_DS_
0057a2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0057a4   f001
0057a6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0057a8   f000
0057aa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0057ac   ffd9
0057ae   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void servos_init()
00685a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00685c   ffe5
00685e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006860   ffe5
006862   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006864   ffe5
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
006866   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00302_DS_:
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[a]=255;  //Filling up the servovalues table to 255.
006868   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
00686a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00686c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00686e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
006870   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
006872   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
006874   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
006876   ffe9
006878   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00687a   ffea
00687c   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ;	.line	160; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][a]= DefaultSERVOMIN; // Setting min servo position to 1000 usec.
00687e   0e96     movlw   0x96             	MOVLW	LOW(_maxminpos)
006880   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
006882   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
006884   6a02     clrf    0x02, 0x0        	CLRF	r0x02
006886   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos)
006888   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00688a   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
00688c   ffe9
00688e   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
006890   ffea
006892   0e40     movlw   0x40             	MOVLW	0x40
006894   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][a]= DefaultSERVOMAX; // Setting max servo position to 2000 usec.
006896   0eb4     movlw   0xb4             	MOVLW	LOW(_maxminpos + 30)
006898   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00689a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00689c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00689e   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos + 30)
0068a0   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0068a2   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0068a4   ffe9
0068a6   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0068a8   ffea
0068aa   0ec0     movlw   0xc0             	MOVLW	0xc0
0068ac   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
0068ae   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0068b0   0e1e     movlw   0x1e             	MOVLW	0x1e
0068b2   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0068b4   e3d9     bnc     0x006868         	BNC	_00302_DS_
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
0068b6   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00304_DS_:
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[a]=0x00;  // Setting all pins as deactivated as servo.
0068b8   0e68     movlw   0x68             	MOVLW	LOW(_activatedservos)
0068ba   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0068bc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0068be   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0068c0   0e05     movlw   0x05             	MOVLW	HIGH(_activatedservos)
0068c2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0068c4   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0068c6   ffe9
0068c8   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0068ca   ffea
0068cc   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
0068ce   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0068d0   0e05     movlw   0x05             	MOVLW	0x05
0068d2   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0068d4   e3f1     bnc     0x0068b8         	BNC	_00304_DS_
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 0; // Disable global HP interrupts
0068d6   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	_INTCONbits, 7
                                           ;	.line	169; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 0; // Disable global LP interrupts
0068d8   9cf2     bcf     0xf2, 0x6, 0x0   	BCF	_INTCONbits, 6
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=0x01; 			//timer 1 prescaler 1 source is internal oscillator
0068da   0e01     movlw   0x01             	MOVLW	0x01
0068dc   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H=0xFF; 			// First value on timer to start up...
0068de   0eff     movlw   0xff             	MOVLW	0xff
0068e0   68cf     setf    0xcf, 0x0        	SETF	_TMR1H
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L=0x00; 			// ...now the first interrupt will be generated by timer after 9 ms.
0068e2   6ace     clrf    0xce, 0x0        	CLRF	_TMR1L
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	IPR1bits.TMR1IP = 1; 	// INT_HIGH_PRIORITY
0068e4   809f     bsf     0x9f, 0x0, 0x0   	BSF	_IPR1bits, 0
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF = 0; 	// Setting flag to 0
0068e6   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIE1bits.TMR1IE = 1; 	// INT_ENABLE
0068e8   809d     bsf     0x9d, 0x0, 0x0   	BSF	_PIE1bits, 0
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CONbits.TMR1ON   = 1; // Starting TMR1
0068ea   80cd     bsf     0xcd, 0x0, 0x0   	BSF	_T1CONbits, 0
                                           ;	.line	179; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 1; // Enable global HP interrupts
0068ec   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 1; // Enable global LP interrupts
0068ee   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
0068f0   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0068f2   f002
0068f4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0068f6   f001
0068f8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0068fa   f000
0068fc   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__toggle	code
                                           _toggle:
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	void toggle(u8 pin)
00757e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
007580   ffe5
007582   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
007584   ffd9
007586   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
007588   ffe5
00758a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00758c   ffe5
00758e   0e02     movlw   0x02             	MOVLW	0x02
007590   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
007592   f000
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	state = digitalread(pin);
007594   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
007596   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
007598   ecd6     call    0x0045ac, 0x0call    0x0045ac, 0x0 	CALL	_digitalread
00759a   f022
00759c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00759e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	digitalwrite(pin, state^1);
0075a0   7001     btg     0x01, 0x0, 0x0   	BTG	r0x01, 0
0075a2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0075a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0075a6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0075a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0075aa   ec78     call    0x003af0, 0x0call    0x003af0, 0x0 	CALL	_digitalwrite
0075ac   f01d
0075ae   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0075b0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0075b2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0075b4   f001
0075b6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0075b8   f000
0075ba   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0075bc   ffd9
0075be   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	u8 digitalread(u8 pin)
0045ac   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0045ae   ffe5
0045b0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0045b2   ffd9
0045b4   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0045b6   ffe5
0045b8   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0045ba   ffe5
0045bc   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0045be   ffe5
0045c0   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0045c2   ffe5
0045c4   0e02     movlw   0x02             	MOVLW	0x02
0045c6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0045c8   f000
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	switch (port[pin])
0045ca   0ed4     movlw   0xd4             	MOVLW	LOW(_port)
0045cc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0045ce   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0045d0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0045d2   0e5d     movlw   0x5d             	MOVLW	HIGH(_port)
0045d4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0045d6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0045d8   0e00     movlw   0x00             	MOVLW	UPPER(_port)
0045da   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0045dc   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0045de   fff6
0045e0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0045e2   fff7
0045e4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0045e6   fff8
0045e8   0009     tblrd*+                  	TBLRD*+	
0045ea   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0045ec   f001
0045ee   0e05     movlw   0x05             	MOVLW	0x05
0045f0   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
0045f2   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0045f4   d0a4     bra     0x00473e         	BRA	_00258_DS_
0045f6   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0045f8   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0045fa   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
0045fc   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0045fe   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
004600   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
004602   0bfc     andlw   0xfc             	ANDLW	0xfc
004604   0f14     addlw   0x14             	ADDLW	LOW(_00290_DS_)
004606   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004608   0e46     movlw   0x46             	MOVLW	HIGH(_00290_DS_)
00460a   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00460c   0e00     movlw   0x00             	MOVLW	UPPER(_00290_DS_)
00460e   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
004610   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
004612   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00290_DS_:
004614   ef14     goto    0x004628         	GOTO	_00253_DS_
004616   f023
004618   ef30     goto    0x004660         	GOTO	_00254_DS_
00461a   f023
00461c   ef4c     goto    0x004698         	GOTO	_00255_DS_
00461e   f023
004620   ef68     goto    0x0046d0         	GOTO	_00256_DS_
004622   f023
004624   ef84     goto    0x004708         	GOTO	_00257_DS_
004626   f023
                                           _00253_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTA & mask[pin])!=0);
004628   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
00462a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00462c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00462e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004630   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
004632   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004634   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004636   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004638   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00463a   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00463c   fff6
00463e   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004640   fff7
004642   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004644   fff8
004646   0009     tblrd*+                  	TBLRD*+	
004648   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00464a   f001
00464c   5080     movf    0x80, 0x0, 0x0   	MOVF	_PORTA, W
00464e   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
004650   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004652   e003     bz      0x00465a         	BZ	_00261_DS_
004654   0e01     movlw   0x01             	MOVLW	0x01
004656   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004658   d001     bra     0x00465c         	BRA	_00262_DS_
                                           _00261_DS_:
00465a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00262_DS_:
00465c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00465e   d070     bra     0x004740         	BRA	_00259_DS_
                                           _00254_DS_:
                                           ;	.line	60; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTB & mask[pin])!=0);
004660   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
004662   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004664   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004666   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004668   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
00466a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00466c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00466e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004670   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004672   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004674   fff6
004676   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004678   fff7
00467a   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00467c   fff8
00467e   0009     tblrd*+                  	TBLRD*+	
004680   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004682   f001
004684   5081     movf    0x81, 0x0, 0x0   	MOVF	_PORTB, W
004686   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
004688   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00468a   e003     bz      0x004692         	BZ	_00263_DS_
00468c   0e01     movlw   0x01             	MOVLW	0x01
00468e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004690   d001     bra     0x004694         	BRA	_00264_DS_
                                           _00263_DS_:
004692   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00264_DS_:
004694   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004696   d054     bra     0x004740         	BRA	_00259_DS_
                                           _00255_DS_:
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTC & mask[pin])!=0);
004698   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
00469a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00469c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00469e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0046a0   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
0046a2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0046a4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0046a6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0046a8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0046aa   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0046ac   fff6
0046ae   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0046b0   fff7
0046b2   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0046b4   fff8
0046b6   0009     tblrd*+                  	TBLRD*+	
0046b8   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0046ba   f001
0046bc   5082     movf    0x82, 0x0, 0x0   	MOVF	_PORTC, W
0046be   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
0046c0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0046c2   e003     bz      0x0046ca         	BZ	_00265_DS_
0046c4   0e01     movlw   0x01             	MOVLW	0x01
0046c6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0046c8   d001     bra     0x0046cc         	BRA	_00266_DS_
                                           _00265_DS_:
0046ca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00266_DS_:
0046cc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0046ce   d038     bra     0x004740         	BRA	_00259_DS_
                                           _00256_DS_:
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTD & mask[pin])!=0);
0046d0   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
0046d2   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0046d4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0046d6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0046d8   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
0046da   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0046dc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0046de   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0046e0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0046e2   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0046e4   fff6
0046e6   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0046e8   fff7
0046ea   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0046ec   fff8
0046ee   0009     tblrd*+                  	TBLRD*+	
0046f0   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0046f2   f001
0046f4   5083     movf    0x83, 0x0, 0x0   	MOVF	_PORTD, W
0046f6   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
0046f8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0046fa   e003     bz      0x004702         	BZ	_00267_DS_
0046fc   0e01     movlw   0x01             	MOVLW	0x01
0046fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004700   d001     bra     0x004704         	BRA	_00268_DS_
                                           _00267_DS_:
004702   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00268_DS_:
004704   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004706   d01c     bra     0x004740         	BRA	_00259_DS_
                                           _00257_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTE & mask[pin])!=0);
004708   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00470a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00470c   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
00470e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004710   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
004712   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004714   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004716   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004718   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00471a   fff6
00471c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00471e   fff7
004720   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
004722   fff8
004724   0009     tblrd*+                  	TBLRD*+	
004726   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
004728   f000
00472a   5084     movf    0x84, 0x0, 0x0   	MOVF	_PORTE, W
00472c   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00472e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004730   e003     bz      0x004738         	BZ	_00269_DS_
004732   0e01     movlw   0x01             	MOVLW	0x01
004734   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004736   d001     bra     0x00473a         	BRA	_00270_DS_
                                           _00269_DS_:
004738   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00270_DS_:
00473a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00473c   d001     bra     0x004740         	BRA	_00259_DS_
                                           _00258_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return 0;
00473e   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00259_DS_:
004740   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004742   f003
004744   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004746   f002
004748   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00474a   f001
00474c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00474e   f000
004750   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004752   ffd9
004754   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	void digitalwrite(u8 pin, u8 state)
003af0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003af2   ffe5
003af4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003af6   ffd9
003af8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003afa   ffe5
003afc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003afe   ffe5
003b00   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003b02   ffe5
003b04   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003b06   ffe5
003b08   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003b0a   ffe5
003b0c   0e02     movlw   0x02             	MOVLW	0x02
003b0e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003b10   f000
003b12   0e03     movlw   0x03             	MOVLW	0x03
003b14   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
003b16   f001
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	switch (port[pin])
003b18   0ed4     movlw   0xd4             	MOVLW	LOW(_port)
003b1a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003b1c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003b1e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003b20   0e5d     movlw   0x5d             	MOVLW	HIGH(_port)
003b22   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003b24   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003b26   0e00     movlw   0x00             	MOVLW	UPPER(_port)
003b28   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003b2a   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003b2c   fff6
003b2e   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003b30   fff7
003b32   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003b34   fff8
003b36   0009     tblrd*+                  	TBLRD*+	
003b38   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003b3a   f002
003b3c   0e05     movlw   0x05             	MOVLW	0x05
003b3e   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
003b40   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
003b42   d0f8     bra     0x003d34         	BRA	_00227_DS_
003b44   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
003b46   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
003b48   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
003b4a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003b4c   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
003b4e   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003b50   0bfc     andlw   0xfc             	ANDLW	0xfc
003b52   0f62     addlw   0x62             	ADDLW	LOW(_00248_DS_)
003b54   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003b56   0e3b     movlw   0x3b             	MOVLW	HIGH(_00248_DS_)
003b58   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
003b5a   0e00     movlw   0x00             	MOVLW	UPPER(_00248_DS_)
003b5c   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
003b5e   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
003b60   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00248_DS_:
003b62   efbb     goto    0x003b76         	GOTO	_00206_DS_
003b64   f01d
003b66   efe8     goto    0x003bd0         	GOTO	_00210_DS_
003b68   f01d
003b6a   ef15     goto    0x003c2a         	GOTO	_00214_DS_
003b6c   f01e
003b6e   ef42     goto    0x003c84         	GOTO	_00218_DS_
003b70   f01e
003b72   ef6f     goto    0x003cde         	GOTO	_00222_DS_
003b74   f01e
                                           _00206_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATA=LATA | mask[pin];
003b76   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003b78   e015     bz      0x003ba4         	BZ	_00208_DS_
003b7a   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003b7c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003b7e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003b80   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003b82   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003b84   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003b86   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003b88   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003b8a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003b8c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003b8e   fff6
003b90   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003b92   fff7
003b94   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003b96   fff8
003b98   0009     tblrd*+                  	TBLRD*+	
003b9a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003b9c   f002
003b9e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003ba0   1289     iorwf   0x89, 0x1, 0x0   	IORWF	_LATA, F
003ba2   d0c8     bra     0x003d34         	BRA	_00227_DS_
                                           _00208_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATA=LATA & (255-mask[pin]);
003ba4   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003ba6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003ba8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003baa   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003bac   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003bae   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003bb0   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003bb2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003bb4   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003bb6   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003bb8   fff6
003bba   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003bbc   fff7
003bbe   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003bc0   fff8
003bc2   0009     tblrd*+                  	TBLRD*+	
003bc4   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003bc6   f002
003bc8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003bca   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003bcc   1689     andwf   0x89, 0x1, 0x0   	ANDWF	_LATA, F
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
003bce   d0b2     bra     0x003d34         	BRA	_00227_DS_
                                           _00210_DS_:
                                           ;	.line	61; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATB=LATB | mask[pin]; 
003bd0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003bd2   e015     bz      0x003bfe         	BZ	_00212_DS_
003bd4   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003bd6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003bd8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003bda   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003bdc   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003bde   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003be0   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003be2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003be4   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003be6   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003be8   fff6
003bea   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003bec   fff7
003bee   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003bf0   fff8
003bf2   0009     tblrd*+                  	TBLRD*+	
003bf4   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003bf6   f002
003bf8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003bfa   128a     iorwf   0x8a, 0x1, 0x0   	IORWF	_LATB, F
003bfc   d09b     bra     0x003d34         	BRA	_00227_DS_
                                           _00212_DS_:
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATB=LATB & (255-mask[pin]);
003bfe   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003c00   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003c02   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003c04   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003c06   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003c08   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003c0a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003c0c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003c0e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003c10   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003c12   fff6
003c14   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003c16   fff7
003c18   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003c1a   fff8
003c1c   0009     tblrd*+                  	TBLRD*+	
003c1e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003c20   f002
003c22   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003c24   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003c26   168a     andwf   0x8a, 0x1, 0x0   	ANDWF	_LATB, F
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
003c28   d085     bra     0x003d34         	BRA	_00227_DS_
                                           _00214_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATC=LATC | mask[pin];
003c2a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003c2c   e015     bz      0x003c58         	BZ	_00216_DS_
003c2e   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003c30   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003c32   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003c34   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003c36   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003c38   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003c3a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003c3c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003c3e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003c40   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003c42   fff6
003c44   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003c46   fff7
003c48   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003c4a   fff8
003c4c   0009     tblrd*+                  	TBLRD*+	
003c4e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003c50   f002
003c52   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003c54   128b     iorwf   0x8b, 0x1, 0x0   	IORWF	_LATC, F
003c56   d06e     bra     0x003d34         	BRA	_00227_DS_
                                           _00216_DS_:
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATC=LATC & (255-mask[pin]);
003c58   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003c5a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003c5c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003c5e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003c60   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003c62   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003c64   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003c66   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003c68   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003c6a   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003c6c   fff6
003c6e   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003c70   fff7
003c72   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003c74   fff8
003c76   0009     tblrd*+                  	TBLRD*+	
003c78   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003c7a   f002
003c7c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003c7e   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003c80   168b     andwf   0x8b, 0x1, 0x0   	ANDWF	_LATC, F
                                           ;	.line	67; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
003c82   d058     bra     0x003d34         	BRA	_00227_DS_
                                           _00218_DS_:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATD=LATD | mask[pin]; 
003c84   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003c86   e015     bz      0x003cb2         	BZ	_00220_DS_
003c88   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003c8a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003c8c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003c8e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003c90   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003c92   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003c94   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003c96   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003c98   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003c9a   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003c9c   fff6
003c9e   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003ca0   fff7
003ca2   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003ca4   fff8
003ca6   0009     tblrd*+                  	TBLRD*+	
003ca8   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003caa   f002
003cac   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003cae   128c     iorwf   0x8c, 0x1, 0x0   	IORWF	_LATD, F
003cb0   d041     bra     0x003d34         	BRA	_00227_DS_
                                           _00220_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATD=LATD & (255-mask[pin]);
003cb2   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003cb4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003cb6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003cb8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003cba   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003cbc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003cbe   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003cc0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003cc2   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003cc4   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003cc6   fff6
003cc8   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003cca   fff7
003ccc   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003cce   fff8
003cd0   0009     tblrd*+                  	TBLRD*+	
003cd2   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003cd4   f002
003cd6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003cd8   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003cda   168c     andwf   0x8c, 0x1, 0x0   	ANDWF	_LATD, F
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
003cdc   d02b     bra     0x003d34         	BRA	_00227_DS_
                                           _00222_DS_:
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATE=LATE | mask[pin]; 
003cde   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003ce0   e015     bz      0x003d0c         	BZ	_00224_DS_
003ce2   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003ce4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003ce6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003ce8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003cea   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003cec   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003cee   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003cf0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003cf2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003cf4   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003cf6   fff6
003cf8   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003cfa   fff7
003cfc   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003cfe   fff8
003d00   0009     tblrd*+                  	TBLRD*+	
003d02   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003d04   f001
003d06   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003d08   128d     iorwf   0x8d, 0x1, 0x0   	IORWF	_LATE, F
003d0a   d014     bra     0x003d34         	BRA	_00227_DS_
                                           _00224_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATE=LATE & (255-mask[pin]);
003d0c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003d0e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003d10   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003d12   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003d14   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003d16   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003d18   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003d1a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003d1c   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
003d1e   fff6
003d20   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003d22   fff7
003d24   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
003d26   fff8
003d28   0009     tblrd*+                  	TBLRD*+	
003d2a   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003d2c   f000
003d2e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003d30   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003d32   168d     andwf   0x8d, 0x1, 0x0   	ANDWF	_LATE, F
                                           _00227_DS_:
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	}
003d34   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003d36   f004
003d38   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003d3a   f003
003d3c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003d3e   f002
003d40   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003d42   f001
003d44   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003d46   f000
003d48   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003d4a   ffd9
003d4c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	void pinmode(u8 pin, u8 state)
003d4e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003d50   ffe5
003d52   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003d54   ffd9
003d56   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003d58   ffe5
003d5a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003d5c   ffe5
003d5e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003d60   ffe5
003d62   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003d64   ffe5
003d66   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003d68   ffe5
003d6a   0e02     movlw   0x02             	MOVLW	0x02
003d6c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003d6e   f000
003d70   0e03     movlw   0x03             	MOVLW	0x03
003d72   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
003d74   f001
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	switch (port[pin])
003d76   0ed4     movlw   0xd4             	MOVLW	LOW(_port)
003d78   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003d7a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003d7c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003d7e   0e5d     movlw   0x5d             	MOVLW	HIGH(_port)
003d80   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003d82   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003d84   0e00     movlw   0x00             	MOVLW	UPPER(_port)
003d86   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003d88   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003d8a   fff6
003d8c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003d8e   fff7
003d90   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003d92   fff8
003d94   0009     tblrd*+                  	TBLRD*+	
003d96   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003d98   f002
003d9a   0e05     movlw   0x05             	MOVLW	0x05
003d9c   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
003d9e   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
003da0   d0f8     bra     0x003f92         	BRA	_00180_DS_
003da2   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
003da4   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
003da6   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
003da8   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003daa   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
003dac   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003dae   0bfc     andlw   0xfc             	ANDLW	0xfc
003db0   0fc0     addlw   0xc0             	ADDLW	LOW(_00201_DS_)
003db2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003db4   0e3d     movlw   0x3d             	MOVLW	HIGH(_00201_DS_)
003db6   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
003db8   0e00     movlw   0x00             	MOVLW	UPPER(_00201_DS_)
003dba   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
003dbc   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
003dbe   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00201_DS_:
003dc0   efea     goto    0x003dd4         	GOTO	_00159_DS_
003dc2   f01e
003dc4   ef17     goto    0x003e2e         	GOTO	_00163_DS_
003dc6   f01f
003dc8   ef44     goto    0x003e88         	GOTO	_00167_DS_
003dca   f01f
003dcc   ef71     goto    0x003ee2         	GOTO	_00171_DS_
003dce   f01f
003dd0   ef9e     goto    0x003f3c         	GOTO	_00175_DS_
003dd2   f01f
                                           _00159_DS_:
                                           ;	.line	49; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISA=TRISA | mask[pin];
003dd4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003dd6   e015     bz      0x003e02         	BZ	_00161_DS_
003dd8   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003dda   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003ddc   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003dde   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003de0   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003de2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003de4   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003de6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003de8   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003dea   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003dec   fff6
003dee   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003df0   fff7
003df2   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003df4   fff8
003df6   0009     tblrd*+                  	TBLRD*+	
003df8   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003dfa   f002
003dfc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003dfe   1292     iorwf   0x92, 0x1, 0x0   	IORWF	_TRISA, F
003e00   d0c8     bra     0x003f92         	BRA	_00180_DS_
                                           _00161_DS_:
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISA=TRISA & (255-mask[pin]);
003e02   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003e04   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003e06   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003e08   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003e0a   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003e0c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003e0e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003e10   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003e12   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003e14   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003e16   fff6
003e18   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003e1a   fff7
003e1c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003e1e   fff8
003e20   0009     tblrd*+                  	TBLRD*+	
003e22   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003e24   f002
003e26   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003e28   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003e2a   1692     andwf   0x92, 0x1, 0x0   	ANDWF	_TRISA, F
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
003e2c   d0b2     bra     0x003f92         	BRA	_00180_DS_
                                           _00163_DS_:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISB=TRISB | mask[pin];
003e2e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003e30   e015     bz      0x003e5c         	BZ	_00165_DS_
003e32   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003e34   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003e36   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003e38   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003e3a   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003e3c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003e3e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003e40   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003e42   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003e44   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003e46   fff6
003e48   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003e4a   fff7
003e4c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003e4e   fff8
003e50   0009     tblrd*+                  	TBLRD*+	
003e52   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003e54   f002
003e56   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003e58   1293     iorwf   0x93, 0x1, 0x0   	IORWF	_TRISB, F
003e5a   d09b     bra     0x003f92         	BRA	_00180_DS_
                                           _00165_DS_:
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISB=TRISB & (255-mask[pin]);
003e5c   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003e5e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003e60   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003e62   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003e64   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003e66   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003e68   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003e6a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003e6c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003e6e   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003e70   fff6
003e72   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003e74   fff7
003e76   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003e78   fff8
003e7a   0009     tblrd*+                  	TBLRD*+	
003e7c   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003e7e   f002
003e80   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003e82   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003e84   1693     andwf   0x93, 0x1, 0x0   	ANDWF	_TRISB, F
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
003e86   d085     bra     0x003f92         	BRA	_00180_DS_
                                           _00167_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISC=TRISC | mask[pin];
003e88   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003e8a   e015     bz      0x003eb6         	BZ	_00169_DS_
003e8c   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003e8e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003e90   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003e92   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003e94   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003e96   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003e98   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003e9a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003e9c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003e9e   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003ea0   fff6
003ea2   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003ea4   fff7
003ea6   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003ea8   fff8
003eaa   0009     tblrd*+                  	TBLRD*+	
003eac   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003eae   f002
003eb0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003eb2   1294     iorwf   0x94, 0x1, 0x0   	IORWF	_TRISC, F
003eb4   d06e     bra     0x003f92         	BRA	_00180_DS_
                                           _00169_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISC=TRISC & (255-mask[pin]);
003eb6   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003eb8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003eba   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003ebc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003ebe   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003ec0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003ec2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003ec4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003ec6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003ec8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003eca   fff6
003ecc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003ece   fff7
003ed0   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003ed2   fff8
003ed4   0009     tblrd*+                  	TBLRD*+	
003ed6   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003ed8   f002
003eda   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003edc   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003ede   1694     andwf   0x94, 0x1, 0x0   	ANDWF	_TRISC, F
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
003ee0   d058     bra     0x003f92         	BRA	_00180_DS_
                                           _00171_DS_:
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISD=TRISD | mask[pin];
003ee2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003ee4   e015     bz      0x003f10         	BZ	_00173_DS_
003ee6   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003ee8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003eea   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003eec   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003eee   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003ef0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003ef2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003ef4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003ef6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003ef8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003efa   fff6
003efc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003efe   fff7
003f00   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003f02   fff8
003f04   0009     tblrd*+                  	TBLRD*+	
003f06   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003f08   f002
003f0a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003f0c   1295     iorwf   0x95, 0x1, 0x0   	IORWF	_TRISD, F
003f0e   d041     bra     0x003f92         	BRA	_00180_DS_
                                           _00173_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISD=TRISD & (255-mask[pin]);
003f10   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003f12   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003f14   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003f16   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003f18   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003f1a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003f1c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003f1e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003f20   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003f22   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003f24   fff6
003f26   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003f28   fff7
003f2a   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003f2c   fff8
003f2e   0009     tblrd*+                  	TBLRD*+	
003f30   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003f32   f002
003f34   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003f36   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003f38   1695     andwf   0x95, 0x1, 0x0   	ANDWF	_TRISD, F
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
003f3a   d02b     bra     0x003f92         	BRA	_00180_DS_
                                           _00175_DS_:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISE=TRISE | mask[pin];
003f3c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003f3e   e015     bz      0x003f6a         	BZ	_00177_DS_
003f40   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003f42   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003f44   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003f46   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003f48   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003f4a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003f4c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003f4e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003f50   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003f52   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003f54   fff6
003f56   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003f58   fff7
003f5a   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003f5c   fff8
003f5e   0009     tblrd*+                  	TBLRD*+	
003f60   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003f62   f001
003f64   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003f66   1296     iorwf   0x96, 0x1, 0x0   	IORWF	_TRISE, F
003f68   d014     bra     0x003f92         	BRA	_00180_DS_
                                           _00177_DS_:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISE=TRISE & (255-mask[pin]);
003f6a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003f6c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003f6e   0eb6     movlw   0xb6             	MOVLW	LOW(_mask)
003f70   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003f72   0e5d     movlw   0x5d             	MOVLW	HIGH(_mask)
003f74   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003f76   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003f78   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003f7a   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
003f7c   fff6
003f7e   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003f80   fff7
003f82   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
003f84   fff8
003f86   0009     tblrd*+                  	TBLRD*+	
003f88   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003f8a   f000
003f8c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003f8e   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003f90   1696     andwf   0x96, 0x1, 0x0   	ANDWF	_TRISE, F
                                           _00180_DS_:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	}
003f92   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003f94   f004
003f96   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003f98   f003
003f9a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003f9c   f002
003f9e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003fa0   f001
003fa2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003fa4   f000
003fa6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003fa8   ffd9
003faa   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/delayms.c	void Delayms(u16 milliseconds)
006382   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006384   ffe5
006386   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006388   ffd9
00638a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00638c   ffe5
00638e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006390   ffe5
006392   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006394   ffe5
006396   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006398   ffe5
00639a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00639c   ffe5
00639e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0063a0   ffe5
0063a2   0e02     movlw   0x02             	MOVLW	0x02
0063a4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0063a6   f000
0063a8   0e03     movlw   0x03             	MOVLW	0x03
0063aa   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0063ac   f001
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/core/delayms.c	u16 n100tcy = System_getPeripheralFrequency() / 100000;
0063ae   ece3     call    0x0043c6, 0x0call    0x0043c6, 0x0 	CALL	_System_getCpuFrequency
0063b0   f021
0063b2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0063b4   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0063b6   f003
0063b8   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
0063ba   f004
0063bc   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
0063be   f005
0063c0   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0063c2   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
0063c4   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
0063c6   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0063c8   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0063ca   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0063cc   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
0063ce   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
0063d0   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0063d2   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0063d4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0063d6   0e01     movlw   0x01             	MOVLW	0x01
0063d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063da   0e86     movlw   0x86             	MOVLW	0x86
0063dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063de   0ea0     movlw   0xa0             	MOVLW	0xa0
0063e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063e2   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0063e4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063e6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0063e8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063ea   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0063ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063ee   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0063f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0063f2   eca8     call    0x005b50, 0x0call    0x005b50, 0x0 	CALL	__divulong
0063f4   f02d
0063f6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0063f8   0e08     movlw   0x08             	MOVLW	0x08
0063fa   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00151_DS_:
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/delayms.c	while (milliseconds--)
0063fc   c000     movff   0x000, 0x004     	MOVFF	r0x00, r0x04
0063fe   f004
006400   c001     movff   0x001, 0x005     	MOVFF	r0x01, r0x05
006402   f005
006404   0eff     movlw   0xff             	MOVLW	0xff
006406   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
006408   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00640a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00640c   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
00640e   e008     bz      0x006420         	BZ	_00154_DS_
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/delayms.c	delay100tcy(n100tcy-3);
006410   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006412   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
006414   0efd     movlw   0xfd             	MOVLW	0xfd
006416   2604     addwf   0x04, 0x1, 0x0   	ADDWF	r0x04, F
006418   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00641a   ec32     call    0x005e64, 0x0call    0x005e64, 0x0 	CALL	_delay100tcy
00641c   f02f
00641e   d7ee     bra     0x0063fc         	BRA	_00151_DS_
                                           _00154_DS_:
006420   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
006422   f005
006424   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
006426   f004
006428   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00642a   f003
00642c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00642e   f002
006430   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006432   f001
006434   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006436   f000
006438   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00643a   ffd9
00643c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__System_getCpuFrequency	code
                                           _System_getCpuFrequency:
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u32 System_getCpuFrequency() 
0043c6   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0043c8   ffe5
0043ca   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0043cc   ffe5
0043ce   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0043d0   ffe5
0043d2   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0043d4   ffe5
0043d6   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0043d8   ffe5
0043da   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0043dc   ffe5
                                           ;	.line	242; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 0)
0043de   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
0043e0   0b03     andlw   0x03             	ANDLW	0x03
0043e2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0043e4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0043e6   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
0043e8   d091     bra     0x00450c         	BRA	_00116_DS_
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV  = ( System_readFlashMemory(__CONFIG1L) & 0b00011000 ) >> 3;
0043ea   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0043ec   0e30     movlw   0x30             	MOVLW	0x30
0043ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0043f0   0e00     movlw   0x00             	MOVLW	0x00
0043f2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0043f4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0043f6   ecd4     call    0x0065a8, 0x0call    0x0065a8, 0x0 	CALL	_System_readFlashMemory
0043f8   f032
0043fa   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0043fc   0e04     movlw   0x04             	MOVLW	0x04
0043fe   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004400   0e18     movlw   0x18             	MOVLW	0x18
004402   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
004404   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004406   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004408   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
00440a   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
00440c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00440e   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004410   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
004412   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004414   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004416   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
                                           ;	.line	269; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV_XTAL = cpudiv_xtal[CPUDIV];
004418   0e92     movlw   0x92             	MOVLW	LOW(_cpudiv_xtal)
00441a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00441c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00441e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004420   0e5d     movlw   0x5d             	MOVLW	HIGH(_cpudiv_xtal)
004422   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004424   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004426   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv_xtal)
004428   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00442a   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00442c   fff6
00442e   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004430   fff7
004432   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004434   fff8
004436   0009     tblrd*+                  	TBLRD*+	
004438   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00443a   f001
                                           ;	.line	270; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc  = System_readFlashMemory(__CONFIG1H) & 0b00001111;
00443c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00443e   0e30     movlw   0x30             	MOVLW	0x30
004440   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004442   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004444   0e01     movlw   0x01             	MOVLW	0x01
004446   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004448   ecd4     call    0x0065a8, 0x0call    0x0065a8, 0x0 	CALL	_System_readFlashMemory
00444a   f032
00444c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00444e   0e04     movlw   0x04             	MOVLW	0x04
004450   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004452   0e0f     movlw   0x0f             	MOVLW	0x0f
004454   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV = cpudiv[CPUDIV];
004456   0e8e     movlw   0x8e             	MOVLW	LOW(_cpudiv)
004458   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00445a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00445c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00445e   0e5d     movlw   0x5d             	MOVLW	HIGH(_cpudiv)
004460   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
004462   6a05     clrf    0x05, 0x0        	CLRF	r0x05
004464   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv)
004466   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
004468   c003     movff   0x003, 0xff6     	MOVFF	r0x03, TBLPTRL
00446a   fff6
00446c   c004     movff   0x004, 0xff7     	MOVFF	r0x04, TBLPTRH
00446e   fff7
004470   c005     movff   0x005, 0xff8     	MOVFF	r0x05, TBLPTRU
004472   fff8
004474   0009     tblrd*+                  	TBLRD*+	
004476   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
004478   f000
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc >>=1;
00447a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00447c   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
                                           ;	.line	293; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if( (fosc==0) || (fosc==2) || (fosc==6) )
00447e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004480   e006     bz      0x00448e         	BZ	_00110_DS_
004482   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004484   0a02     xorlw   0x02             	XORLW	0x02
004486   e003     bz      0x00448e         	BZ	_00110_DS_
004488   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00448a   0a06     xorlw   0x06             	XORLW	0x06
00448c   e11f     bnz     0x0044cc         	BNZ	_00111_DS_
                                           _00110_DS_:
                                           ;	.line	295; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return CRYSTAL / CPUDIV_XTAL;
00448e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004490   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004492   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004494   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004496   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004498   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00449a   0e7a     movlw   0x7a             	MOVLW	0x7a
00449c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00449e   0e12     movlw   0x12             	MOVLW	0x12
0044a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0044a2   0e00     movlw   0x00             	MOVLW	0x00
0044a4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0044a6   ec4d     call    0x004a9a, 0x0call    0x004a9a, 0x0 	CALL	__divslong
0044a8   f025
0044aa   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0044ac   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0044ae   f002
0044b0   cff4     movff   0xff4, 0x003     	MOVFF	PRODH, r0x03
0044b2   f003
0044b4   cfe9     movff   0xfe9, 0x004     	MOVFF	FSR0L, r0x04
0044b6   f004
0044b8   0e08     movlw   0x08             	MOVLW	0x08
0044ba   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0044bc   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
0044be   ffe9
0044c0   c003     movff   0x003, 0xff4     	MOVFF	r0x03, PRODH
0044c2   fff4
0044c4   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
0044c6   fff3
0044c8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0044ca   d063     bra     0x004592         	BRA	_00121_DS_
                                           _00111_DS_:
                                           ;	.line	299; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 96000000UL / CPUDIV;
0044cc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0044ce   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0044d0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0044d2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0044d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0044d6   0e05     movlw   0x05             	MOVLW	0x05
0044d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0044da   0eb8     movlw   0xb8             	MOVLW	0xb8
0044dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0044de   0ed8     movlw   0xd8             	MOVLW	0xd8
0044e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0044e2   0e00     movlw   0x00             	MOVLW	0x00
0044e4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0044e6   eca8     call    0x005b50, 0x0call    0x005b50, 0x0 	CALL	__divulong
0044e8   f02d
0044ea   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0044ec   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0044ee   f001
0044f0   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
0044f2   f002
0044f4   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
0044f6   f003
0044f8   0e08     movlw   0x08             	MOVLW	0x08
0044fa   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0044fc   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0044fe   ffe9
004500   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
004502   fff4
004504   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
004506   fff3
004508   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00450a   d043     bra     0x004592         	BRA	_00121_DS_
                                           _00116_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 1)
00450c   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
00450e   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004510   0a01     xorlw   0x01             	XORLW	0x01
004512   e106     bnz     0x004520         	BNZ	_00118_DS_
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 32768;
004514   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
004516   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
004518   0e80     movlw   0x80             	MOVLW	0x80
00451a   6ef3     movwf   0xf3, 0x0        	MOVWF	PRODL
00451c   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
00451e   d039     bra     0x004592         	BRA	_00121_DS_
                                           _00118_DS_:
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS >= 2)
004520   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
004522   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004524   0f80     addlw   0x80             	ADDLW	0x80
004526   0f7e     addlw   0x7e             	ADDLW	0x7e
004528   e330     bnc     0x00458a         	BNC	_00120_DS_
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ircf[OSCCONbits.IRCF];
00452a   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
00452c   38e8     swapf   0xe8, 0x0, 0x0   	SWAPF	WREG, W
00452e   0b07     andlw   0x07             	ANDLW	0x07
004530   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004532   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004534   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004536   0e04     movlw   0x04             	MOVLW	0x04
004538   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00453a   ec71     call    0x006ae2, 0x0call    0x006ae2, 0x0 	CALL	__mulint
00453c   f035
00453e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004540   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
004542   f001
004544   0e04     movlw   0x04             	MOVLW	0x04
004546   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004548   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00454a   0e96     movlw   0x96             	MOVLW	LOW(_ircf)
00454c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00454e   0e5d     movlw   0x5d             	MOVLW	HIGH(_ircf)
004550   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004552   0e00     movlw   0x00             	MOVLW	UPPER(_ircf)
004554   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004556   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
004558   fff6
00455a   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00455c   fff7
00455e   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
004560   fff8
004562   0009     tblrd*+                  	TBLRD*+	
004564   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
004566   f000
004568   0009     tblrd*+                  	TBLRD*+	
00456a   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00456c   f001
00456e   0009     tblrd*+                  	TBLRD*+	
004570   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
004572   f002
004574   0009     tblrd*+                  	TBLRD*+	
004576   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
004578   f003
00457a   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
00457c   ffe9
00457e   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
004580   fff4
004582   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
004584   fff3
004586   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004588   d004     bra     0x004592         	BRA	_00121_DS_
                                           _00120_DS_:
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 0;
00458a   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
00458c   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
00458e   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
004590   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00121_DS_:
004592   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004594   f005
004596   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004598   f004
00459a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00459c   f003
00459e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0045a0   f002
0045a2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0045a4   f001
0045a6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0045a8   f000
0045aa   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__System_readFlashMemory	code
                                           _System_readFlashMemory:
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u16 System_readFlashMemory(u32 address)
0065a8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0065aa   ffe5
0065ac   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0065ae   ffd9
0065b0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0065b2   ffe5
0065b4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0065b6   ffe5
0065b8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0065ba   ffe5
0065bc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0065be   ffe5
0065c0   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0065c2   ffe5
0065c4   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0065c6   ffe5
0065c8   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
0065ca   ffe5
0065cc   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
0065ce   ffe5
0065d0   0e02     movlw   0x02             	MOVLW	0x02
0065d2   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0065d4   f000
0065d6   0e03     movlw   0x03             	MOVLW	0x03
0065d8   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0065da   f001
0065dc   0e04     movlw   0x04             	MOVLW	0x04
0065de   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0065e0   f002
0065e2   0e05     movlw   0x05             	MOVLW	0x05
0065e4   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0065e6   f003
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRU = address >> 16;
0065e8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0065ea   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0065ec   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0065ee   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0065f0   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0065f2   6a07     clrf    0x07, 0x0        	CLRF	r0x07
0065f4   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0065f6   6ef8     movwf   0xf8, 0x0        	MOVWF	_TBLPTRU
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRH = address >> 8;
0065f8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0065fa   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0065fc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0065fe   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
006600   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
006602   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
006604   6a07     clrf    0x07, 0x0        	CLRF	r0x07
006606   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
006608   6ef7     movwf   0xf7, 0x0        	MOVWF	_TBLPTRH
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRL = address;
00660a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00660c   6ef6     movwf   0xf6, 0x0        	MOVWF	_TBLPTRL
00660e   0009     tblrd*+                  	tblrd*+
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	l8 = TABLAT;
006610   cff5     movff   0xff5, 0x000     	MOVFF	_TABLAT, r0x00
006612   f000
006614   0009     tblrd*+                  	tblrd*+
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	h8 = TABLAT;
006616   cff5     movff   0xff5, 0x001     	MOVFF	_TABLAT, r0x01
006618   f001
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ((h8 << 8) + l8);
00661a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00661c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00661e   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
006620   6a03     clrf    0x03, 0x0        	CLRF	r0x03
006622   6a05     clrf    0x05, 0x0        	CLRF	r0x05
006624   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006626   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
006628   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00662a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00662c   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
00662e   fff3
006630   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
006632   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
006634   f007
006636   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
006638   f006
00663a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00663c   f005
00663e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
006640   f004
006642   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
006644   f003
006646   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006648   f002
00664a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00664c   f001
00664e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006650   f000
006652   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006654   ffd9
006656   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _cpudiv:
005d8e   0302     mulwf   0x02, 0x1        	DB	0x02, 0x03, 0x04, 0x06
005d90   0604     decf    0x04, 0x1, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _cpudiv_xtal:
005d92   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x03, 0x04
005d94   0403     decf    0x03, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _ircf:
005d96   7a12     btg     0x12, 0x5, 0x0   	DB	0x12, 0x7a, 0x00, 0x00, 0x48, 0xe8, 0x01, 0x00, 0x90, 0xd0, 0x03, 0x00
005d98   0000     nop                      
005d9a   e848     dw      0xe848           
005d9c   0001     halt                     
005d9e   d090     bra     0x005ec0         
005da0   0003     sleep                    
005da2   a120     btfss   0x20, 0x0, 0x1   	DB	0x20, 0xa1, 0x07, 0x00, 0x40, 0x42, 0x0f, 0x00, 0x80, 0x84, 0x1e, 0x00
005da4   0007     daw                      
005da6   4240     rrncf   0x40, 0x1, 0x0   
005da8   000f     tblwt+*                  
005daa   8480     bsf     0x80, 0x2, 0x0   
005dac   001e     dw      0x001e           
005dae   0900     iorlw   0x00             	DB	0x00, 0x09, 0x3d, 0x00, 0x00, 0x12, 0x7a, 0x00
005db0   003d     dw      0x003d           
005db2   1200     iorwf   0x00, 0x1, 0x0   
005db4   007a     dw      0x007a           
                                           ; ; Starting pCode block for Ival
                                           _mask:
005db6   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
005db8   0804     sublw   0x04             
005dba   2010     addwfc  0x10, 0x0, 0x0   
005dbc   8040     bsf     0x40, 0x0, 0x0   
005dbe   8040     bsf     0x40, 0x0, 0x0   
005dc0   0201     mulwf   0x01, 0x0        
005dc2   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
005dc4   0402     decf    0x02, 0x0, 0x0   
005dc6   2008     addwfc  0x08, 0x0, 0x0   
005dc8   0201     mulwf   0x01, 0x0        
005dca   0104     movlb   0x4              
005dcc   0402     decf    0x02, 0x0, 0x0   
005dce   1008     iorwf   0x08, 0x0, 0x0   	DB	0x08, 0x10, 0x20, 0x40, 0x80, 0x10
005dd0   4020     rrncf   0x20, 0x0, 0x0   
005dd2   1080     iorwf   0x80, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _port:
005dd4   0101     movlb   0x1              	DB	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02
005dd6   0101     movlb   0x1              
005dd8   0101     movlb   0x1              
005dda   0101     movlb   0x1              
005ddc   0202     mulwf   0x02, 0x0        
005dde   0202     mulwf   0x02, 0x0        
005de0   0002     dw      0x0002           	DB	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
005de2   0000     nop                      
005de4   0000     nop                      
005de6   0404     decf    0x04, 0x0, 0x0   
005de8   0304     mulwf   0x04, 0x1        
005dea   0303     mulwf   0x03, 0x1        
005dec   0303     mulwf   0x03, 0x1        	DB	0x03, 0x03, 0x03, 0x03, 0x03, 0x00
005dee   0303     mulwf   0x03, 0x1        
005df0   0003     sleep                    
                                           ; ; Starting pCode block
                                           ___str_0:
005df2   6e28     movwf   0x28, 0x0        	DB	0x28, 0x6e, 0x75, 0x6c, 0x6c, 0x29, 0x00
005df4   6c75     negf    0x75, 0x0        
005df6   296c     incf    0x6c, 0x0, 0x1   
005df8   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_1:
005dfa   3c20     incfsz  0x20, 0x0, 0x0   	DB	0x20, 0x3c, 0x2e, 0x3e, 0x3c, 0x2e, 0x3e, 0x20, 0x00
005dfc   3e2e     incfsz  0x2e, 0x1, 0x0   
005dfe   2e3c     decfsz  0x3c, 0x1, 0x0   
005e00   203e     addwfc  0x3e, 0x0, 0x0   
005e02   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_2:
005e04   2020     addwfc  0x20, 0x0, 0x0   	DB	0x20, 0x20, 0x23, 0x23, 0x23, 0x23, 0x20, 0x20, 0x00
005e06   2323     addwfc  0x23, 0x1, 0x1   
005e08   2323     addwfc  0x23, 0x1, 0x1   
005e0a   2020     addwfc  0x20, 0x0, 0x0   
005e0c   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_3:
005e0e   2820     incf    0x20, 0x0, 0x0   	DB	0x20, 0x28, 0x2e, 0x29, 0x28, 0x2e, 0x29, 0x20, 0x00
005e10   292e     incf    0x2e, 0x0, 0x1   
005e12   2e28     decfsz  0x28, 0x1, 0x0   
005e14   2029     addwfc  0x29, 0x0, 0x0   
005e16   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_4:
005e18   2020     addwfc  0x20, 0x0, 0x0   	DB	0x20, 0x20, 0x2d, 0x2d, 0x2d, 0x2d, 0x20, 0x20, 0x00
005e1a   2d2d     decfsz  0x2d, 0x0, 0x1   
005e1c   2d2d     decfsz  0x2d, 0x0, 0x1   
005e1e   2020     addwfc  0x20, 0x0, 0x0   
005e20   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_5:
005e22   3161     rrcf    0x61, 0x0, 0x1   	DB	0x61, 0x31, 0x3a, 0x00
005e24   003a     dw      0x003a           
                                           ; ; Starting pCode block
                                           ___str_6:
005e26   6368     cpfseq  0x68, 0x1        	DB	0x68, 0x63, 0x3a, 0x00
005e28   003a     dw      0x003a           
                                           ; ; Starting pCode block
                                           ___str_7:
005e2a   6e6e     movwf   0x6e, 0x0        	DB	0x6e, 0x6e, 0x6e, 0x00
005e2c   006e     dw      0x006e           
                                           ; ; Starting pCode block
                                           ___str_8:
005e2e   616d     cpfslt  0x6d, 0x1        	DB	0x6d, 0x61, 0x74, 0x61, 0x72, 0x21, 0x00
005e30   6174     cpfslt  0x74, 0x1        
005e32   2172     addwfc  0x72, 0x0, 0x1   
005e34   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_9:
005e36   7270     btg     0x70, 0x1, 0x0   	DB	0x70, 0x72, 0x67, 0x3a, 0x20, 0x00
005e38   3a67     swapf   0x67, 0x1, 0x0   
005e3a   0020     dw      0x0020           
                                           ; ; Starting pCode block
                                           ___str_10:
005e3c   656d     cpfsgt  0x6d, 0x1        	DB	0x6d, 0x65, 0x6e, 0x75, 0x20, 0x00
005e3e   756e     btg     0x6e, 0x2, 0x1   
005e40   0020     dw      0x0020           
                                           ; ; Starting pCode block
                                           ___str_11:
005e42   7573     btg     0x73, 0x2, 0x1   	DB	0x73, 0x75, 0x6d, 0x6f, 0x20, 0x62, 0x6c, 0x20, 0x00
005e44   6f6d     movwf   0x6d, 0x1        
005e46   6220     cpfseq  0x20, 0x0        
005e48   206c     addwfc  0x6c, 0x0, 0x0   
005e4a   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_12:
005e4c   7573     btg     0x73, 0x2, 0x1   	DB	0x73, 0x75, 0x6d, 0x6f, 0x20, 0x6e, 0x67, 0x00
005e4e   6f6d     movwf   0x6d, 0x1        
005e50   6e20     movwf   0x20, 0x0        
005e52   0067     dw      0x0067           
                                           ; ; Starting pCode block
                                           ___str_13:
005e54   6573     cpfsgt  0x73, 0x1        	DB	0x73, 0x65, 0x67, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x00
005e56   5f67     subwf   0x67, 0x1, 0x1   
005e58   696c     setf    0x6c, 0x1        
005e5a   656e     cpfsgt  0x6e, 0x1        
005e5c   0020     dw      0x0020           
                                           ; ; Starting pCode block
                                           ___str_14:
005e5e   6574     cpfsgt  0x74, 0x1        	DB	0x74, 0x65, 0x73, 0x74, 0x00
005e60   7473     btg     0x73, 0x2, 0x0   
005e62   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	20594 (0x5072) bytes (15.71%)
                                           ;           	10297 (0x2839) words
                                           ; udata size:	  389 (0x0185) bytes (21.71%)
                                           ; access size:	   33 (0x0021) bytes
                                           
                                           
                                           	end
