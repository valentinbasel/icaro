gplink-1.5.0 #1285 (Aug 10 2018)
Copyright (c) 1998-2016 gputils project
Listing File Generated: 16/02/19  16:41:44


Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.7.0 #10231 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	radix	dec


                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	___uflags
                                           	global	_i
                                           	global	__cdc_buffer
                                           	global	_hidRxLen
                                           	global	_hidProtocol
                                           	global	_hidIdleRate
                                           	global	_HIDPostProcess
                                           	global	_deviceAddress
                                           	global	_loopvar
                                           	global	_timingindex
                                           	global	__cpu_clock_
                                           	global	_EnableUSBModule
                                           	global	_ProcessUSBTransactions
                                           	global	_ProcessCDCRequest
                                           	global	_CDCgets
                                           	global	_CDCInitEndpoint
                                           	global	__entry
                                           	global	__startup
                                           	global	_main
                                           	global	_phase
                                           	global	_needreordering
                                           	global	_timedivision
                                           	global	_mascaratotal
                                           	global	_timevalue
                                           	global	_timings
                                           	global	_activatedservos
                                           	global	_servovalues
                                           	global	_maxminpos
                                           	global	_CONTROL_LINE
                                           	global	_deviceState
                                           	global	_remoteWakeup
                                           	global	_selfPowered
                                           	global	_currentConfiguration
                                           	global	_ctrlTransferStage
                                           	global	_requestHandled
                                           	global	_outPtr
                                           	global	_inPtr
                                           	global	_wCount
                                           	global	_ep_bdt
                                           	global	_SetupPacket
                                           	global	_controlTransferBuffer
                                           	global	_CDCControlBuffer
                                           	global	_CDCRxBuffer
                                           	global	_CDCTxBuffer
                                           	global	_line_config
                                           	global	_zlp
                                           	global	_receivedbyte
                                           	global	_receivedbyte2
                                           	global	_rxstr
                                           	global	_rxstr2
                                           	global	_valor
                                           	global	_caracter
                                           	global	_System_readFlashMemory
                                           	global	_System_getCpuFrequency
                                           	global	_Delayms
                                           	global	_pinmode
                                           	global	_digitalwrite
                                           	global	_digitalread
                                           	global	_toggle
                                           	global	_servos_init
                                           	global	_ServoAttach
                                           	global	_ServoDetach
                                           	global	_ServoWrite
                                           	global	_ServoRead
                                           	global	_ServoMinimumPulse
                                           	global	_ServoMaximumPulse
                                           	global	_servos_interrupt
                                           	global	_analog_init
                                           	global	_analogreference
                                           	global	_analogread
                                           	global	_analogwrite_init
                                           	global	_analogwrite
                                           	global	_IO_init
                                           	global	_IO_digital
                                           	global	_ProcessStandardRequest
                                           	global	_InDataStage
                                           	global	_OutDataStage
                                           	global	_SetupStage
                                           	global	_WaitForSetupStage
                                           	global	_ProcessControlTransfer
                                           	global	_UnSuspend
                                           	global	_StartOfFrame
                                           	global	_Stall
                                           	global	_Suspend
                                           	global	_BusReset
                                           	global	_CDCputs
                                           	global	_CDCputc
                                           	global	_CDC_init
                                           	global	_CDC_interrupt
                                           	global	_Delayus
                                           	global	_digital
                                           	global	_leo_puerto
                                           	global	_l293d
                                           	global	_analogico
                                           	global	_puertob
                                           	global	_servos
                                           	global	_setup
                                           	global	_comparo
                                           	global	_loop
                                           	global	_high_priority_isr
                                           	global	_low_priority_isr
                                           	global	_mask
                                           	global	_port
                                           	global	_libdevice_descriptor
                                           	global	_libconfiguration_descriptor
                                           	global	_lang
                                           	global	_manu
                                           	global	_prod
                                           	global	_libstring_descriptor

                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget1
                                           	extern	__gptrput1
                                           	extern	_SPPDATAbits
                                           	extern	_SPPCFGbits
                                           	extern	_SPPEPSbits
                                           	extern	_SPPCONbits
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_LATDbits
                                           	extern	_LATEbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_FSR2Hbits
                                           	extern	_BSRbits
                                           	extern	_FSR1Hbits
                                           	extern	_FSR0Hbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_TBLPTRUbits
                                           	extern	_PCLATHbits
                                           	extern	_PCLATUbits
                                           	extern	_STKPTRbits
                                           	extern	_TOSUbits
                                           	extern	_stack_end
                                           	extern	_SPPDATA
                                           	extern	_SPPCFG
                                           	extern	_SPPEPS
                                           	extern	_SPPCON
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_LATD
                                           	extern	_LATE
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	__divslong
                                           	extern	__divulong
                                           	extern	__mulint
                                           	extern	_delay100tcy
                                           	extern	_x_ftoa
                                           	extern	_strcat
                                           	extern	_strlen
                                           	extern	___uint2fs
                                           	extern	_cinit

                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4


                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _CONTROL_LINE	db	0x00
                                           _rxstr	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _rxstr2	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _valor	db	0x00, 0x00
                                           ___uflags	db	0x00


                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1


                                           usbram5	udata
                                           _SetupPacket	res	64
                                           _controlTransferBuffer	res	64
                                           _CDCRxBuffer	res	64
                                           _CDCTxBuffer	res	64

                                           udata_tortucaro_0	udata
                                           __cpu_clock_	res	4

                                           udata_tortucaro_1	udata
                                           _timingindex	res	1

                                           udata_tortucaro_2	udata
                                           _loopvar	res	1

                                           udata_tortucaro_3	udata
                                           _deviceAddress	res	1

                                           udata_tortucaro_4	udata
                                           _HIDPostProcess	res	1

                                           udata_tortucaro_5	udata
                                           _hidIdleRate	res	1

                                           udata_tortucaro_6	udata
                                           _hidProtocol	res	1

                                           udata_tortucaro_7	udata
                                           _hidRxLen	res	1

                                           udata_tortucaro_8	udata
                                           __cdc_buffer	res	64

                                           udata_tortucaro_9	udata
                                           _i	res	1

                                           udata_tortucaro_10	udata
                                           _servovalues	res	30

                                           udata_tortucaro_11	udata
                                           _maxminpos	res	60

                                           udata_tortucaro_12	udata
                                           _activatedservos	res	5

                                           udata_tortucaro_13	udata
                                           _ServosPulseDown_timingindex_1_30	res	1

                                           udata_tortucaro_14	udata
                                           _timings	res	150

                                           udata_tortucaro_15	udata
                                           _timevalue	res	30

                                           udata_tortucaro_16	udata
                                           _SortServoTimings_t_1_35	res	1

                                           udata_tortucaro_17	udata
                                           _SortServoTimings_totalservos_1_35	res	1

                                           udata_tortucaro_18	udata
                                           _SortServoTimings_numservos_1_35	res	1

                                           udata_tortucaro_19	udata
                                           _SortServoTimings_s_1_35	res	1

                                           udata_tortucaro_20	udata
                                           _mascaratotal	res	5

                                           udata_tortucaro_21	udata
                                           _requestHandled	res	1

                                           udata_tortucaro_22	udata
                                           _outPtr	res	3

                                           udata_tortucaro_23	udata
                                           _wCount	res	2

                                           udata_tortucaro_24	udata
                                           _inPtr	res	3

                                           udata_tortucaro_25	udata
                                           _selfPowered	res	1

                                           udata_tortucaro_26	udata
                                           _remoteWakeup	res	1

                                           udata_tortucaro_27	udata
                                           _deviceState	res	1

                                           udata_tortucaro_28	udata
                                           _currentConfiguration	res	1

                                           udata_tortucaro_29	udata
                                           _ctrlTransferStage	res	1

                                           udata_tortucaro_30	udata
                                           _line_config	res	7

                                           udata_tortucaro_31	udata
                                           _zlp	res	8

                                           udata_tortucaro_32	udata
                                           _CDCControlBuffer	res	16

                                           udata_tortucaro_33	udata
                                           _caracter	res	2

                                           udata_tortucaro_34	udata
                                           _receivedbyte	res	1

                                           udata_tortucaro_35	udata
                                           _receivedbyte2	res	1

                                           udata_tortucaro_36	udata
                                           _analogico_chaine_1_250	res	0


                                           ustat_tortucaro_00	udata	0X0400
                                           _ep_bdt        	res	128

                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------

                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_tortucaro___entry	code	0X000C00
                                           __entry:
000c00   ef66     goto    0x004acc         	goto	__startup
000c02   f025
                                           	
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/source/tortucaro/crt0iz.c	}
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_tortucaro_ivec_0x1_high_priority_isr	code	0X000C08
                                           ivec_0x1_high_priority_isr:
000c08   ef5f     goto    0x0052be         	GOTO	_high_priority_isr
000c0a   f029

                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_tortucaro_ivec_0x2_low_priority_isr	code	0X000C18
                                           ivec_0x2_low_priority_isr:
000c18   ef9c     goto    0x005338         	GOTO	_low_priority_isr
000c1a   f029

                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_tortucaro__main	code
                                           _main:
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	if (OSCCONbits.SCS > 0x01)
00588c   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
00588e   0b03     andlw   0x03             	ANDLW	0x03
005890   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005892   0e02     movlw   0x02             	MOVLW	0x02
005894   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
005896   e302     bnc     0x00589c         	BNC	_01797_DS_
                                           _01793_DS_:
                                           ;	.line	201; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	while (!OSCCONbits.IOFS);
005898   a4d3     btfss   0xd3, 0x2, 0x0   	BTFSS	_OSCCONbits, 2
00589a   d7fe     bra     0x005898         	BRA	_01793_DS_
                                           _01797_DS_:
                                           ;	.line	245; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	IO_init();
00589c   ec9e     call    0x00593c, 0x0    	CALL	_IO_init
00589e   f02c
                                           ;	.line	246; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	IO_digital();
0058a0   ec06     call    0x000c0c, 0x0    	CALL	_IO_digital
0058a2   f006
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	CDC_init();
0058a4   ecba     call    0x004d74, 0x0    	CALL	_CDC_init
0058a6   f026
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	analog_init();
0058a8   ec89     call    0x005912, 0x0    	CALL	_analog_init
0058aa   f02c
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	servos_init();
0058ac   ec68     call    0x004cd0, 0x0    	CALL	_servos_init
0058ae   f026
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	setup();
0058b0   ec0d     call    0x004a1a, 0x0    	CALL	_setup
0058b2   f025
                                           _01799_DS_:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	loop();
0058b4   ec2d     call    0x00585a, 0x0    	CALL	_loop
0058b6   f02c
0058b8   d7fd     bra     0x0058b4         	BRA	_01799_DS_
                                           ;	.line	332; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	}
0058ba   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__low_priority_isr	code
                                           _low_priority_isr:
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	void low_priority_isr(void) __interrupt 2
005338   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
00533a   ffe5
00533c   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00533e   ffe5
005340   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005342   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
005344   ffe5
005346   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
005348   ffe5
00534a   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
00534c   ffe5
00534e   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
005350   ffe5
005352   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
005354   ffe5
005356   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
005358   ffe5
00535a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00535c   ffe5
00535e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005360   ffd9
005362   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
005364   ffe5
005366   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
005368   ffe5
00536a   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
00536c   ffe5
00536e   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
005370   ffe5
                                           	
005372   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
005374   fff5
005376   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
005378   fff8
00537a   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
00537c   fff7
00537e   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
005380   fff6
                                           	
                                           ;	.line	567; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	}
005382   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005384   ffd9
005386   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
005388   fffb
00538a   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
00538c   fffa
00538e   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
005390   ffea
005392   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
005394   ffe9
005396   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
005398   fff4
00539a   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00539c   fff3
00539e   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0053a0   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
0053a2   ffe0
0053a4   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
0053a6   ffd8
0053a8   0010     retfie  0x0              	RETFIE	

                                           ; ; Starting pCode block
                                           S_tortucaro__high_priority_isr	code
                                           _high_priority_isr:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	void high_priority_isr(void) __interrupt 1
0052be   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
0052c0   ffe5
0052c2   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
0052c4   ffe5
0052c6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052c8   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
0052ca   ffe5
0052cc   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
0052ce   ffe5
0052d0   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
0052d2   ffe5
0052d4   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
0052d6   ffe5
0052d8   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
0052da   ffe5
0052dc   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
0052de   ffe5
0052e0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0052e2   ffe5
0052e4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0052e6   ffd9
0052e8   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
0052ea   ffe5
0052ec   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
0052ee   ffe5
0052f0   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
0052f2   ffe5
0052f4   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
0052f6   ffe5
                                           	
                                           ;	.line	453; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	CDC_interrupt();
0052f8   ec23     call    0x005a46, 0x0    	CALL	_CDC_interrupt
0052fa   f02d
                                           ;	.line	477; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	servos_interrupt();
0052fc   ecc9     call    0x005792, 0x0    	CALL	_servos_interrupt
0052fe   f02b
005300   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
005302   fff5
005304   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
005306   fff8
005308   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
00530a   fff7
00530c   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
00530e   fff6
                                           	
                                           ;	.line	522; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	}
005310   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005312   ffd9
005314   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
005316   fffb
005318   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
00531a   fffa
00531c   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00531e   ffea
005320   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
005322   ffe9
005324   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
005326   fff4
005328   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00532a   fff3
00532c   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
00532e   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
005330   ffe0
005332   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
005334   ffd8
005336   0010     retfie  0x0              	RETFIE	

                                           ; ; Starting pCode block
                                           S_tortucaro___startup	code
                                           __startup:
                                           	;	Initialize the stack pointer
004acc   ee16     lfsr    0x1, 0x6ff       	lfsr	1, _stack_end
004ace   f0ff
004ad0   ee26     lfsr    0x2, 0x6ff       	lfsr	2, _stack_end
004ad2   f0ff
                                           	;	1st silicon does not do this on POR
004ad4   6af8     clrf    0xf8, 0x0        	clrf	_TBLPTRU, 0
                                           	;	Initialize the flash memory access configuration.
                                           	;	This is harmless for non-flash devices, so we do it on all parts.
004ad6   8ea6     bsf     0xa6, 0x7, 0x0   	bsf	0xa6, 7, 0 ; EECON1.EEPGD = 1, TBLPTR accesses program memory
004ad8   9ca6     bcf     0xa6, 0x6, 0x0   	bcf	0xa6, 6, 0 ; EECON1.CFGS = 0, TBLPTR accesses program memory
                                           	;	Load FSR0 with top of RAM.
004ada   0ebf     movlw   0xbf             	movlw	0xbf
004adc   6ee9     movwf   0xe9, 0x0        	movwf	_FSR0L, 0
004ade   0e0e     movlw   0x0e             	movlw	0x0e
004ae0   6eea     movwf   0xea, 0x0        	movwf	_FSR0H, 0
                                           	;	Place 0xff at address 0x00 as a sentinel.
004ae2   6800     setf    0x00, 0x0        	setf	0x00, 0
                                           clear_loop:
004ae4   6aed     clrf    0xed, 0x0        	clrf	_POSTDEC0, 0
004ae6   5000     movf    0x00, 0x0, 0x0   	movf	0x00, w, 0
004ae8   e1fd     bnz     0x004ae4         	bnz	clear_loop
                                           	;	TBLPTR = &cinit
004aea   0e68     movlw   0x68             	movlw	low(_cinit)
004aec   6ef6     movwf   0xf6, 0x0        	movwf	_TBLPTRL, 0
004aee   0e5a     movlw   0x5a             	movlw	high(_cinit)
004af0   6ef7     movwf   0xf7, 0x0        	movwf	_TBLPTRH, 0
004af2   0e00     movlw   0x00             	movlw	upper(_cinit)
004af4   6ef8     movwf   0xf8, 0x0        	movwf	_TBLPTRU, 0
                                           	;	0x05 = cinit.num_init
004af6   0009     tblrd*+                  	tblrd*+
004af8   cff5     movff   0xff5, 0x005     	movff	_TABLAT, 0x05
004afa   f005
004afc   0009     tblrd*+                  	tblrd*+
004afe   cff5     movff   0xff5, 0x006     	movff	_TABLAT, (0x05 + 1)
004b00   f006
                                           	;	while (0x05)
004b02   d034     bra     0x004b6c         	bra	entry_loop_dec
                                           entry_loop:
                                           	;	Count down so we only have to look up the data in _cinit once.
                                           	;	At this point we know that TBLPTR points to the top of the current
                                           	;	entry in _cinit, so we can just start reading the from, to, and
                                           	;	size values.
                                           	;	Read the source address low.
                                           	;	0x00 = 0x07 ->from;
004b04   0009     tblrd*+                  	tblrd*+
004b06   cff5     movff   0xff5, 0x000     	movff	_TABLAT, 0x00
004b08   f000
                                           	;	source address high
004b0a   0009     tblrd*+                  	tblrd*+
004b0c   cff5     movff   0xff5, 0x001     	movff	_TABLAT, (0x00 + 1)
004b0e   f001
                                           	;	source address upper
004b10   0009     tblrd*+                  	tblrd*+
004b12   cff5     movff   0xff5, 0x002     	movff	_TABLAT, (0x00 + 2)
004b14   f002
                                           	;	Skip a byte since it is stored as a 32bit int.
004b16   0009     tblrd*+                  	tblrd*+
                                           	;	Read the destination address directly into FSR0
                                           	;	destination address low.
                                           	;	FSR0 = (unsigned short)0x07 ->to;
004b18   0009     tblrd*+                  	tblrd*+
004b1a   cff5     movff   0xff5, 0xfe9     	movff	_TABLAT, _FSR0L
004b1c   ffe9
                                           	;	destination address high
004b1e   0009     tblrd*+                  	tblrd*+
004b20   cff5     movff   0xff5, 0xfea     	movff	_TABLAT, _FSR0H
004b22   ffea
                                           	;	Skip two bytes since it is stored as a 32bit int.
004b24   0009     tblrd*+                  	tblrd*+
004b26   0009     tblrd*+                  	tblrd*+
                                           	;	Read the size of data to transfer to destination address.
                                           	;	0x03 = (unsigned short)0x07 ->size;
004b28   0009     tblrd*+                  	tblrd*+
004b2a   cff5     movff   0xff5, 0x003     	movff	_TABLAT, 0x03
004b2c   f003
004b2e   0009     tblrd*+                  	tblrd*+
004b30   cff5     movff   0xff5, 0x004     	movff	_TABLAT, (0x03 + 1)
004b32   f004
                                           	;	Skip two bytes since it is stored as a 32bit int.
004b34   0009     tblrd*+                  	tblrd*+
004b36   0009     tblrd*+                  	tblrd*+
                                           	;	0x00 = 0x07 ->from;
                                           	;	FSR0 = (unsigned short)0x07 ->to;
                                           	;	0x03 = (unsigned short)0x07 ->size;
                                           	;	The table pointer now points to the next entry. Save it
                                           	;	off since we will be using the table pointer to do the copying
                                           	;	for the entry.
                                           	;	0x07 = TBLPTR
004b38   cff6     movff   0xff6, 0x007     	movff	_TBLPTRL, 0x07
004b3a   f007
004b3c   cff7     movff   0xff7, 0x008     	movff	_TBLPTRH, (0x07 + 1)
004b3e   f008
004b40   cff8     movff   0xff8, 0x009     	movff	_TBLPTRU, (0x07 + 2)
004b42   f009
                                           	;	Now assign the source address to the table pointer.
                                           	;	TBLPTR = 0x00
004b44   c000     movff   0x000, 0xff6     	movff	0x00, _TBLPTRL
004b46   fff6
004b48   c001     movff   0x001, 0xff7     	movff	(0x00 + 1), _TBLPTRH
004b4a   fff7
004b4c   c002     movff   0x002, 0xff8     	movff	(0x00 + 2), _TBLPTRU
004b4e   fff8
004b50   d003     bra     0x004b58         	bra	copy_loop_dec
                                           copy_loop:
004b52   0009     tblrd*+                  	tblrd*+
004b54   cff5     movff   0xff5, 0xfee     	movff	_TABLAT, _POSTINC0
004b56   ffee
                                           copy_loop_dec:
                                           	;	while (--0x03);
                                           	;	Decrement and test the byte counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
004b58   0603     decf    0x03, 0x1, 0x0   	decf	0x03, f, 0
004b5a   e2fb     bc      0x004b52         	bc	copy_loop
004b5c   0604     decf    0x04, 0x1, 0x0   	decf	(0x03 + 1), f, 0
004b5e   e2f9     bc      0x004b52         	bc	copy_loop
                                           	;	Restore the table pointer for the next entry.
                                           	;	TBLPTR = 0x07
004b60   c007     movff   0x007, 0xff6     	movff	0x07, _TBLPTRL
004b62   fff6
004b64   c008     movff   0x008, 0xff7     	movff	(0x07 + 1), _TBLPTRH
004b66   fff7
004b68   c009     movff   0x009, 0xff8     	movff	(0x07 + 2), _TBLPTRU
004b6a   fff8
                                           entry_loop_dec:
                                           	;	while (--0x05);
                                           	;	Decrement and test the entry counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
004b6c   0605     decf    0x05, 0x1, 0x0   	decf	0x05, f, 0
004b6e   e2ca     bc      0x004b04         	bc	entry_loop
004b70   0606     decf    0x06, 0x1, 0x0   	decf	(0x05 + 1), f, 0
004b72   e2c8     bc      0x004b04         	bc	entry_loop
                                           	
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/source/tortucaro/crt0iz.c	main ();
004b74   ec46     call    0x00588c, 0x0    	CALL	_main
004b76   f02c
                                           lockup:
                                           	;	Returning from main will lock up.
004b78   d7ff     bra     0x004b78         	bra	lockup
                                           	
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/source/tortucaro/crt0iz.c	}
                                           ; ; Starting pCode block
                                           S_tortucaro__loop	code
                                           _loop:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void loop()
00585a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00585c   ffe5
                                           _01767_DS_:
00585e   0101     movlb   0x1              	BANKSEL	_valor
                                           ;	.line	253; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	PORTD=valor;
005860   5184     movf    0x84, 0x0, 0x1   	MOVF	_valor, W, B
005862   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(leo_puerto()==1)
005864   ecd8     call    0x0055b0, 0x0    	CALL	_leo_puerto
005866   f02a
005868   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
00586a   f001
00586c   0a01     xorlw   0x01             	XORLW	0x01
00586e   e102     bnz     0x005874         	BNZ	_01777_DS_
005870   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005872   e001     bz      0x005876         	BZ	_01778_DS_
                                           _01777_DS_:
005874   d002     bra     0x00587a         	BRA	_01765_DS_
                                           _01778_DS_:
                                           ;	.line	256; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	comparo();
005876   ece0     call    0x0051c0, 0x0    	CALL	_comparo
005878   f028
                                           _01765_DS_:
00587a   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
00587c   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
00587e   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
005880   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
005882   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
005884   d7ec     bra     0x00585e         	BRA	_01767_DS_
                                           ;	.line	262; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	}
005886   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005888   f001
00588a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__leo_puerto	code
                                           _leo_puerto:
                                           ;	.line	230; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	int leo_puerto()
0055b0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0055b2   ffe5
0055b4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0055b6   ffe5
                                           _01754_DS_:
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	while ((receivedbyte=CDCgets(rxstr))==0);
0055b8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0055ba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0055bc   0e01     movlw   0x01             	MOVLW	HIGH(_rxstr)
0055be   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0055c0   0e04     movlw   0x04             	MOVLW	LOW(_rxstr)
0055c2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0055c4   ec1b     call    0x004036, 0x0    	CALL	_CDCgets
0055c6   f020
0055c8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0055ca   0e03     movlw   0x03             	MOVLW	0x03
0055cc   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0055ce   c000     movff   0x000, 0x1ae     	MOVFF	r0x00, _receivedbyte
0055d0   f1ae
0055d2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0055d4   e0f1     bz      0x0055b8         	BZ	_01754_DS_
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	rxstr[receivedbyte]=0;
0055d6   0e04     movlw   0x04             	MOVLW	LOW(_rxstr)
0055d8   0101     movlb   0x1              	BANKSEL	_receivedbyte
0055da   25ae     addwf   0xae, 0x0, 0x1   	ADDWF	_receivedbyte, W, B
0055dc   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0055de   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0055e0   0e01     movlw   0x01             	MOVLW	HIGH(_rxstr)
0055e2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0055e4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0055e6   ffe9
0055e8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0055ea   ffea
0055ec   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	234; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (receivedbyte>0)
0055ee   51ae     movf    0xae, 0x0, 0x1   	MOVF	_receivedbyte, W, B
0055f0   e007     bz      0x005600         	BZ	_01758_DS_
                                           ;	.line	236; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=rxstr[0];
0055f2   c104     movff   0x104, 0x193     	MOVFF	_rxstr, _caracter
0055f4   f193
0055f6   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
0055f8   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	return 1;
0055fa   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
0055fc   0e01     movlw   0x01             	MOVLW	0x01
0055fe   d002     bra     0x005604         	BRA	_01759_DS_
                                           _01758_DS_:
                                           ;	.line	239; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	return 0;
005600   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005602   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _01759_DS_:
                                           ;	.line	240; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	}
005604   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005606   f001
005608   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00560a   f000
00560c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__comparo	code
                                           _comparo:
0051c0   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='b')
0051c2   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
0051c4   0a62     xorlw   0x62             	XORLW	0x62
0051c6   e102     bnz     0x0051cc         	BNZ	_01738_DS_
                                           ; removed redundant BANKSEL
0051c8   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
0051ca   e001     bz      0x0051ce         	BZ	_01739_DS_
                                           _01738_DS_:
0051cc   d00c     bra     0x0051e6         	BRA	_01707_DS_
                                           _01739_DS_:
                                           ;	.line	206; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	CDCputs("icaro USB 02 \n",14);
0051ce   0e0e     movlw   0x0e             	MOVLW	0x0e
0051d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0051d2   0e00     movlw   0x00             	MOVLW	UPPER(___str_3)
0051d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0051d6   0e3b     movlw   0x3b             	MOVLW	HIGH(___str_3)
0051d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0051da   0e30     movlw   0x30             	MOVLW	LOW(___str_3)
0051dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0051de   eca5     call    0x00414a, 0x0    	CALL	_CDCputs
0051e0   f020
0051e2   0e04     movlw   0x04             	MOVLW	0x04
0051e4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _01707_DS_:
0051e6   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	208; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='m')
0051e8   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
0051ea   0a6d     xorlw   0x6d             	XORLW	0x6d
0051ec   e102     bnz     0x0051f2         	BNZ	_01740_DS_
                                           ; removed redundant BANKSEL
0051ee   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
0051f0   e001     bz      0x0051f4         	BZ	_01741_DS_
                                           _01740_DS_:
0051f2   d002     bra     0x0051f8         	BRA	_01709_DS_
                                           _01741_DS_:
                                           ;	.line	210; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	servos();
0051f4   ec11     call    0x004622, 0x0    	CALL	_servos
0051f6   f023
                                           _01709_DS_:
0051f8   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	212; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='e')
0051fa   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
0051fc   0a65     xorlw   0x65             	XORLW	0x65
0051fe   e102     bnz     0x005204         	BNZ	_01742_DS_
                                           ; removed redundant BANKSEL
005200   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005202   e001     bz      0x005206         	BZ	_01743_DS_
                                           _01742_DS_:
005204   d002     bra     0x00520a         	BRA	_01711_DS_
                                           _01743_DS_:
                                           ;	.line	214; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	analogico();
005206   ec5f     call    0x003cbe, 0x0    	CALL	_analogico
005208   f01e
                                           _01711_DS_:
00520a   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	216; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='l')
00520c   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
00520e   0a6c     xorlw   0x6c             	XORLW	0x6c
005210   e102     bnz     0x005216         	BNZ	_01744_DS_
                                           ; removed redundant BANKSEL
005212   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005214   e001     bz      0x005218         	BZ	_01745_DS_
                                           _01744_DS_:
005216   d002     bra     0x00521c         	BRA	_01713_DS_
                                           _01745_DS_:
                                           ;	.line	218; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	l293d();
005218   ecf2     call    0x0047e4, 0x0    	CALL	_l293d
00521a   f023
                                           _01713_DS_:
00521c   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	220; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='d')
00521e   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
005220   0a64     xorlw   0x64             	XORLW	0x64
005222   e102     bnz     0x005228         	BNZ	_01746_DS_
                                           ; removed redundant BANKSEL
005224   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005226   e001     bz      0x00522a         	BZ	_01747_DS_
                                           _01746_DS_:
005228   d002     bra     0x00522e         	BRA	_01715_DS_
                                           _01747_DS_:
                                           ;	.line	222; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	digital();
00522a   ecaf     call    0x00435e, 0x0    	CALL	_digital
00522c   f021
                                           _01715_DS_:
00522e   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	224; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='s')
005230   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
005232   0a73     xorlw   0x73             	XORLW	0x73
005234   e102     bnz     0x00523a         	BNZ	_01748_DS_
                                           ; removed redundant BANKSEL
005236   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005238   e001     bz      0x00523c         	BZ	_01749_DS_
                                           _01748_DS_:
00523a   d002     bra     0x005240         	BRA	_01718_DS_
                                           _01749_DS_:
                                           ;	.line	226; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	puertob();
00523c   ec74     call    0x0058e8, 0x0    	CALL	_puertob
00523e   f02c
                                           _01718_DS_:
                                           ;	.line	228; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	}
005240   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__setup	code
                                           _setup:
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	TRISB=0;
004a1a   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	183; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(21,INPUT);
004a1c   0e01     movlw   0x01             	MOVLW	0x01
004a1e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a20   0e15     movlw   0x15             	MOVLW	0x15
004a22   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a24   ec51     call    0x0026a2, 0x0    	CALL	_pinmode
004a26   f013
004a28   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a2a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	184; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(22,INPUT);
004a2c   0e01     movlw   0x01             	MOVLW	0x01
004a2e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a30   0e16     movlw   0x16             	MOVLW	0x16
004a32   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a34   ec51     call    0x0026a2, 0x0    	CALL	_pinmode
004a36   f013
004a38   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a3a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(23,INPUT);
004a3c   0e01     movlw   0x01             	MOVLW	0x01
004a3e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a40   0e17     movlw   0x17             	MOVLW	0x17
004a42   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a44   ec51     call    0x0026a2, 0x0    	CALL	_pinmode
004a46   f013
004a48   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a4a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	186; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(24,INPUT);
004a4c   0e01     movlw   0x01             	MOVLW	0x01
004a4e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a50   0e18     movlw   0x18             	MOVLW	0x18
004a52   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a54   ec51     call    0x0026a2, 0x0    	CALL	_pinmode
004a56   f013
004a58   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a5a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(25,OUTPUT);
004a5c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004a5e   0e19     movlw   0x19             	MOVLW	0x19
004a60   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a62   ec51     call    0x0026a2, 0x0    	CALL	_pinmode
004a64   f013
004a66   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a68   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	188; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(26,OUTPUT);
004a6a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004a6c   0e1a     movlw   0x1a             	MOVLW	0x1a
004a6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a70   ec51     call    0x0026a2, 0x0    	CALL	_pinmode
004a72   f013
004a74   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a76   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(27,OUTPUT);
004a78   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004a7a   0e1b     movlw   0x1b             	MOVLW	0x1b
004a7c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a7e   ec51     call    0x0026a2, 0x0    	CALL	_pinmode
004a80   f013
004a82   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a84   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(28,OUTPUT);
004a86   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004a88   0e1c     movlw   0x1c             	MOVLW	0x1c
004a8a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a8c   ec51     call    0x0026a2, 0x0    	CALL	_pinmode
004a8e   f013
004a90   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a92   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(8);
004a94   0e08     movlw   0x08             	MOVLW	0x08
004a96   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a98   ecab     call    0x002b56, 0x0    	CALL	_ServoAttach
004a9a   f015
004a9c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(9);
004a9e   0e09     movlw   0x09             	MOVLW	0x09
004aa0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004aa2   ecab     call    0x002b56, 0x0    	CALL	_ServoAttach
004aa4   f015
004aa6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(10);
004aa8   0e0a     movlw   0x0a             	MOVLW	0x0a
004aaa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004aac   ecab     call    0x002b56, 0x0    	CALL	_ServoAttach
004aae   f015
004ab0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(11);
004ab2   0e0b     movlw   0x0b             	MOVLW	0x0b
004ab4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004ab6   ecab     call    0x002b56, 0x0    	CALL	_ServoAttach
004ab8   f015
004aba   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(12);
004abc   0e0c     movlw   0x0c             	MOVLW	0x0c
004abe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004ac0   ecab     call    0x002b56, 0x0    	CALL	_ServoAttach
004ac2   f015
004ac4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	PORTD=0;
004ac6   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	197; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	PORTB=0;
004ac8   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	}
004aca   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__servos	code
                                           _servos:
                                           ;	.line	141; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void servos()
004622   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004624   ffe5
004626   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004628   ffe5
00462a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00462c   ffe5
                                           ;	.line	146; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	int val=0;
00462e   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ;	.line	147; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
004630   ecd8     call    0x0055b0, 0x0    	CALL	_leo_puerto
004632   f02a
004634   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
004636   f003
004638   0a01     xorlw   0x01             	XORLW	0x01
00463a   e102     bnz     0x004640         	BNZ	_01690_DS_
00463c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00463e   e001     bz      0x004642         	BZ	_01691_DS_
                                           _01690_DS_:
004640   d03b     bra     0x0046b8         	BRA	_01673_DS_
                                           _01691_DS_:
004642   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
                                           ;	.line	149; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	switch(caracter)
004644   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
004646   0f80     addlw   0x80             	ADDLW	0x80
004648   0f80     addlw   0x80             	ADDLW	0x80
00464a   e102     bnz     0x004650         	BNZ	_01692_DS_
00464c   0e31     movlw   0x31             	MOVLW	0x31
                                           ; removed redundant BANKSEL
00464e   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01692_DS_:
004650   e333     bnc     0x0046b8         	BNC	_01673_DS_
004652   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
004654   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
004656   0f80     addlw   0x80             	ADDLW	0x80
004658   0f80     addlw   0x80             	ADDLW	0x80
00465a   e102     bnz     0x004660         	BNZ	_01693_DS_
00465c   0e36     movlw   0x36             	MOVLW	0x36
                                           ; removed redundant BANKSEL
00465e   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01693_DS_:
004660   e22b     bc      0x0046b8         	BC	_01673_DS_
004662   0ecf     movlw   0xcf             	MOVLW	0xcf
004664   0101     movlb   0x1              	BANKSEL	_caracter
004666   2593     addwf   0x93, 0x0, 0x1   	ADDWF	_caracter, W, B
004668   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00466a   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
00466c   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
00466e   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004670   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
004672   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
004674   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
004676   0bfc     andlw   0xfc             	ANDLW	0xfc
004678   0f88     addlw   0x88             	ADDLW	LOW(_01694_DS_)
00467a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00467c   0e46     movlw   0x46             	MOVLW	HIGH(_01694_DS_)
00467e   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
004680   0e00     movlw   0x00             	MOVLW	UPPER(_01694_DS_)
004682   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
004684   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
004686   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01694_DS_:
004688   ef4e     goto    0x00469c         	GOTO	_01666_DS_
00468a   f023
00468c   ef51     goto    0x0046a2         	GOTO	_01667_DS_
00468e   f023
004690   ef54     goto    0x0046a8         	GOTO	_01668_DS_
004692   f023
004694   ef57     goto    0x0046ae         	GOTO	_01669_DS_
004696   f023
004698   ef5a     goto    0x0046b4         	GOTO	_01670_DS_
00469a   f023
                                           _01666_DS_:
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV1;
00469c   0e0a     movlw   0x0a             	MOVLW	0x0a
00469e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	153; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0046a0   d00b     bra     0x0046b8         	BRA	_01673_DS_
                                           _01667_DS_:
                                           ;	.line	155; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV2;
0046a2   0e0b     movlw   0x0b             	MOVLW	0x0b
0046a4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	156; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0046a6   d008     bra     0x0046b8         	BRA	_01673_DS_
                                           _01668_DS_:
                                           ;	.line	158; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV3;
0046a8   0e0c     movlw   0x0c             	MOVLW	0x0c
0046aa   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0046ac   d005     bra     0x0046b8         	BRA	_01673_DS_
                                           _01669_DS_:
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV4;
0046ae   0e09     movlw   0x09             	MOVLW	0x09
0046b0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	162; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0046b2   d002     bra     0x0046b8         	BRA	_01673_DS_
                                           _01670_DS_:
                                           ;	.line	164; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV5;
0046b4   0e08     movlw   0x08             	MOVLW	0x08
0046b6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01673_DS_:
0046b8   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
0046ba   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
0046bc   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
0046be   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	169; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
0046c0   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
                                           ;	.line	170; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
0046c2   ecd8     call    0x0055b0, 0x0    	CALL	_leo_puerto
0046c4   f02a
0046c6   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0046c8   f003
0046ca   0a01     xorlw   0x01             	XORLW	0x01
0046cc   e102     bnz     0x0046d2         	BNZ	_01695_DS_
0046ce   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0046d0   e001     bz      0x0046d4         	BZ	_01696_DS_
                                           _01695_DS_:
0046d2   d00f     bra     0x0046f2         	BRA	_01675_DS_
                                           _01696_DS_:
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	resultado = caracter;
0046d4   c193     movff   0x193, 0x002     	MOVFF	_caracter, r0x02
0046d6   f002
0046d8   c194     movff   0x194, 0x003     	MOVFF	(_caracter + 1), r0x03
0046da   f003
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoWrite(val,resultado);
0046dc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0046de   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046e0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0046e2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046e4   ec32     call    0x005664, 0x0    	CALL	_ServoWrite
0046e6   f02b
0046e8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0046ea   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0046ec   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
0046ee   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
0046f0   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
                                           _01675_DS_:
0046f2   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
0046f4   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
                                           ;	.line	178; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	}
0046f6   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0046f8   f003
0046fa   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0046fc   f002
0046fe   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004700   f000
004702   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__puertob	code
                                           _puertob:
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void puertob()
0058e8   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0058ea   ffe5
                                           ;	.line	133; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
0058ec   ecd8     call    0x0055b0, 0x0    	CALL	_leo_puerto
0058ee   f02a
0058f0   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0058f2   f001
0058f4   0a01     xorlw   0x01             	XORLW	0x01
0058f6   e102     bnz     0x0058fc         	BNZ	_01660_DS_
0058f8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0058fa   e001     bz      0x0058fe         	BZ	_01661_DS_
                                           _01660_DS_:
0058fc   d007     bra     0x00590c         	BRA	_01655_DS_
                                           _01661_DS_:
0058fe   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	136; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	PORTB=caracter;
005900   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
005902   6e81     movwf   0x81, 0x0        	MOVWF	_PORTB
                                           ; removed redundant BANKSEL
                                           ;	.line	137; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
005904   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
005906   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
005908   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	138; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
00590a   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
                                           _01655_DS_:
                                           ;	.line	140; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	}
00590c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00590e   f001
005910   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__analogico	code
                                           _analogico:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void analogico()
003cbe   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003cc0   ffe5
003cc2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003cc4   ffe5
003cc6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003cc8   ffe5
003cca   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003ccc   ffe5
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	unsigned int val=0;
003cce   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _01599_DS_:
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte2=CDCgets(rxstr2);
003cd0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003cd2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003cd4   0e01     movlw   0x01             	MOVLW	HIGH(_rxstr2)
003cd6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003cd8   0e44     movlw   0x44             	MOVLW	LOW(_rxstr2)
003cda   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003cdc   ec1b     call    0x004036, 0x0    	CALL	_CDCgets
003cde   f020
003ce0   0101     movlb   0x1              	BANKSEL	_receivedbyte2
003ce2   6faf     movwf   0xaf, 0x1        	MOVWF	_receivedbyte2, B
003ce4   0e03     movlw   0x03             	MOVLW	0x03
003ce6   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (receivedbyte2>0)
003ce8   51af     movf    0xaf, 0x0, 0x1   	MOVF	_receivedbyte2, W, B
003cea   e0f2     bz      0x003cd0         	BZ	_01599_DS_
                                           ;	.line	84; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='1')
003cec   c144     movff   0x144, 0x002     	MOVFF	_rxstr2, r0x02
003cee   f002
003cf0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003cf2   0a31     xorlw   0x31             	XORLW	0x31
003cf4   e102     bnz     0x003cfa         	BNZ	_01581_DS_
                                           ;	.line	86; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=13;
003cf6   0e0d     movlw   0x0d             	MOVLW	0x0d
003cf8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01581_DS_:
                                           ;	.line	88; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='2')
003cfa   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003cfc   0a32     xorlw   0x32             	XORLW	0x32
003cfe   e102     bnz     0x003d04         	BNZ	_01583_DS_
                                           ;	.line	90; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=14;
003d00   0e0e     movlw   0x0e             	MOVLW	0x0e
003d02   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01583_DS_:
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='3')
003d04   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003d06   0a33     xorlw   0x33             	XORLW	0x33
003d08   e102     bnz     0x003d0e         	BNZ	_01585_DS_
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=15;
003d0a   0e0f     movlw   0x0f             	MOVLW	0x0f
003d0c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01585_DS_:
                                           ;	.line	96; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='4')
003d0e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003d10   0a34     xorlw   0x34             	XORLW	0x34
003d12   e102     bnz     0x003d18         	BNZ	_01587_DS_
                                           ;	.line	98; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=16;
003d14   0e10     movlw   0x10             	MOVLW	0x10
003d16   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01587_DS_:
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='5')
003d18   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003d1a   0a35     xorlw   0x35             	XORLW	0x35
003d1c   e102     bnz     0x003d22         	BNZ	_01589_DS_
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=17;
003d1e   0e11     movlw   0x11             	MOVLW	0x11
003d20   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01589_DS_:
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='6')
003d22   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003d24   0a36     xorlw   0x36             	XORLW	0x36
003d26   e102     bnz     0x003d2c         	BNZ	_01591_DS_
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=18;
003d28   0e12     movlw   0x12             	MOVLW	0x12
003d2a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01591_DS_:
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='7')
003d2c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003d2e   0a37     xorlw   0x37             	XORLW	0x37
003d30   e102     bnz     0x003d36         	BNZ	_01593_DS_
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=19;
003d32   0e13     movlw   0x13             	MOVLW	0x13
003d34   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01593_DS_:
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='8')
003d36   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003d38   0a38     xorlw   0x38             	XORLW	0x38
003d3a   e102     bnz     0x003d40         	BNZ	_01595_DS_
                                           ;	.line	114; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=20;
003d3c   0e14     movlw   0x14             	MOVLW	0x14
003d3e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01595_DS_:
003d40   0101     movlb   0x1              	BANKSEL	_receivedbyte2
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte2=0;
003d42   6baf     clrf    0xaf, 0x1        	CLRF	_receivedbyte2, B
                                           ;	.line	120; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	valor=analogread(val);
003d44   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003d46   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d48   ec4d     call    0x00509a, 0x0    	CALL	_analogread
003d4a   f028
003d4c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003d4e   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
003d50   f001
003d52   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
003d54   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003d56   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d58   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003d5a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d5c   ec41     call    0x005482, 0x0    	CALL	___uint2fs
003d5e   f02a
003d60   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003d62   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
003d64   f001
003d66   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
003d68   f002
003d6a   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
003d6c   f003
003d6e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
003d70   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	121; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	x_ftoa(valor,chaine,2,2);
003d72   0e02     movlw   0x02             	MOVLW	0x02
003d74   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d76   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d78   0e01     movlw   0x01             	MOVLW	HIGH(_analogico_chaine_1_250)
003d7a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d7c   0eb0     movlw   0xb0             	MOVLW	LOW(_analogico_chaine_1_250)
003d7e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d80   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003d82   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d84   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003d86   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d88   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003d8a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d8c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003d8e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d90   ec99     call    0x002932, 0x0    	CALL	_x_ftoa
003d92   f014
003d94   0e08     movlw   0x08             	MOVLW	0x08
003d96   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	122; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	strcat(chaine,"f\n");
003d98   0e00     movlw   0x00             	MOVLW	UPPER(___str_2)
003d9a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d9c   0e3b     movlw   0x3b             	MOVLW	HIGH(___str_2)
003d9e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003da0   0e2c     movlw   0x2c             	MOVLW	LOW(___str_2)
003da2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003da4   0e80     movlw   0x80             	MOVLW	0x80
003da6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003da8   0e01     movlw   0x01             	MOVLW	HIGH(_analogico_chaine_1_250)
003daa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003dac   0eb0     movlw   0xb0             	MOVLW	LOW(_analogico_chaine_1_250)
003dae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003db0   ec29     call    0x004452, 0x0    	CALL	_strcat
003db2   f022
003db4   0e06     movlw   0x06             	MOVLW	0x06
003db6   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	123; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	tam=strlen(chaine);
003db8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003dba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003dbc   0e01     movlw   0x01             	MOVLW	HIGH(_analogico_chaine_1_250)
003dbe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003dc0   0eb0     movlw   0xb0             	MOVLW	LOW(_analogico_chaine_1_250)
003dc2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003dc4   ec21     call    0x005242, 0x0    	CALL	_strlen
003dc6   f029
003dc8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003dca   0e03     movlw   0x03             	MOVLW	0x03
003dcc   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	CDCputs(chaine,tam);
003dce   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003dd0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003dd2   0e80     movlw   0x80             	MOVLW	0x80
003dd4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003dd6   0e01     movlw   0x01             	MOVLW	HIGH(_analogico_chaine_1_250)
003dd8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003dda   0eb0     movlw   0xb0             	MOVLW	LOW(_analogico_chaine_1_250)
003ddc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003dde   eca5     call    0x00414a, 0x0    	CALL	_CDCputs
003de0   f020
003de2   0e04     movlw   0x04             	MOVLW	0x04
003de4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	125; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	}
003de6   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003de8   f003
003dea   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003dec   f002
003dee   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003df0   f001
003df2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003df4   f000
003df6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__l293d	code
                                           _l293d:
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void l293d()
0047e4   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0047e6   ffe5
0047e8   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0047ea   ffe5
0047ec   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0047ee   ffe5
0047f0   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0047f2   ffe5
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	int val=0;
0047f4   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0047f6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(leo_puerto()==1)
0047f8   ecd8     call    0x0055b0, 0x0    	CALL	_leo_puerto
0047fa   f02a
0047fc   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0047fe   f003
004800   0a01     xorlw   0x01             	XORLW	0x01
004802   e102     bnz     0x004808         	BNZ	_01571_DS_
004804   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004806   e001     bz      0x00480a         	BZ	_01572_DS_
                                           _01571_DS_:
004808   d042     bra     0x00488e         	BRA	_01559_DS_
                                           _01572_DS_:
00480a   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
                                           ;	.line	49; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	switch(caracter)
00480c   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
00480e   0f80     addlw   0x80             	ADDLW	0x80
004810   0f80     addlw   0x80             	ADDLW	0x80
004812   e102     bnz     0x004818         	BNZ	_01573_DS_
004814   0e31     movlw   0x31             	MOVLW	0x31
                                           ; removed redundant BANKSEL
004816   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01573_DS_:
004818   e338     bnc     0x00488a         	BNC	_01556_DS_
00481a   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
00481c   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
00481e   0f80     addlw   0x80             	ADDLW	0x80
004820   0f80     addlw   0x80             	ADDLW	0x80
004822   e102     bnz     0x004828         	BNZ	_01574_DS_
004824   0e36     movlw   0x36             	MOVLW	0x36
                                           ; removed redundant BANKSEL
004826   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01574_DS_:
004828   e230     bc      0x00488a         	BC	_01556_DS_
00482a   0ecf     movlw   0xcf             	MOVLW	0xcf
00482c   0101     movlb   0x1              	BANKSEL	_caracter
00482e   2593     addwf   0x93, 0x0, 0x1   	ADDWF	_caracter, W, B
004830   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004832   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
004834   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
004836   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004838   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00483a   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
00483c   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00483e   0bfc     andlw   0xfc             	ANDLW	0xfc
004840   0f50     addlw   0x50             	ADDLW	LOW(_01575_DS_)
004842   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004844   0e48     movlw   0x48             	MOVLW	HIGH(_01575_DS_)
004846   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
004848   0e00     movlw   0x00             	MOVLW	UPPER(_01575_DS_)
00484a   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
00484c   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
00484e   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01575_DS_:
004850   ef32     goto    0x004864         	GOTO	_01551_DS_
004852   f024
004854   ef36     goto    0x00486c         	GOTO	_01552_DS_
004856   f024
004858   ef3a     goto    0x004874         	GOTO	_01553_DS_
00485a   f024
00485c   ef3e     goto    0x00487c         	GOTO	_01554_DS_
00485e   f024
004860   ef42     goto    0x004884         	GOTO	_01555_DS_
004862   f024
                                           _01551_DS_:
                                           ;	.line	52; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_AD;
004864   0e60     movlw   0x60             	MOVLW	0x60
004866   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004868   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
00486a   d011     bra     0x00488e         	BRA	_01559_DS_
                                           _01552_DS_:
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_AT;
00486c   0e90     movlw   0x90             	MOVLW	0x90
00486e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004870   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	56; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
004872   d00d     bra     0x00488e         	BRA	_01559_DS_
                                           _01553_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_IZ;
004874   0e40     movlw   0x40             	MOVLW	0x40
004876   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004878   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
00487a   d009     bra     0x00488e         	BRA	_01559_DS_
                                           _01554_DS_:
                                           ;	.line	61; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_DE;
00487c   0e20     movlw   0x20             	MOVLW	0x20
00487e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004880   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
004882   d005     bra     0x00488e         	BRA	_01559_DS_
                                           _01555_DS_:
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=0;
004884   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004886   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
004888   d002     bra     0x00488e         	BRA	_01559_DS_
                                           _01556_DS_:
                                           ;	.line	67; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=0;
00488a   6a00     clrf    0x00, 0x0        	CLRF	r0x00
00488c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01559_DS_:
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	valor=val;
00488e   c000     movff   0x000, 0x184     	MOVFF	r0x00, _valor
004890   f184
004892   c001     movff   0x001, 0x185     	MOVFF	r0x01, (_valor + 1)
004894   f185
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	}
004896   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004898   f003
00489a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00489c   f002
00489e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0048a0   f001
0048a2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0048a4   f000
0048a6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__digital	code
                                           _digital:
                                           ;	.line	13; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void digital()
00435e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004360   ffe5
004362   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004364   ffe5
004366   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004368   ffe5
00436a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00436c   ffe5
                                           ;	.line	15; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	int sens=0;
00436e   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ;	.line	17; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
004370   ecd8     call    0x0055b0, 0x0    	CALL	_leo_puerto
004372   f02a
004374   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
004376   f003
004378   0a01     xorlw   0x01             	XORLW	0x01
00437a   e102     bnz     0x004380         	BNZ	_01540_DS_
00437c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00437e   e001     bz      0x004382         	BZ	_01541_DS_
                                           _01540_DS_:
004380   d036     bra     0x0043ee         	BRA	_01522_DS_
                                           _01541_DS_:
004382   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
                                           ;	.line	19; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	switch(caracter)
004384   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
004386   0f80     addlw   0x80             	ADDLW	0x80
004388   0f80     addlw   0x80             	ADDLW	0x80
00438a   e102     bnz     0x004390         	BNZ	_01542_DS_
00438c   0e31     movlw   0x31             	MOVLW	0x31
                                           ; removed redundant BANKSEL
00438e   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01542_DS_:
004390   e32e     bnc     0x0043ee         	BNC	_01522_DS_
004392   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
004394   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
004396   0f80     addlw   0x80             	ADDLW	0x80
004398   0f80     addlw   0x80             	ADDLW	0x80
00439a   e102     bnz     0x0043a0         	BNZ	_01543_DS_
00439c   0e35     movlw   0x35             	MOVLW	0x35
                                           ; removed redundant BANKSEL
00439e   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01543_DS_:
0043a0   e226     bc      0x0043ee         	BC	_01522_DS_
0043a2   0ecf     movlw   0xcf             	MOVLW	0xcf
0043a4   0101     movlb   0x1              	BANKSEL	_caracter
0043a6   2593     addwf   0x93, 0x0, 0x1   	ADDWF	_caracter, W, B
0043a8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0043aa   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0043ac   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0043ae   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
0043b0   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0043b2   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0043b4   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0043b6   0bfc     andlw   0xfc             	ANDLW	0xfc
0043b8   0fc8     addlw   0xc8             	ADDLW	LOW(_01544_DS_)
0043ba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0043bc   0e43     movlw   0x43             	MOVLW	HIGH(_01544_DS_)
0043be   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0043c0   0e00     movlw   0x00             	MOVLW	UPPER(_01544_DS_)
0043c2   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0043c4   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0043c6   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01544_DS_:
0043c8   efec     goto    0x0043d8         	GOTO	_01516_DS_
0043ca   f021
0043cc   efef     goto    0x0043de         	GOTO	_01517_DS_
0043ce   f021
0043d0   eff2     goto    0x0043e4         	GOTO	_01518_DS_
0043d2   f021
0043d4   eff5     goto    0x0043ea         	GOTO	_01519_DS_
0043d6   f021
                                           _01516_DS_:
                                           ;	.line	22; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	sens=21;
0043d8   0e15     movlw   0x15             	MOVLW	0x15
0043da   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	23; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0043dc   d008     bra     0x0043ee         	BRA	_01522_DS_
                                           _01517_DS_:
                                           ;	.line	25; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	sens=22;
0043de   0e16     movlw   0x16             	MOVLW	0x16
0043e0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	26; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0043e2   d005     bra     0x0043ee         	BRA	_01522_DS_
                                           _01518_DS_:
                                           ;	.line	28; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	sens=23;
0043e4   0e17     movlw   0x17             	MOVLW	0x17
0043e6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	29; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0043e8   d002     bra     0x0043ee         	BRA	_01522_DS_
                                           _01519_DS_:
                                           ;	.line	31; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	sens=24;
0043ea   0e18     movlw   0x18             	MOVLW	0x18
0043ec   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01522_DS_:
0043ee   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	35; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
0043f0   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
0043f2   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
0043f4   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	36; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
0043f6   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
                                           ;	.line	37; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	r=digitalread(sens);
0043f8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0043fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0043fc   eca2     call    0x002f44, 0x0    	CALL	_digitalread
0043fe   f017
004400   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004402   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (r==1) 
004404   0a01     xorlw   0x01             	XORLW	0x01
004406   e102     bnz     0x00440c         	BNZ	_01545_DS_
004408   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00440a   e001     bz      0x00440e         	BZ	_01546_DS_
                                           _01545_DS_:
00440c   d00d     bra     0x004428         	BRA	_01524_DS_
                                           _01546_DS_:
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	CDCputs("0",1);
00440e   0e01     movlw   0x01             	MOVLW	0x01
004410   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004412   0e00     movlw   0x00             	MOVLW	UPPER(___str_0)
004414   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004416   0e3b     movlw   0x3b             	MOVLW	HIGH(___str_0)
004418   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00441a   0e28     movlw   0x28             	MOVLW	LOW(___str_0)
00441c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00441e   eca5     call    0x00414a, 0x0    	CALL	_CDCputs
004420   f020
004422   0e04     movlw   0x04             	MOVLW	0x04
004424   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004426   d00c     bra     0x004440         	BRA	_01526_DS_
                                           _01524_DS_:
                                           ;	.line	41; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	CDCputs("1",1);
004428   0e01     movlw   0x01             	MOVLW	0x01
00442a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00442c   0e00     movlw   0x00             	MOVLW	UPPER(___str_1)
00442e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004430   0e3b     movlw   0x3b             	MOVLW	HIGH(___str_1)
004432   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004434   0e2a     movlw   0x2a             	MOVLW	LOW(___str_1)
004436   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004438   eca5     call    0x00414a, 0x0    	CALL	_CDCputs
00443a   f020
00443c   0e04     movlw   0x04             	MOVLW	0x04
00443e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _01526_DS_:
                                           ;	.line	42; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	}
004440   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004442   f003
004444   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004446   f002
004448   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00444a   f001
00444c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00444e   f000
004450   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__Delayus	code
                                           _Delayus:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/delayus.c	void Delayus(unsigned int microseconds)
0056b8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0056ba   ffe5
0056bc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0056be   ffd9
0056c0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0056c2   ffe5
0056c4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0056c6   ffe5
0056c8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0056ca   ffe5
0056cc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0056ce   ffe5
0056d0   0e02     movlw   0x02             	MOVLW	0x02
0056d2   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0056d4   f000
0056d6   0e03     movlw   0x03             	MOVLW	0x03
0056d8   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0056da   f001
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/delayus.c	for (i=0; i<microseconds; i++)
0056dc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0056de   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01500_DS_:
0056e0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0056e2   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
0056e4   e102     bnz     0x0056ea         	BNZ	_01511_DS_
0056e6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0056e8   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01511_DS_:
0056ea   e203     bc      0x0056f2         	BC	_01502_DS_
0056ec   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
0056ee   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0056f0   d7f7     bra     0x0056e0         	BRA	_01500_DS_
                                           _01502_DS_:
                                           ;	.line	75; /home/vbasel/.icaro/v4/firmware/core/delayus.c	}
0056f2   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0056f4   f003
0056f6   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0056f8   f002
0056fa   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0056fc   f001
0056fe   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005700   f000
005702   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005704   ffd9
005706   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__CDC_interrupt	code
                                           _CDC_interrupt:
                                           ;	.line	341; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	if(PIR2bits.USBIF)
005a46   aaa1     btfss   0xa1, 0x5, 0x0   	BTFSS	_PIR2bits, 5
005a48   d006     bra     0x005a56         	BRA	_01493_DS_
                                           ;	.line	343; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	PIR2bits.USBIF = 0;
005a4a   9aa1     bcf     0xa1, 0x5, 0x0   	BCF	_PIR2bits, 5
                                           ;	.line	345; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	ProcessUSBTransactions();
005a4c   ec0b     call    0x005416, 0x0    	CALL	_ProcessUSBTransactions
005a4e   f02a
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	UIRbits.SOFIF = 0;
005a50   9c68     bcf     0x68, 0x6, 0x0   	BCF	_UIRbits, 6
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	UIRbits.URSTIF = 0;
005a52   9068     bcf     0x68, 0x0, 0x0   	BCF	_UIRbits, 0
                                           ;	.line	348; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	UEIR = 0;
005a54   6a6a     clrf    0x6a, 0x0        	CLRF	_UEIR
                                           _01493_DS_:
                                           ;	.line	350; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	}
005a56   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__CDC_init	code
                                           _CDC_init:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	void CDC_init(void)
004d74   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004d76   ffe5
004d78   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004d7a   ffe5
004d7c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004d7e   ffe5
004d80   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004d82   ffe5
004d84   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004d86   ffe5
004d88   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004d8a   ffe5
004d8c   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004d8e   ffe5
004d90   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004d92   ffe5
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	INTCONbits.GIEH = 0;
004d94   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	_INTCONbits, 7
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	INTCONbits.GIEL = 0;
004d96   9cf2     bcf     0xf2, 0x6, 0x0   	BCF	_INTCONbits, 6
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	UCFG = 0x14;            // Enable pullup resistors; full speed mode
004d98   0e14     movlw   0x14             	MOVLW	0x14
004d9a   6e6f     movwf   0x6f, 0x0        	MOVWF	_UCFG
004d9c   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	deviceState = DETACHED;
004d9e   6bab     clrf    0xab, 0x1        	CLRF	_deviceState, B
004da0   0101     movlb   0x1              	BANKSEL	_remoteWakeup
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	remoteWakeup = 0x00;
004da2   6baa     clrf    0xaa, 0x1        	CLRF	_remoteWakeup, B
004da4   0101     movlb   0x1              	BANKSEL	_currentConfiguration
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	currentConfiguration = 0x00;
004da6   6bac     clrf    0xac, 0x1        	CLRF	_currentConfiguration, B
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	while ( counter++ && deviceState != CONFIGURED )
004da8   0e01     movlw   0x01             	MOVLW	0x01
004daa   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004dac   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004dae   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004db0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01469_DS_:
004db2   c000     movff   0x000, 0x004     	MOVFF	r0x00, r0x04
004db4   f004
004db6   c001     movff   0x001, 0x005     	MOVFF	r0x01, r0x05
004db8   f005
004dba   c002     movff   0x002, 0x006     	MOVFF	r0x02, r0x06
004dbc   f006
004dbe   c003     movff   0x003, 0x007     	MOVFF	r0x03, r0x07
004dc0   f007
004dc2   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
004dc4   e304     bnc     0x004dce         	BNC	_01484_DS_
004dc6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
004dc8   e302     bnc     0x004dce         	BNC	_01484_DS_
004dca   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
004dcc   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
                                           _01484_DS_:
004dce   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004dd0   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
004dd2   1006     iorwf   0x06, 0x0, 0x0   	IORWF	r0x06, W
004dd4   1007     iorwf   0x07, 0x0, 0x0   	IORWF	r0x07, W
004dd6   e009     bz      0x004dea         	BZ	_01471_DS_
004dd8   0101     movlb   0x1              	BANKSEL	_deviceState
004dda   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
004ddc   0a05     xorlw   0x05             	XORLW	0x05
004dde   e005     bz      0x004dea         	BZ	_01471_DS_
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	EnableUSBModule();
004de0   ec5e     call    0x0058bc, 0x0    	CALL	_EnableUSBModule
004de2   f02c
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	ProcessUSBTransactions();
004de4   ec0b     call    0x005416, 0x0    	CALL	_ProcessUSBTransactions
004de6   f02a
004de8   d7e4     bra     0x004db2         	BRA	_01469_DS_
                                           _01471_DS_:
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	PIR2bits.USBIF = 0;     // clear usb interrupt flag
004dea   9aa1     bcf     0xa1, 0x5, 0x0   	BCF	_PIR2bits, 5
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	PIE2bits.USBIE = 1;     // enable usb interrupt
004dec   8aa0     bsf     0xa0, 0x5, 0x0   	BSF	_PIE2bits, 5
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	IPR2bits.USBIP = 1;     // high priority interrupt
004dee   8aa2     bsf     0xa2, 0x5, 0x0   	BSF	_IPR2bits, 5
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	INTCONbits.GIEH = 1;   // Enable global HP interrupts
004df0   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	INTCONbits.GIEL = 1;   // Enable global LP interrupts
004df2   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	}
004df4   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004df6   f007
004df8   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004dfa   f006
004dfc   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004dfe   f005
004e00   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004e02   f004
004e04   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004e06   f003
004e08   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004e0a   f002
004e0c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004e0e   f001
004e10   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004e12   f000
004e14   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__CDCInitEndpoint	code
                                           _CDCInitEndpoint:
005550   0104     movlb   0x4              	BANKSEL	_line_config
                                           ;	.line	220; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	line_config.dwDTERate = USB_CDC_BAUD_RATE;
005552   6bea     clrf    0xea, 0x1        	CLRF	_line_config, B
005554   0ec2     movlw   0xc2             	MOVLW	0xc2
                                           ; removed redundant BANKSEL
005556   6feb     movwf   0xeb, 0x1        	MOVWF	(_line_config + 1), B
005558   0e01     movlw   0x01             	MOVLW	0x01
                                           ; removed redundant BANKSEL
00555a   6fec     movwf   0xec, 0x1        	MOVWF	(_line_config + 2), B
                                           ; removed redundant BANKSEL
00555c   6bed     clrf    0xed, 0x1        	CLRF	(_line_config + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	221; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	line_config.bCharFormat = USB_CDC_STOP_BITS;
00555e   6bee     clrf    0xee, 0x1        	CLRF	(_line_config + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	222; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	line_config.bParityType = USB_CDC_PARITY;
005560   6bef     clrf    0xef, 0x1        	CLRF	(_line_config + 5), B
                                           ;	.line	223; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	line_config.bDataBits = USB_CDC_DATA_BITS;
005562   0e08     movlw   0x08             	MOVLW	0x08
                                           ; removed redundant BANKSEL
005564   6ff0     movwf   0xf0, 0x1        	MOVWF	(_line_config + 6), B
005566   0107     movlb   0x7              	BANKSEL	_zlp
                                           ;	.line	224; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue0=0;
005568   6bf4     clrf    0xf4, 0x1        	CLRF	_zlp, B
                                           ; removed redundant BANKSEL
                                           ;	.line	225; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue1=0;
00556a   6bf5     clrf    0xf5, 0x1        	CLRF	(_zlp + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	226; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue2=0;
00556c   6bf6     clrf    0xf6, 0x1        	CLRF	(_zlp + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue3=0;
00556e   6bf7     clrf    0xf7, 0x1        	CLRF	(_zlp + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	228; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue4=0;
005570   6bf8     clrf    0xf8, 0x1        	CLRF	(_zlp + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	229; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue5=0;
005572   6bf9     clrf    0xf9, 0x1        	CLRF	(_zlp + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	230; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue6=0;
005574   6bfa     clrf    0xfa, 0x1        	CLRF	(_zlp + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	231; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue7=0;
005576   6bfb     clrf    0xfb, 0x1        	CLRF	(_zlp + 7), B
                                           ;	.line	236; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	USB_COMM_EP_UEP = EP_IN | HSHK_EN;
005578   0e1a     movlw   0x1a             	MOVLW	0x1a
00557a   6e72     movwf   0x72, 0x0        	MOVWF	_UEP2
                                           ;	.line	239; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	CDC_DATA_EP_UEP = EP_OUT_IN | HSHK_EN;
00557c   0e1e     movlw   0x1e             	MOVLW	0x1e
00557e   6e73     movwf   0x73, 0x0        	MOVWF	_UEP3
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).ADDR = PTR16(&CDCControlBuffer);
005580   0eda     movlw   0xda             	MOVLW	LOW(_CDCControlBuffer)
005582   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 22)
005584   6f16     movwf   0x16, 0x1        	MOVWF	(_ep_bdt + 22), B
005586   0e04     movlw   0x04             	MOVLW	HIGH(_CDCControlBuffer)
                                           ; removed redundant BANKSEL
005588   6f17     movwf   0x17, 0x1        	MOVWF	(_ep_bdt + 23), B
                                           ; #	MOVLW	0x40
                                           ; #	MOVWF	(_ep_bdt + 20), B
                                           ; #	MOVLW	0x40
                                           ;	.line	244; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN;
00558a   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
                                           ;	.line	247; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
00558c   6f14     movwf   0x14, 0x1        	MOVWF	(_ep_bdt + 20), B
                                           ; removed redundant BANKSEL
00558e   6f19     movwf   0x19, 0x1        	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	248; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCRxBuffer);
005590   0e80     movlw   0x80             	MOVLW	LOW(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
005592   6f1a     movwf   0x1a, 0x1        	MOVWF	(_ep_bdt + 26), B
005594   0e05     movlw   0x05             	MOVLW	HIGH(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
005596   6f1b     movwf   0x1b, 0x1        	MOVWF	(_ep_bdt + 27), B
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_UOWN | BDS_DAT0 | BDS_DTSEN;
005598   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
00559a   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	251; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCTxBuffer); // +1 
00559c   0ec0     movlw   0xc0             	MOVLW	LOW(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
00559e   6f1e     movwf   0x1e, 0x1        	MOVWF	(_ep_bdt + 30), B
0055a0   0e05     movlw   0x05             	MOVLW	HIGH(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
0055a2   6f1f     movwf   0x1f, 0x1        	MOVWF	(_ep_bdt + 31), B
                                           ;	.line	252; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN; 
0055a4   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
0055a6   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	253; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	deviceState=CONFIGURED; 
0055a8   0e05     movlw   0x05             	MOVLW	0x05
0055aa   0101     movlb   0x1              	BANKSEL	_deviceState
0055ac   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	}
0055ae   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__CDCputc	code
                                           _CDCputc:
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	void CDCputc(u8 c)
0053aa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0053ac   ffe5
0053ae   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0053b0   ffd9
0053b2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0053b4   ffe5
0053b6   0e02     movlw   0x02             	MOVLW	0x02
0053b8   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0053ba   f000
0053bc   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (deviceState != CONFIGURED) return;
0053be   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
0053c0   0a05     xorlw   0x05             	XORLW	0x05
0053c2   e124     bnz     0x00540c         	BNZ	_01446_DS_
                                           _01441_DS_:
0053c4   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!CONTROL_LINE) return;
0053c6   5103     movf    0x03, 0x0, 0x1   	MOVF	_CONTROL_LINE, W, B
0053c8   e021     bz      0x00540c         	BZ	_01446_DS_
                                           _01443_DS_:
0053ca   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 28)
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!EP_IN_BD(CDC_DATA_EP_NUM).Stat.UOWN)
0053cc   bf1c     btfsc   0x1c, 0x7, 0x1   	BTFSC	(_ep_bdt + 28), 7, B
0053ce   d01e     bra     0x00540c         	BRA	_01446_DS_
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	CDCTxBuffer[0] = c;
0053d0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0053d2   0105     movlb   0x5              	BANKSEL	_CDCTxBuffer
0053d4   6fc0     movwf   0xc0, 0x1        	MOVWF	_CDCTxBuffer, B
                                           ;	.line	201; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Cnt = 1;
0053d6   0e01     movlw   0x01             	MOVLW	0x01
0053d8   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 29)
0053da   6f1d     movwf   0x1d, 0x1        	MOVWF	(_ep_bdt + 29), B
                                           ;	.line	203; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
0053dc   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
0053de   151c     andwf   0x1c, 0x0, 0x1   	ANDWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0053e0   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS;
0053e2   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ; removed redundant BANKSEL
0053e4   bd1c     btfsc   0x1c, 0x6, 0x1   	BTFSC	(_ep_bdt + 28), 6, B
0053e6   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0053e8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0053ea   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0053ec   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
0053ee   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0053f0   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0053f2   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
0053f4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0053f6   0b01     andlw   0x01             	ANDLW	0x01
0053f8   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
0053fa   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
0053fc   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
0053fe   511c     movf    0x1c, 0x0, 0x1   	MOVF	(_ep_bdt + 28), W, B
005400   0bbf     andlw   0xbf             	ANDLW	0xbf
005402   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
005404   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	206; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
005406   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
005408   111c     iorwf   0x1c, 0x0, 0x1   	IORWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00540a   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           _01446_DS_:
                                           ;	.line	208; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	}
00540c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00540e   f000
005410   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005412   ffd9
005414   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__CDCputs	code
                                           _CDCputs:
                                           ;	.line	153; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	u8 CDCputs(u8 *buffer, u8 length)
00414a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00414c   ffe5
00414e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004150   ffd9
004152   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004154   ffe5
004156   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004158   ffe5
00415a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00415c   ffe5
00415e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004160   ffe5
004162   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004164   ffe5
004166   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004168   ffe5
00416a   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00416c   ffe5
00416e   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004170   ffe5
004172   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
004174   ffe5
004176   0e02     movlw   0x02             	MOVLW	0x02
004178   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00417a   f000
00417c   0e03     movlw   0x03             	MOVLW	0x03
00417e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004180   f001
004182   0e04     movlw   0x04             	MOVLW	0x04
004184   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004186   f002
004188   0e05     movlw   0x05             	MOVLW	0x05
00418a   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
00418c   f003
00418e   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
004190   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
004192   0a05     xorlw   0x05             	XORLW	0x05
004194   e002     bz      0x00419a         	BZ	_01400_DS_
004196   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
004198   d04c     bra     0x004232         	BRA	_01411_DS_
                                           _01400_DS_:
00419a   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
00419c   5103     movf    0x03, 0x0, 0x1   	MOVF	_CONTROL_LINE, W, B
00419e   e102     bnz     0x0041a4         	BNZ	_01402_DS_
0041a0   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0041a2   d047     bra     0x004232         	BRA	_01411_DS_
                                           _01402_DS_:
0041a4   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 28)
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!EP_IN_BD(CDC_DATA_EP_NUM).Stat.UOWN)
0041a6   bf1c     btfsc   0x1c, 0x7, 0x1   	BTFSC	(_ep_bdt + 28), 7, B
0041a8   d043     bra     0x004230         	BRA	_01407_DS_
                                           ;	.line	163; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (length > CDC_BULK_IN_SIZE)
0041aa   0e41     movlw   0x41             	MOVLW	0x41
0041ac   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
0041ae   e302     bnc     0x0041b4         	BNC	_01418_DS_
                                           ;	.line	164; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	length = CDC_BULK_IN_SIZE;
0041b0   0e40     movlw   0x40             	MOVLW	0x40
0041b2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
                                           _01418_DS_:
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	for (i=0; i < length; i++)
0041b4   6a04     clrf    0x04, 0x0        	CLRF	r0x04
                                           _01409_DS_:
0041b6   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0041b8   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
0041ba   e21d     bc      0x0041f6         	BC	_01419_DS_
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	CDCTxBuffer[i] = buffer[i];
0041bc   0ec0     movlw   0xc0             	MOVLW	LOW(_CDCTxBuffer)
0041be   2404     addwf   0x04, 0x0, 0x0   	ADDWF	r0x04, W
0041c0   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0041c2   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0041c4   0e05     movlw   0x05             	MOVLW	HIGH(_CDCTxBuffer)
0041c6   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0041c8   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0041ca   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0041cc   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0041ce   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0041d0   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0041d2   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
0041d4   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0041d6   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
0041d8   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
0041da   ffe9
0041dc   c008     movff   0x008, 0xff3     	MOVFF	r0x08, PRODL
0041de   fff3
0041e0   ecc3     call    0x005986, 0x0    	CALL	__gptrget1
0041e2   f02c
0041e4   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0041e6   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
0041e8   ffe9
0041ea   c006     movff   0x006, 0xfea     	MOVFF	r0x06, FSR0H
0041ec   ffea
0041ee   c007     movff   0x007, 0xfef     	MOVFF	r0x07, INDF0
0041f0   ffef
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	for (i=0; i < length; i++)
0041f2   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
0041f4   d7e0     bra     0x0041b6         	BRA	_01409_DS_
                                           _01419_DS_:
0041f6   c004     movff   0x004, 0x000     	MOVFF	r0x04, r0x00
0041f8   f000
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Cnt = i;
0041fa   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0041fc   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 29)
0041fe   6f1d     movwf   0x1d, 0x1        	MOVWF	(_ep_bdt + 29), B
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
004200   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
004202   151c     andwf   0x1c, 0x0, 0x1   	ANDWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004204   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	183; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS;
004206   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ; removed redundant BANKSEL
004208   bd1c     btfsc   0x1c, 0x6, 0x1   	BTFSC	(_ep_bdt + 28), 6, B
00420a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00420c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00420e   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004210   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004212   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004214   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004216   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
004218   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00421a   0b01     andlw   0x01             	ANDLW	0x01
00421c   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
00421e   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
004220   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
004222   511c     movf    0x1c, 0x0, 0x1   	MOVF	(_ep_bdt + 28), W, B
004224   0bbf     andlw   0xbf             	ANDLW	0xbf
004226   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
004228   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
00422a   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
00422c   111c     iorwf   0x1c, 0x0, 0x1   	IORWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
00422e   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           _01407_DS_:
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	return i;
004230   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _01411_DS_:
                                           ;	.line	188; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	}
004232   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
004234   f008
004236   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004238   f007
00423a   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00423c   f006
00423e   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004240   f005
004242   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004244   f004
004246   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004248   f003
00424a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00424c   f002
00424e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004250   f001
004252   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004254   f000
004256   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004258   ffd9
00425a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__CDCgets	code
                                           _CDCgets:
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	u8 CDCgets(u8 *buffer)
004036   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004038   ffe5
00403a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00403c   ffd9
00403e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004040   ffe5
004042   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004044   ffe5
004046   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004048   ffe5
00404a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00404c   ffe5
00404e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004050   ffe5
004052   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004054   ffe5
004056   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004058   ffe5
00405a   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
00405c   ffe5
00405e   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
004060   ffe5
004062   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
004064   ffe5
004066   0e02     movlw   0x02             	MOVLW	0x02
004068   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00406a   f000
00406c   0e03     movlw   0x03             	MOVLW	0x03
00406e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004070   f001
004072   0e04     movlw   0x04             	MOVLW	0x04
004074   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004076   f002
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	u8 i=0;
004078   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00407a   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (deviceState != CONFIGURED)
00407c   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
00407e   0a05     xorlw   0x05             	XORLW	0x05
004080   e002     bz      0x004086         	BZ	_01362_DS_
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	return 0;
004082   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
004084   d04b     bra     0x00411c         	BRA	_01373_DS_
                                           _01362_DS_:
004086   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!CONTROL_LINE)
004088   5103     movf    0x03, 0x0, 0x1   	MOVF	_CONTROL_LINE, W, B
00408a   e102     bnz     0x004090         	BNZ	_01364_DS_
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	return 0;
00408c   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
00408e   d046     bra     0x00411c         	BRA	_01373_DS_
                                           _01364_DS_:
004090   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 24)
                                           ;	.line	119; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!EP_OUT_BD(CDC_DATA_EP_NUM).Stat.UOWN)
004092   bf18     btfsc   0x18, 0x7, 0x1   	BTFSC	(_ep_bdt + 24), 7, B
004094   d042     bra     0x00411a         	BRA	_01369_DS_
                                           ;	.line	129; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++)
004096   6a04     clrf    0x04, 0x0        	CLRF	r0x04
                                           _01371_DS_:
004098   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 25)
00409a   5119     movf    0x19, 0x0, 0x1   	MOVF	(_ep_bdt + 25), W, B
00409c   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
00409e   e220     bc      0x0040e0         	BC	_01381_DS_
                                           ;	.line	131; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	buffer[i] = CDCRxBuffer[i];
0040a0   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0040a2   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0040a4   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0040a6   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0040a8   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0040aa   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
0040ac   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0040ae   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
0040b0   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0040b2   0e80     movlw   0x80             	MOVLW	LOW(_CDCRxBuffer)
0040b4   2404     addwf   0x04, 0x0, 0x0   	ADDWF	r0x04, W
0040b6   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
0040b8   6a09     clrf    0x09, 0x0        	CLRF	r0x09
0040ba   0e05     movlw   0x05             	MOVLW	HIGH(_CDCRxBuffer)
0040bc   2209     addwfc  0x09, 0x1, 0x0   	ADDWFC	r0x09, F
0040be   c008     movff   0x008, 0xfe9     	MOVFF	r0x08, FSR0L
0040c0   ffe9
0040c2   c009     movff   0x009, 0xfea     	MOVFF	r0x09, FSR0H
0040c4   ffea
0040c6   cfef     movff   0xfef, 0x008     	MOVFF	INDF0, r0x08
0040c8   f008
0040ca   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
0040cc   ffe5
0040ce   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
0040d0   ffe9
0040d2   c006     movff   0x006, 0xff3     	MOVFF	r0x06, PRODL
0040d4   fff3
0040d6   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
0040d8   ec18     call    0x005a30, 0x0    	CALL	__gptrput1
0040da   f02d
                                           ;	.line	129; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++)
0040dc   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
0040de   d7dc     bra     0x004098         	BRA	_01371_DS_
                                           _01381_DS_:
0040e0   c004     movff   0x004, 0x003     	MOVFF	r0x04, r0x03
0040e2   f003
                                           ;	.line	143; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
0040e4   0e40     movlw   0x40             	MOVLW	0x40
0040e6   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 24)
0040e8   1518     andwf   0x18, 0x0, 0x1   	ANDWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0040ea   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	144; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS;
0040ec   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ; removed redundant BANKSEL
0040ee   bd18     btfsc   0x18, 0x6, 0x1   	BTFSC	(_ep_bdt + 24), 6, B
0040f0   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0040f2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0040f4   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0040f6   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
0040f8   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0040fa   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0040fc   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
0040fe   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004100   0b01     andlw   0x01             	ANDLW	0x01
004102   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
004104   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
004106   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
004108   5118     movf    0x18, 0x0, 0x1   	MOVF	(_ep_bdt + 24), W, B
00410a   0bbf     andlw   0xbf             	ANDLW	0xbf
00410c   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
00410e   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	146; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
004110   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
004112   6f19     movwf   0x19, 0x1        	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	147; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
004114   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004116   1118     iorwf   0x18, 0x0, 0x1   	IORWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004118   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           _01369_DS_:
                                           ;	.line	150; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	return i;
00411a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           _01373_DS_:
                                           ;	.line	151; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	}
00411c   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
00411e   f009
004120   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
004122   f008
004124   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004126   f007
004128   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00412a   f006
00412c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00412e   f005
004130   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004132   f004
004134   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004136   f003
004138   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00413a   f002
00413c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00413e   f001
004140   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004142   f000
004144   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004146   ffd9
004148   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessCDCRequest	code
                                           _ProcessCDCRequest:
                                           ;	.line	29; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	void ProcessCDCRequest(void)
004c28   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004c2a   ffe5
                                           ;	.line	40; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if ((SetupPacket.bmRequestType & USB_TYPE_MASK) != USB_TYPE_CLASS) return;
004c2c   0e60     movlw   0x60             	MOVLW	0x60
004c2e   0105     movlb   0x5              	BANKSEL	_SetupPacket
004c30   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004c32   0a20     xorlw   0x20             	XORLW	0x20
004c34   e001     bz      0x004c38         	BZ	_01309_DS_
004c36   d049     bra     0x004cca         	BRA	_01319_DS_
                                           _01309_DS_:
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	switch(SetupPacket.bRequest)
004c38   c501     movff   0x501, 0x000     	MOVFF	(_SetupPacket + 1), r0x00
004c3a   f000
004c3c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004c3e   e101     bnz     0x004c42         	BNZ	_01346_DS_
004c40   d044     bra     0x004cca         	BRA	_01319_DS_
                                           _01346_DS_:
004c42   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004c44   0a01     xorlw   0x01             	XORLW	0x01
004c46   e101     bnz     0x004c4a         	BNZ	_01348_DS_
004c48   d040     bra     0x004cca         	BRA	_01319_DS_
                                           _01348_DS_:
004c4a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004c4c   0a20     xorlw   0x20             	XORLW	0x20
004c4e   e007     bz      0x004c5e         	BZ	_01312_DS_
004c50   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004c52   0a21     xorlw   0x21             	XORLW	0x21
004c54   e013     bz      0x004c7c         	BZ	_01313_DS_
004c56   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004c58   0a22     xorlw   0x22             	XORLW	0x22
004c5a   e01f     bz      0x004c9a         	BZ	_01314_DS_
004c5c   d036     bra     0x004cca         	BRA	_01319_DS_
                                           _01312_DS_:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	outPtr = (__data u8 *)&line_config;
004c5e   0e04     movlw   0x04             	MOVLW	HIGH(_line_config)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004c60   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
004c62   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004c64   0eea     movlw   0xea             	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
004c66   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
004c68   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004c6a   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
004c6c   0e07     movlw   0x07             	MOVLW	0x07
004c6e   0101     movlb   0x1              	BANKSEL	_wCount
004c70   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004c72   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	requestHandled = 1;				
004c74   0e01     movlw   0x01             	MOVLW	0x01
004c76   0101     movlb   0x1              	BANKSEL	_requestHandled
004c78   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	break;
004c7a   d027     bra     0x004cca         	BRA	_01319_DS_
                                           _01313_DS_:
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	outPtr = (__data u8 *)&line_config;
004c7c   0e04     movlw   0x04             	MOVLW	HIGH(_line_config)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004c7e   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
004c80   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004c82   0eea     movlw   0xea             	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
004c84   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
004c86   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004c88   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
004c8a   0e07     movlw   0x07             	MOVLW	0x07
004c8c   0101     movlb   0x1              	BANKSEL	_wCount
004c8e   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004c90   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	requestHandled = 1;
004c92   0e01     movlw   0x01             	MOVLW	0x01
004c94   0101     movlb   0x1              	BANKSEL	_requestHandled
004c96   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	break;
004c98   d018     bra     0x004cca         	BRA	_01319_DS_
                                           _01314_DS_:
004c9a   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 2)
                                           ;	.line	90; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (SetupPacket.wValue0==3) CONTROL_LINE=1;
004c9c   5102     movf    0x02, 0x0, 0x1   	MOVF	(_SetupPacket + 2), W, B
004c9e   0a03     xorlw   0x03             	XORLW	0x03
004ca0   e104     bnz     0x004caa         	BNZ	_01316_DS_
004ca2   0e01     movlw   0x01             	MOVLW	0x01
004ca4   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
004ca6   6f03     movwf   0x03, 0x1        	MOVWF	_CONTROL_LINE, B
004ca8   d002     bra     0x004cae         	BRA	_01317_DS_
                                           _01316_DS_:
004caa   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	else CONTROL_LINE=0;		
004cac   6b03     clrf    0x03, 0x1        	CLRF	_CONTROL_LINE, B
                                           _01317_DS_:
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	outPtr = (__data u8 *)&zlp;
004cae   0e07     movlw   0x07             	MOVLW	HIGH(_zlp)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004cb0   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
004cb2   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004cb4   0ef4     movlw   0xf4             	MOVLW	LOW(_zlp)
                                           ; removed redundant BANKSEL
004cb6   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
004cb8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004cba   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	wCount = sizeof(Zero_Packet_Length) ;
004cbc   0e08     movlw   0x08             	MOVLW	0x08
004cbe   0101     movlb   0x1              	BANKSEL	_wCount
004cc0   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004cc2   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	requestHandled = 1;						
004cc4   0e01     movlw   0x01             	MOVLW	0x01
004cc6   0101     movlb   0x1              	BANKSEL	_requestHandled
004cc8   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           _01319_DS_:
                                           ;	.line	98; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	}
004cca   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004ccc   f000
004cce   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessUSBTransactions	code
                                           _ProcessUSBTransactions:
                                           ;	.line	838; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void ProcessUSBTransactions(void)
005416   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005418   ffe5
                                           ; #	MOVF	_deviceState, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_01222_DS_
                                           ; #	GOTO	_01248_DS_
                                           ; #	BTFSS	_UIRbits, 2
00541a   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	841; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(deviceState == DETACHED)
00541c   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
                                           ;	.line	842; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	return;
00541e   e02e     bz      0x00547c         	BZ	_01248_DS_
                                           ;	.line	845; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UIRbits.ACTVIF && UIEbits.ACTVIE)
005420   a468     btfss   0x68, 0x2, 0x0   	BTFSS	_UIRbits, 2
                                           ; #	GOTO	_01224_DS_
                                           ; #	BTFSS	_UIEbits, 2
                                           ; #	GOTO	_01224_DS_
                                           ; #	CALL	_UnSuspend
                                           ; #	CLRF	r0x00
                                           ;	.line	846; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UnSuspend();
005422   d003     bra     0x00542a         	BRA	_01224_DS_
                                           ;	.line	850; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UCONbits.SUSPND == 1)
005424   b469     btfsc   0x69, 0x2, 0x0   	BTFSC	_UIEbits, 2
005426   ec3b     call    0x005a76, 0x0    	CALL	_UnSuspend
005428   f02d
                                           _01224_DS_:
00542a   6a00     clrf    0x00, 0x0        	CLRF	r0x00
00542c   b26d     btfsc   0x6d, 0x1, 0x0   	BTFSC	_UCONbits, 1
00542e   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
005430   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005432   0a01     xorlw   0x01             	XORLW	0x01
                                           ;	.line	851; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	return;
005434   e023     bz      0x00547c         	BZ	_01248_DS_
                                           ;	.line	854; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.URSTIF && UIEbits.URSTIE)
005436   a068     btfss   0x68, 0x0, 0x0   	BTFSS	_UIRbits, 0
                                           ; #	GOTO	_01229_DS_
                                           ; #	BTFSS	_UIEbits, 0
                                           ; #	GOTO	_01229_DS_
                                           ; #	CALL	_BusReset
                                           ; #	BTFSS	_UIRbits, 4
                                           ;	.line	855; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	BusReset();
005438   d003     bra     0x005440         	BRA	_01229_DS_
                                           ;	.line	858; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.IDLEIF && UIEbits.IDLEIE)
00543a   b069     btfsc   0x69, 0x0, 0x0   	BTFSC	_UIEbits, 0
00543c   eca7     call    0x00574e, 0x0    	CALL	_BusReset
00543e   f02b
                                           _01229_DS_:
005440   a868     btfss   0x68, 0x4, 0x0   	BTFSS	_UIRbits, 4
                                           ; #	GOTO	_01232_DS_
                                           ; #	BTFSS	_UIEbits, 4
                                           ; #	GOTO	_01232_DS_
                                           ; #	CALL	_Suspend
                                           ; #	BTFSS	_UIRbits, 6
                                           ;	.line	859; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	Suspend();
005442   d003     bra     0x00544a         	BRA	_01232_DS_
                                           ;	.line	861; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.SOFIF && UIEbits.SOFIE)
005444   b869     btfsc   0x69, 0x4, 0x0   	BTFSC	_UIEbits, 4
005446   ecb2     call    0x005964, 0x0    	CALL	_Suspend
005448   f02c
                                           _01232_DS_:
00544a   ac68     btfss   0x68, 0x6, 0x0   	BTFSS	_UIRbits, 6
                                           ; #	GOTO	_01235_DS_
                                           ; #	BTFSS	_UIEbits, 6
                                           ; #	GOTO	_01235_DS_
                                           ; #	CALL	_StartOfFrame
                                           ; #	BTFSS	_UIRbits, 5
                                           ;	.line	862; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	StartOfFrame();
00544c   d003     bra     0x005454         	BRA	_01235_DS_
                                           ;	.line	864; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.STALLIF && UIEbits.STALLIE)
00544e   bc69     btfsc   0x69, 0x6, 0x0   	BTFSC	_UIEbits, 6
005450   ec02     call    0x000c04, 0x0    	CALL	_StartOfFrame
005452   f006
                                           _01235_DS_:
005454   aa68     btfss   0x68, 0x5, 0x0   	BTFSS	_UIRbits, 5
                                           ; #	GOTO	_01238_DS_
                                           ; #	BTFSS	_UIEbits, 5
                                           ; #	GOTO	_01238_DS_
                                           ; #	CALL	_Stall
                                           ; #	BTFSS	_UIRbits, 1
                                           ;	.line	865; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	Stall();
005456   d003     bra     0x00545e         	BRA	_01238_DS_
                                           ;	.line	869; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.UERRIF && UIEbits.UERRIE)
005458   ba69     btfsc   0x69, 0x5, 0x0   	BTFSC	_UIEbits, 5
00545a   ece4     call    0x0059c8, 0x0    	CALL	_Stall
00545c   f02c
                                           _01238_DS_:
00545e   a268     btfss   0x68, 0x1, 0x0   	BTFSS	_UIRbits, 1
                                           ; #	GOTO	_01241_DS_
                                           ; #	BTFSS	_UIEbits, 1
                                           ; #	GOTO	_01241_DS_
                                           ; #	BCF	_UIRbits, 1
                                           ; #	MOVLW	0x03
                                           ;	.line	870; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.UERRIF = 0;
005460   d002     bra     0x005466         	BRA	_01241_DS_
                                           ;	.line	873; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (deviceState < DEFAULT_STATUS)
005462   b269     btfsc   0x69, 0x1, 0x0   	BTFSC	_UIEbits, 1
005464   9268     bcf     0x68, 0x1, 0x0   	BCF	_UIRbits, 1
                                           _01241_DS_:
005466   0e03     movlw   0x03             	MOVLW	0x03
                                           ; #	SUBWF	_deviceState, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_01244_DS_
                                           ; #	GOTO	_01248_DS_
                                           ; #	BTFSS	_UIRbits, 3
005468   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	874; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	return;
00546a   5dab     subwf   0xab, 0x0, 0x1   	SUBWF	_deviceState, W, B
                                           ;	.line	877; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UIRbits.TRNIF && UIEbits.TRNIE)
00546c   e307     bnc     0x00547c         	BNC	_01248_DS_
00546e   a668     btfss   0x68, 0x3, 0x0   	BTFSS	_UIRbits, 3
005470   d005     bra     0x00547c         	BRA	_01248_DS_
005472   a669     btfss   0x69, 0x3, 0x0   	BTFSS	_UIEbits, 3
005474   d003     bra     0x00547c         	BRA	_01248_DS_
                                           ;	.line	879; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ProcessControlTransfer();
005476   ecb2     call    0x004964, 0x0    	CALL	_ProcessControlTransfer
005478   f024
                                           ;	.line	881; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.TRNIF = 0;
00547a   9668     bcf     0x68, 0x3, 0x0   	BCF	_UIRbits, 3
                                           _01248_DS_:
                                           ;	.line	883; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
00547c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00547e   f000
005480   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__BusReset	code
                                           _BusReset:
                                           ;	.line	808; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void BusReset()
00574e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005750   ffe5
                                           ;	.line	810; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UEIR  = 0x00;
005752   6a6a     clrf    0x6a, 0x0        	CLRF	_UEIR
                                           ;	.line	811; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIR   = 0x00;
005754   6a68     clrf    0x68, 0x0        	CLRF	_UIR
                                           ;	.line	812; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UEIE  = 0x9f;
005756   0e9f     movlw   0x9f             	MOVLW	0x9f
005758   6e6b     movwf   0x6b, 0x0        	MOVWF	_UEIE
                                           ;	.line	813; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIE   = 0x7b;
00575a   0e7b     movlw   0x7b             	MOVLW	0x7b
00575c   6e69     movwf   0x69, 0x0        	MOVWF	_UIE
                                           ;	.line	814; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UADDR = 0x00;
00575e   6a6e     clrf    0x6e, 0x0        	CLRF	_UADDR
                                           ;	.line	817; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UEP0 = EP_CTRL | HSHK_EN;
005760   0e16     movlw   0x16             	MOVLW	0x16
005762   6e70     movwf   0x70, 0x0        	MOVWF	_UEP0
                                           _01204_DS_:
                                           ;	.line	821; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	while (UIRbits.TRNIF == 1)
005764   6a00     clrf    0x00, 0x0        	CLRF	r0x00
005766   b668     btfsc   0x68, 0x3, 0x0   	BTFSC	_UIRbits, 3
005768   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
00576a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00576c   0a01     xorlw   0x01             	XORLW	0x01
00576e   e102     bnz     0x005774         	BNZ	_01206_DS_
                                           ;	.line	822; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.TRNIF = 0;
005770   9668     bcf     0x68, 0x3, 0x0   	BCF	_UIRbits, 3
005772   d7f8     bra     0x005764         	BRA	_01204_DS_
                                           _01206_DS_:
                                           ;	.line	825; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.PKTDIS = 0;
005774   986d     bcf     0x6d, 0x4, 0x0   	BCF	_UCONbits, 4
                                           ;	.line	828; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	WaitForSetupStage();
005776   ecf3     call    0x0059e6, 0x0    	CALL	_WaitForSetupStage
005778   f02c
00577a   0101     movlb   0x1              	BANKSEL	_remoteWakeup
                                           ;	.line	830; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	remoteWakeup = 0;                     // Remote wakeup is off by default
00577c   6baa     clrf    0xaa, 0x1        	CLRF	_remoteWakeup, B
00577e   0101     movlb   0x1              	BANKSEL	_selfPowered
                                           ;	.line	831; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	selfPowered = 0;                      // Self powered is off by default
005780   6ba9     clrf    0xa9, 0x1        	CLRF	_selfPowered, B
005782   0101     movlb   0x1              	BANKSEL	_currentConfiguration
                                           ;	.line	832; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	currentConfiguration = 0;             // Clear active configuration
005784   6bac     clrf    0xac, 0x1        	CLRF	_currentConfiguration, B
                                           ;	.line	833; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = DEFAULT_STATUS;
005786   0e03     movlw   0x03             	MOVLW	0x03
005788   0101     movlb   0x1              	BANKSEL	_deviceState
00578a   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	834; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
00578c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00578e   f000
005790   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__Suspend	code
                                           _Suspend:
                                           ;	.line	735; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void Suspend(void)
005964   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005966   ffe5
005968   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00596a   ffd9
                                           ;	.line	741; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIEbits.ACTVIE = 1;
00596c   8469     bsf     0x69, 0x2, 0x0   	BSF	_UIEbits, 2
                                           ;	.line	742; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.IDLEIF = 0;
00596e   9868     bcf     0x68, 0x4, 0x0   	BCF	_UIRbits, 4
                                           ;	.line	743; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.SUSPND = 1;
005970   826d     bsf     0x6d, 0x1, 0x0   	BSF	_UCONbits, 1
                                           ;	.line	748; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	PIR2bits.USBIF = 0;
005972   9aa1     bcf     0xa1, 0x5, 0x0   	BCF	_PIR2bits, 5
                                           ;	.line	754; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	INTCONbits.RBIF = 0;
005974   90f2     bcf     0xf2, 0x0, 0x0   	BCF	_INTCONbits, 0
                                           ;	.line	760; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	PIE2bits.USBIE = 1;
005976   8aa0     bsf     0xa0, 0x5, 0x0   	BSF	_PIE2bits, 5
                                           ;	.line	766; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	INTCONbits.RBIE = 1;
005978   86f2     bsf     0xf2, 0x3, 0x0   	BSF	_INTCONbits, 3
00597a   0003     sleep                    	sleep	
                                           ;	.line	796; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	PIE2bits.USBIE = 0;
00597c   9aa0     bcf     0xa0, 0x5, 0x0   	BCF	_PIE2bits, 5
                                           ;	.line	802; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	INTCONbits.RBIE = 0;
00597e   96f2     bcf     0xf2, 0x3, 0x0   	BCF	_INTCONbits, 3
                                           ;	.line	805; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
005980   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005982   ffd9
005984   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__Stall	code
                                           _Stall:
                                           ;	.line	719; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void Stall(void)
0059c8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0059ca   ffe5
                                           ;	.line	724; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UEP0bits.EPSTALL == 1)
0059cc   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0059ce   b070     btfsc   0x70, 0x0, 0x0   	BTFSC	_UEP0bits, 0
0059d0   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0059d2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0059d4   0a01     xorlw   0x01             	XORLW	0x01
0059d6   e103     bnz     0x0059de         	BNZ	_01187_DS_
                                           ;	.line	727; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	WaitForSetupStage();
0059d8   ecf3     call    0x0059e6, 0x0    	CALL	_WaitForSetupStage
0059da   f02c
                                           ;	.line	728; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UEP0bits.EPSTALL = 0;
0059dc   9070     bcf     0x70, 0x0, 0x0   	BCF	_UEP0bits, 0
                                           _01187_DS_:
                                           ;	.line	730; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.STALLIF = 0;
0059de   9a68     bcf     0x68, 0x5, 0x0   	BCF	_UIRbits, 5
                                           ;	.line	731; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
0059e0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0059e2   f000
0059e4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__StartOfFrame	code
                                           _StartOfFrame:
                                           ;	.line	715; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.SOFIF = 0;
000c04   9c68     bcf     0x68, 0x6, 0x0   	BCF	_UIRbits, 6
                                           ;	.line	716; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
000c06   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__UnSuspend	code
                                           _UnSuspend:
                                           ;	.line	704; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.SUSPND = 0;
005a76   926d     bcf     0x6d, 0x1, 0x0   	BCF	_UCONbits, 1
                                           ;	.line	705; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIEbits.ACTVIE = 0;
005a78   9469     bcf     0x69, 0x2, 0x0   	BCF	_UIEbits, 2
                                           ;	.line	706; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.ACTVIF = 0;
005a7a   9468     bcf     0x68, 0x2, 0x0   	BCF	_UIRbits, 2
                                           ;	.line	707; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
005a7c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__EnableUSBModule	code
                                           _EnableUSBModule:
                                           ;	.line	670; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UCONbits.USBEN == 0)
0058bc   b66d     btfsc   0x6d, 0x3, 0x0   	BTFSC	_UCONbits, 3
0058be   d006     bra     0x0058cc         	BRA	_01155_DS_
                                           ;	.line	675; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCON = 0;
0058c0   6a6d     clrf    0x6d, 0x0        	CLRF	_UCON
                                           ;	.line	676; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIE = 0;
0058c2   6a69     clrf    0x69, 0x0        	CLRF	_UIE
                                           ;	.line	677; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.USBEN = 1;
0058c4   866d     bsf     0x6d, 0x3, 0x0   	BSF	_UCONbits, 3
                                           ;	.line	678; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = ATTACHED;
0058c6   0e01     movlw   0x01             	MOVLW	0x01
0058c8   0101     movlb   0x1              	BANKSEL	_deviceState
0058ca   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           _01155_DS_:
0058cc   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	683; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if ((deviceState == ATTACHED) && !UCONbits.SE0)
0058ce   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
0058d0   0a01     xorlw   0x01             	XORLW	0x01
0058d2   e109     bnz     0x0058e6         	BNZ	_01159_DS_
0058d4   ba6d     btfsc   0x6d, 0x5, 0x0   	BTFSC	_UCONbits, 5
0058d6   d007     bra     0x0058e6         	BRA	_01159_DS_
                                           ;	.line	685; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIR = 0;
0058d8   6a68     clrf    0x68, 0x0        	CLRF	_UIR
                                           ;	.line	686; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIE = 0;
0058da   6a69     clrf    0x69, 0x0        	CLRF	_UIE
                                           ;	.line	687; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIEbits.URSTIE = 1;
0058dc   8069     bsf     0x69, 0x0, 0x0   	BSF	_UIEbits, 0
                                           ;	.line	688; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIEbits.IDLEIE = 1;
0058de   8869     bsf     0x69, 0x4, 0x0   	BSF	_UIEbits, 4
                                           ;	.line	689; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = POWERED;
0058e0   0e02     movlw   0x02             	MOVLW	0x02
0058e2   0101     movlb   0x1              	BANKSEL	_deviceState
0058e4   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           _01159_DS_:
                                           ;	.line	694; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
0058e6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessControlTransfer	code
                                           _ProcessControlTransfer:
                                           ;	.line	564; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void ProcessControlTransfer(void)
004964   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004966   ffe5
004968   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00496a   ffe5
                                           ;	.line	569; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (USTATbits.DIR == OUT)
00496c   b46c     btfsc   0x6c, 0x2, 0x0   	BTFSC	_USTATbits, 2
00496e   d028     bra     0x0049c0         	BRA	_01105_DS_
                                           ;	.line	573; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 PID = (EP_OUT_BD(0).Stat.uc & 0x3C) >> 2;
004970   c400     movff   0x400, 0x000     	MOVFF	_ep_bdt, r0x00
004972   f000
004974   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004976   0e3c     movlw   0x3c             	MOVLW	0x3c
004978   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00497a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00497c   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
00497e   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004980   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
004982   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
004984   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004986   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
                                           ;	.line	575; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (PID == 0x0D)
004988   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00498a   0a0d     xorlw   0x0d             	XORLW	0x0d
00498c   e103     bnz     0x004994         	BNZ	_01089_DS_
                                           ;	.line	578; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	SetupStage();
00498e   ec82     call    0x004704, 0x0    	CALL	_SetupStage
004990   f023
004992   d03e     bra     0x004a10         	BRA	_01107_DS_
                                           _01089_DS_:
004994   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
                                           ;	.line	580; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (ctrlTransferStage == DATA_OUT_STAGE)
004996   51ad     movf    0xad, 0x0, 0x1   	MOVF	_ctrlTransferStage, W, B
004998   0a01     xorlw   0x01             	XORLW	0x01
00499a   e10f     bnz     0x0049ba         	BNZ	_01086_DS_
                                           ;	.line	584; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	OutDataStage(0);
00499c   0e00     movlw   0x00             	MOVLW	0x00
00499e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0049a0   ecd1     call    0x0037a2, 0x0    	CALL	_OutDataStage
0049a2   f01b
0049a4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0049a6   0104     movlb   0x4              	BANKSEL	_ep_bdt
                                           ;	.line	612; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(EP_OUT_BD(0).Stat.DTS)
0049a8   ad00     btfss   0x00, 0x6, 0x1   	BTFSS	_ep_bdt, 6, B
0049aa   d003     bra     0x0049b2         	BRA	_01083_DS_
                                           ;	.line	613; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
0049ac   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
0049ae   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
0049b0   d02f     bra     0x004a10         	BRA	_01107_DS_
                                           _01083_DS_:
                                           ;	.line	615; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
0049b2   0ec8     movlw   0xc8             	MOVLW	0xc8
0049b4   0104     movlb   0x4              	BANKSEL	_ep_bdt
0049b6   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
0049b8   d02b     bra     0x004a10         	BRA	_01107_DS_
                                           _01086_DS_:
                                           ;	.line	620; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	WaitForSetupStage();
0049ba   ecf3     call    0x0059e6, 0x0    	CALL	_WaitForSetupStage
0049bc   f02c
0049be   d028     bra     0x004a10         	BRA	_01107_DS_
                                           _01105_DS_:
                                           ;	.line	623; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if(USTATbits.DIR == IN)
0049c0   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0049c2   b46c     btfsc   0x6c, 0x2, 0x0   	BTFSC	_USTATbits, 2
0049c4   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0049c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0049c8   0a01     xorlw   0x01             	XORLW	0x01
0049ca   e122     bnz     0x004a10         	BNZ	_01107_DS_
                                           ;	.line	626; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if ((UADDR == 0) && (deviceState == ADDRESS))
0049cc   506e     movf    0x6e, 0x0, 0x0   	MOVF	_UADDR, W
0049ce   e10b     bnz     0x0049e6         	BNZ	_01094_DS_
0049d0   0101     movlb   0x1              	BANKSEL	_deviceState
0049d2   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
0049d4   0a04     xorlw   0x04             	XORLW	0x04
0049d6   e107     bnz     0x0049e6         	BNZ	_01094_DS_
                                           ;	.line	630; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UADDR = SetupPacket.wValue0;
0049d8   c502     movff   0x502, 0xf6e     	MOVFF	(_SetupPacket + 2), _UADDR
0049da   ff6e
                                           ;	.line	634; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UADDR == 0)
0049dc   506e     movf    0x6e, 0x0, 0x0   	MOVF	_UADDR, W
0049de   e103     bnz     0x0049e6         	BNZ	_01094_DS_
                                           ;	.line	637; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = DEFAULT_STATUS;
0049e0   0e03     movlw   0x03             	MOVLW	0x03
0049e2   0101     movlb   0x1              	BANKSEL	_deviceState
0049e4   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           _01094_DS_:
0049e6   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
                                           ;	.line	640; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (ctrlTransferStage == DATA_IN_STAGE)
0049e8   51ad     movf    0xad, 0x0, 0x1   	MOVF	_ctrlTransferStage, W, B
0049ea   0a02     xorlw   0x02             	XORLW	0x02
0049ec   e10f     bnz     0x004a0c         	BNZ	_01100_DS_
                                           ;	.line	643; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	InDataStage(0);
0049ee   0e00     movlw   0x00             	MOVLW	0x00
0049f0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0049f2   ec95     call    0x00312a, 0x0    	CALL	_InDataStage
0049f4   f018
0049f6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0049f8   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
                                           ;	.line	646; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(EP_IN_BD(0).Stat.DTS)
0049fa   ad04     btfss   0x04, 0x6, 0x1   	BTFSS	(_ep_bdt + 4), 6, B
0049fc   d003     bra     0x004a04         	BRA	_01097_DS_
                                           ;	.line	647; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
0049fe   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004a00   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
004a02   d006     bra     0x004a10         	BRA	_01107_DS_
                                           _01097_DS_:
                                           ;	.line	649; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004a04   0ec8     movlw   0xc8             	MOVLW	0xc8
004a06   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
004a08   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
004a0a   d002     bra     0x004a10         	BRA	_01107_DS_
                                           _01100_DS_:
                                           ;	.line	654; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	WaitForSetupStage();
004a0c   ecf3     call    0x0059e6, 0x0    	CALL	_WaitForSetupStage
004a0e   f02c
                                           _01107_DS_:
                                           ;	.line	664; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
004a10   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004a12   f001
004a14   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004a16   f000
004a18   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__WaitForSetupStage	code
                                           _WaitForSetupStage:
0059e6   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
                                           ;	.line	551; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
0059e8   6bad     clrf    0xad, 0x1        	CLRF	_ctrlTransferStage, B
                                           ;	.line	552; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
0059ea   0e40     movlw   0x40             	MOVLW	0x40
0059ec   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
0059ee   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	553; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
0059f0   0e00     movlw   0x00             	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
0059f2   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
0059f4   0e05     movlw   0x05             	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
0059f6   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	555; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
0059f8   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
0059fa   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
                                           ;	.line	556; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = 0x00;           // Give control to CPU
0059fc   6b04     clrf    0x04, 0x1        	CLRF	(_ep_bdt + 4), B
                                           ;	.line	557; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
0059fe   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__SetupStage	code
                                           _SetupStage:
                                           ;	.line	478; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void SetupStage(void) {
004704   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004706   ffe5
004708   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00470a   ffe5
                                           ;	.line	481; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc &= ~BDS_UOWN;
00470c   0e7f     movlw   0x7f             	MOVLW	0x7f
00470e   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
004710   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_ep_bdt + 4), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004712   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	482; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc &= ~BDS_UOWN;
004714   0e7f     movlw   0x7f             	MOVLW	0x7f
                                           ; removed redundant BANKSEL
004716   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_ep_bdt, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004718   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
00471a   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
                                           ;	.line	485; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
00471c   6bad     clrf    0xad, 0x1        	CLRF	_ctrlTransferStage, B
00471e   0101     movlb   0x1              	BANKSEL	_requestHandled
                                           ;	.line	486; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 0;                   // Default is that request hasn't been handled
004720   6ba8     clrf    0xa8, 0x1        	CLRF	_requestHandled, B
004722   0101     movlb   0x1              	BANKSEL	_HIDPostProcess
                                           ;	.line	487; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	HIDPostProcess = 0;                   // Assume standard request until know otherwise
004724   6b9e     clrf    0x9e, 0x1        	CLRF	_HIDPostProcess, B
004726   0101     movlb   0x1              	BANKSEL	_wCount
                                           ;	.line	488; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = 0;                           // No bytes transferred
004728   6b91     clrf    0x91, 0x1        	CLRF	_wCount, B
                                           ; removed redundant BANKSEL
00472a   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	491; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ProcessStandardRequest();
00472c   ec9f     call    0x00453e, 0x0    	CALL	_ProcessStandardRequest
00472e   f022
                                           ;	.line	501; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if ((SetupPacket.bmRequestType & USB_RECIP_MASK) == USB_RECIP_INTERFACE)  
004730   c500     movff   0x500, 0x000     	MOVFF	_SetupPacket, r0x00
004732   f000
004734   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004736   0e1f     movlw   0x1f             	MOVLW	0x1f
004738   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00473a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00473c   0a01     xorlw   0x01             	XORLW	0x01
00473e   e102     bnz     0x004744         	BNZ	_01069_DS_
004740   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004742   e001     bz      0x004746         	BZ	_01070_DS_
                                           _01069_DS_:
004744   d002     bra     0x00474a         	BRA	_01043_DS_
                                           _01070_DS_:
                                           ;	.line	502; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ProcessCDCRequest();
004746   ec14     call    0x004c28, 0x0    	CALL	_ProcessCDCRequest
004748   f026
                                           _01043_DS_:
00474a   0101     movlb   0x1              	BANKSEL	_requestHandled
                                           ;	.line	505; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (!requestHandled) {
00474c   51a8     movf    0xa8, 0x0, 0x1   	MOVF	_requestHandled, W, B
00474e   e10b     bnz     0x004766         	BNZ	_01050_DS_
                                           ;	.line	507; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
004750   0e40     movlw   0x40             	MOVLW	0x40
004752   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
004754   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	508; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
004756   0e00     movlw   0x00             	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
004758   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
00475a   0e05     movlw   0x05             	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
00475c   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ; #	MOVLW	0x84
                                           ; #	MOVWF	_ep_bdt, B
                                           ; #	MOVLW	0x84
                                           ;	.line	509; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
00475e   0e84     movlw   0x84             	MOVLW	0x84
                                           ; removed redundant BANKSEL
                                           ;	.line	510; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
004760   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
004762   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
004764   d039     bra     0x0047d8         	BRA	_01051_DS_
                                           _01050_DS_:
                                           ;	.line	512; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (SetupPacket.bmRequestType & 0x80) {
004766   c500     movff   0x500, 0x000     	MOVFF	_SetupPacket, r0x00
004768   f000
00476a   ae00     btfss   0x00, 0x7, 0x0   	BTFSS	r0x00, 7
00476c   d026     bra     0x0047ba         	BRA	_01047_DS_
00476e   0101     movlb   0x1              	BANKSEL	(_wCount + 1)
                                           ;	.line	514; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(SetupPacket.wLength < wCount)
004770   5192     movf    0x92, 0x0, 0x1   	MOVF	(_wCount + 1), W, B
004772   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 7)
004774   5d07     subwf   0x07, 0x0, 0x1   	SUBWF	(_SetupPacket + 7), W, B
004776   e104     bnz     0x004780         	BNZ	_01072_DS_
004778   0101     movlb   0x1              	BANKSEL	_wCount
00477a   5191     movf    0x91, 0x0, 0x1   	MOVF	_wCount, W, B
00477c   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 6)
00477e   5d06     subwf   0x06, 0x0, 0x1   	SUBWF	(_SetupPacket + 6), W, B
                                           _01072_DS_:
004780   e204     bc      0x00478a         	BC	_01045_DS_
                                           ;	.line	515; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = SetupPacket.wLength;
004782   c506     movff   0x506, 0x191     	MOVFF	(_SetupPacket + 6), _wCount
004784   f191
004786   c507     movff   0x507, 0x192     	MOVFF	(_SetupPacket + 7), (_wCount + 1)
004788   f192
                                           _01045_DS_:
                                           ;	.line	516; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	InDataStage(0);
00478a   0e00     movlw   0x00             	MOVLW	0x00
00478c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00478e   ec95     call    0x00312a, 0x0    	CALL	_InDataStage
004790   f018
004792   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	517; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ctrlTransferStage = DATA_IN_STAGE;
004794   0e02     movlw   0x02             	MOVLW	0x02
004796   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
004798   6fad     movwf   0xad, 0x1        	MOVWF	_ctrlTransferStage, B
                                           ;	.line	519; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
00479a   0e40     movlw   0x40             	MOVLW	0x40
00479c   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
00479e   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
0047a0   0e00     movlw   0x00             	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
0047a2   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
0047a4   0e05     movlw   0x05             	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
0047a6   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	521; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN;
0047a8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0047aa   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           ;	.line	524; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).ADDR = PTR16(&controlTransferBuffer);
0047ac   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0047ae   6f06     movwf   0x06, 0x1        	MOVWF	(_ep_bdt + 6), B
0047b0   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0047b2   6f07     movwf   0x07, 0x1        	MOVWF	(_ep_bdt + 7), B
                                           ;	.line	526; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
0047b4   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
0047b6   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
0047b8   d00f     bra     0x0047d8         	BRA	_01051_DS_
                                           _01047_DS_:
                                           ;	.line	530; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ctrlTransferStage = DATA_OUT_STAGE;
0047ba   0e01     movlw   0x01             	MOVLW	0x01
0047bc   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
0047be   6fad     movwf   0xad, 0x1        	MOVWF	_ctrlTransferStage, B
0047c0   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 5)
                                           ;	.line	533; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Cnt = 0;
0047c2   6b05     clrf    0x05, 0x1        	CLRF	(_ep_bdt + 5), B
                                           ;	.line	534; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
0047c4   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
0047c6   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
0047c8   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
0047ca   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	538; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&controlTransferBuffer);
0047cc   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0047ce   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
0047d0   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0047d2   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	540; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
0047d4   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
0047d6   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           _01051_DS_:
                                           ;	.line	544; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.PKTDIS = 0;
0047d8   986d     bcf     0x6d, 0x4, 0x0   	BCF	_UCONbits, 4
                                           ;	.line	545; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
0047da   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0047dc   f001
0047de   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0047e0   f000
0047e2   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__OutDataStage	code
                                           _OutDataStage:
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void OutDataStage(unsigned char ep) {
0037a2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0037a4   ffe5
0037a6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0037a8   ffd9
0037aa   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0037ac   ffe5
0037ae   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0037b0   ffe5
0037b2   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0037b4   ffe5
0037b6   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0037b8   ffe5
0037ba   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0037bc   ffe5
0037be   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0037c0   ffe5
0037c2   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
0037c4   ffe5
0037c6   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
0037c8   ffe5
0037ca   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
0037cc   ffe5
0037ce   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
0037d0   ffe5
0037d2   0e02     movlw   0x02             	MOVLW	0x02
0037d4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0037d6   f000
                                           ;	.line	445; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	bufferSize = ((0x03 & EP_OUT_BD(ep).Stat.uc) << 8) | EP_OUT_BD(ep).Cnt;
0037d8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0037da   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0037dc   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0037de   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0037e0   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	r0x03, W
0037e2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0037e4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0037e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0037e8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0037ea   0e04     movlw   0x04             	MOVLW	0x04
0037ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0037ee   ecfd     call    0x004ffa, 0x0    	CALL	__mulint
0037f0   f027
0037f2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0037f4   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0037f6   f001
0037f8   0e04     movlw   0x04             	MOVLW	0x04
0037fa   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0037fc   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
0037fe   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003800   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003802   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003804   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003806   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003808   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00380a   ffe9
00380c   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
00380e   ffea
003810   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
003812   f002
003814   0e03     movlw   0x03             	MOVLW	0x03
003816   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
003818   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00381a   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00381c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00381e   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003820   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003822   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003824   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003826   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
003828   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00382a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00382c   ffe9
00382e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
003830   ffea
003832   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
003834   f000
003836   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003838   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00383a   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
00383c   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00383e   1201     iorwf   0x01, 0x1, 0x0   	IORWF	r0x01, F
                                           ;	.line	452; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = wCount + bufferSize;
003840   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003842   0101     movlb   0x1              	BANKSEL	_wCount
003844   2791     addwf   0x91, 0x1, 0x1   	ADDWF	_wCount, F, B
003846   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003848   2392     addwfc  0x92, 0x1, 0x1   	ADDWFC	(_wCount + 1), F, B
                                           ;	.line	454; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8*)&controlTransferBuffer;
00384a   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
00384c   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
00384e   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
003850   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003852   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
003854   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003856   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	458; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003858   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00385a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01022_DS_:
00385c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00385e   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
003860   e102     bnz     0x003866         	BNZ	_01035_DS_
003862   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003864   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01035_DS_:
003866   e22c     bc      0x0038c0         	BC	_01024_DS_
                                           ;	.line	462; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr++ = *outPtr++;
003868   c18e     movff   0x18e, 0x004     	MOVFF	_inPtr, r0x04
00386a   f004
00386c   c18f     movff   0x18f, 0x005     	MOVFF	(_inPtr + 1), r0x05
00386e   f005
003870   c190     movff   0x190, 0x006     	MOVFF	(_inPtr + 2), r0x06
003872   f006
003874   c18b     movff   0x18b, 0x007     	MOVFF	_outPtr, r0x07
003876   f007
003878   c18c     movff   0x18c, 0x008     	MOVFF	(_outPtr + 1), r0x08
00387a   f008
00387c   c18d     movff   0x18d, 0x009     	MOVFF	(_outPtr + 2), r0x09
00387e   f009
003880   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
003882   ffe9
003884   c008     movff   0x008, 0xff3     	MOVFF	r0x08, PRODL
003886   fff3
003888   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
00388a   ecc3     call    0x005986, 0x0    	CALL	__gptrget1
00388c   f02c
00388e   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
003890   0101     movlb   0x1              	BANKSEL	_outPtr
003892   2b8b     incf    0x8b, 0x1, 0x1   	INCF	_outPtr, F, B
003894   e303     bnc     0x00389c         	BNC	_01036_DS_
                                           ; removed redundant BANKSEL
003896   3f8c     incfsz  0x8c, 0x1, 0x1   	INCFSZ	(_outPtr + 1), F, B
003898   d001     bra     0x00389c         	BRA	_11819_DS_
                                           ; removed redundant BANKSEL
00389a   2b8d     incf    0x8d, 0x1, 0x1   	INCF	(_outPtr + 2), F, B
                                           _11819_DS_:
                                           _01036_DS_:
00389c   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
00389e   ffe5
0038a0   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
0038a2   ffe9
0038a4   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
0038a6   fff3
0038a8   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0038aa   ec18     call    0x005a30, 0x0    	CALL	__gptrput1
0038ac   f02d
0038ae   0101     movlb   0x1              	BANKSEL	_inPtr
0038b0   2b8e     incf    0x8e, 0x1, 0x1   	INCF	_inPtr, F, B
0038b2   e303     bnc     0x0038ba         	BNC	_01037_DS_
                                           ; removed redundant BANKSEL
0038b4   3f8f     incfsz  0x8f, 0x1, 0x1   	INCFSZ	(_inPtr + 1), F, B
0038b6   d001     bra     0x0038ba         	BRA	_21820_DS_
                                           ; removed redundant BANKSEL
0038b8   2b90     incf    0x90, 0x1, 0x1   	INCF	(_inPtr + 2), F, B
                                           _21820_DS_:
                                           _01037_DS_:
                                           ;	.line	458; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
0038ba   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
0038bc   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0038be   d7ce     bra     0x00385c         	BRA	_01022_DS_
                                           _01024_DS_:
                                           ;	.line	468; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
0038c0   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
0038c2   f009
0038c4   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
0038c6   f008
0038c8   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
0038ca   f007
0038cc   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
0038ce   f006
0038d0   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0038d2   f005
0038d4   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0038d6   f004
0038d8   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0038da   f003
0038dc   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0038de   f002
0038e0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0038e2   f001
0038e4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0038e6   f000
0038e8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0038ea   ffd9
0038ec   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__InDataStage	code
                                           _InDataStage:
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void InDataStage(unsigned char ep) {
00312a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00312c   ffe5
00312e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003130   ffd9
003132   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003134   ffe5
003136   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003138   ffe5
00313a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00313c   ffe5
00313e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003140   ffe5
003142   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003144   ffe5
003146   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003148   ffe5
00314a   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00314c   ffe5
00314e   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
003150   ffe5
003152   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
003154   ffe5
003156   0e02     movlw   0x02             	MOVLW	0x02
003158   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00315a   f000
                                           ;	.line	402; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(wCount < EP0_BUFFER_SIZE)
00315c   0e00     movlw   0x00             	MOVLW	0x00
00315e   0101     movlb   0x1              	BANKSEL	(_wCount + 1)
003160   5d92     subwf   0x92, 0x0, 0x1   	SUBWF	(_wCount + 1), W, B
003162   e102     bnz     0x003168         	BNZ	_01009_DS_
003164   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
003166   5d91     subwf   0x91, 0x0, 0x1   	SUBWF	_wCount, W, B
                                           _01009_DS_:
003168   e205     bc      0x003174         	BC	_00991_DS_
                                           ;	.line	403; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	bufferSize = wCount;
00316a   c191     movff   0x191, 0x001     	MOVFF	_wCount, r0x01
00316c   f001
00316e   c192     movff   0x192, 0x002     	MOVFF	(_wCount + 1), r0x02
003170   f002
003172   d003     bra     0x00317a         	BRA	_00992_DS_
                                           _00991_DS_:
                                           ;	.line	405; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	bufferSize = EP0_BUFFER_SIZE;
003174   0e40     movlw   0x40             	MOVLW	0x40
003176   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003178   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           _00992_DS_:
                                           ;	.line	413; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(ep).Stat.uc &= ~(BDS_BC8 | BDS_BC9);
00317a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00317c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00317e   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003180   2604     addwf   0x04, 0x1, 0x0   	ADDWF	r0x04, F
003182   3403     rlcf    0x03, 0x0, 0x0   	RLCF	r0x03, W
003184   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003186   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003188   0f01     addlw   0x01             	ADDLW	0x01
00318a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00318c   0e00     movlw   0x00             	MOVLW	0x00
00318e   2005     addwfc  0x05, 0x0, 0x0   	ADDWFC	r0x05, W
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	r0x03, W
003190   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003192   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003194   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003196   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003198   0e04     movlw   0x04             	MOVLW	0x04
00319a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00319c   ecfd     call    0x004ffa, 0x0    	CALL	__mulint
00319e   f027
0031a0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0031a2   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0031a4   f003
0031a6   0e04     movlw   0x04             	MOVLW	0x04
0031a8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0031aa   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
0031ac   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0031ae   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0031b0   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
0031b2   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
0031b4   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0031b6   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
0031b8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0031ba   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
0031bc   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
0031be   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
0031c0   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0031c2   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
0031c4   ffe9
0031c6   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
0031c8   ffea
0031ca   cfef     movff   0xfef, 0x006     	MOVFF	INDF0, r0x06
0031cc   f006
0031ce   0efc     movlw   0xfc             	MOVLW	0xfc
0031d0   1606     andwf   0x06, 0x1, 0x0   	ANDWF	r0x06, F
0031d2   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
0031d4   ffe9
0031d6   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
0031d8   ffea
0031da   c006     movff   0x006, 0xfef     	MOVFF	r0x06, INDF0
0031dc   ffef
                                           ;	.line	414; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(ep).Stat.uc |= (u8)((bufferSize & 0x0300) >> 8);
0031de   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
0031e0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0031e2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0031e4   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
0031e6   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
0031e8   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0031ea   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
0031ec   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0031ee   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
0031f0   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
0031f2   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
0031f4   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0031f6   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
0031f8   ffe9
0031fa   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
0031fc   ffea
0031fe   cfef     movff   0xfef, 0x006     	MOVFF	INDF0, r0x06
003200   f006
003202   0e03     movlw   0x03             	MOVLW	0x03
003204   1402     andwf   0x02, 0x0, 0x0   	ANDWF	r0x02, W
                                           ; #	MOVWF	r0x08
                                           ; #	MOVF	r0x08, W
003206   1206     iorwf   0x06, 0x1, 0x0   	IORWF	r0x06, F
003208   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
00320a   ffe9
00320c   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
00320e   ffea
003210   c006     movff   0x006, 0xfef     	MOVFF	r0x06, INDF0
003212   ffef
                                           ;	.line	415; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(ep).Cnt = (u8)(bufferSize & 0xFF);
003214   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003216   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003218   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00321a   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
00321c   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
00321e   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003220   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
003222   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
003224   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003226   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
003228   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
00322a   ffe9
00322c   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
00322e   ffea
003230   c006     movff   0x006, 0xfef     	MOVFF	r0x06, INDF0
003232   ffef
                                           ;	.line	416; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(ep).ADDR = PTR16(&controlTransferBuffer);
003234   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003236   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003238   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
00323a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00323c   0e02     movlw   0x02             	MOVLW	0x02
00323e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003240   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
003242   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
003244   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
003246   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003248   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
00324a   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00324c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00324e   ffe9
003250   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
003252   ffea
003254   c004     movff   0x004, 0xfee     	MOVFF	r0x04, POSTINC0
003256   ffee
003258   c005     movff   0x005, 0xfef     	MOVFF	r0x05, INDF0
00325a   ffef
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = wCount - bufferSize;
00325c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00325e   0101     movlb   0x1              	BANKSEL	_wCount
003260   5f91     subwf   0x91, 0x1, 0x1   	SUBWF	_wCount, F, B
003262   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
003264   5b92     subwfb  0x92, 0x1, 0x1   	SUBWFB	(_wCount + 1), F, B
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr = (u8 *)&controlTransferBuffer;
003266   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
003268   0101     movlb   0x1              	BANKSEL	(_inPtr + 1)
00326a   6f8f     movwf   0x8f, 0x1        	MOVWF	(_inPtr + 1), B
00326c   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
00326e   6f8e     movwf   0x8e, 0x1        	MOVWF	_inPtr, B
003270   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003272   6f90     movwf   0x90, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	429; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003274   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00995_DS_:
003276   c000     movff   0x000, 0x003     	MOVFF	r0x00, r0x03
003278   f003
00327a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00327c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00327e   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
003280   e102     bnz     0x003286         	BNZ	_01013_DS_
003282   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003284   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
                                           _01013_DS_:
003286   e22b     bc      0x0032de         	BC	_00997_DS_
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr++ = *outPtr++;
003288   c18e     movff   0x18e, 0x003     	MOVFF	_inPtr, r0x03
00328a   f003
00328c   c18f     movff   0x18f, 0x004     	MOVFF	(_inPtr + 1), r0x04
00328e   f004
003290   c190     movff   0x190, 0x005     	MOVFF	(_inPtr + 2), r0x05
003292   f005
003294   c18b     movff   0x18b, 0x006     	MOVFF	_outPtr, r0x06
003296   f006
003298   c18c     movff   0x18c, 0x007     	MOVFF	(_outPtr + 1), r0x07
00329a   f007
00329c   c18d     movff   0x18d, 0x008     	MOVFF	(_outPtr + 2), r0x08
00329e   f008
0032a0   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
0032a2   ffe9
0032a4   c007     movff   0x007, 0xff3     	MOVFF	r0x07, PRODL
0032a6   fff3
0032a8   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
0032aa   ecc3     call    0x005986, 0x0    	CALL	__gptrget1
0032ac   f02c
0032ae   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
0032b0   0101     movlb   0x1              	BANKSEL	_outPtr
0032b2   2b8b     incf    0x8b, 0x1, 0x1   	INCF	_outPtr, F, B
0032b4   e303     bnc     0x0032bc         	BNC	_01014_DS_
                                           ; removed redundant BANKSEL
0032b6   3f8c     incfsz  0x8c, 0x1, 0x1   	INCFSZ	(_outPtr + 1), F, B
0032b8   d001     bra     0x0032bc         	BRA	_31821_DS_
                                           ; removed redundant BANKSEL
0032ba   2b8d     incf    0x8d, 0x1, 0x1   	INCF	(_outPtr + 2), F, B
                                           _31821_DS_:
                                           _01014_DS_:
0032bc   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
0032be   ffe5
0032c0   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0032c2   ffe9
0032c4   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
0032c6   fff3
0032c8   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0032ca   ec18     call    0x005a30, 0x0    	CALL	__gptrput1
0032cc   f02d
0032ce   0101     movlb   0x1              	BANKSEL	_inPtr
0032d0   2b8e     incf    0x8e, 0x1, 0x1   	INCF	_inPtr, F, B
0032d2   e303     bnc     0x0032da         	BNC	_01015_DS_
                                           ; removed redundant BANKSEL
0032d4   3f8f     incfsz  0x8f, 0x1, 0x1   	INCFSZ	(_inPtr + 1), F, B
0032d6   d001     bra     0x0032da         	BRA	_41822_DS_
                                           ; removed redundant BANKSEL
0032d8   2b90     incf    0x90, 0x1, 0x1   	INCF	(_inPtr + 2), F, B
                                           _41822_DS_:
                                           _01015_DS_:
                                           ;	.line	429; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
0032da   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0032dc   d7cc     bra     0x003276         	BRA	_00995_DS_
                                           _00997_DS_:
                                           ;	.line	436; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
0032de   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
0032e0   f008
0032e2   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
0032e4   f007
0032e6   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
0032e8   f006
0032ea   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0032ec   f005
0032ee   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0032f0   f004
0032f2   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0032f4   f003
0032f6   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0032f8   f002
0032fa   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0032fc   f001
0032fe   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003300   f000
003302   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003304   ffd9
003306   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessStandardRequest	code
                                           _ProcessStandardRequest:
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void ProcessStandardRequest(void) {
00453e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004540   ffe5
004542   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004544   ffe5
                                           ;	.line	285; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 request = SetupPacket.bRequest;
004546   c501     movff   0x501, 0x000     	MOVFF	(_SetupPacket + 1), r0x00
004548   f000
                                           ;	.line	287; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if((SetupPacket.bmRequestType & 0x60) != 0x00)
00454a   c500     movff   0x500, 0x001     	MOVFF	_SetupPacket, r0x01
00454c   f001
00454e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; #	ANDLW	0x60
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00904_DS_
                                           ; #	GOTO	_00936_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	return;
004550   0b60     andlw   0x60             	ANDLW	0x60
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (request == SET_ADDRESS) {
004552   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
004554   d061     bra     0x004618         	BRA	_00936_DS_
004556   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004558   0a05     xorlw   0x05             	XORLW	0x05
00455a   e109     bnz     0x00456e         	BNZ	_00934_DS_
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
00455c   0e01     movlw   0x01             	MOVLW	0x01
00455e   0101     movlb   0x1              	BANKSEL	_requestHandled
004560   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	301; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = ADDRESS;
004562   0e04     movlw   0x04             	MOVLW	0x04
004564   0101     movlb   0x1              	BANKSEL	_deviceState
004566   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceAddress = SetupPacket.wValue0;
004568   c502     movff   0x502, 0x19d     	MOVFF	(_SetupPacket + 2), _deviceAddress
00456a   f19d
00456c   d055     bra     0x004618         	BRA	_00936_DS_
                                           _00934_DS_:
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == GET_DESCRIPTOR) {
00456e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004570   0a06     xorlw   0x06             	XORLW	0x06
004572   e103     bnz     0x00457a         	BNZ	_00931_DS_
                                           ;	.line	305; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	GetDescriptor();
004574   ec2e     call    0x00425c, 0x0    	CALL	_GetDescriptor
004576   f021
004578   d04f     bra     0x004618         	BRA	_00936_DS_
                                           _00931_DS_:
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == SET_CONFIGURATION) {
00457a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00457c   0a09     xorlw   0x09             	XORLW	0x09
00457e   e112     bnz     0x0045a4         	BNZ	_00928_DS_
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
004580   0e01     movlw   0x01             	MOVLW	0x01
004582   0101     movlb   0x1              	BANKSEL	_requestHandled
004584   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	currentConfiguration = SetupPacket.wValue0;
004586   c502     movff   0x502, 0x1ac     	MOVFF	(_SetupPacket + 2), _currentConfiguration
004588   f1ac
00458a   0101     movlb   0x1              	BANKSEL	_currentConfiguration
                                           ;	.line	315; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (currentConfiguration == 0)
00458c   51ac     movf    0xac, 0x0, 0x1   	MOVF	_currentConfiguration, W, B
00458e   e104     bnz     0x004598         	BNZ	_00906_DS_
                                           ;	.line	318; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = ADDRESS;
004590   0e04     movlw   0x04             	MOVLW	0x04
004592   0101     movlb   0x1              	BANKSEL	_deviceState
004594   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
004596   d040     bra     0x004618         	BRA	_00936_DS_
                                           _00906_DS_:
                                           ;	.line	321; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = CONFIGURED;
004598   0e05     movlw   0x05             	MOVLW	0x05
00459a   0101     movlb   0x1              	BANKSEL	_deviceState
00459c   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	CDCInitEndpoint();
00459e   eca8     call    0x005550, 0x0    	CALL	_CDCInitEndpoint
0045a0   f02a
0045a2   d03a     bra     0x004618         	BRA	_00936_DS_
                                           _00928_DS_:
                                           ;	.line	341; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == GET_CONFIGURATION) {
0045a4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045a6   0a08     xorlw   0x08             	XORLW	0x08
0045a8   e10f     bnz     0x0045c8         	BNZ	_00925_DS_
                                           ;	.line	345; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
0045aa   0e01     movlw   0x01             	MOVLW	0x01
0045ac   0101     movlb   0x1              	BANKSEL	_requestHandled
0045ae   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8*)&currentConfiguration;
0045b0   0e01     movlw   0x01             	MOVLW	HIGH(_currentConfiguration)
0045b2   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
0045b4   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
0045b6   0eac     movlw   0xac             	MOVLW	LOW(_currentConfiguration)
                                           ; removed redundant BANKSEL
0045b8   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
0045ba   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0045bc   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = 1;
0045be   0e01     movlw   0x01             	MOVLW	0x01
0045c0   0101     movlb   0x1              	BANKSEL	_wCount
0045c2   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0045c4   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
0045c6   d028     bra     0x004618         	BRA	_00936_DS_
                                           _00925_DS_:
                                           ;	.line	349; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == GET_STATUS) {
0045c8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045ca   e103     bnz     0x0045d2         	BNZ	_00922_DS_
                                           ;	.line	350; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	GetStatus();
0045cc   ecfc     call    0x003df8, 0x0    	CALL	_GetStatus
0045ce   f01e
0045d0   d023     bra     0x004618         	BRA	_00936_DS_
                                           _00922_DS_:
                                           ;	.line	352; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if ((request == CLEAR_FEATURE) ||
0045d2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045d4   0a01     xorlw   0x01             	XORLW	0x01
0045d6   e003     bz      0x0045de         	BZ	_00917_DS_
                                           ;	.line	353; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	(request == SET_FEATURE)) {
0045d8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045da   0a03     xorlw   0x03             	XORLW	0x03
0045dc   e103     bnz     0x0045e4         	BNZ	_00918_DS_
                                           _00917_DS_:
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	SetFeature();
0045de   ecbf     call    0x003b7e, 0x0    	CALL	_SetFeature
0045e0   f01d
0045e2   d01a     bra     0x004618         	BRA	_00936_DS_
                                           _00918_DS_:
                                           ;	.line	356; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == GET_INTERFACE) {
0045e4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045e6   0a0a     xorlw   0x0a             	XORLW	0x0a
0045e8   e111     bnz     0x00460c         	BNZ	_00915_DS_
                                           ;	.line	362; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
0045ea   0e01     movlw   0x01             	MOVLW	0x01
0045ec   0101     movlb   0x1              	BANKSEL	_requestHandled
0045ee   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
0045f0   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
                                           ;	.line	363; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] = 0;
0045f2   6b40     clrf    0x40, 0x1        	CLRF	_controlTransferBuffer, B
                                           ;	.line	364; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8 *)&controlTransferBuffer;
0045f4   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
0045f6   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
0045f8   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
0045fa   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0045fc   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
0045fe   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004600   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = 1;
004602   0e01     movlw   0x01             	MOVLW	0x01
004604   0101     movlb   0x1              	BANKSEL	_wCount
004606   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004608   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
00460a   d006     bra     0x004618         	BRA	_00936_DS_
                                           _00915_DS_:
                                           ;	.line	367; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == SET_INTERFACE) {
00460c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00460e   0a0b     xorlw   0x0b             	XORLW	0x0b
004610   e103     bnz     0x004618         	BNZ	_00936_DS_
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
004612   0e01     movlw   0x01             	MOVLW	0x01
004614   0101     movlb   0x1              	BANKSEL	_requestHandled
004616   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           _00936_DS_:
                                           ;	.line	389; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
004618   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00461a   f001
00461c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00461e   f000
004620   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__SetFeature	code
                                           _SetFeature:
                                           ;	.line	240; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	static void SetFeature(void) {
003b7e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003b80   ffe5
003b82   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003b84   ffe5
003b86   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003b88   ffe5
003b8a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003b8c   ffe5
003b8e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003b90   ffe5
003b92   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003b94   ffe5
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 recipient = SetupPacket.bmRequestType & 0x1F;
003b96   0e1f     movlw   0x1f             	MOVLW	0x1f
003b98   0105     movlb   0x5              	BANKSEL	_SetupPacket
003b9a   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
003b9c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	242; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 feature = SetupPacket.wValue0;
003b9e   c502     movff   0x502, 0x001     	MOVFF	(_SetupPacket + 2), r0x01
003ba0   f001
                                           ;	.line	247; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (recipient == 0x00) {
003ba2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003ba4   e112     bnz     0x003bca         	BNZ	_00855_DS_
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (feature == DEVICE_REMOTE_WAKEUP) {
003ba6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003ba8   0a01     xorlw   0x01             	XORLW	0x01
003baa   e001     bz      0x003bae         	BZ	_00888_DS_
003bac   d07b     bra     0x003ca4         	BRA	_00857_DS_
                                           _00888_DS_:
                                           ;	.line	250; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003bae   0e01     movlw   0x01             	MOVLW	0x01
003bb0   0101     movlb   0x1              	BANKSEL	_requestHandled
003bb2   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
003bb4   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	251; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (SetupPacket.bRequest == SET_FEATURE)
003bb6   5101     movf    0x01, 0x0, 0x1   	MOVF	(_SetupPacket + 1), W, B
003bb8   0a03     xorlw   0x03             	XORLW	0x03
003bba   e104     bnz     0x003bc4         	BNZ	_00837_DS_
                                           ;	.line	252; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	remoteWakeup = 1;
003bbc   0e01     movlw   0x01             	MOVLW	0x01
003bbe   0101     movlb   0x1              	BANKSEL	_remoteWakeup
003bc0   6faa     movwf   0xaa, 0x1        	MOVWF	_remoteWakeup, B
003bc2   d070     bra     0x003ca4         	BRA	_00857_DS_
                                           _00837_DS_:
003bc4   0101     movlb   0x1              	BANKSEL	_remoteWakeup
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	remoteWakeup = 0;
003bc6   6baa     clrf    0xaa, 0x1        	CLRF	_remoteWakeup, B
003bc8   d06d     bra     0x003ca4         	BRA	_00857_DS_
                                           _00855_DS_:
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (recipient == 0x02) {
003bca   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003bcc   0a02     xorlw   0x02             	XORLW	0x02
003bce   e001     bz      0x003bd2         	BZ	_00892_DS_
003bd0   d069     bra     0x003ca4         	BRA	_00857_DS_
                                           _00892_DS_:
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 endpointNum = SetupPacket.wIndex0 & 0x0F;
003bd2   0e0f     movlw   0x0f             	MOVLW	0x0f
003bd4   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 4)
003bd6   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
003bd8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	261; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 endpointDir = SetupPacket.wIndex0 & 0x80;
003bda   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003bdc   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
003bde   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           ;	.line	262; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if ((feature == ENDPOINT_HALT) && (endpointNum != 0)) {
003be0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003be2   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
003be4   d05f     bra     0x003ca4         	BRA	_00857_DS_
003be6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003be8   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
003bea   d05c     bra     0x003ca4         	BRA	_00857_DS_
                                           ;	.line	264; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003bec   0e01     movlw   0x01             	MOVLW	0x01
003bee   0101     movlb   0x1              	BANKSEL	_requestHandled
003bf0   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	267; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr = (u8 *)&EP_OUT_BD(0) + (endpointNum * 8);
003bf2   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003bf4   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003bf6   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003bf8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003bfa   0e80     movlw   0x80             	MOVLW	0x80
003bfc   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003bfe   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003c00   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c02   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c04   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003c06   0e08     movlw   0x08             	MOVLW	0x08
003c08   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c0a   ecfd     call    0x004ffa, 0x0    	CALL	__mulint
003c0c   f027
003c0e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003c10   cff3     movff   0xff3, 0x005     	MOVFF	PRODL, r0x05
003c12   f005
003c14   0e04     movlw   0x04             	MOVLW	0x04
003c16   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003c18   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c1a   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
003c1c   0101     movlb   0x1              	BANKSEL	_inPtr
003c1e   6f8e     movwf   0x8e, 0x1        	MOVWF	_inPtr, B
003c20   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003c22   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
003c24   6f8f     movwf   0x8f, 0x1        	MOVWF	(_inPtr + 1), B
003c26   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003c28   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
                                           ; removed redundant BANKSEL
003c2a   6f90     movwf   0x90, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (endpointDir)
003c2c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003c2e   e005     bz      0x003c3a         	BZ	_00842_DS_
                                           ;	.line	269; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr += 4;
003c30   0e04     movlw   0x04             	MOVLW	0x04
                                           ; removed redundant BANKSEL
003c32   278e     addwf   0x8e, 0x1, 0x1   	ADDWF	_inPtr, F, B
003c34   0e00     movlw   0x00             	MOVLW	0x00
                                           ; removed redundant BANKSEL
003c36   238f     addwfc  0x8f, 0x1, 0x1   	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
003c38   2390     addwfc  0x90, 0x1, 0x1   	ADDWFC	(_inPtr + 2), F, B
                                           _00842_DS_:
003c3a   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(SetupPacket.bRequest == SET_FEATURE)
003c3c   5101     movf    0x01, 0x0, 0x1   	MOVF	(_SetupPacket + 1), W, B
003c3e   0a03     xorlw   0x03             	XORLW	0x03
003c40   e110     bnz     0x003c62         	BNZ	_00847_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr = 0x84;
003c42   c18e     movff   0x18e, 0x000     	MOVFF	_inPtr, r0x00
003c44   f000
003c46   c18f     movff   0x18f, 0x001     	MOVFF	(_inPtr + 1), r0x01
003c48   f001
003c4a   c190     movff   0x190, 0x003     	MOVFF	(_inPtr + 2), r0x03
003c4c   f003
003c4e   0e84     movlw   0x84             	MOVLW	0x84
003c50   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c52   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003c54   ffe9
003c56   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
003c58   fff3
003c5a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003c5c   ec18     call    0x005a30, 0x0    	CALL	__gptrput1
003c5e   f02d
003c60   d021     bra     0x003ca4         	BRA	_00857_DS_
                                           _00847_DS_:
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(endpointDir == 1)
003c62   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003c64   0a01     xorlw   0x01             	XORLW	0x01
003c66   e10f     bnz     0x003c86         	BNZ	_00844_DS_
                                           ;	.line	275; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr = 0x00;
003c68   c18e     movff   0x18e, 0x000     	MOVFF	_inPtr, r0x00
003c6a   f000
003c6c   c18f     movff   0x18f, 0x001     	MOVFF	(_inPtr + 1), r0x01
003c6e   f001
003c70   c190     movff   0x190, 0x002     	MOVFF	(_inPtr + 2), r0x02
003c72   f002
003c74   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003c76   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003c78   ffe9
003c7a   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
003c7c   fff3
003c7e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003c80   ec18     call    0x005a30, 0x0    	CALL	__gptrput1
003c82   f02d
003c84   d00f     bra     0x003ca4         	BRA	_00857_DS_
                                           _00844_DS_:
                                           ;	.line	277; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr = 0x88;
003c86   c18e     movff   0x18e, 0x000     	MOVFF	_inPtr, r0x00
003c88   f000
003c8a   c18f     movff   0x18f, 0x001     	MOVFF	(_inPtr + 1), r0x01
003c8c   f001
003c8e   c190     movff   0x190, 0x002     	MOVFF	(_inPtr + 2), r0x02
003c90   f002
003c92   0e88     movlw   0x88             	MOVLW	0x88
003c94   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c96   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003c98   ffe9
003c9a   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
003c9c   fff3
003c9e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003ca0   ec18     call    0x005a30, 0x0    	CALL	__gptrput1
003ca2   f02d
                                           _00857_DS_:
                                           ;	.line	281; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
003ca4   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003ca6   f005
003ca8   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003caa   f004
003cac   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003cae   f003
003cb0   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003cb2   f002
003cb4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003cb6   f001
003cb8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003cba   f000
003cbc   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__GetStatus	code
                                           _GetStatus:
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	static void GetStatus(void) {
003df8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003dfa   ffe5
003dfc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003dfe   ffe5
003e00   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003e02   ffe5
003e04   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003e06   ffe5
003e08   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003e0a   ffe5
003e0c   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003e0e   ffe5
                                           ;	.line	197; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 recipient = SetupPacket.bmRequestType & 0x1F;
003e10   0e1f     movlw   0x1f             	MOVLW	0x1f
003e12   0105     movlb   0x5              	BANKSEL	_SetupPacket
003e14   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
003e16   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003e18   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
                                           ;	.line	201; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] = 0;
003e1a   6b40     clrf    0x40, 0x1        	CLRF	_controlTransferBuffer, B
                                           ; removed redundant BANKSEL
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[1] = 0;
003e1c   6b41     clrf    0x41, 0x1        	CLRF	(_controlTransferBuffer + 1), B
                                           ;	.line	205; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (recipient == 0x00) {
003e1e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003e20   e117     bnz     0x003e50         	BNZ	_00792_DS_
                                           ;	.line	207; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003e22   0e01     movlw   0x01             	MOVLW	0x01
003e24   0101     movlb   0x1              	BANKSEL	_requestHandled
003e26   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
003e28   0101     movlb   0x1              	BANKSEL	_selfPowered
                                           ;	.line	209; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (selfPowered)
003e2a   51a9     movf    0xa9, 0x0, 0x1   	MOVF	_selfPowered, W, B
003e2c   e006     bz      0x003e3a         	BZ	_00779_DS_
                                           ;	.line	210; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] |= 0x01;
003e2e   c540     movff   0x540, 0x001     	MOVFF	_controlTransferBuffer, r0x01
003e30   f001
003e32   8001     bsf     0x01, 0x0, 0x0   	BSF	r0x01, 0
003e34   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003e36   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
003e38   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
                                           _00779_DS_:
003e3a   0101     movlb   0x1              	BANKSEL	_remoteWakeup
                                           ;	.line	211; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (remoteWakeup)
003e3c   51aa     movf    0xaa, 0x0, 0x1   	MOVF	_remoteWakeup, W, B
003e3e   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
003e40   d053     bra     0x003ee8         	BRA	_00793_DS_
                                           ;	.line	212; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] |= 0x02;
003e42   c540     movff   0x540, 0x001     	MOVFF	_controlTransferBuffer, r0x01
003e44   f001
003e46   8201     bsf     0x01, 0x1, 0x0   	BSF	r0x01, 1
003e48   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003e4a   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
003e4c   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
003e4e   d04c     bra     0x003ee8         	BRA	_00793_DS_
                                           _00792_DS_:
                                           ;	.line	214; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (recipient == 0x01) {
003e50   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003e52   0a01     xorlw   0x01             	XORLW	0x01
003e54   e104     bnz     0x003e5e         	BNZ	_00789_DS_
                                           ;	.line	216; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003e56   0e01     movlw   0x01             	MOVLW	0x01
003e58   0101     movlb   0x1              	BANKSEL	_requestHandled
003e5a   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
003e5c   d045     bra     0x003ee8         	BRA	_00793_DS_
                                           _00789_DS_:
                                           ;	.line	218; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (recipient == 0x02) {
003e5e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003e60   0a02     xorlw   0x02             	XORLW	0x02
003e62   e001     bz      0x003e66         	BZ	_00828_DS_
003e64   d041     bra     0x003ee8         	BRA	_00793_DS_
                                           _00828_DS_:
                                           ;	.line	220; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 endpointNum = SetupPacket.wIndex0 & 0x0F;
003e66   0e0f     movlw   0x0f             	MOVLW	0x0f
003e68   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 4)
003e6a   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
003e6c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	221; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 endpointDir = SetupPacket.wIndex0 & 0x80;
003e6e   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003e70   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
003e72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ;	.line	222; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003e74   0e01     movlw   0x01             	MOVLW	0x01
003e76   0101     movlb   0x1              	BANKSEL	_requestHandled
003e78   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	225; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr = (u8 *)&EP_OUT_BD(0) + (endpointNum * 8);
003e7a   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003e7c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003e7e   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003e80   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003e82   0e80     movlw   0x80             	MOVLW	0x80
003e84   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003e86   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003e88   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003e8a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003e8c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003e8e   0e08     movlw   0x08             	MOVLW	0x08
003e90   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003e92   ecfd     call    0x004ffa, 0x0    	CALL	__mulint
003e94   f027
003e96   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003e98   cff3     movff   0xff3, 0x005     	MOVFF	PRODL, r0x05
003e9a   f005
003e9c   0e04     movlw   0x04             	MOVLW	0x04
003e9e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003ea0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003ea2   2402     addwf   0x02, 0x0, 0x0   	ADDWF	r0x02, W
003ea4   0101     movlb   0x1              	BANKSEL	_inPtr
003ea6   6f8e     movwf   0x8e, 0x1        	MOVWF	_inPtr, B
003ea8   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003eaa   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
003eac   6f8f     movwf   0x8f, 0x1        	MOVWF	(_inPtr + 1), B
003eae   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003eb0   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
                                           ; removed redundant BANKSEL
003eb2   6f90     movwf   0x90, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	226; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (endpointDir)
003eb4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003eb6   e005     bz      0x003ec2         	BZ	_00783_DS_
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr += 4;
003eb8   0e04     movlw   0x04             	MOVLW	0x04
                                           ; removed redundant BANKSEL
003eba   278e     addwf   0x8e, 0x1, 0x1   	ADDWF	_inPtr, F, B
003ebc   0e00     movlw   0x00             	MOVLW	0x00
                                           ; removed redundant BANKSEL
003ebe   238f     addwfc  0x8f, 0x1, 0x1   	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
003ec0   2390     addwfc  0x90, 0x1, 0x1   	ADDWFC	(_inPtr + 2), F, B
                                           _00783_DS_:
                                           ;	.line	228; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(*inPtr & BDS_BSTALL)
003ec2   c18e     movff   0x18e, 0x000     	MOVFF	_inPtr, r0x00
003ec4   f000
003ec6   c18f     movff   0x18f, 0x001     	MOVFF	(_inPtr + 1), r0x01
003ec8   f001
003eca   c190     movff   0x190, 0x002     	MOVFF	(_inPtr + 2), r0x02
003ecc   f002
003ece   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003ed0   ffe9
003ed2   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
003ed4   fff3
003ed6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003ed8   ecc3     call    0x005986, 0x0    	CALL	__gptrget1
003eda   f02c
003edc   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003ede   a400     btfss   0x00, 0x2, 0x0   	BTFSS	r0x00, 2
003ee0   d003     bra     0x003ee8         	BRA	_00793_DS_
                                           ;	.line	229; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] = 0x01;
003ee2   0e01     movlw   0x01             	MOVLW	0x01
003ee4   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
003ee6   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
                                           _00793_DS_:
003ee8   0101     movlb   0x1              	BANKSEL	_requestHandled
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (requestHandled) {
003eea   51a8     movf    0xa8, 0x0, 0x1   	MOVF	_requestHandled, W, B
003eec   e00b     bz      0x003f04         	BZ	_00796_DS_
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8 *)&controlTransferBuffer;
003eee   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
003ef0   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
003ef2   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
003ef4   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003ef6   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
003ef8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003efa   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	234; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = 2;
003efc   0e02     movlw   0x02             	MOVLW	0x02
003efe   0101     movlb   0x1              	BANKSEL	_wCount
003f00   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003f02   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           _00796_DS_:
                                           ;	.line	236; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
003f04   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003f06   f005
003f08   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003f0a   f004
003f0c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003f0e   f003
003f10   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003f12   f002
003f14   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003f16   f001
003f18   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003f1a   f000
003f1c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__GetDescriptor	code
                                           _GetDescriptor:
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	static void GetDescriptor(void)
00425c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00425e   ffe5
004260   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004262   ffe5
004264   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004266   ffe5
004268   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00426a   ffe5
00426c   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(SetupPacket.bmRequestType == 0x80)
00426e   5100     movf    0x00, 0x0, 0x1   	MOVF	_SetupPacket, W, B
004270   0a80     xorlw   0x80             	XORLW	0x80
004272   e001     bz      0x004276         	BZ	_00765_DS_
004274   d06b     bra     0x00434c         	BRA	_00747_DS_
                                           _00765_DS_:
                                           ;	.line	118; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 descriptorType  = SetupPacket.wValue1;
004276   c503     movff   0x503, 0x000     	MOVFF	(_SetupPacket + 3), r0x00
004278   f000
                                           ;	.line	119; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 descriptorIndex = SetupPacket.wValue0;
00427a   c502     movff   0x502, 0x001     	MOVFF	(_SetupPacket + 2), r0x01
00427c   f001
                                           ;	.line	121; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (descriptorType == DEVICE_DESCRIPTOR)
00427e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004280   0a01     xorlw   0x01             	XORLW	0x01
004282   e10f     bnz     0x0042a2         	BNZ	_00743_DS_
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
004284   0e01     movlw   0x01             	MOVLW	0x01
004286   0101     movlb   0x1              	BANKSEL	_requestHandled
004288   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8 *)&libdevice_descriptor;
00428a   0e00     movlw   0x00             	MOVLW	UPPER(_libdevice_descriptor)
00428c   0101     movlb   0x1              	BANKSEL	(_outPtr + 2)
00428e   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
004290   0e3a     movlw   0x3a             	MOVLW	HIGH(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
004292   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004294   0e9c     movlw   0x9c             	MOVLW	LOW(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
004296   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	128; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = sizeof(USB_Device_Descriptor);
004298   0e12     movlw   0x12             	MOVLW	0x12
00429a   0101     movlb   0x1              	BANKSEL	_wCount
00429c   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
00429e   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
0042a0   d055     bra     0x00434c         	BRA	_00747_DS_
                                           _00743_DS_:
                                           ;	.line	131; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (descriptorType == CONFIGURATION_DESCRIPTOR)
0042a2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0042a4   0a02     xorlw   0x02             	XORLW	0x02
0042a6   e117     bnz     0x0042d6         	BNZ	_00740_DS_
                                           ;	.line	137; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
0042a8   0e01     movlw   0x01             	MOVLW	0x01
0042aa   0101     movlb   0x1              	BANKSEL	_requestHandled
0042ac   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	149; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8 *)&libconfiguration_descriptor;
0042ae   0e00     movlw   0x00             	MOVLW	UPPER(_libconfiguration_descriptor)
0042b0   0101     movlb   0x1              	BANKSEL	(_outPtr + 2)
0042b2   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
0042b4   0e3a     movlw   0x3a             	MOVLW	HIGH(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
0042b6   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
0042b8   0eae     movlw   0xae             	MOVLW	LOW(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
0042ba   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	151; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = libconfiguration_descriptor.Header.wTotalLength;
0042bc   0eb0     movlw   0xb0             	MOVLW	LOW(_libconfiguration_descriptor + 2)
0042be   6ef6     movwf   0xf6, 0x0        	MOVWF	TBLPTRL
0042c0   0e3a     movlw   0x3a             	MOVLW	HIGH(_libconfiguration_descriptor + 2)
0042c2   6ef7     movwf   0xf7, 0x0        	MOVWF	TBLPTRH
0042c4   0e00     movlw   0x00             	MOVLW	UPPER(_libconfiguration_descriptor + 2)
0042c6   6ef8     movwf   0xf8, 0x0        	MOVWF	TBLPTRU
0042c8   0009     tblrd*+                  	TBLRD*+	
0042ca   cff5     movff   0xff5, 0x191     	MOVFF	TABLAT, _wCount
0042cc   f191
0042ce   0009     tblrd*+                  	TBLRD*+	
0042d0   cff5     movff   0xff5, 0x192     	MOVFF	TABLAT, (_wCount + 1)
0042d2   f192
0042d4   d03b     bra     0x00434c         	BRA	_00747_DS_
                                           _00740_DS_:
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (descriptorType == STRING_DESCRIPTOR)
0042d6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0042d8   0a03     xorlw   0x03             	XORLW	0x03
0042da   e132     bnz     0x004340         	BNZ	_00737_DS_
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
0042dc   0e01     movlw   0x01             	MOVLW	0x01
0042de   0101     movlb   0x1              	BANKSEL	_requestHandled
0042e0   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ; ;multiply lit val:0x03 by variable r0x01 and store in r0x01
                                           ;	.line	167; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = libstring_descriptor[descriptorIndex];
0042e2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0042e4   0d03     mullw   0x03             	MULLW	0x03
0042e6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0042e8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0042ea   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0042ec   f001
0042ee   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0042f0   0e1e     movlw   0x1e             	MOVLW	LOW(_libstring_descriptor)
0042f2   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
0042f4   0e3b     movlw   0x3b             	MOVLW	HIGH(_libstring_descriptor)
0042f6   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0042f8   0e00     movlw   0x00             	MOVLW	UPPER(_libstring_descriptor)
0042fa   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0042fc   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0042fe   fff6
004300   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004302   fff7
004304   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004306   fff8
004308   0009     tblrd*+                  	TBLRD*+	
00430a   cff5     movff   0xff5, 0x18b     	MOVFF	TABLAT, _outPtr
00430c   f18b
00430e   0009     tblrd*+                  	TBLRD*+	
004310   cff5     movff   0xff5, 0x18c     	MOVFF	TABLAT, (_outPtr + 1)
004312   f18c
004314   0009     tblrd*+                  	TBLRD*+	
004316   cff5     movff   0xff5, 0x18d     	MOVFF	TABLAT, (_outPtr + 2)
004318   f18d
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = *outPtr;
00431a   c18b     movff   0x18b, 0x001     	MOVFF	_outPtr, r0x01
00431c   f001
00431e   c18c     movff   0x18c, 0x002     	MOVFF	(_outPtr + 1), r0x02
004320   f002
004322   c18d     movff   0x18d, 0x003     	MOVFF	(_outPtr + 2), r0x03
004324   f003
004326   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004328   ffe9
00432a   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
00432c   fff3
00432e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004330   ecc3     call    0x005986, 0x0    	CALL	__gptrget1
004332   f02c
004334   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004336   c001     movff   0x001, 0x191     	MOVFF	r0x01, _wCount
004338   f191
00433a   0101     movlb   0x1              	BANKSEL	(_wCount + 1)
00433c   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
00433e   d006     bra     0x00434c         	BRA	_00747_DS_
                                           _00737_DS_:
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (descriptorType == DEVICE_QUALIFIER_DESCRIPTOR)
004340   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004342   0a06     xorlw   0x06             	XORLW	0x06
004344   e103     bnz     0x00434c         	BNZ	_00747_DS_
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
004346   0e01     movlw   0x01             	MOVLW	0x01
004348   0101     movlb   0x1              	BANKSEL	_requestHandled
00434a   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           _00747_DS_:
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	}
00434c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00434e   f003
004350   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004352   f002
004354   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004356   f001
004358   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00435a   f000
00435c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__IO_digital	code
                                           _IO_digital:
                                           ;	.line	123; /home/vbasel/.icaro/v4/firmware/core/io.c	ADCON1 = 0x0F;				// AN0 to AN12 Digital I/O
000c0c   0e0f     movlw   0x0f             	MOVLW	0x0f
000c0e   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/core/io.c	CMCON = 0x07;               // Comparators as Digital I/O
000c10   0e07     movlw   0x07             	MOVLW	0x07
000c12   6eb4     movwf   0xb4, 0x0        	MOVWF	_CMCON
                                           ;	.line	155; /home/vbasel/.icaro/v4/firmware/core/io.c	}
000c14   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__IO_init	code
                                           _IO_init:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/io.c	LATA  = 0x00;
00593c   6a89     clrf    0x89, 0x0        	CLRF	_LATA
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/io.c	LATB  = 0x00;
00593e   6a8a     clrf    0x8a, 0x0        	CLRF	_LATB
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/io.c	LATC  = 0x00;
005940   6a8b     clrf    0x8b, 0x0        	CLRF	_LATC
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/core/io.c	LATD  = 0x00; 
005942   6a8c     clrf    0x8c, 0x0        	CLRF	_LATD
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/io.c	LATE  = 0x00; 
005944   6a8d     clrf    0x8d, 0x0        	CLRF	_LATE
                                           ;	.line	83; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISA = 0x00;
005946   6a92     clrf    0x92, 0x0        	CLRF	_TRISA
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISB = 0x00;
005948   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC0 = 0x00;
00594a   9094     bcf     0x94, 0x0, 0x0   	BCF	_TRISCbits, 0
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC1 = 0x00;
00594c   9294     bcf     0x94, 0x1, 0x0   	BCF	_TRISCbits, 1
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC2 = 0x00;
00594e   9494     bcf     0x94, 0x2, 0x0   	BCF	_TRISCbits, 2
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC6 = 0x00;
005950   9c94     bcf     0x94, 0x6, 0x0   	BCF	_TRISCbits, 6
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC7 = 0x00;
005952   9e94     bcf     0x94, 0x7, 0x0   	BCF	_TRISCbits, 7
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISD = 0x00; 
005954   6a95     clrf    0x95, 0x0        	CLRF	_TRISD
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISE = 0x00; 
005956   6a96     clrf    0x96, 0x0        	CLRF	_TRISE
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTA  = 0x00;
005958   6a80     clrf    0x80, 0x0        	CLRF	_PORTA
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTB  = 0x00;
00595a   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTC  = 0x00;
00595c   6a82     clrf    0x82, 0x0        	CLRF	_PORTC
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTD  = 0x00; 
00595e   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	113; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTE  = 0x00; 
005960   6a84     clrf    0x84, 0x0        	CLRF	_PORTE
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/core/io.c	}
005962   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__analogwrite	code
                                           _analogwrite:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogwrite(u8 pin, u16 duty)
004f5a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f5c   ffe5
004f5e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f60   ffd9
004f62   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004f64   ffe5
004f66   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004f68   ffe5
004f6a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004f6c   ffe5
004f6e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004f70   ffe5
004f72   0e02     movlw   0x02             	MOVLW	0x02
004f74   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004f76   f000
004f78   0e03     movlw   0x03             	MOVLW	0x03
004f7a   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004f7c   f001
004f7e   0e04     movlw   0x04             	MOVLW	0x04
004f80   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004f82   f002
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/core/analog.c	switch (pin)
004f84   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004f86   0a0b     xorlw   0x0b             	XORLW	0x0b
004f88   e019     bz      0x004fbc         	BZ	_00706_DS_
004f8a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004f8c   0a0c     xorlw   0x0c             	XORLW	0x0c
004f8e   e129     bnz     0x004fe2         	BNZ	_00707_DS_
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON  = 0b00001100;
004f90   0e0c     movlw   0x0c             	MOVLW	0x0c
004f92   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR1L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
004f94   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004f96   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
004f98   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
004f9a   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
004f9c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004f9e   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004fa0   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
004fa2   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
004fa4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004fa6   6ebe     movwf   0xbe, 0x0        	MOVWF	_CCPR1L
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
004fa8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004faa   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004fac   0e03     movlw   0x03             	MOVLW	0x03
004fae   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
004fb0   3800     swapf   0x00, 0x0, 0x0   	SWAPF	r0x00, W
004fb2   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	_CCP1CON, W
                                           ; #;#	MOVWF	r0x00
                                           ; #;#	MOVF	r0x03, W
                                           ; #;#	IORWF	r0x00, W
                                           ; #	IORWF	r0x03, W
004fb4   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
004fb6   10bd     iorwf   0xbd, 0x0, 0x0   	IORWF	_CCP1CON, W
004fb8   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
                                           ;	.line	309; /home/vbasel/.icaro/v4/firmware/core/analog.c	break;
004fba   d013     bra     0x004fe2         	BRA	_00707_DS_
                                           _00706_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON  = 0b00001100;
004fbc   0e0c     movlw   0x0c             	MOVLW	0x0c
004fbe   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR2L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
004fc0   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004fc2   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
004fc4   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
004fc6   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
004fc8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004fca   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004fcc   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
004fce   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
004fd0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004fd2   6ebb     movwf   0xbb, 0x0        	MOVWF	_CCPR2L
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
004fd4   0e03     movlw   0x03             	MOVLW	0x03
004fd6   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
004fd8   3801     swapf   0x01, 0x0, 0x0   	SWAPF	r0x01, W
004fda   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	_CCP2CON, W
                                           ; #;#	MOVWF	r0x01
                                           ; #;#	MOVF	r0x00, W
                                           ; #;#	IORWF	r0x01, W
                                           ; #	IORWF	r0x00, W
004fdc   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004fde   10ba     iorwf   0xba, 0x0, 0x0   	IORWF	_CCP2CON, W
004fe0   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
                                           _00707_DS_:
                                           ;	.line	321; /home/vbasel/.icaro/v4/firmware/core/analog.c	PIR1bits.TMR2IF = 0;
004fe2   929e     bcf     0x9e, 0x1, 0x0   	BCF	_PIR1bits, 1
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
004fe4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004fe6   f003
004fe8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004fea   f002
004fec   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004fee   f001
004ff0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004ff2   f000
004ff4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ff6   ffd9
004ff8   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__analogwrite_init	code
                                           _analogwrite_init:
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/core/analog.c	PR2 = 0xFF;                         // set PWM period to the max. to get 10-bit res.
005a7e   68cb     setf    0xcb, 0x0        	SETF	_PR2
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/core/analog.c	T2CON = 0b00000100;                 // Timer2 on, prescaler is 1
005a80   0e04     movlw   0x04             	MOVLW	0x04
005a82   6eca     movwf   0xca, 0x0        	MOVWF	_T2CON
                                           ;	.line	239; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
005a84   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__analogread	code
                                           _analogread:
                                           ;	.line	134; /home/vbasel/.icaro/v4/firmware/core/analog.c	u16 analogread(u8 channel)
00509a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00509c   ffe5
00509e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0050a0   ffd9
0050a2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0050a4   ffe5
0050a6   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0050a8   ffe5
0050aa   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0050ac   ffe5
0050ae   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0050b0   ffe5
0050b2   0e02     movlw   0x02             	MOVLW	0x02
0050b4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0050b6   f000
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(channel>=13 && channel<=20)
0050b8   0e0d     movlw   0x0d             	MOVLW	0x0d
0050ba   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0050bc   e30c     bnc     0x0050d6         	BNC	_00659_DS_
0050be   0e15     movlw   0x15             	MOVLW	0x15
0050c0   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0050c2   e209     bc      0x0050d6         	BC	_00659_DS_
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0=(channel-13) << 2;   // A0 = 13, ..., A4 = 17
0050c4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0050c6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0050c8   0ef3     movlw   0xf3             	MOVLW	0xf3
0050ca   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
0050cc   4401     rlncf   0x01, 0x0, 0x0   	RLNCF	r0x01, W
0050ce   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
0050d0   0bfc     andlw   0xfc             	ANDLW	0xfc
0050d2   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
0050d4   d007     bra     0x0050e4         	BRA	_00660_DS_
                                           _00659_DS_:
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(channel<=5)
0050d6   0e06     movlw   0x06             	MOVLW	0x06
0050d8   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0050da   e204     bc      0x0050e4         	BC	_00660_DS_
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0 = channel << 2;      // A0 = 0, ..., A4 = 4
0050dc   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
0050de   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
0050e0   0bfc     andlw   0xfc             	ANDLW	0xfc
0050e2   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
                                           _00660_DS_:
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON=1;                  // A/D Converter module is enabled
0050e4   80c2     bsf     0xc2, 0x0, 0x0   	BSF	_ADCON0bits, 0
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
0050e6   0e09     movlw   0x09             	MOVLW	0x09
0050e8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0050ea   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00668_DS_:
0050ec   0000     nop                      	NOP
0050ee   0eff     movlw   0xff             	MOVLW	0xff
0050f0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0050f2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
0050f4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0050f6   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
0050f8   e1f9     bnz     0x0050ec         	BNZ	_00668_DS_
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.GO=1;                    // Start A/D Conversion
0050fa   82c2     bsf     0xc2, 0x1, 0x0   	BSF	_ADCON0bits, 1
                                           _00663_DS_:
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/core/analog.c	while (ADCON0bits.GO);              // Wait for conversion stop
0050fc   b2c2     btfsc   0xc2, 0x1, 0x0   	BTFSC	_ADCON0bits, 1
0050fe   d7fe     bra     0x0050fc         	BRA	_00663_DS_
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/core/analog.c	result = ADRESH << 8;
005100   cfc4     movff   0xfc4, 0x000     	MOVFF	_ADRESH, r0x00
005102   f000
005104   6a01     clrf    0x01, 0x0        	CLRF	r0x01
005106   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005108   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00510a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/analog.c	result += ADRESL;
00510c   cfc3     movff   0xfc3, 0x000     	MOVFF	_ADRESL, r0x00
00510e   f000
005110   6a01     clrf    0x01, 0x0        	CLRF	r0x01
005112   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005114   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
005116   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005118   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON = 0;                // A/D Converter module is disabled
00511a   90c2     bcf     0xc2, 0x0, 0x0   	BCF	_ADCON0bits, 0
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/analog.c	return(result);
00511c   c003     movff   0x003, 0xff3     	MOVFF	r0x03, PRODL
00511e   fff3
005120   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
005122   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005124   f003
005126   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005128   f002
00512a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00512c   f001
00512e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005130   f000
005132   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005134   ffd9
005136   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__analogreference	code
                                           _analogreference:
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogreference(u8 Type)
0057d6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0057d8   ffe5
0057da   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0057dc   ffd9
0057de   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0057e0   ffe5
0057e2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0057e4   ffe5
0057e6   0e02     movlw   0x02             	MOVLW	0x02
0057e8   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0057ea   f000
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(Type == DEFAULT)			//the default analog reference of 5 volts (on 5V Arduino boards) or 3.3 volts (on 3.3V Arduino boards)
0057ec   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0057ee   e105     bnz     0x0057fa         	BNZ	_00640_DS_
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x00;			//Vref+ = VDD
0057f0   cfc1     movff   0xfc1, 0x001     	MOVFF	_ADCON1, r0x01
0057f2   f001
0057f4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0057f6   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
0057f8   d008     bra     0x00580a         	BRA	_00642_DS_
                                           _00640_DS_:
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(Type == EXTERNAL)	//the voltage applied to the AREF pin (0 to 5V only) is used as the reference.
0057fa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0057fc   0a01     xorlw   0x01             	XORLW	0x01
0057fe   e105     bnz     0x00580a         	BNZ	_00642_DS_
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x10;			//Vref+ = External source
005800   cfc1     movff   0xfc1, 0x000     	MOVFF	_ADCON1, r0x00
005802   f000
005804   8800     bsf     0x00, 0x4, 0x0   	BSF	r0x00, 4
005806   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005808   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           _00642_DS_:
                                           ;	.line	121; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
00580a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00580c   f001
00580e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005810   f000
005812   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005814   ffd9
005816   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__analog_init	code
                                           _analog_init:
                                           ;	.line	25; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analog_init(void)
005912   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005914   ffe5
                                           ;	.line	36; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISA=TRISA | 0x2F;
005916   cf92     movff   0xf92, 0x000     	MOVFF	_TRISA, r0x00
005918   f000
00591a   0e2f     movlw   0x2f             	MOVLW	0x2f
00591c   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
00591e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005920   6e92     movwf   0x92, 0x0        	MOVWF	_TRISA
                                           ;	.line	37; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISE=TRISE | 0x07;	
005922   cf96     movff   0xf96, 0x000     	MOVFF	_TRISE, r0x00
005924   f000
005926   0e07     movlw   0x07             	MOVLW	0x07
005928   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
00592a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00592c   6e96     movwf   0x96, 0x0        	MOVWF	_TRISE
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1=0x07;
00592e   0e07     movlw   0x07             	MOVLW	0x07
005930   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON2=0xBD;
005932   0ebd     movlw   0xbd             	MOVLW	0xbd
005934   6ec0     movwf   0xc0, 0x0        	MOVWF	_ADCON2
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
005936   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005938   f000
00593a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	547; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (PIR1bits.TMR1IF)
005792   a09e     btfss   0x9e, 0x0, 0x0   	BTFSS	_PIR1bits, 0
005794   d01f     bra     0x0057d4         	BRA	_00627_DS_
005796   0101     movlb   0x1              	BANKSEL	_phase
                                           ;	.line	553; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (phase)
005798   5100     movf    0x00, 0x0, 0x1   	MOVF	_phase, W, B
00579a   e00b     bz      0x0057b2         	BZ	_00623_DS_
                                           ;	.line	555; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseUp();
00579c   ec00     call    0x005a00, 0x0    	CALL	_ServosPulseUp
00579e   f02d
                                           ;	.line	557; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0xe9;//0xe9;
0057a0   0ee9     movlw   0xe9             	MOVLW	0xe9
0057a2   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	558; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0x59;
0057a4   0e59     movlw   0x59             	MOVLW	0x59
0057a6   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ;	.line	560; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=1;
0057a8   0e01     movlw   0x01             	MOVLW	0x01
0057aa   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
0057ac   0101     movlb   0x1              	BANKSEL	_phase
                                           ;	.line	561; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 0;
0057ae   6b00     clrf    0x00, 0x1        	CLRF	_phase, B
0057b0   d010     bra     0x0057d2         	BRA	_00624_DS_
                                           _00623_DS_:
                                           ;	.line	569; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseDown();
0057b2   ec77     call    0x0038ee, 0x0    	CALL	_ServosPulseDown
0057b4   f01c
                                           ;	.line	573; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0x32;
0057b6   0e32     movlw   0x32             	MOVLW	0x32
0057b8   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	574; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0xeb;
0057ba   0eeb     movlw   0xeb             	MOVLW	0xeb
0057bc   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00621_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
0057be   0101     movlb   0x1              	BANKSEL	_needreordering
                                           ;	.line	576; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (needreordering)
0057c0   5101     movf    0x01, 0x0, 0x1   	MOVF	_needreordering, W, B
                                           ;	.line	577; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	SortServoTimings(); // This takes more than 1 ms, but it's call only if needed.
0057c2   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
                                           ;	.line	578; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
0057c4   ec0e     call    0x000c1c, 0x0    	CALL	_SortServoTimings
0057c6   f006
0057c8   0e21     movlw   0x21             	MOVLW	0x21
0057ca   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	579; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 1;  			//This indicates that after next interrupt it will start the servos cycle.
0057cc   0e01     movlw   0x01             	MOVLW	0x01
0057ce   0101     movlb   0x1              	BANKSEL	_phase
0057d0   6f00     movwf   0x00, 0x1        	MOVWF	_phase, B
                                           _00624_DS_:
                                           ;	.line	583; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF=0;
0057d2   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           _00627_DS_:
                                           ;	.line	586; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
0057d4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	530; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMaximumPulse(unsigned char servo,int max_microseconds)
004e16   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e18   ffe5
004e1a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e1c   ffd9
004e1e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004e20   ffe5
004e22   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004e24   ffe5
004e26   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004e28   ffe5
004e2a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004e2c   ffe5
004e2e   0e02     movlw   0x02             	MOVLW	0x02
004e30   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004e32   f000
004e34   0e03     movlw   0x03             	MOVLW	0x03
004e36   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004e38   f001
004e3a   0e04     movlw   0x04             	MOVLW	0x04
004e3c   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004e3e   f002
                                           ;	.line	533; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
004e40   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00597_DS_
                                           ; #	GOTO	_00602_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	534; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
004e42   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds < MIDUS) max_microseconds = MIDUS;
004e44   e22e     bc      0x004ea2         	BC	_00602_DS_
004e46   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004e48   0f80     addlw   0x80             	ADDLW	0x80
004e4a   0f7b     addlw   0x7b             	ADDLW	0x7b
004e4c   e102     bnz     0x004e52         	BNZ	_00614_DS_
004e4e   0edc     movlw   0xdc             	MOVLW	0xdc
004e50   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00614_DS_:
004e52   e204     bc      0x004e5c         	BC	_00599_DS_
004e54   0edc     movlw   0xdc             	MOVLW	0xdc
004e56   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004e58   0e05     movlw   0x05             	MOVLW	0x05
004e5a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00599_DS_:
                                           ;	.line	538; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds > MAXUS) max_microseconds = MAXUS;
004e5c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004e5e   0f80     addlw   0x80             	ADDLW	0x80
004e60   0f77     addlw   0x77             	ADDLW	0x77
004e62   e102     bnz     0x004e68         	BNZ	_00615_DS_
004e64   0ec5     movlw   0xc5             	MOVLW	0xc5
004e66   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00615_DS_:
004e68   e304     bnc     0x004e72         	BNC	_00601_DS_
004e6a   0ec4     movlw   0xc4             	MOVLW	0xc4
004e6c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004e6e   0e09     movlw   0x09             	MOVLW	0x09
004e70   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00601_DS_:
                                           ;	.line	541; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][servo]=(max_microseconds - MINUS)>>3;   // 125 < final_max < 250
004e72   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004e74   0e9e     movlw   0x9e             	MOVLW	LOW(_maxminpos + 30)
004e76   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004e78   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos + 30)
004e7a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004e7c   0e0c     movlw   0x0c             	MOVLW	0x0c
004e7e   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
004e80   0efe     movlw   0xfe             	MOVLW	0xfe
004e82   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004e84   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004e86   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004e88   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004e8a   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004e8c   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004e8e   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004e90   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004e92   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004e94   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004e96   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004e98   ffe9
004e9a   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
004e9c   ffea
004e9e   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
004ea0   ffef
                                           _00602_DS_:
                                           ;	.line	542; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
004ea2   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004ea4   f003
004ea6   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004ea8   f002
004eaa   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004eac   f001
004eae   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004eb0   f000
004eb2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004eb4   ffd9
004eb6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	516; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMinimumPulse(unsigned char servo,int min_microseconds)
004eb8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004eba   ffe5
004ebc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ebe   ffd9
004ec0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004ec2   ffe5
004ec4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004ec6   ffe5
004ec8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004eca   ffe5
004ecc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004ece   ffe5
004ed0   0e02     movlw   0x02             	MOVLW	0x02
004ed2   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004ed4   f000
004ed6   0e03     movlw   0x03             	MOVLW	0x03
004ed8   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004eda   f001
004edc   0e04     movlw   0x04             	MOVLW	0x04
004ede   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004ee0   f002
                                           ;	.line	519; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
004ee2   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00573_DS_
                                           ; #	GOTO	_00578_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
004ee4   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	523; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds < MINUS) min_microseconds = MINUS;
004ee6   e22e     bc      0x004f44         	BC	_00578_DS_
004ee8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004eea   0f80     addlw   0x80             	ADDLW	0x80
004eec   0f7f     addlw   0x7f             	ADDLW	0x7f
004eee   e102     bnz     0x004ef4         	BNZ	_00590_DS_
004ef0   0ef4     movlw   0xf4             	MOVLW	0xf4
004ef2   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00590_DS_:
004ef4   e204     bc      0x004efe         	BC	_00575_DS_
004ef6   0ef4     movlw   0xf4             	MOVLW	0xf4
004ef8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004efa   0e01     movlw   0x01             	MOVLW	0x01
004efc   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00575_DS_:
                                           ;	.line	524; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds > MIDUS) min_microseconds = MIDUS;
004efe   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004f00   0f80     addlw   0x80             	ADDLW	0x80
004f02   0f7b     addlw   0x7b             	ADDLW	0x7b
004f04   e102     bnz     0x004f0a         	BNZ	_00591_DS_
004f06   0edd     movlw   0xdd             	MOVLW	0xdd
004f08   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00591_DS_:
004f0a   e304     bnc     0x004f14         	BNC	_00577_DS_
004f0c   0edc     movlw   0xdc             	MOVLW	0xdc
004f0e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004f10   0e05     movlw   0x05             	MOVLW	0x05
004f12   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00577_DS_:
                                           ;	.line	527; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][servo]=(min_microseconds - MINUS)>>3;   // 0 < final_min < 125
004f14   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004f16   0e80     movlw   0x80             	MOVLW	LOW(_maxminpos)
004f18   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004f1a   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos)
004f1c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004f1e   0e0c     movlw   0x0c             	MOVLW	0x0c
004f20   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
004f22   0efe     movlw   0xfe             	MOVLW	0xfe
004f24   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004f26   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004f28   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004f2a   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004f2c   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004f2e   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004f30   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004f32   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004f34   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004f36   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004f38   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004f3a   ffe9
004f3c   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
004f3e   ffea
004f40   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
004f42   ffef
                                           _00578_DS_:
                                           ;	.line	528; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
004f44   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004f46   f003
004f48   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004f4a   f002
004f4c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004f4e   f001
004f50   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004f52   f000
004f54   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f56   ffd9
004f58   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__ServoRead	code
                                           _ServoRead:
                                           ;	.line	508; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	unsigned char ServoRead(unsigned char servo)
005708   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00570a   ffe5
00570c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00570e   ffd9
005710   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005712   ffe5
005714   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005716   ffe5
005718   0e02     movlw   0x02             	MOVLW	0x02
00571a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00571c   f000
                                           ;	.line	510; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)        // test if numservo is valid
00571e   0e1e     movlw   0x1e             	MOVLW	0x1e
005720   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
005722   e302     bnc     0x005728         	BNC	_00561_DS_
                                           ;	.line	511; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return 0;
005724   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
005726   d00c     bra     0x005740         	BRA	_00562_DS_
                                           _00561_DS_:
                                           ;	.line	513; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return servovalues[servo];
005728   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00572a   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
00572c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00572e   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
005730   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005732   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005734   ffe9
005736   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
005738   ffea
00573a   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00573c   f000
00573e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00562_DS_:
                                           ;	.line	514; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
005740   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005742   f001
005744   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005746   f000
005748   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00574a   ffd9
00574c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	484; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoWrite(unsigned char servo,unsigned char degrees)
005664   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005666   ffe5
005668   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00566a   ffd9
00566c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00566e   ffe5
005670   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005672   ffe5
005674   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005676   ffe5
005678   0e02     movlw   0x02             	MOVLW	0x02
00567a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00567c   f000
00567e   0e03     movlw   0x03             	MOVLW	0x03
005680   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005682   f001
                                           ;	.line	491; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
005684   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00549_DS_
                                           ; #	GOTO	_00550_DS_
                                           ; #	CLRF	r0x02
                                           ;	.line	492; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
005686   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	503; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[servo]= value;
005688   e20e     bc      0x0056a6         	BC	_00550_DS_
00568a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00568c   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
00568e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005690   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
005692   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005694   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005696   ffe9
005698   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00569a   ffea
00569c   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
00569e   ffef
                                           ;	.line	505; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
0056a0   0e01     movlw   0x01             	MOVLW	0x01
0056a2   0101     movlb   0x1              	BANKSEL	_needreordering
0056a4   6f01     movwf   0x01, 0x1        	MOVWF	_needreordering, B
                                           _00550_DS_:
                                           ;	.line	506; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
0056a6   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0056a8   f002
0056aa   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0056ac   f001
0056ae   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0056b0   f000
0056b2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0056b4   ffd9
0056b6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	459; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoDetach(unsigned char pin)
0034a6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0034a8   ffe5
0034aa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0034ac   ffd9
0034ae   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0034b0   ffe5
0034b2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0034b4   ffe5
0034b6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0034b8   ffe5
0034ba   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0034bc   ffe5
0034be   0e02     movlw   0x02             	MOVLW	0x02
0034c0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0034c2   f000
                                           ;	.line	461; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
0034c4   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00526_DS_
                                           ; #	GOTO	_00533_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	463; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
0034c6   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0034c8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0034ca   d0a5     bra     0x003616         	BRA	_00533_DS_
0034cc   0e7e     movlw   0x7e             	MOVLW	LOW(_port)
0034ce   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0034d0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0034d2   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0034d4   0e3a     movlw   0x3a             	MOVLW	HIGH(_port)
0034d6   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0034d8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0034da   0e00     movlw   0x00             	MOVLW	UPPER(_port)
0034dc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0034de   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0034e0   fff6
0034e2   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0034e4   fff7
0034e6   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0034e8   fff8
0034ea   0009     tblrd*+                  	TBLRD*+	
0034ec   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0034ee   f001
0034f0   0e05     movlw   0x05             	MOVLW	0x05
0034f2   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
0034f4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0034f6   d08f     bra     0x003616         	BRA	_00533_DS_
0034f8   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0034fa   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0034fc   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
0034fe   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003500   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
003502   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003504   0bfc     andlw   0xfc             	ANDLW	0xfc
003506   0f16     addlw   0x16             	ADDLW	LOW(_00543_DS_)
003508   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00350a   0e35     movlw   0x35             	MOVLW	HIGH(_00543_DS_)
00350c   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00350e   0e00     movlw   0x00             	MOVLW	UPPER(_00543_DS_)
003510   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
003512   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
003514   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00543_DS_:
003516   ef95     goto    0x00352a         	GOTO	_00527_DS_
003518   f01a
00351a   efad     goto    0x00355a         	GOTO	_00528_DS_
00351c   f01a
00351e   efc5     goto    0x00358a         	GOTO	_00529_DS_
003520   f01a
003522   efdd     goto    0x0035ba         	GOTO	_00530_DS_
003524   f01a
003526   eff5     goto    0x0035ea         	GOTO	_00531_DS_
003528   f01a
                                           _00527_DS_:
                                           ;	.line	465; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pA: activatedservos[pA] = activatedservos[pA] ^ mask[pin];
00352a   0e60     movlw   0x60             	MOVLW	LOW(_mask)
00352c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00352e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003530   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003532   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
003534   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003536   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003538   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00353a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00353c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00353e   fff6
003540   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003542   fff7
003544   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003546   fff8
003548   0009     tblrd*+                  	TBLRD*+	
00354a   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00354c   f001
00354e   0104     movlb   0x4              	BANKSEL	_activatedservos
003550   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_activatedservos, W, B
003552   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
003554   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003556   6ff1     movwf   0xf1, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	466; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
003558   d05e     bra     0x003616         	BRA	_00533_DS_
                                           _00528_DS_:
                                           ;	.line	467; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pB: activatedservos[pB] = activatedservos[pB] ^ mask[pin];
00355a   0e60     movlw   0x60             	MOVLW	LOW(_mask)
00355c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00355e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003560   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003562   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
003564   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003566   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003568   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00356a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00356c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00356e   fff6
003570   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003572   fff7
003574   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003576   fff8
003578   0009     tblrd*+                  	TBLRD*+	
00357a   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00357c   f001
00357e   0104     movlb   0x4              	BANKSEL	(_activatedservos + 1)
003580   51f2     movf    0xf2, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
003582   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
003584   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003586   6ff2     movwf   0xf2, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	468; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
003588   d046     bra     0x003616         	BRA	_00533_DS_
                                           _00529_DS_:
                                           ;	.line	470; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pC: activatedservos[pC] = activatedservos[pC] ^ mask[pin];
00358a   0e60     movlw   0x60             	MOVLW	LOW(_mask)
00358c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00358e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003590   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003592   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
003594   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003596   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003598   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00359a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00359c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00359e   fff6
0035a0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0035a2   fff7
0035a4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0035a6   fff8
0035a8   0009     tblrd*+                  	TBLRD*+	
0035aa   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0035ac   f001
0035ae   0104     movlb   0x4              	BANKSEL	(_activatedservos + 2)
0035b0   51f3     movf    0xf3, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
0035b2   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
0035b4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0035b6   6ff3     movwf   0xf3, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	471; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0035b8   d02e     bra     0x003616         	BRA	_00533_DS_
                                           _00530_DS_:
                                           ;	.line	474; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pD: activatedservos[pD] = activatedservos[pD] ^ mask[pin];
0035ba   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0035bc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0035be   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0035c0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0035c2   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0035c4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0035c6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0035c8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0035ca   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0035cc   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0035ce   fff6
0035d0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0035d2   fff7
0035d4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0035d6   fff8
0035d8   0009     tblrd*+                  	TBLRD*+	
0035da   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0035dc   f001
0035de   0104     movlb   0x4              	BANKSEL	(_activatedservos + 3)
0035e0   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
0035e2   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
0035e4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0035e6   6ff4     movwf   0xf4, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	475; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0035e8   d016     bra     0x003616         	BRA	_00533_DS_
                                           _00531_DS_:
                                           ;	.line	478; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pE: activatedservos[pE] = activatedservos[pE] ^ mask[pin];
0035ea   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0035ec   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0035ee   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0035f0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0035f2   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0035f4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0035f6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0035f8   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0035fa   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0035fc   fff6
0035fe   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003600   fff7
003602   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
003604   fff8
003606   0009     tblrd*+                  	TBLRD*+	
003608   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
00360a   f000
00360c   0104     movlb   0x4              	BANKSEL	(_activatedservos + 4)
00360e   51f5     movf    0xf5, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
003610   1a00     xorwf   0x00, 0x1, 0x0   	XORWF	r0x00, F
003612   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003614   6ff5     movwf   0xf5, 0x1        	MOVWF	(_activatedservos + 4), B
                                           _00533_DS_:
                                           ;	.line	482; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
003616   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003618   f003
00361a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00361c   f002
00361e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003620   f001
003622   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003624   f000
003626   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003628   ffd9
00362a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoAttach(unsigned char pin)
002b56   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002b58   ffe5
002b5a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002b5c   ffd9
002b5e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002b60   ffe5
002b62   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002b64   ffe5
002b66   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002b68   ffe5
002b6a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002b6c   ffe5
002b6e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002b70   ffe5
002b72   0e02     movlw   0x02             	MOVLW	0x02
002b74   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002b76   f000
                                           ;	.line	426; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
002b78   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00503_DS_
                                           ; #	GOTO	_00510_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	428; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
002b7a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
002b7c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002b7e   d0e1     bra     0x002d42         	BRA	_00510_DS_
002b80   0e7e     movlw   0x7e             	MOVLW	LOW(_port)
002b82   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002b84   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002b86   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002b88   0e3a     movlw   0x3a             	MOVLW	HIGH(_port)
002b8a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002b8c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002b8e   0e00     movlw   0x00             	MOVLW	UPPER(_port)
002b90   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002b92   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002b94   fff6
002b96   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002b98   fff7
002b9a   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002b9c   fff8
002b9e   0009     tblrd*+                  	TBLRD*+	
002ba0   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002ba2   f001
002ba4   0e05     movlw   0x05             	MOVLW	0x05
002ba6   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
002ba8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002baa   d0cb     bra     0x002d42         	BRA	_00510_DS_
002bac   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
002bae   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
002bb0   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
002bb2   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002bb4   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
002bb6   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002bb8   0bfc     andlw   0xfc             	ANDLW	0xfc
002bba   0fca     addlw   0xca             	ADDLW	LOW(_00520_DS_)
002bbc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bbe   0e2b     movlw   0x2b             	MOVLW	HIGH(_00520_DS_)
002bc0   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
002bc2   0e00     movlw   0x00             	MOVLW	UPPER(_00520_DS_)
002bc4   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
002bc6   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
002bc8   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00520_DS_:
002bca   efef     goto    0x002bde         	GOTO	_00504_DS_
002bcc   f015
002bce   ef13     goto    0x002c26         	GOTO	_00505_DS_
002bd0   f016
002bd2   ef37     goto    0x002c6e         	GOTO	_00506_DS_
002bd4   f016
002bd6   ef5b     goto    0x002cb6         	GOTO	_00507_DS_
002bd8   f016
002bda   ef7f     goto    0x002cfe         	GOTO	_00508_DS_
002bdc   f016
                                           _00504_DS_:
                                           ;	.line	431; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pA] = activatedservos[pA] | mask[pin];  // list pin as servo driver.
002bde   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002be0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002be2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002be4   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002be6   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002be8   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002bea   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002bec   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002bee   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002bf0   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002bf2   fff6
002bf4   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002bf6   fff7
002bf8   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002bfa   fff8
002bfc   0009     tblrd*+                  	TBLRD*+	
002bfe   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002c00   f004
002c02   0104     movlb   0x4              	BANKSEL	_activatedservos
002c04   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_activatedservos, W, B
002c06   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002c08   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002c0a   6ff1     movwf   0xf1, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	432; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISA = TRISA & (~mask[pin]); 					// set as output pin
002c0c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c0e   fff6
002c10   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002c12   fff7
002c14   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002c16   fff8
002c18   0009     tblrd*+                  	TBLRD*+	
002c1a   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002c1c   f001
002c1e   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002c20   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002c22   1692     andwf   0x92, 0x1, 0x0   	ANDWF	_TRISA, F
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002c24   d08e     bra     0x002d42         	BRA	_00510_DS_
                                           _00505_DS_:
                                           ;	.line	435; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pB] = activatedservos[pB] | mask[pin];  // list pin as servo driver.
002c26   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002c28   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002c2a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002c2c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002c2e   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002c30   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002c32   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002c34   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002c36   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002c38   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c3a   fff6
002c3c   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002c3e   fff7
002c40   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002c42   fff8
002c44   0009     tblrd*+                  	TBLRD*+	
002c46   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002c48   f004
002c4a   0104     movlb   0x4              	BANKSEL	(_activatedservos + 1)
002c4c   51f2     movf    0xf2, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
002c4e   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002c50   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002c52   6ff2     movwf   0xf2, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	436; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISB = TRISB & (~mask[pin]); 					// set as output pin
002c54   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c56   fff6
002c58   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002c5a   fff7
002c5c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002c5e   fff8
002c60   0009     tblrd*+                  	TBLRD*+	
002c62   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002c64   f001
002c66   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002c68   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002c6a   1693     andwf   0x93, 0x1, 0x0   	ANDWF	_TRISB, F
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002c6c   d06a     bra     0x002d42         	BRA	_00510_DS_
                                           _00506_DS_:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pC] = activatedservos[pC] | mask[pin];  // list pin as servo driver.
002c6e   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002c70   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002c72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002c74   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002c76   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002c78   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002c7a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002c7c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002c7e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002c80   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c82   fff6
002c84   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002c86   fff7
002c88   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002c8a   fff8
002c8c   0009     tblrd*+                  	TBLRD*+	
002c8e   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002c90   f004
002c92   0104     movlb   0x4              	BANKSEL	(_activatedservos + 2)
002c94   51f3     movf    0xf3, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
002c96   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002c98   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002c9a   6ff3     movwf   0xf3, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	441; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISC = TRISC & (~mask[pin]); 					// set as output pin
002c9c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c9e   fff6
002ca0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002ca2   fff7
002ca4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002ca6   fff8
002ca8   0009     tblrd*+                  	TBLRD*+	
002caa   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002cac   f001
002cae   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002cb0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002cb2   1694     andwf   0x94, 0x1, 0x0   	ANDWF	_TRISC, F
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002cb4   d046     bra     0x002d42         	BRA	_00510_DS_
                                           _00507_DS_:
                                           ;	.line	446; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pD] = activatedservos[pD] | mask[pin];  // list pin as servo driver.
002cb6   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002cb8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002cba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002cbc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002cbe   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002cc0   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002cc2   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002cc4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002cc6   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002cc8   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002cca   fff6
002ccc   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002cce   fff7
002cd0   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002cd2   fff8
002cd4   0009     tblrd*+                  	TBLRD*+	
002cd6   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002cd8   f004
002cda   0104     movlb   0x4              	BANKSEL	(_activatedservos + 3)
002cdc   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
002cde   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002ce0   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002ce2   6ff4     movwf   0xf4, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	447; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISD = TRISD & (~mask[pin]); 					// set as output pin
002ce4   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002ce6   fff6
002ce8   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002cea   fff7
002cec   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002cee   fff8
002cf0   0009     tblrd*+                  	TBLRD*+	
002cf2   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002cf4   f001
002cf6   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002cf8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002cfa   1695     andwf   0x95, 0x1, 0x0   	ANDWF	_TRISD, F
                                           ;	.line	448; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002cfc   d022     bra     0x002d42         	BRA	_00510_DS_
                                           _00508_DS_:
                                           ;	.line	452; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pE] = activatedservos[pE] | mask[pin];  // list pin as servo driver.
002cfe   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002d00   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002d02   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002d04   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002d06   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002d08   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002d0a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002d0c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002d0e   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002d10   fff6
002d12   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002d14   fff7
002d16   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002d18   fff8
002d1a   0009     tblrd*+                  	TBLRD*+	
002d1c   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
002d1e   f003
002d20   0104     movlb   0x4              	BANKSEL	(_activatedservos + 4)
002d22   51f5     movf    0xf5, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
002d24   1203     iorwf   0x03, 0x1, 0x0   	IORWF	r0x03, F
002d26   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002d28   6ff5     movwf   0xf5, 0x1        	MOVWF	(_activatedservos + 4), B
                                           ;	.line	453; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISE = TRISE & (~mask[pin]); 					// set as output pin
002d2a   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002d2c   fff6
002d2e   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002d30   fff7
002d32   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002d34   fff8
002d36   0009     tblrd*+                  	TBLRD*+	
002d38   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
002d3a   f000
002d3c   1e00     comf    0x00, 0x1, 0x0   	COMF	r0x00, F
002d3e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002d40   1696     andwf   0x96, 0x1, 0x0   	ANDWF	_TRISE, F
                                           _00510_DS_:
                                           ;	.line	457; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
002d42   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002d44   f004
002d46   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002d48   f003
002d4a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002d4c   f002
002d4e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002d50   f001
002d52   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002d54   f000
002d56   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002d58   ffd9
002d5a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void SortServoTimings()
000c1c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000c1e   ffe5
000c20   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000c22   ffe5
000c24   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000c26   ffe5
000c28   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
000c2a   ffe5
000c2c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000c2e   ffe5
000c30   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
000c32   ffe5
000c34   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
000c36   ffe5
000c38   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000c3a   6ba4     clrf    0xa4, 0x1        	CLRF	_SortServoTimings_t_1_35, B
                                           _00386_DS_:
000c3c   0e1e     movlw   0x1e             	MOVLW	0x1e
000c3e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
000c40   5da4     subwf   0xa4, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_35, W, B
000c42   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000c44   d066     bra     0x000d12         	BRA	_00333_DS_
                                           ;	.line	256; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=255; 
000c46   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000c48   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000c4a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000c4c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000c4e   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
000c50   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c52   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c54   ffe9
000c56   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c58   ffea
000c5a   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	257; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
000c5c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000c5e   0d05     mullw   0x05             	MULLW	0x05
000c60   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c62   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c64   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c66   f000
000c68   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c6a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c6c   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
000c6e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c70   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c72   ffe9
000c74   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c76   ffea
000c78   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000c7a   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000c7c   0d05     mullw   0x05             	MULLW	0x05
000c7e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c80   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c82   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c84   f000
000c86   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c88   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c8a   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
000c8c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c8e   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000c90   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000c92   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c94   ffe9
000c96   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c98   ffea
000c9a   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000c9c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000c9e   0d05     mullw   0x05             	MULLW	0x05
000ca0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000ca2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ca4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ca6   f000
000ca8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000caa   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cac   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
000cae   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cb0   0e02     movlw   0x02             	MOVLW	0x02
000cb2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cb4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cb6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cb8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000cba   ffe9
000cbc   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000cbe   ffea
000cc0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	263; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000cc2   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000cc4   0d05     mullw   0x05             	MULLW	0x05
000cc6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cc8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cca   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ccc   f000
000cce   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cd0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cd2   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
000cd4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cd6   0e03     movlw   0x03             	MOVLW	0x03
000cd8   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cda   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cdc   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cde   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ce0   ffe9
000ce2   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ce4   ffea
000ce6   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000ce8   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000cea   0d05     mullw   0x05             	MULLW	0x05
000cec   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cee   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cf0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000cf2   f000
000cf4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cf6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cf8   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
000cfa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cfc   0e04     movlw   0x04             	MOVLW	0x04
000cfe   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000d00   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d02   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000d04   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d06   ffe9
000d08   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d0a   ffea
000d0c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000d0e   2ba4     incf    0xa4, 0x1, 0x1   	INCF	_SortServoTimings_t_1_35, F, B
000d10   d795     bra     0x000c3c         	BRA	_00386_DS_
                                           _00333_DS_:
000d12   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d14   6ba4     clrf    0xa4, 0x1        	CLRF	_SortServoTimings_t_1_35, B
                                           _00389_DS_:
000d16   0e05     movlw   0x05             	MOVLW	0x05
000d18   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
000d1a   5da4     subwf   0xa4, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_35, W, B
000d1c   e20d     bc      0x000d38         	BC	_00334_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[t]=0x00;
000d1e   0ef6     movlw   0xf6             	MOVLW	LOW(_mascaratotal)
                                           ; removed redundant BANKSEL
000d20   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000d22   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d24   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d26   0e04     movlw   0x04             	MOVLW	HIGH(_mascaratotal)
000d28   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d2a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d2c   ffe9
000d2e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d30   ffea
000d32   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d34   2ba4     incf    0xa4, 0x1, 0x1   	INCF	_SortServoTimings_t_1_35, F, B
000d36   d7ef     bra     0x000d16         	BRA	_00389_DS_
                                           _00334_DS_:
000d38   0101     movlb   0x1              	BANKSEL	_SortServoTimings_totalservos_1_35
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos=0; // Total servos revised. This helps to keep within "while"
000d3a   6ba5     clrf    0xa5, 0x1        	CLRF	_SortServoTimings_totalservos_1_35, B
000d3c   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	275; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t=0;           // Index to go through timevalue and timings tables.
000d3e   6ba4     clrf    0xa4, 0x1        	CLRF	_SortServoTimings_t_1_35, B
                                           _00382_DS_:
                                           ;	.line	276; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	while(totalservos<TotalPICpins)
000d40   0e1e     movlw   0x1e             	MOVLW	0x1e
000d42   0101     movlb   0x1              	BANKSEL	_SortServoTimings_totalservos_1_35
000d44   5da5     subwf   0xa5, 0x0, 0x1   	SUBWF	_SortServoTimings_totalservos_1_35, W, B
000d46   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d48   ef21     goto    0x001a42         	GOTO	_00384_DS_
000d4a   f00d
                                           ;	.line	278; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000d4c   0e01     movlw   0x01             	MOVLW	0x01
000d4e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_35
000d50   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
000d52   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
                                           ;	.line	280; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
000d54   6ba7     clrf    0xa7, 0x1        	CLRF	_SortServoTimings_s_1_35, B
                                           _00392_DS_:
000d56   0e1e     movlw   0x1e             	MOVLW	0x1e
000d58   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
000d5a   5da7     subwf   0xa7, 0x0, 0x1   	SUBWF	_SortServoTimings_s_1_35, W, B
000d5c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d5e   ef9d     goto    0x00193a         	GOTO	_00381_DS_
000d60   f00c
                                           ;	.line	283; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[s])
000d62   0e7e     movlw   0x7e             	MOVLW	LOW(_port)
                                           ; removed redundant BANKSEL
000d64   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000d66   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d68   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d6a   0e3a     movlw   0x3a             	MOVLW	HIGH(_port)
000d6c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d6e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000d70   0e00     movlw   0x00             	MOVLW	UPPER(_port)
000d72   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000d74   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000d76   fff6
000d78   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000d7a   fff7
000d7c   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000d7e   fff8
000d80   0009     tblrd*+                  	TBLRD*+	
000d82   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000d84   f000
000d86   0e05     movlw   0x05             	MOVLW	0x05
000d88   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000d8a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d8c   ef99     goto    0x001932         	GOTO	_00393_DS_
000d8e   f00c
000d90   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
000d92   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
000d94   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
000d96   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d98   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
000d9a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d9c   0bfc     andlw   0xfc             	ANDLW	0xfc
000d9e   0fae     addlw   0xae             	ADDLW	LOW(_00473_DS_)
000da0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000da2   0e0d     movlw   0x0d             	MOVLW	HIGH(_00473_DS_)
000da4   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
000da6   0e00     movlw   0x00             	MOVLW	UPPER(_00473_DS_)
000da8   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
000daa   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
000dac   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00473_DS_:
000dae   efe1     goto    0x000dc2         	GOTO	_00335_DS_
000db0   f006
000db2   ef02     goto    0x001004         	GOTO	_00344_DS_
000db4   f008
000db6   ef27     goto    0x00124e         	GOTO	_00353_DS_
000db8   f009
000dba   ef50     goto    0x0014a0         	GOTO	_00362_DS_
000dbc   f00a
000dbe   ef76     goto    0x0016ec         	GOTO	_00371_DS_
000dc0   f00b
                                           _00335_DS_:
                                           ;	.line	286; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pA] & activatedservos[pA]){
000dc2   0e60     movlw   0x60             	MOVLW	LOW(_mask)
000dc4   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
000dc6   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000dc8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000dca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000dcc   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
000dce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000dd0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000dd2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000dd4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000dd6   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000dd8   fff6
000dda   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000ddc   fff7
000dde   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000de0   fff8
000de2   0009     tblrd*+                  	TBLRD*+	
000de4   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000de6   f000
000de8   0104     movlb   0x4              	BANKSEL	_mascaratotal
000dea   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_mascaratotal, W, B
000dec   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000dee   0104     movlb   0x4              	BANKSEL	_activatedservos
000df0   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_activatedservos, W, B
000df2   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000df4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000df6   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
000df8   ef99     goto    0x001932         	GOTO	_00393_DS_
000dfa   f00c
                                           ;	.line	289; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
000dfc   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
000dfe   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
000e00   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000e02   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e04   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e06   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
000e08   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e0a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e0c   ffe9
000e0e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e10   ffea
000e12   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000e14   f000
000e16   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
000e18   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
000e1a   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000e1c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e1e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000e20   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
000e22   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000e24   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000e26   ffe9
000e28   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000e2a   ffea
000e2c   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000e2e   f001
000e30   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000e32   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000e34   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000e36   d08d     bra     0x000f52         	BRA	_00339_DS_
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
000e38   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000e3a   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000e3c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e3e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e40   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
000e42   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e44   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
000e46   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
000e48   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000e4a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e4c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e4e   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
000e50   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e52   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000e54   ffe9
000e56   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000e58   ffea
000e5a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000e5c   f002
000e5e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e60   ffe9
000e62   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e64   ffea
000e66   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000e68   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
000e6a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	291; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=mask[s];
000e6c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000e6e   0d05     mullw   0x05             	MULLW	0x05
000e70   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000e72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e74   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000e76   f000
000e78   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000e7a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000e7c   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
000e7e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e80   0e60     movlw   0x60             	MOVLW	LOW(_mask)
000e82   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
000e84   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000e86   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e88   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e8a   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
000e8c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e8e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
000e90   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000e92   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
000e94   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
000e96   fff6
000e98   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
000e9a   fff7
000e9c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
000e9e   fff8
000ea0   0009     tblrd*+                  	TBLRD*+	
000ea2   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
000ea4   f002
000ea6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ea8   ffe9
000eaa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000eac   ffea
000eae   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000eb0   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
000eb2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000eb4   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000eb6   0d05     mullw   0x05             	MULLW	0x05
000eb8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000eba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ebc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ebe   f000
000ec0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ec2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ec4   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
000ec6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000ec8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000eca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ecc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ece   ffe9
000ed0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ed2   ffea
000ed4   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	294; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000ed6   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000ed8   0d05     mullw   0x05             	MULLW	0x05
000eda   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000edc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ede   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ee0   f000
000ee2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ee4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ee6   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
000ee8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000eea   0e02     movlw   0x02             	MOVLW	0x02
000eec   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000eee   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000ef0   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ef2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ef4   ffe9
000ef6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ef8   ffea
000efa   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	297; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000efc   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000efe   0d05     mullw   0x05             	MULLW	0x05
000f00   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f02   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f04   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f06   f000
000f08   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f0a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f0c   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
000f0e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f10   0e03     movlw   0x03             	MOVLW	0x03
000f12   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f14   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f16   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f18   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f1a   ffe9
000f1c   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f1e   ffea
000f20   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000f22   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000f24   0d05     mullw   0x05             	MULLW	0x05
000f26   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f28   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f2a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f2c   f000
000f2e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f30   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f32   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
000f34   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f36   0e04     movlw   0x04             	MOVLW	0x04
000f38   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f3a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f3c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f3e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f40   ffe9
000f42   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f44   ffea
000f46   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000f48   0e01     movlw   0x01             	MOVLW	0x01
000f4a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_35
000f4c   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
000f4e   ef99     goto    0x001932         	GOTO	_00393_DS_
000f50   f00c
                                           _00339_DS_:
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
000f52   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
000f54   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
000f56   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000f58   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000f5a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000f5c   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
000f5e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f60   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f62   ffe9
000f64   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f66   ffea
000f68   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000f6a   f000
000f6c   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
000f6e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
000f70   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000f72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f74   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000f76   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
000f78   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000f7a   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000f7c   ffe9
000f7e   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000f80   ffea
000f82   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000f84   f001
000f86   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000f88   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
000f8a   e002     bz      0x000f90         	BZ	_00477_DS_
000f8c   ef99     goto    0x001932         	GOTO	_00393_DS_
000f8e   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00477_DS_:
000f90   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	305; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA] |= mask[s];
000f92   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000f94   0d05     mullw   0x05             	MULLW	0x05
000f96   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f98   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f9a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f9c   f000
000f9e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fa0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000fa2   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
000fa4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
000fa6   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000fa8   0d05     mullw   0x05             	MULLW	0x05
000faa   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000fac   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000fae   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
000fb0   f002
000fb2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fb4   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
000fb6   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
000fb8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000fba   0e60     movlw   0x60             	MOVLW	LOW(_mask)
000fbc   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
000fbe   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000fc0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
000fc2   6a05     clrf    0x05, 0x0        	CLRF	r0x05
000fc4   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
000fc6   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
000fc8   6a06     clrf    0x06, 0x0        	CLRF	r0x06
000fca   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000fcc   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
000fce   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
000fd0   fff6
000fd2   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
000fd4   fff7
000fd6   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
000fd8   fff8
000fda   0009     tblrd*+                  	TBLRD*+	
000fdc   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
000fde   f004
000fe0   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000fe2   ffe9
000fe4   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000fe6   ffea
000fe8   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000fea   f002
000fec   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000fee   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
000ff0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ff2   ffe9
000ff4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ff6   ffea
000ff8   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
000ffa   ffef
000ffc   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
000ffe   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;      		
001000   ef99     goto    0x001932         	GOTO	_00393_DS_
001002   f00c
                                           _00344_DS_:
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pB] & activatedservos[pB]){
001004   0e60     movlw   0x60             	MOVLW	LOW(_mask)
001006   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
001008   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00100a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00100c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00100e   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
001010   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001012   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001014   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001016   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001018   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00101a   fff6
00101c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00101e   fff7
001020   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
001022   fff8
001024   0009     tblrd*+                  	TBLRD*+	
001026   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001028   f000
00102a   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 1)
00102c   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
00102e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001030   0104     movlb   0x4              	BANKSEL	(_activatedservos + 1)
001032   51f2     movf    0xf2, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
001034   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001036   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001038   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
00103a   ef99     goto    0x001932         	GOTO	_00393_DS_
00103c   f00c
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
00103e   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001040   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
001042   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001044   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001046   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001048   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
00104a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00104c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00104e   ffe9
001050   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001052   ffea
001054   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001056   f000
001058   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
00105a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
00105c   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00105e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001060   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001062   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001064   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001066   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001068   ffe9
00106a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00106c   ffea
00106e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001070   f001
001072   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001074   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001076   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001078   d08d     bra     0x001194         	BRA	_00348_DS_
                                           ;	.line	315; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
00107a   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
00107c   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00107e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001080   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001082   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001084   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001086   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001088   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
00108a   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00108c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00108e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001090   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
001092   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001094   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001096   ffe9
001098   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
00109a   ffea
00109c   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00109e   f002
0010a0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010a2   ffe9
0010a4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010a6   ffea
0010a8   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0010aa   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0010ac   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0010ae   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0010b0   0d05     mullw   0x05             	MULLW	0x05
0010b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010b8   f000
0010ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010be   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0010c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010c2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010c4   ffe9
0010c6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010c8   ffea
0010ca   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=mask[s];
0010cc   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0010ce   0d05     mullw   0x05             	MULLW	0x05
0010d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010d6   f000
0010d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010dc   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0010de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010e0   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0010e2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0010e4   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0010e6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
0010e8   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0010ea   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0010ec   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0010ee   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0010f0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0010f2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0010f4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0010f6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0010f8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0010fa   fff6
0010fc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0010fe   fff7
001100   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001102   fff8
001104   0009     tblrd*+                  	TBLRD*+	
001106   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001108   f002
00110a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00110c   ffe9
00110e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001110   ffea
001112   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001114   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001116   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
001118   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00111a   0d05     mullw   0x05             	MULLW	0x05
00111c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00111e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001120   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001122   f000
001124   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001126   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001128   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00112a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00112c   0e02     movlw   0x02             	MOVLW	0x02
00112e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001130   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001132   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001134   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001136   ffe9
001138   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00113a   ffea
00113c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
00113e   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001140   0d05     mullw   0x05             	MULLW	0x05
001142   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001144   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001146   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001148   f000
00114a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00114c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00114e   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
001150   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001152   0e03     movlw   0x03             	MOVLW	0x03
001154   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001156   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001158   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00115a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00115c   ffe9
00115e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001160   ffea
001162   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	325; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001164   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001166   0d05     mullw   0x05             	MULLW	0x05
001168   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00116a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00116c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00116e   f000
001170   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001172   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001174   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
001176   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001178   0e04     movlw   0x04             	MOVLW	0x04
00117a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00117c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00117e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001180   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001182   ffe9
001184   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001186   ffea
001188   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	327; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00118a   0e01     movlw   0x01             	MOVLW	0x01
00118c   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_35
00118e   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
001190   ef99     goto    0x001932         	GOTO	_00393_DS_
001192   f00c
                                           _00348_DS_:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001194   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001196   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
001198   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00119a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00119c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00119e   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
0011a0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011a2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0011a4   ffe9
0011a6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0011a8   ffea
0011aa   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0011ac   f000
0011ae   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0011b0   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
0011b2   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0011b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011b6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0011b8   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
0011ba   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0011bc   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0011be   ffe9
0011c0   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0011c2   ffea
0011c4   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0011c6   f001
0011c8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0011ca   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0011cc   e002     bz      0x0011d2         	BZ	_00482_DS_
0011ce   ef99     goto    0x001932         	GOTO	_00393_DS_
0011d0   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00482_DS_:
0011d2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	330; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB] |= mask[s];
0011d4   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0011d6   0d05     mullw   0x05             	MULLW	0x05
0011d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0011de   f000
0011e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0011e4   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0011e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011e8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0011ea   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
0011ec   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0011ee   0d05     mullw   0x05             	MULLW	0x05
0011f0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011f2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0011f4   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0011f6   f002
0011f8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011fa   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0011fc   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0011fe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001200   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
001202   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001204   0e60     movlw   0x60             	MOVLW	LOW(_mask)
001206   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
001208   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00120a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00120c   6a05     clrf    0x05, 0x0        	CLRF	r0x05
00120e   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
001210   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001212   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001214   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001216   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001218   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00121a   fff6
00121c   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
00121e   fff7
001220   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001222   fff8
001224   0009     tblrd*+                  	TBLRD*+	
001226   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001228   f004
00122a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00122c   ffe9
00122e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001230   ffea
001232   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001234   f002
001236   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001238   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00123a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00123c   ffe9
00123e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001240   ffea
001242   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001244   ffef
001246   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001248   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	333; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00124a   ef99     goto    0x001932         	GOTO	_00393_DS_
00124c   f00c
                                           _00353_DS_:
                                           ;	.line	337; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pC] & activatedservos[pC]){
00124e   0e60     movlw   0x60             	MOVLW	LOW(_mask)
001250   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
001252   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001254   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001256   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001258   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
00125a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00125c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00125e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001260   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001262   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001264   fff6
001266   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001268   fff7
00126a   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00126c   fff8
00126e   0009     tblrd*+                  	TBLRD*+	
001270   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001272   f000
001274   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 2)
001276   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
001278   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00127a   0104     movlb   0x4              	BANKSEL	(_activatedservos + 2)
00127c   51f3     movf    0xf3, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
00127e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001280   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001282   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001284   ef99     goto    0x001932         	GOTO	_00393_DS_
001286   f00c
                                           ;	.line	340; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001288   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
00128a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
00128c   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00128e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001290   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001292   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
001294   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001296   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001298   ffe9
00129a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00129c   ffea
00129e   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0012a0   f000
0012a2   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0012a4   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
0012a6   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0012a8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0012aa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0012ac   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
0012ae   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0012b0   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0012b2   ffe9
0012b4   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0012b6   ffea
0012b8   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0012ba   f001
0012bc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0012be   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0012c0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0012c2   d08d     bra     0x0013de         	BRA	_00357_DS_
                                           ;	.line	341; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
0012c4   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
0012c6   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0012c8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0012ca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0012cc   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
0012ce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0012d0   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
0012d2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
0012d4   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0012d6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0012d8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0012da   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
0012dc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0012de   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0012e0   ffe9
0012e2   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0012e4   ffea
0012e6   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0012e8   f002
0012ea   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0012ec   ffe9
0012ee   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0012f0   ffea
0012f2   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0012f4   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0012f6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	342; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0012f8   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0012fa   0d05     mullw   0x05             	MULLW	0x05
0012fc   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0012fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001300   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001302   f000
001304   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001306   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001308   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00130a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00130c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00130e   ffe9
001310   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001312   ffea
001314   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	343; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001316   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001318   0d05     mullw   0x05             	MULLW	0x05
00131a   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00131c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00131e   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001320   f000
001322   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001324   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001326   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
001328   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00132a   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00132c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00132e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001330   ffe9
001332   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001334   ffea
001336   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	344; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=mask[s];
001338   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00133a   0d05     mullw   0x05             	MULLW	0x05
00133c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00133e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001340   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001342   f000
001344   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001346   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001348   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00134a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00134c   0e02     movlw   0x02             	MOVLW	0x02
00134e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001350   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001352   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001354   0e60     movlw   0x60             	MOVLW	LOW(_mask)
001356   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
001358   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00135a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00135c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00135e   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
001360   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001362   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001364   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001366   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001368   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00136a   fff6
00136c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00136e   fff7
001370   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001372   fff8
001374   0009     tblrd*+                  	TBLRD*+	
001376   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001378   f002
00137a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00137c   ffe9
00137e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001380   ffea
001382   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001384   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001386   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
001388   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00138a   0d05     mullw   0x05             	MULLW	0x05
00138c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00138e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001390   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001392   f000
001394   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001396   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001398   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00139a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00139c   0e03     movlw   0x03             	MOVLW	0x03
00139e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013a2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013a4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013a6   ffe9
0013a8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013aa   ffea
0013ac   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	349; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
0013ae   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0013b0   0d05     mullw   0x05             	MULLW	0x05
0013b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0013b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0013b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0013b8   f000
0013ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0013bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013be   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0013c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013c2   0e04     movlw   0x04             	MOVLW	0x04
0013c4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013c6   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013cc   ffe9
0013ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013d0   ffea
0013d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	351; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
0013d4   0e01     movlw   0x01             	MOVLW	0x01
0013d6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_35
0013d8   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
0013da   ef99     goto    0x001932         	GOTO	_00393_DS_
0013dc   f00c
                                           _00357_DS_:
                                           ;	.line	353; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
0013de   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
0013e0   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
0013e2   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0013e4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0013e6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0013e8   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
0013ea   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013ec   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013ee   ffe9
0013f0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013f2   ffea
0013f4   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0013f6   f000
0013f8   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0013fa   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
0013fc   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0013fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001400   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001402   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001404   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001406   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001408   ffe9
00140a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00140c   ffea
00140e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001410   f001
001412   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001414   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001416   e002     bz      0x00141c         	BZ	_00487_DS_
001418   ef99     goto    0x001932         	GOTO	_00393_DS_
00141a   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00487_DS_:
00141c   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC] |= mask[s];
00141e   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001420   0d05     mullw   0x05             	MULLW	0x05
001422   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001424   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001426   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001428   f000
00142a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00142c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00142e   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
001430   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001432   0e02     movlw   0x02             	MOVLW	0x02
001434   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001436   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001438   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
00143a   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00143c   0d05     mullw   0x05             	MULLW	0x05
00143e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001440   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001442   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001444   f002
001446   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001448   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
00144a   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00144c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00144e   0e02     movlw   0x02             	MOVLW	0x02
001450   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001452   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001454   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001456   0e60     movlw   0x60             	MOVLW	LOW(_mask)
001458   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
00145a   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00145c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00145e   6a05     clrf    0x05, 0x0        	CLRF	r0x05
001460   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
001462   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001464   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001466   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001468   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
00146a   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00146c   fff6
00146e   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001470   fff7
001472   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001474   fff8
001476   0009     tblrd*+                  	TBLRD*+	
001478   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00147a   f004
00147c   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00147e   ffe9
001480   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001482   ffea
001484   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001486   f002
001488   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00148a   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00148c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00148e   ffe9
001490   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001492   ffea
001494   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001496   ffef
001498   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	355; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
00149a   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	357; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00149c   ef99     goto    0x001932         	GOTO	_00393_DS_
00149e   f00c
                                           _00362_DS_:
                                           ;	.line	362; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pD] & activatedservos[pD]){
0014a0   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0014a2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
0014a4   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0014a6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014a8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014aa   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0014ac   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014ae   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014b0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0014b2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0014b4   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0014b6   fff6
0014b8   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0014ba   fff7
0014bc   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0014be   fff8
0014c0   0009     tblrd*+                  	TBLRD*+	
0014c2   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0014c4   f000
0014c6   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 3)
0014c8   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0014ca   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014cc   0104     movlb   0x4              	BANKSEL	(_activatedservos + 3)
0014ce   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
0014d0   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014d2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0014d4   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
0014d6   ef99     goto    0x001932         	GOTO	_00393_DS_
0014d8   f00c
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
0014da   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
0014dc   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
0014de   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0014e0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014e2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014e4   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
0014e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0014ea   ffe9
0014ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0014ee   ffea
0014f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0014f2   f000
0014f4   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0014f6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
0014f8   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0014fa   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0014fc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014fe   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001500   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001502   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001504   ffe9
001506   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001508   ffea
00150a   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
00150c   f001
00150e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001510   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001512   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001514   d08c     bra     0x00162e         	BRA	_00366_DS_
                                           ;	.line	366; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001516   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001518   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00151a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00151c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00151e   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001520   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001522   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001524   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
001526   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001528   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00152a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00152c   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
00152e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001530   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001532   ffe9
001534   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001536   ffea
001538   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00153a   f002
00153c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00153e   ffe9
001540   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001542   ffea
001544   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001546   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001548   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	367; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
00154a   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00154c   0d05     mullw   0x05             	MULLW	0x05
00154e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001550   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001552   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001554   f000
001556   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001558   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00155a   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00155c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00155e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001560   ffe9
001562   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001564   ffea
001566   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	368; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001568   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00156a   0d05     mullw   0x05             	MULLW	0x05
00156c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00156e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001570   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001572   f000
001574   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001576   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001578   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00157a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00157c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00157e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001580   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001582   ffe9
001584   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001586   ffea
001588   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	369; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
00158a   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00158c   0d05     mullw   0x05             	MULLW	0x05
00158e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001590   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001592   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001594   f000
001596   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001598   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00159a   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00159c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00159e   0e02     movlw   0x02             	MOVLW	0x02
0015a0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015a2   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015a4   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015a6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015a8   ffe9
0015aa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015ac   ffea
0015ae   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	370; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=mask[s];
0015b0   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0015b2   0d05     mullw   0x05             	MULLW	0x05
0015b4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0015b6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0015b8   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0015ba   f000
0015bc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0015be   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c0   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0015c2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0015c4   0e03     movlw   0x03             	MOVLW	0x03
0015c6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015ca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015cc   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0015ce   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
0015d0   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0015d2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0015d4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0015d6   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0015d8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0015da   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0015dc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0015de   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0015e0   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0015e2   fff6
0015e4   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0015e6   fff7
0015e8   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0015ea   fff8
0015ec   0009     tblrd*+                  	TBLRD*+	
0015ee   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0015f0   f002
0015f2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015f4   ffe9
0015f6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015f8   ffea
0015fa   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0015fc   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0015fe   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001600   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001602   0d05     mullw   0x05             	MULLW	0x05
001604   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001606   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001608   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00160a   f000
00160c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00160e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001610   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
001612   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001614   0e04     movlw   0x04             	MOVLW	0x04
001616   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001618   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00161a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00161c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00161e   ffe9
001620   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001622   ffea
001624   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	374; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
001626   0e01     movlw   0x01             	MOVLW	0x01
001628   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_35
00162a   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
00162c   d182     bra     0x001932         	BRA	_00393_DS_
                                           _00366_DS_:
                                           ;	.line	376; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
00162e   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001630   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
001632   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001634   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001636   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001638   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
00163a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00163c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00163e   ffe9
001640   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001642   ffea
001644   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001646   f000
001648   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
00164a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
00164c   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00164e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001650   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001652   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001654   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001656   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001658   ffe9
00165a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00165c   ffea
00165e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001660   f001
001662   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001664   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001666   e001     bz      0x00166a         	BZ	_00492_DS_
001668   d164     bra     0x001932         	BRA	_00393_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00492_DS_:
00166a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	377; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD] |= mask[s];
00166c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00166e   0d05     mullw   0x05             	MULLW	0x05
001670   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001672   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001674   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001676   f000
001678   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00167a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00167c   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00167e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001680   0e03     movlw   0x03             	MOVLW	0x03
001682   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001684   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001686   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
001688   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00168a   0d05     mullw   0x05             	MULLW	0x05
00168c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00168e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001690   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001692   f002
001694   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001696   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001698   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00169a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00169c   0e03     movlw   0x03             	MOVLW	0x03
00169e   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0016a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0016a2   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0016a4   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0016a6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
0016a8   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0016aa   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0016ac   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0016ae   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0016b0   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0016b2   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0016b4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016b6   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0016b8   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0016ba   fff6
0016bc   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0016be   fff7
0016c0   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0016c2   fff8
0016c4   0009     tblrd*+                  	TBLRD*+	
0016c6   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0016c8   f004
0016ca   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0016cc   ffe9
0016ce   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0016d0   ffea
0016d2   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0016d4   f002
0016d6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0016d8   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0016da   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0016dc   ffe9
0016de   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0016e0   ffea
0016e2   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
0016e4   ffef
0016e6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	378; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
0016e8   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	380; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0016ea   d123     bra     0x001932         	BRA	_00393_DS_
                                           _00371_DS_:
                                           ;	.line	385; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pE] & activatedservos[pE]){
0016ec   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0016ee   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
0016f0   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0016f2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0016f4   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0016f6   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0016f8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0016fa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0016fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016fe   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001700   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001702   fff6
001704   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001706   fff7
001708   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00170a   fff8
00170c   0009     tblrd*+                  	TBLRD*+	
00170e   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001710   f000
001712   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 4)
001714   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001716   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001718   0104     movlb   0x4              	BANKSEL	(_activatedservos + 4)
00171a   51f5     movf    0xf5, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
00171c   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00171e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001720   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001722   d107     bra     0x001932         	BRA	_00393_DS_
                                           ;	.line	388; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001724   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001726   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
001728   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00172a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00172c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00172e   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
001730   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001732   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001734   ffe9
001736   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001738   ffea
00173a   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00173c   f000
00173e   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
001740   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
001742   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
001744   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001746   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001748   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
00174a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00174c   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
00174e   ffe9
001750   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001752   ffea
001754   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001756   f001
001758   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00175a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00175c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00175e   d08b     bra     0x001876         	BRA	_00375_DS_
                                           ;	.line	389; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001760   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001762   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
001764   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001766   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001768   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
00176a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00176c   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
00176e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
001770   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001772   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001774   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001776   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
001778   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00177a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00177c   ffe9
00177e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001780   ffea
001782   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001784   f002
001786   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001788   ffe9
00178a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00178c   ffea
00178e   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001790   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001792   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	390; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
001794   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001796   0d05     mullw   0x05             	MULLW	0x05
001798   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00179a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00179c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00179e   f000
0017a0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017a2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017a4   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0017a6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017a8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017aa   ffe9
0017ac   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017ae   ffea
0017b0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	391; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
0017b2   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0017b4   0d05     mullw   0x05             	MULLW	0x05
0017b6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017b8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017ba   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017bc   f000
0017be   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017c0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017c2   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0017c4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017c6   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0017c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017cc   ffe9
0017ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017d0   ffea
0017d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	392; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
0017d4   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0017d6   0d05     mullw   0x05             	MULLW	0x05
0017d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017de   f000
0017e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017e4   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0017e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017e8   0e02     movlw   0x02             	MOVLW	0x02
0017ea   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017ec   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0017ee   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017f0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017f2   ffe9
0017f4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017f6   ffea
0017f8   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
0017fa   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0017fc   0d05     mullw   0x05             	MULLW	0x05
0017fe   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001800   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001802   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001804   f000
001806   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001808   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00180a   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00180c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00180e   0e03     movlw   0x03             	MOVLW	0x03
001810   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001812   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001814   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001816   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001818   ffe9
00181a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00181c   ffea
00181e   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	394; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=mask[s];
001820   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001822   0d05     mullw   0x05             	MULLW	0x05
001824   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001826   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001828   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00182a   f000
00182c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00182e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001830   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
001832   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001834   0e04     movlw   0x04             	MOVLW	0x04
001836   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001838   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00183a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00183c   0e60     movlw   0x60             	MOVLW	LOW(_mask)
00183e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
001840   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001842   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001844   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001846   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
001848   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00184a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00184c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00184e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001850   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001852   fff6
001854   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001856   fff7
001858   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00185a   fff8
00185c   0009     tblrd*+                  	TBLRD*+	
00185e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001860   f002
001862   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001864   ffe9
001866   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001868   ffea
00186a   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
00186c   ffef
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00186e   0e01     movlw   0x01             	MOVLW	0x01
001870   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_35
001872   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
001874   d05e     bra     0x001932         	BRA	_00393_DS_
                                           _00375_DS_:
                                           ;	.line	397; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001876   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001878   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
00187a   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00187c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00187e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001880   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
001882   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001884   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001886   ffe9
001888   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00188a   ffea
00188c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00188e   f000
001890   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
001892   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
001894   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
001896   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001898   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00189a   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
00189c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00189e   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0018a0   ffe9
0018a2   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0018a4   ffea
0018a6   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0018a8   f001
0018aa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0018ac   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0018ae   e001     bz      0x0018b2         	BZ	_00497_DS_
0018b0   d040     bra     0x001932         	BRA	_00393_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00497_DS_:
0018b2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	398; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE] |= mask[s];
0018b4   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0018b6   0d05     mullw   0x05             	MULLW	0x05
0018b8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018ba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0018bc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0018be   f000
0018c0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018c2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018c4   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0018c6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0018c8   0e04     movlw   0x04             	MOVLW	0x04
0018ca   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018cc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ce   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
0018d0   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0018d2   0d05     mullw   0x05             	MULLW	0x05
0018d4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018d6   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0018d8   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0018da   f002
0018dc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018de   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e0   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0018e2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0018e4   0e04     movlw   0x04             	MOVLW	0x04
0018e6   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ea   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0018ec   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0018ee   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
0018f0   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0018f2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0018f4   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0018f6   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0018f8   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0018fa   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0018fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0018fe   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001900   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
001902   fff6
001904   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001906   fff7
001908   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
00190a   fff8
00190c   0009     tblrd*+                  	TBLRD*+	
00190e   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001910   f004
001912   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001914   ffe9
001916   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001918   ffea
00191a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00191c   f002
00191e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001920   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
001922   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001924   ffe9
001926   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001928   ffea
00192a   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
00192c   ffef
00192e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	399; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001930   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           _00393_DS_:
001932   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_35
                                           ;	.line	280; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
001934   2ba7     incf    0xa7, 0x1, 0x1   	INCF	_SortServoTimings_s_1_35, F, B
001936   efab     goto    0x000d56         	GOTO	_00392_DS_
001938   f006
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00381_DS_:
00193a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	405; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pA] |= timings[t][pA];
00193c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00193e   0d05     mullw   0x05             	MULLW	0x05
001940   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001942   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001944   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001946   f000
001948   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00194a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00194c   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00194e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001950   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001952   ffe9
001954   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001956   ffea
001958   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00195a   f000
00195c   0104     movlb   0x4              	BANKSEL	_mascaratotal
00195e   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_mascaratotal, W, B
001960   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001962   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001964   6ff6     movwf   0xf6, 0x1        	MOVWF	_mascaratotal, B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001966   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	406; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pB] |= timings[t][pB];
001968   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00196a   0d05     mullw   0x05             	MULLW	0x05
00196c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00196e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001970   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001972   f000
001974   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001976   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001978   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00197a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00197c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00197e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001980   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001982   ffe9
001984   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001986   ffea
001988   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00198a   f000
00198c   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 1)
00198e   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
001990   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001992   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001994   6ff7     movwf   0xf7, 0x1        	MOVWF	(_mascaratotal + 1), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001996   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	408; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pC] |= timings[t][pC];
001998   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00199a   0d05     mullw   0x05             	MULLW	0x05
00199c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00199e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019a0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019a2   f000
0019a4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019a6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019a8   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0019aa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019ac   0e02     movlw   0x02             	MOVLW	0x02
0019ae   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019b0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019b2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019b4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019b6   ffe9
0019b8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ba   ffea
0019bc   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019be   f000
0019c0   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 2)
0019c2   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
0019c4   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019c8   6ff8     movwf   0xf8, 0x1        	MOVWF	(_mascaratotal + 2), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0019ca   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	411; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pD] |= timings[t][pD];
0019cc   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0019ce   0d05     mullw   0x05             	MULLW	0x05
0019d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0019d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019d6   f000
0019d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019dc   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0019de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019e0   0e03     movlw   0x03             	MOVLW	0x03
0019e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019e4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019e6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019ea   ffe9
0019ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ee   ffea
0019f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019f2   f000
0019f4   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 3)
0019f6   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0019f8   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019fa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019fc   6ff9     movwf   0xf9, 0x1        	MOVWF	(_mascaratotal + 3), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0019fe   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	414; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pE] |= timings[t][pE];
001a00   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001a02   0d05     mullw   0x05             	MULLW	0x05
001a04   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001a06   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001a08   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001a0a   f000
001a0c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001a0e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a10   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
001a12   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001a14   0e04     movlw   0x04             	MOVLW	0x04
001a16   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a18   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001a1a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001a1c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001a1e   ffe9
001a20   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001a22   ffea
001a24   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001a26   f000
001a28   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 4)
001a2a   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001a2c   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001a2e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001a30   6ffa     movwf   0xfa, 0x1        	MOVWF	(_mascaratotal + 4), B
001a32   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	417; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos += numservos;
001a34   51a6     movf    0xa6, 0x0, 0x1   	MOVF	_SortServoTimings_numservos_1_35, W, B
001a36   0101     movlb   0x1              	BANKSEL	_SortServoTimings_totalservos_1_35
001a38   27a5     addwf   0xa5, 0x1, 0x1   	ADDWF	_SortServoTimings_totalservos_1_35, F, B
001a3a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	418; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t++;
001a3c   2ba4     incf    0xa4, 0x1, 0x1   	INCF	_SortServoTimings_t_1_35, F, B
001a3e   efa0     goto    0x000d40         	GOTO	_00382_DS_
001a40   f006
                                           _00384_DS_:
001a42   0101     movlb   0x1              	BANKSEL	_needreordering
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=0;  // This indicates that servo timings are sorted.
001a44   6b01     clrf    0x01, 0x1        	CLRF	_needreordering, B
                                           ;	.line	422; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
001a46   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
001a48   f006
001a4a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
001a4c   f005
001a4e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001a50   f004
001a52   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001a54   f003
001a56   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001a58   f002
001a5a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001a5c   f001
001a5e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001a60   f000
001a62   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__ServosPulseUp	code
                                           _ServosPulseUp:
005a00   0104     movlb   0x4              	BANKSEL	_activatedservos
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA | activatedservos[pA];
005a02   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_activatedservos, W, B
005a04   1280     iorwf   0x80, 0x1, 0x0   	IORWF	_PORTA, F
                                           ; removed redundant BANKSEL
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB | activatedservos[pB];
005a06   51f2     movf    0xf2, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
005a08   1281     iorwf   0x81, 0x1, 0x0   	IORWF	_PORTB, F
                                           ; removed redundant BANKSEL
                                           ;	.line	235; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC | activatedservos[pC];
005a0a   51f3     movf    0xf3, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
005a0c   1282     iorwf   0x82, 0x1, 0x0   	IORWF	_PORTC, F
                                           ; removed redundant BANKSEL
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD | activatedservos[pD];
005a0e   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
005a10   1283     iorwf   0x83, 0x1, 0x0   	IORWF	_PORTD, F
                                           ; removed redundant BANKSEL
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE | activatedservos[pE];
005a12   51f5     movf    0xf5, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
005a14   1284     iorwf   0x84, 0x1, 0x0   	IORWF	_PORTE, F
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
005a16   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void ServosPulseDown()
0038ee   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0038f0   ffe5
0038f2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0038f4   ffd9
0038f6   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0038f8   ffe5
0038fa   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0038fc   ffe5
0038fe   0101     movlb   0x1              	BANKSEL	_ServosPulseDown_timingindex_1_30
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	volatile unsigned char timingindex = 0;
003900   6ba3     clrf    0xa3, 0x1        	CLRF	_ServosPulseDown_timingindex_1_30, B
003902   0101     movlb   0x1              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
003904   6b02     clrf    0x02, 0x1        	CLRF	_timedivision, B
                                           _00306_DS_:
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (timevalue[timingindex] == timedivision)
003906   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
003908   0101     movlb   0x1              	BANKSEL	_ServosPulseDown_timingindex_1_30
00390a   25a3     addwf   0xa3, 0x0, 0x1   	ADDWF	_ServosPulseDown_timingindex_1_30, W, B
00390c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00390e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003910   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
003912   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003914   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003916   ffe9
003918   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00391a   ffea
00391c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00391e   f000
003920   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003922   0101     movlb   0x1              	BANKSEL	_timedivision
003924   1902     xorwf   0x02, 0x0, 0x1   	XORWF	_timedivision, W, B
003926   e001     bz      0x00392a         	BZ	_00317_DS_
003928   d06a     bra     0x0039fe         	BRA	_00304_DS_
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           _00317_DS_:
00392a   0101     movlb   0x1              	BANKSEL	_ServosPulseDown_timingindex_1_30
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA ^ timings[timingindex][pA];
00392c   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
00392e   0d05     mullw   0x05             	MULLW	0x05
003930   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003932   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003934   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
003936   f000
003938   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00393a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00393c   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00393e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003940   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003942   ffe9
003944   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
003946   ffea
003948   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00394a   f000
00394c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00394e   1a80     xorwf   0x80, 0x1, 0x0   	XORWF	_PORTA, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB ^ timings[timingindex][pB];
003950   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
003952   0d05     mullw   0x05             	MULLW	0x05
003954   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003956   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003958   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00395a   f000
00395c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00395e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003960   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
003962   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003964   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
003966   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
003968   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00396a   ffe9
00396c   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00396e   ffea
003970   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
003972   f000
003974   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003976   1a81     xorwf   0x81, 0x1, 0x0   	XORWF	_PORTB, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC ^ timings[timingindex][pC];
003978   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
00397a   0d05     mullw   0x05             	MULLW	0x05
00397c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00397e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003980   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
003982   f000
003984   0e00     movlw   0x00             	MOVLW	LOW(_timings)
003986   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003988   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
00398a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00398c   0e02     movlw   0x02             	MOVLW	0x02
00398e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003990   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
003992   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
003994   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003996   ffe9
003998   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00399a   ffea
00399c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00399e   f000
0039a0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0039a2   1a82     xorwf   0x82, 0x1, 0x0   	XORWF	_PORTC, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD ^ timings[timingindex][pD];
0039a4   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
0039a6   0d05     mullw   0x05             	MULLW	0x05
0039a8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0039aa   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0039ac   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0039ae   f000
0039b0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0039b2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0039b4   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0039b6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0039b8   0e03     movlw   0x03             	MOVLW	0x03
0039ba   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0039bc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0039be   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0039c0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0039c2   ffe9
0039c4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0039c6   ffea
0039c8   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0039ca   f000
0039cc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0039ce   1a83     xorwf   0x83, 0x1, 0x0   	XORWF	_PORTD, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE ^ timings[timingindex][pE];
0039d0   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
0039d2   0d05     mullw   0x05             	MULLW	0x05
0039d4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0039d6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0039d8   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0039da   f000
0039dc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0039de   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0039e0   0e07     movlw   0x07             	MOVLW	HIGH(_timings)
0039e2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0039e4   0e04     movlw   0x04             	MOVLW	0x04
0039e6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0039e8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0039ea   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0039ec   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0039ee   ffe9
0039f0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0039f2   ffea
0039f4   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0039f6   f000
0039f8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0039fa   1a84     xorwf   0x84, 0x1, 0x0   	XORWF	_PORTE, F
                                           ; removed redundant BANKSEL
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timingindex++;
0039fc   2ba3     incf    0xa3, 0x1, 0x1   	INCF	_ServosPulseDown_timingindex_1_30, F, B
                                           _00304_DS_:
0039fe   0e07     movlw   0x07             	movlw	7
003a00   6f9c     movwf   0x9c, 0x1        	movwf	_loopvar
                                           bucle:
003a02   0000     nop                      	NOP
003a04   0000     nop                      	NOP
003a06   0000     nop                      	NOP
003a08   0000     nop                      	NOP
003a0a   0000     nop                      	NOP
003a0c   0000     nop                      	NOP
003a0e   0000     nop                      	NOP
003a10   0000     nop                      	NOP
003a12   0000     nop                      	NOP
003a14   0000     nop                      	NOP
003a16   0000     nop                      	NOP
003a18   2f9c     decfsz  0x9c, 0x1, 0x1   	decfsz	_loopvar,1
003a1a   ef01     goto    0x003a02         	goto	bucle
003a1c   f01d
                                           	
003a1e   0101     movlb   0x1              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
003a20   2b02     incf    0x02, 0x1, 0x1   	INCF	_timedivision, F, B
003a22   0efb     movlw   0xfb             	MOVLW	0xfb
                                           ; removed redundant BANKSEL
003a24   5d02     subwf   0x02, 0x0, 0x1   	SUBWF	_timedivision, W, B
003a26   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
003a28   d76e     bra     0x003906         	BRA	_00306_DS_
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
003a2a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003a2c   f001
003a2e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003a30   f000
003a32   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003a34   ffd9
003a36   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__servos_init	code
                                           _servos_init:
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void servos_init()
004cd0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004cd2   ffe5
004cd4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004cd6   ffe5
004cd8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004cda   ffe5
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
004cdc   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00277_DS_:
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[a]=255;  //Filling up the servovalues table to 255.
004cde   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
004ce0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004ce2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004ce4   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004ce6   0e07     movlw   0x07             	MOVLW	HIGH(_servovalues)
004ce8   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004cea   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004cec   ffe9
004cee   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
004cf0   ffea
004cf2   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ;	.line	160; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][a]= DefaultSERVOMIN; // Setting min servo position to 1000 usec.
004cf4   0e80     movlw   0x80             	MOVLW	LOW(_maxminpos)
004cf6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004cf8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004cfa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004cfc   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos)
004cfe   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004d00   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004d02   ffe9
004d04   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
004d06   ffea
004d08   0e40     movlw   0x40             	MOVLW	0x40
004d0a   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][a]= DefaultSERVOMAX; // Setting max servo position to 2000 usec.
004d0c   0e9e     movlw   0x9e             	MOVLW	LOW(_maxminpos + 30)
004d0e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004d10   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004d12   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004d14   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos + 30)
004d16   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004d18   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004d1a   ffe9
004d1c   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
004d1e   ffea
004d20   0ec0     movlw   0xc0             	MOVLW	0xc0
004d22   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
004d24   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
004d26   0e1e     movlw   0x1e             	MOVLW	0x1e
004d28   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004d2a   e3d9     bnc     0x004cde         	BNC	_00277_DS_
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
004d2c   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00279_DS_:
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[a]=0x00;  // Setting all pins as deactivated as servo.
004d2e   0ef1     movlw   0xf1             	MOVLW	LOW(_activatedservos)
004d30   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004d32   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004d34   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004d36   0e04     movlw   0x04             	MOVLW	HIGH(_activatedservos)
004d38   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004d3a   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004d3c   ffe9
004d3e   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
004d40   ffea
004d42   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
004d44   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
004d46   0e05     movlw   0x05             	MOVLW	0x05
004d48   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004d4a   e3f1     bnc     0x004d2e         	BNC	_00279_DS_
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 0; // Disable global HP interrupts
004d4c   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	_INTCONbits, 7
                                           ;	.line	169; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 0; // Disable global LP interrupts
004d4e   9cf2     bcf     0xf2, 0x6, 0x0   	BCF	_INTCONbits, 6
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=0x01; 			//timer 1 prescaler 1 source is internal oscillator
004d50   0e01     movlw   0x01             	MOVLW	0x01
004d52   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H=0xFF; 			// First value on timer to start up...
004d54   0eff     movlw   0xff             	MOVLW	0xff
004d56   68cf     setf    0xcf, 0x0        	SETF	_TMR1H
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L=0x00; 			// ...now the first interrupt will be generated by timer after 9 ms.
004d58   6ace     clrf    0xce, 0x0        	CLRF	_TMR1L
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	IPR1bits.TMR1IP = 1; 	// INT_HIGH_PRIORITY
004d5a   809f     bsf     0x9f, 0x0, 0x0   	BSF	_IPR1bits, 0
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF = 0; 	// Setting flag to 0
004d5c   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIE1bits.TMR1IE = 1; 	// INT_ENABLE
004d5e   809d     bsf     0x9d, 0x0, 0x0   	BSF	_PIE1bits, 0
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CONbits.TMR1ON   = 1; // Starting TMR1
004d60   80cd     bsf     0xcd, 0x0, 0x0   	BSF	_T1CONbits, 0
                                           ;	.line	179; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 1; // Enable global HP interrupts
004d62   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 1; // Enable global LP interrupts
004d64   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
004d66   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004d68   f002
004d6a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004d6c   f001
004d6e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004d70   f000
004d72   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__toggle	code
                                           _toggle:
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	void toggle(u8 pin)
005818   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00581a   ffe5
00581c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00581e   ffd9
005820   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005822   ffe5
005824   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005826   ffe5
005828   0e02     movlw   0x02             	MOVLW	0x02
00582a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00582c   f000
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	state = digitalread(pin);
00582e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005830   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005832   eca2     call    0x002f44, 0x0    	CALL	_digitalread
005834   f017
005836   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005838   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	digitalwrite(pin, state^1);
00583a   7001     btg     0x01, 0x0, 0x0   	BTG	r0x01, 0
00583c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00583e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005840   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005842   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005844   ec09     call    0x002412, 0x0    	CALL	_digitalwrite
005846   f012
005848   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00584a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	52; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	}
00584c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00584e   f001
005850   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005852   f000
005854   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005856   ffd9
005858   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__digitalread	code
                                           _digitalread:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	u8 digitalread(u8 pin)
002f44   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002f46   ffe5
002f48   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002f4a   ffd9
002f4c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002f4e   ffe5
002f50   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002f52   ffe5
002f54   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002f56   ffe5
002f58   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002f5a   ffe5
002f5c   0e02     movlw   0x02             	MOVLW	0x02
002f5e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002f60   f000
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	switch (port[pin])
002f62   0e7e     movlw   0x7e             	MOVLW	LOW(_port)
002f64   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002f66   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002f68   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002f6a   0e3a     movlw   0x3a             	MOVLW	HIGH(_port)
002f6c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002f6e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002f70   0e00     movlw   0x00             	MOVLW	UPPER(_port)
002f72   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002f74   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002f76   fff6
002f78   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002f7a   fff7
002f7c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002f7e   fff8
002f80   0009     tblrd*+                  	TBLRD*+	
002f82   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002f84   f001
002f86   0e05     movlw   0x05             	MOVLW	0x05
002f88   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
002f8a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002f8c   d0c2     bra     0x003112         	BRA	_00258_DS_
002f8e   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
002f90   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
002f92   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
002f94   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002f96   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
002f98   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002f9a   0bfc     andlw   0xfc             	ANDLW	0xfc
002f9c   0fac     addlw   0xac             	ADDLW	LOW(_00265_DS_)
002f9e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002fa0   0e2f     movlw   0x2f             	MOVLW	HIGH(_00265_DS_)
002fa2   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
002fa4   0e00     movlw   0x00             	MOVLW	UPPER(_00265_DS_)
002fa6   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
002fa8   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
002faa   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00265_DS_:
002fac   efe0     goto    0x002fc0         	GOTO	_00253_DS_
002fae   f017
002fb0   ef02     goto    0x003004         	GOTO	_00254_DS_
002fb2   f018
002fb4   ef24     goto    0x003048         	GOTO	_00255_DS_
002fb6   f018
002fb8   ef46     goto    0x00308c         	GOTO	_00256_DS_
002fba   f018
002fbc   ef68     goto    0x0030d0         	GOTO	_00257_DS_
002fbe   f018
                                           _00253_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTA & mask[pin])!=0);
002fc0   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002fc2   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002fc4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002fc6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002fc8   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002fca   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002fcc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002fce   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002fd0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002fd2   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002fd4   fff6
002fd6   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002fd8   fff7
002fda   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002fdc   fff8
002fde   0009     tblrd*+                  	TBLRD*+	
002fe0   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002fe2   f001
002fe4   5080     movf    0x80, 0x0, 0x0   	MOVF	_PORTA, W
002fe6   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
002fe8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002fea   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
002fec   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
002fee   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002ff0   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002ff2   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
002ff4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002ff6   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
002ff8   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
002ffa   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002ffc   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002ffe   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
003000   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003002   d088     bra     0x003114         	BRA	_00259_DS_
                                           _00254_DS_:
                                           ;	.line	60; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTB & mask[pin])!=0);
003004   0e60     movlw   0x60             	MOVLW	LOW(_mask)
003006   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003008   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00300a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00300c   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
00300e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003010   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003012   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003014   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003016   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003018   fff6
00301a   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00301c   fff7
00301e   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003020   fff8
003022   0009     tblrd*+                  	TBLRD*+	
003024   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003026   f001
003028   5081     movf    0x81, 0x0, 0x0   	MOVF	_PORTB, W
00302a   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
00302c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00302e   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003030   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003032   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003034   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003036   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
003038   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00303a   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
00303c   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
00303e   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003040   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003042   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
003044   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003046   d066     bra     0x003114         	BRA	_00259_DS_
                                           _00255_DS_:
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTC & mask[pin])!=0);
003048   0e60     movlw   0x60             	MOVLW	LOW(_mask)
00304a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00304c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00304e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003050   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
003052   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003054   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003056   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003058   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00305a   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00305c   fff6
00305e   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003060   fff7
003062   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003064   fff8
003066   0009     tblrd*+                  	TBLRD*+	
003068   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00306a   f001
00306c   5082     movf    0x82, 0x0, 0x0   	MOVF	_PORTC, W
00306e   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
003070   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003072   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003074   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003076   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003078   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00307a   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
00307c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00307e   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003080   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003082   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003084   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003086   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
003088   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00308a   d044     bra     0x003114         	BRA	_00259_DS_
                                           _00256_DS_:
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTD & mask[pin])!=0);
00308c   0e60     movlw   0x60             	MOVLW	LOW(_mask)
00308e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003090   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003092   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003094   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
003096   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003098   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00309a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00309c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00309e   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0030a0   fff6
0030a2   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0030a4   fff7
0030a6   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0030a8   fff8
0030aa   0009     tblrd*+                  	TBLRD*+	
0030ac   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0030ae   f001
0030b0   5083     movf    0x83, 0x0, 0x0   	MOVF	_PORTD, W
0030b2   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
0030b4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0030b6   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0030b8   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
0030ba   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0030bc   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0030be   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
0030c0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0030c2   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0030c4   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
0030c6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0030c8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0030ca   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
0030cc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0030ce   d022     bra     0x003114         	BRA	_00259_DS_
                                           _00257_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTE & mask[pin])!=0);
0030d0   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0030d2   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0030d4   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0030d6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0030d8   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0030da   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0030dc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0030de   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0030e0   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0030e2   fff6
0030e4   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0030e6   fff7
0030e8   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0030ea   fff8
0030ec   0009     tblrd*+                  	TBLRD*+	
0030ee   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0030f0   f000
0030f2   5084     movf    0x84, 0x0, 0x0   	MOVF	_PORTE, W
0030f4   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0030f6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0030f8   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0030fa   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
0030fc   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0030fe   6a00     clrf    0x00, 0x0        	CLRF	r0x00
003100   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
003102   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003104   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003106   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003108   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00310a   6a00     clrf    0x00, 0x0        	CLRF	r0x00
00310c   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
00310e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003110   d001     bra     0x003114         	BRA	_00259_DS_
                                           _00258_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return 0;
003112   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00259_DS_:
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	}
003114   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003116   f003
003118   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00311a   f002
00311c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00311e   f001
003120   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003122   f000
003124   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003126   ffd9
003128   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	void digitalwrite(u8 pin, u8 state)
002412   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002414   ffe5
002416   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002418   ffd9
00241a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00241c   ffe5
00241e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002420   ffe5
002422   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002424   ffe5
002426   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002428   ffe5
00242a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00242c   ffe5
00242e   0e02     movlw   0x02             	MOVLW	0x02
002430   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002432   f000
002434   0e03     movlw   0x03             	MOVLW	0x03
002436   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002438   f001
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	switch (port[pin])
00243a   0e7e     movlw   0x7e             	MOVLW	LOW(_port)
00243c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00243e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002440   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002442   0e3a     movlw   0x3a             	MOVLW	HIGH(_port)
002444   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002446   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002448   0e00     movlw   0x00             	MOVLW	UPPER(_port)
00244a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00244c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00244e   fff6
002450   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002452   fff7
002454   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002456   fff8
002458   0009     tblrd*+                  	TBLRD*+	
00245a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00245c   f002
00245e   0e05     movlw   0x05             	MOVLW	0x05
002460   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
002462   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002464   d111     bra     0x002688         	BRA	_00227_DS_
002466   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
002468   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
00246a   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
00246c   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00246e   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
002470   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002472   0bfc     andlw   0xfc             	ANDLW	0xfc
002474   0f84     addlw   0x84             	ADDLW	LOW(_00248_DS_)
002476   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002478   0e24     movlw   0x24             	MOVLW	HIGH(_00248_DS_)
00247a   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00247c   0e00     movlw   0x00             	MOVLW	UPPER(_00248_DS_)
00247e   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
002480   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
002482   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00248_DS_:
002484   ef4c     goto    0x002498         	GOTO	_00206_DS_
002486   f012
002488   ef7e     goto    0x0024fc         	GOTO	_00210_DS_
00248a   f012
00248c   efb0     goto    0x002560         	GOTO	_00214_DS_
00248e   f012
002490   efe2     goto    0x0025c4         	GOTO	_00218_DS_
002492   f012
002494   ef14     goto    0x002628         	GOTO	_00222_DS_
002496   f013
                                           _00206_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATA=LATA | mask[pin];
002498   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00249a   e015     bz      0x0024c6         	BZ	_00208_DS_
00249c   0e60     movlw   0x60             	MOVLW	LOW(_mask)
00249e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0024a0   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0024a2   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0024a4   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0024a6   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0024a8   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0024aa   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0024ac   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0024ae   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0024b0   fff6
0024b2   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0024b4   fff7
0024b6   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0024b8   fff8
0024ba   0009     tblrd*+                  	TBLRD*+	
0024bc   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0024be   f002
0024c0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0024c2   1289     iorwf   0x89, 0x1, 0x0   	IORWF	_LATA, F
0024c4   d0e1     bra     0x002688         	BRA	_00227_DS_
                                           _00208_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATA=LATA & (255-mask[pin]);
0024c6   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0024c8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0024ca   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0024cc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0024ce   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0024d0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0024d2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0024d4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0024d6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0024d8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0024da   fff6
0024dc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0024de   fff7
0024e0   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0024e2   fff8
0024e4   0009     tblrd*+                  	TBLRD*+	
0024e6   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0024e8   f002
0024ea   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0024ec   08ff     sublw   0xff             	SUBLW	0xff
0024ee   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0024f0   5089     movf    0x89, 0x0, 0x0   	MOVF	_LATA, W
0024f2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0024f4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0024f6   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
0024f8   6e89     movwf   0x89, 0x0        	MOVWF	_LATA
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
0024fa   d0c6     bra     0x002688         	BRA	_00227_DS_
                                           _00210_DS_:
                                           ;	.line	61; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATB=LATB | mask[pin]; 
0024fc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0024fe   e015     bz      0x00252a         	BZ	_00212_DS_
002500   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002502   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002504   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002506   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002508   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
00250a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00250c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00250e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002510   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002512   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002514   fff6
002516   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002518   fff7
00251a   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00251c   fff8
00251e   0009     tblrd*+                  	TBLRD*+	
002520   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002522   f002
002524   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002526   128a     iorwf   0x8a, 0x1, 0x0   	IORWF	_LATB, F
002528   d0af     bra     0x002688         	BRA	_00227_DS_
                                           _00212_DS_:
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATB=LATB & (255-mask[pin]);
00252a   0e60     movlw   0x60             	MOVLW	LOW(_mask)
00252c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00252e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002530   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002532   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002534   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002536   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002538   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00253a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00253c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00253e   fff6
002540   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002542   fff7
002544   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002546   fff8
002548   0009     tblrd*+                  	TBLRD*+	
00254a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00254c   f002
00254e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002550   08ff     sublw   0xff             	SUBLW	0xff
002552   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002554   508a     movf    0x8a, 0x0, 0x0   	MOVF	_LATB, W
002556   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002558   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00255a   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
00255c   6e8a     movwf   0x8a, 0x0        	MOVWF	_LATB
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
00255e   d094     bra     0x002688         	BRA	_00227_DS_
                                           _00214_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATC=LATC | mask[pin];
002560   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002562   e015     bz      0x00258e         	BZ	_00216_DS_
002564   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002566   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002568   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00256a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00256c   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
00256e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002570   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002572   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002574   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002576   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002578   fff6
00257a   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00257c   fff7
00257e   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002580   fff8
002582   0009     tblrd*+                  	TBLRD*+	
002584   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002586   f002
002588   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00258a   128b     iorwf   0x8b, 0x1, 0x0   	IORWF	_LATC, F
00258c   d07d     bra     0x002688         	BRA	_00227_DS_
                                           _00216_DS_:
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATC=LATC & (255-mask[pin]);
00258e   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002590   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002592   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002594   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002596   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002598   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00259a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00259c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00259e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0025a0   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0025a2   fff6
0025a4   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0025a6   fff7
0025a8   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0025aa   fff8
0025ac   0009     tblrd*+                  	TBLRD*+	
0025ae   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0025b0   f002
0025b2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0025b4   08ff     sublw   0xff             	SUBLW	0xff
0025b6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0025b8   508b     movf    0x8b, 0x0, 0x0   	MOVF	_LATC, W
0025ba   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0025bc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0025be   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
0025c0   6e8b     movwf   0x8b, 0x0        	MOVWF	_LATC
                                           ;	.line	67; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
0025c2   d062     bra     0x002688         	BRA	_00227_DS_
                                           _00218_DS_:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATD=LATD | mask[pin]; 
0025c4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0025c6   e015     bz      0x0025f2         	BZ	_00220_DS_
0025c8   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0025ca   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0025cc   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0025ce   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0025d0   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0025d2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0025d4   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0025d6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0025d8   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0025da   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0025dc   fff6
0025de   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0025e0   fff7
0025e2   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0025e4   fff8
0025e6   0009     tblrd*+                  	TBLRD*+	
0025e8   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0025ea   f002
0025ec   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0025ee   128c     iorwf   0x8c, 0x1, 0x0   	IORWF	_LATD, F
0025f0   d04b     bra     0x002688         	BRA	_00227_DS_
                                           _00220_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATD=LATD & (255-mask[pin]);
0025f2   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0025f4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0025f6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0025f8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0025fa   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0025fc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0025fe   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002600   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002602   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002604   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002606   fff6
002608   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00260a   fff7
00260c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00260e   fff8
002610   0009     tblrd*+                  	TBLRD*+	
002612   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002614   f002
002616   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002618   08ff     sublw   0xff             	SUBLW	0xff
00261a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00261c   508c     movf    0x8c, 0x0, 0x0   	MOVF	_LATD, W
00261e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002620   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002622   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
002624   6e8c     movwf   0x8c, 0x0        	MOVWF	_LATD
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
002626   d030     bra     0x002688         	BRA	_00227_DS_
                                           _00222_DS_:
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATE=LATE | mask[pin]; 
002628   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00262a   e015     bz      0x002656         	BZ	_00224_DS_
00262c   0e60     movlw   0x60             	MOVLW	LOW(_mask)
00262e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002630   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002632   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002634   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002636   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002638   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00263a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00263c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00263e   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002640   fff6
002642   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002644   fff7
002646   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002648   fff8
00264a   0009     tblrd*+                  	TBLRD*+	
00264c   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00264e   f001
002650   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002652   128d     iorwf   0x8d, 0x1, 0x0   	IORWF	_LATE, F
002654   d019     bra     0x002688         	BRA	_00227_DS_
                                           _00224_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATE=LATE & (255-mask[pin]);
002656   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002658   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00265a   0e60     movlw   0x60             	MOVLW	LOW(_mask)
00265c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00265e   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002660   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002662   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002664   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002666   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002668   fff6
00266a   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00266c   fff7
00266e   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002670   fff8
002672   0009     tblrd*+                  	TBLRD*+	
002674   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
002676   f000
002678   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00267a   08ff     sublw   0xff             	SUBLW	0xff
00267c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00267e   508d     movf    0x8d, 0x0, 0x0   	MOVF	_LATE, W
002680   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002682   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002684   1401     andwf   0x01, 0x0, 0x0   	ANDWF	r0x01, W
002686   6e8d     movwf   0x8d, 0x0        	MOVWF	_LATE
                                           _00227_DS_:
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	}
002688   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00268a   f004
00268c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00268e   f003
002690   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002692   f002
002694   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002696   f001
002698   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00269a   f000
00269c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00269e   ffd9
0026a0   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__pinmode	code
                                           _pinmode:
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	void pinmode(u8 pin, u8 state)
0026a2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0026a4   ffe5
0026a6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0026a8   ffd9
0026aa   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0026ac   ffe5
0026ae   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0026b0   ffe5
0026b2   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0026b4   ffe5
0026b6   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0026b8   ffe5
0026ba   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0026bc   ffe5
0026be   0e02     movlw   0x02             	MOVLW	0x02
0026c0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0026c2   f000
0026c4   0e03     movlw   0x03             	MOVLW	0x03
0026c6   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0026c8   f001
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	switch (port[pin])
0026ca   0e7e     movlw   0x7e             	MOVLW	LOW(_port)
0026cc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0026ce   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0026d0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0026d2   0e3a     movlw   0x3a             	MOVLW	HIGH(_port)
0026d4   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0026d6   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0026d8   0e00     movlw   0x00             	MOVLW	UPPER(_port)
0026da   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0026dc   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0026de   fff6
0026e0   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0026e2   fff7
0026e4   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0026e6   fff8
0026e8   0009     tblrd*+                  	TBLRD*+	
0026ea   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0026ec   f002
0026ee   0e05     movlw   0x05             	MOVLW	0x05
0026f0   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
0026f2   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0026f4   d111     bra     0x002918         	BRA	_00180_DS_
0026f6   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0026f8   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0026fa   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
0026fc   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0026fe   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
002700   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002702   0bfc     andlw   0xfc             	ANDLW	0xfc
002704   0f14     addlw   0x14             	ADDLW	LOW(_00201_DS_)
002706   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002708   0e27     movlw   0x27             	MOVLW	HIGH(_00201_DS_)
00270a   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00270c   0e00     movlw   0x00             	MOVLW	UPPER(_00201_DS_)
00270e   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
002710   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
002712   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00201_DS_:
002714   ef94     goto    0x002728         	GOTO	_00159_DS_
002716   f013
002718   efc6     goto    0x00278c         	GOTO	_00163_DS_
00271a   f013
00271c   eff8     goto    0x0027f0         	GOTO	_00167_DS_
00271e   f013
002720   ef2a     goto    0x002854         	GOTO	_00171_DS_
002722   f014
002724   ef5c     goto    0x0028b8         	GOTO	_00175_DS_
002726   f014
                                           _00159_DS_:
                                           ;	.line	49; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISA=TRISA | mask[pin];
002728   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00272a   e015     bz      0x002756         	BZ	_00161_DS_
00272c   0e60     movlw   0x60             	MOVLW	LOW(_mask)
00272e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002730   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002732   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002734   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002736   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002738   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00273a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00273c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00273e   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002740   fff6
002742   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002744   fff7
002746   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002748   fff8
00274a   0009     tblrd*+                  	TBLRD*+	
00274c   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00274e   f002
002750   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002752   1292     iorwf   0x92, 0x1, 0x0   	IORWF	_TRISA, F
002754   d0e1     bra     0x002918         	BRA	_00180_DS_
                                           _00161_DS_:
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISA=TRISA & (255-mask[pin]);
002756   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002758   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00275a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00275c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00275e   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002760   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002762   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002764   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002766   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002768   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00276a   fff6
00276c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00276e   fff7
002770   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002772   fff8
002774   0009     tblrd*+                  	TBLRD*+	
002776   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002778   f002
00277a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00277c   08ff     sublw   0xff             	SUBLW	0xff
00277e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002780   5092     movf    0x92, 0x0, 0x0   	MOVF	_TRISA, W
002782   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002784   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002786   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
002788   6e92     movwf   0x92, 0x0        	MOVWF	_TRISA
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
00278a   d0c6     bra     0x002918         	BRA	_00180_DS_
                                           _00163_DS_:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISB=TRISB | mask[pin];
00278c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00278e   e015     bz      0x0027ba         	BZ	_00165_DS_
002790   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002792   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002794   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002796   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002798   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
00279a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00279c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00279e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0027a0   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0027a2   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0027a4   fff6
0027a6   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0027a8   fff7
0027aa   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0027ac   fff8
0027ae   0009     tblrd*+                  	TBLRD*+	
0027b0   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0027b2   f002
0027b4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0027b6   1293     iorwf   0x93, 0x1, 0x0   	IORWF	_TRISB, F
0027b8   d0af     bra     0x002918         	BRA	_00180_DS_
                                           _00165_DS_:
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISB=TRISB & (255-mask[pin]);
0027ba   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0027bc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0027be   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0027c0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0027c2   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0027c4   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0027c6   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0027c8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0027ca   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0027cc   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0027ce   fff6
0027d0   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0027d2   fff7
0027d4   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0027d6   fff8
0027d8   0009     tblrd*+                  	TBLRD*+	
0027da   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0027dc   f002
0027de   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0027e0   08ff     sublw   0xff             	SUBLW	0xff
0027e2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0027e4   5093     movf    0x93, 0x0, 0x0   	MOVF	_TRISB, W
0027e6   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0027e8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0027ea   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
0027ec   6e93     movwf   0x93, 0x0        	MOVWF	_TRISB
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
0027ee   d094     bra     0x002918         	BRA	_00180_DS_
                                           _00167_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISC=TRISC | mask[pin];
0027f0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0027f2   e015     bz      0x00281e         	BZ	_00169_DS_
0027f4   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0027f6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0027f8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0027fa   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0027fc   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0027fe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002800   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002802   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002804   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002806   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002808   fff6
00280a   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00280c   fff7
00280e   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002810   fff8
002812   0009     tblrd*+                  	TBLRD*+	
002814   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002816   f002
002818   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00281a   1294     iorwf   0x94, 0x1, 0x0   	IORWF	_TRISC, F
00281c   d07d     bra     0x002918         	BRA	_00180_DS_
                                           _00169_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISC=TRISC & (255-mask[pin]);
00281e   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002820   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002822   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002824   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002826   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002828   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00282a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00282c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00282e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002830   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002832   fff6
002834   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002836   fff7
002838   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00283a   fff8
00283c   0009     tblrd*+                  	TBLRD*+	
00283e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002840   f002
002842   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002844   08ff     sublw   0xff             	SUBLW	0xff
002846   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002848   5094     movf    0x94, 0x0, 0x0   	MOVF	_TRISC, W
00284a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00284c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00284e   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
002850   6e94     movwf   0x94, 0x0        	MOVWF	_TRISC
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
002852   d062     bra     0x002918         	BRA	_00180_DS_
                                           _00171_DS_:
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISD=TRISD | mask[pin];
002854   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002856   e015     bz      0x002882         	BZ	_00173_DS_
002858   0e60     movlw   0x60             	MOVLW	LOW(_mask)
00285a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00285c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00285e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002860   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
002862   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002864   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002866   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002868   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00286a   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00286c   fff6
00286e   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002870   fff7
002872   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002874   fff8
002876   0009     tblrd*+                  	TBLRD*+	
002878   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00287a   f002
00287c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00287e   1295     iorwf   0x95, 0x1, 0x0   	IORWF	_TRISD, F
002880   d04b     bra     0x002918         	BRA	_00180_DS_
                                           _00173_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISD=TRISD & (255-mask[pin]);
002882   0e60     movlw   0x60             	MOVLW	LOW(_mask)
002884   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002886   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002888   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00288a   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
00288c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00288e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002890   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002892   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002894   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002896   fff6
002898   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00289a   fff7
00289c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00289e   fff8
0028a0   0009     tblrd*+                  	TBLRD*+	
0028a2   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0028a4   f002
0028a6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0028a8   08ff     sublw   0xff             	SUBLW	0xff
0028aa   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0028ac   5095     movf    0x95, 0x0, 0x0   	MOVF	_TRISD, W
0028ae   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0028b0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0028b2   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
0028b4   6e95     movwf   0x95, 0x0        	MOVWF	_TRISD
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
0028b6   d030     bra     0x002918         	BRA	_00180_DS_
                                           _00175_DS_:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISE=TRISE | mask[pin];
0028b8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0028ba   e015     bz      0x0028e6         	BZ	_00177_DS_
0028bc   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0028be   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0028c0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0028c2   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0028c4   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0028c6   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0028c8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0028ca   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0028cc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0028ce   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0028d0   fff6
0028d2   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0028d4   fff7
0028d6   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0028d8   fff8
0028da   0009     tblrd*+                  	TBLRD*+	
0028dc   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0028de   f001
0028e0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0028e2   1296     iorwf   0x96, 0x1, 0x0   	IORWF	_TRISE, F
0028e4   d019     bra     0x002918         	BRA	_00180_DS_
                                           _00177_DS_:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISE=TRISE & (255-mask[pin]);
0028e6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0028e8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0028ea   0e60     movlw   0x60             	MOVLW	LOW(_mask)
0028ec   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0028ee   0e3a     movlw   0x3a             	MOVLW	HIGH(_mask)
0028f0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0028f2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0028f4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0028f6   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0028f8   fff6
0028fa   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0028fc   fff7
0028fe   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002900   fff8
002902   0009     tblrd*+                  	TBLRD*+	
002904   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
002906   f000
002908   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00290a   08ff     sublw   0xff             	SUBLW	0xff
00290c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00290e   5096     movf    0x96, 0x0, 0x0   	MOVF	_TRISE, W
002910   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002912   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002914   1401     andwf   0x01, 0x0, 0x0   	ANDWF	r0x01, W
002916   6e96     movwf   0x96, 0x0        	MOVWF	_TRISE
                                           _00180_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	}
002918   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00291a   f004
00291c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00291e   f003
002920   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002922   f002
002924   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002926   f001
002928   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00292a   f000
00292c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00292e   ffd9
002930   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__Delayms	code
                                           _Delayms:
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/delayms.c	void Delayms(u16 milliseconds)
0048a8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0048aa   ffe5
0048ac   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0048ae   ffd9
0048b0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0048b2   ffe5
0048b4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0048b6   ffe5
0048b8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0048ba   ffe5
0048bc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0048be   ffe5
0048c0   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0048c2   ffe5
0048c4   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0048c6   ffe5
0048c8   0e02     movlw   0x02             	MOVLW	0x02
0048ca   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0048cc   f000
0048ce   0e03     movlw   0x03             	MOVLW	0x03
0048d0   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0048d2   f001
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/core/delayms.c	u16 n100tcy = System_getPeripheralFrequency() / 100000;
0048d4   ecae     call    0x002d5c, 0x0    	CALL	_System_getCpuFrequency
0048d6   f016
0048d8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0048da   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0048dc   f003
0048de   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
0048e0   f004
0048e2   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
0048e4   f005
0048e6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0048e8   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
0048ea   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
0048ec   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0048ee   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0048f0   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0048f2   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
0048f4   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
0048f6   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0048f8   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0048fa   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0048fc   0e01     movlw   0x01             	MOVLW	0x01
0048fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004900   0e86     movlw   0x86             	MOVLW	0x86
004902   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004904   0ea0     movlw   0xa0             	MOVLW	0xa0
004906   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004908   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00490a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00490c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00490e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004910   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004912   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004914   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004916   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004918   ec8f     call    0x003f1e, 0x0    	CALL	__divulong
00491a   f01f
00491c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00491e   0e08     movlw   0x08             	MOVLW	0x08
004920   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00151_DS_:
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/delayms.c	while (milliseconds--)
004922   c000     movff   0x000, 0x004     	MOVFF	r0x00, r0x04
004924   f004
004926   c001     movff   0x001, 0x005     	MOVFF	r0x01, r0x05
004928   f005
00492a   0eff     movlw   0xff             	MOVLW	0xff
00492c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00492e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004930   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004932   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
004934   e008     bz      0x004946         	BZ	_00154_DS_
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/delayms.c	delay100tcy(n100tcy-3);
004936   c002     movff   0x002, 0x004     	MOVFF	r0x02, r0x04
004938   f004
00493a   0efd     movlw   0xfd             	MOVLW	0xfd
00493c   2604     addwf   0x04, 0x1, 0x0   	ADDWF	r0x04, F
00493e   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004940   eca0     call    0x003b40, 0x0    	CALL	_delay100tcy
004942   f01d
004944   d7ee     bra     0x004922         	BRA	_00151_DS_
                                           _00154_DS_:
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/core/delayms.c	}
004946   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004948   f005
00494a   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00494c   f004
00494e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004950   f003
004952   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004954   f002
004956   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004958   f001
00495a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00495c   f000
00495e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004960   ffd9
004962   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__System_getCpuFrequency	code
                                           _System_getCpuFrequency:
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u32 System_getCpuFrequency() 
002d5c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002d5e   ffe5
002d60   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002d62   ffe5
002d64   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002d66   ffe5
002d68   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002d6a   ffe5
002d6c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002d6e   ffe5
002d70   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
002d72   ffe5
                                           ;	.line	242; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 0)
002d74   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
002d76   0b03     andlw   0x03             	ANDLW	0x03
002d78   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002d7a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002d7c   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
002d7e   d091     bra     0x002ea2         	BRA	_00116_DS_
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV  = ( System_readFlashMemory(__CONFIG1L) & 0b00011000 ) >> 3;
002d80   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d82   0e30     movlw   0x30             	MOVLW	0x30
002d84   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002d86   0e00     movlw   0x00             	MOVLW	0x00
002d88   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d8a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d8c   ecbd     call    0x004b7a, 0x0    	CALL	_System_readFlashMemory
002d8e   f025
002d90   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002d92   0e04     movlw   0x04             	MOVLW	0x04
002d94   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002d96   0e18     movlw   0x18             	MOVLW	0x18
002d98   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
002d9a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002d9c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002d9e   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002da0   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
002da2   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002da4   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002da6   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
002da8   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002daa   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002dac   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
                                           ;	.line	269; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV_XTAL = cpudiv_xtal[CPUDIV];
002dae   0e3c     movlw   0x3c             	MOVLW	LOW(_cpudiv_xtal)
002db0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002db2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002db4   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002db6   0e3a     movlw   0x3a             	MOVLW	HIGH(_cpudiv_xtal)
002db8   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002dba   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002dbc   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv_xtal)
002dbe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002dc0   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002dc2   fff6
002dc4   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002dc6   fff7
002dc8   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002dca   fff8
002dcc   0009     tblrd*+                  	TBLRD*+	
002dce   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002dd0   f001
                                           ;	.line	270; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc  = System_readFlashMemory(__CONFIG1H) & 0b00001111;
002dd2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dd4   0e30     movlw   0x30             	MOVLW	0x30
002dd6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002dd8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dda   0e01     movlw   0x01             	MOVLW	0x01
002ddc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002dde   ecbd     call    0x004b7a, 0x0    	CALL	_System_readFlashMemory
002de0   f025
002de2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002de4   0e04     movlw   0x04             	MOVLW	0x04
002de6   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002de8   0e0f     movlw   0x0f             	MOVLW	0x0f
002dea   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV = cpudiv[CPUDIV];
002dec   0e38     movlw   0x38             	MOVLW	LOW(_cpudiv)
002dee   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002df0   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002df2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002df4   0e3a     movlw   0x3a             	MOVLW	HIGH(_cpudiv)
002df6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002df8   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002dfa   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv)
002dfc   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
002dfe   c003     movff   0x003, 0xff6     	MOVFF	r0x03, TBLPTRL
002e00   fff6
002e02   c004     movff   0x004, 0xff7     	MOVFF	r0x04, TBLPTRH
002e04   fff7
002e06   c005     movff   0x005, 0xff8     	MOVFF	r0x05, TBLPTRU
002e08   fff8
002e0a   0009     tblrd*+                  	TBLRD*+	
002e0c   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
002e0e   f000
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc >>=1;
002e10   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002e12   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
                                           ;	.line	293; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if( (fosc==0) || (fosc==2) || (fosc==6) )
002e14   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002e16   e006     bz      0x002e24         	BZ	_00110_DS_
002e18   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002e1a   0a02     xorlw   0x02             	XORLW	0x02
002e1c   e003     bz      0x002e24         	BZ	_00110_DS_
002e1e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002e20   0a06     xorlw   0x06             	XORLW	0x06
002e22   e11f     bnz     0x002e62         	BNZ	_00111_DS_
                                           _00110_DS_:
                                           ;	.line	295; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return CRYSTAL / CPUDIV_XTAL;
002e24   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e26   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e28   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e2a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002e2c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e2e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e30   0e7a     movlw   0x7a             	MOVLW	0x7a
002e32   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e34   0e12     movlw   0x12             	MOVLW	0x12
002e36   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e38   0e00     movlw   0x00             	MOVLW	0x00
002e3a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e3c   ec84     call    0x003308, 0x0    	CALL	__divslong
002e3e   f019
002e40   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002e42   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
002e44   f002
002e46   cff4     movff   0xff4, 0x003     	MOVFF	PRODH, r0x03
002e48   f003
002e4a   cfe9     movff   0xfe9, 0x004     	MOVFF	FSR0L, r0x04
002e4c   f004
002e4e   0e08     movlw   0x08             	MOVLW	0x08
002e50   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002e52   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002e54   ffe9
002e56   c003     movff   0x003, 0xff4     	MOVFF	r0x03, PRODH
002e58   fff4
002e5a   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
002e5c   fff3
002e5e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002e60   d064     bra     0x002f2a         	BRA	_00121_DS_
                                           _00111_DS_:
                                           ;	.line	299; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 96000000UL / CPUDIV;
002e62   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e64   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e66   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e68   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002e6a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e6c   0e05     movlw   0x05             	MOVLW	0x05
002e6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e70   0eb8     movlw   0xb8             	MOVLW	0xb8
002e72   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e74   0ed8     movlw   0xd8             	MOVLW	0xd8
002e76   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e78   0e00     movlw   0x00             	MOVLW	0x00
002e7a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e7c   ec8f     call    0x003f1e, 0x0    	CALL	__divulong
002e7e   f01f
002e80   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002e82   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
002e84   f001
002e86   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
002e88   f002
002e8a   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
002e8c   f003
002e8e   0e08     movlw   0x08             	MOVLW	0x08
002e90   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002e92   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002e94   ffe9
002e96   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
002e98   fff4
002e9a   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
002e9c   fff3
002e9e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002ea0   d044     bra     0x002f2a         	BRA	_00121_DS_
                                           _00116_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 1)
002ea2   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
002ea4   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002ea6   0a01     xorlw   0x01             	XORLW	0x01
002ea8   e106     bnz     0x002eb6         	BNZ	_00118_DS_
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 32768;
002eaa   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
002eac   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
002eae   0e80     movlw   0x80             	MOVLW	0x80
002eb0   6ef3     movwf   0xf3, 0x0        	MOVWF	PRODL
002eb2   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
002eb4   d03a     bra     0x002f2a         	BRA	_00121_DS_
                                           _00118_DS_:
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS >= 2)
002eb6   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
002eb8   0b03     andlw   0x03             	ANDLW	0x03
002eba   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002ebc   0e02     movlw   0x02             	MOVLW	0x02
002ebe   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
002ec0   e330     bnc     0x002f22         	BNC	_00120_DS_
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ircf[OSCCONbits.IRCF];
002ec2   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
002ec4   38e8     swapf   0xe8, 0x0, 0x0   	SWAPF	WREG, W
002ec6   0b07     andlw   0x07             	ANDLW	0x07
002ec8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002eca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ecc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002ece   0e04     movlw   0x04             	MOVLW	0x04
002ed0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ed2   ecfd     call    0x004ffa, 0x0    	CALL	__mulint
002ed4   f027
002ed6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002ed8   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
002eda   f001
002edc   0e04     movlw   0x04             	MOVLW	0x04
002ede   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002ee0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002ee2   0e40     movlw   0x40             	MOVLW	LOW(_ircf)
002ee4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002ee6   0e3a     movlw   0x3a             	MOVLW	HIGH(_ircf)
002ee8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002eea   0e00     movlw   0x00             	MOVLW	UPPER(_ircf)
002eec   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002eee   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002ef0   fff6
002ef2   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002ef4   fff7
002ef6   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002ef8   fff8
002efa   0009     tblrd*+                  	TBLRD*+	
002efc   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
002efe   f000
002f00   0009     tblrd*+                  	TBLRD*+	
002f02   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002f04   f001
002f06   0009     tblrd*+                  	TBLRD*+	
002f08   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002f0a   f002
002f0c   0009     tblrd*+                  	TBLRD*+	
002f0e   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
002f10   f003
002f12   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002f14   ffe9
002f16   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
002f18   fff4
002f1a   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
002f1c   fff3
002f1e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002f20   d004     bra     0x002f2a         	BRA	_00121_DS_
                                           _00120_DS_:
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 0;
002f22   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
002f24   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
002f26   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
002f28   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00121_DS_:
                                           ;	.line	320; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	}
002f2a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
002f2c   f005
002f2e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002f30   f004
002f32   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002f34   f003
002f36   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002f38   f002
002f3a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002f3c   f001
002f3e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002f40   f000
002f42   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_tortucaro__System_readFlashMemory	code
                                           _System_readFlashMemory:
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u16 System_readFlashMemory(u32 address)
004b7a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004b7c   ffe5
004b7e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004b80   ffd9
004b82   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004b84   ffe5
004b86   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004b88   ffe5
004b8a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004b8c   ffe5
004b8e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004b90   ffe5
004b92   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004b94   ffe5
004b96   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004b98   ffe5
004b9a   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004b9c   ffe5
004b9e   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004ba0   ffe5
004ba2   0e02     movlw   0x02             	MOVLW	0x02
004ba4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004ba6   f000
004ba8   0e03     movlw   0x03             	MOVLW	0x03
004baa   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004bac   f001
004bae   0e04     movlw   0x04             	MOVLW	0x04
004bb0   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004bb2   f002
004bb4   0e05     movlw   0x05             	MOVLW	0x05
004bb6   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
004bb8   f003
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRU = address >> 16;
004bba   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004bbc   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
004bbe   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004bc0   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
004bc2   6a06     clrf    0x06, 0x0        	CLRF	r0x06
004bc4   6a07     clrf    0x07, 0x0        	CLRF	r0x07
004bc6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004bc8   6ef8     movwf   0xf8, 0x0        	MOVWF	_TBLPTRU
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRH = address >> 8;
004bca   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004bcc   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
004bce   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004bd0   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
004bd2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
004bd4   6a05     clrf    0x05, 0x0        	CLRF	r0x05
004bd6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004bd8   6ef7     movwf   0xf7, 0x0        	MOVWF	_TBLPTRH
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRL = address;
004bda   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004bdc   6ef6     movwf   0xf6, 0x0        	MOVWF	_TBLPTRL
004bde   0009     tblrd*+                  	tblrd*+
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	l8 = TABLAT;
004be0   cff5     movff   0xff5, 0x000     	MOVFF	_TABLAT, r0x00
004be2   f000
004be4   0009     tblrd*+                  	tblrd*+
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	h8 = TABLAT;
004be6   cff5     movff   0xff5, 0x001     	MOVFF	_TABLAT, r0x01
004be8   f001
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ((h8 << 8) + l8);
004bea   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004bec   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004bee   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
004bf0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004bf2   6a05     clrf    0x05, 0x0        	CLRF	r0x05
004bf4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004bf6   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
004bf8   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
004bfa   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
004bfc   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
004bfe   fff3
004c00   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ;	.line	203; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	}
004c02   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004c04   f007
004c06   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004c08   f006
004c0a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004c0c   f005
004c0e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004c10   f004
004c12   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004c14   f003
004c16   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004c18   f002
004c1a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004c1c   f001
004c1e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004c20   f000
004c22   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c24   ffd9
004c26   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block for Ival
                                           	code
                                           _cpudiv:
003a38   0302     mulwf   0x02, 0x1        	DB	0x02, 0x03, 0x04, 0x06
003a3a   0604     decf    0x04, 0x1, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _cpudiv_xtal:
003a3c   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x03, 0x04
003a3e   0403     decf    0x03, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _ircf:
003a40   7a12     btg     0x12, 0x5, 0x0   	DB	0x12, 0x7a, 0x00, 0x00, 0x48, 0xe8, 0x01, 0x00, 0x90, 0xd0, 0x03, 0x00
003a42   0000     nop                      
003a44   e848     dw      0xe848           
003a46   0001     halt                     
003a48   d090     bra     0x003b6a         
003a4a   0003     sleep                    
003a4c   a120     btfss   0x20, 0x0, 0x1   	DB	0x20, 0xa1, 0x07, 0x00, 0x40, 0x42, 0x0f, 0x00, 0x80, 0x84, 0x1e, 0x00
003a4e   0007     daw                      
003a50   4240     rrncf   0x40, 0x1, 0x0   
003a52   000f     tblwt+*                  
003a54   8480     bsf     0x80, 0x2, 0x0   
003a56   001e     dw      0x001e           
003a58   0900     iorlw   0x00             	DB	0x00, 0x09, 0x3d, 0x00, 0x00, 0x12, 0x7a, 0x00
003a5a   003d     dw      0x003d           
003a5c   1200     iorwf   0x00, 0x1, 0x0   
003a5e   007a     dw      0x007a           
                                           ; ; Starting pCode block for Ival
                                           _mask:
003a60   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
003a62   0804     sublw   0x04             
003a64   2010     addwfc  0x10, 0x0, 0x0   
003a66   8040     bsf     0x40, 0x0, 0x0   
003a68   8040     bsf     0x40, 0x0, 0x0   
003a6a   0201     mulwf   0x01, 0x0        
003a6c   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
003a6e   0402     decf    0x02, 0x0, 0x0   
003a70   2008     addwfc  0x08, 0x0, 0x0   
003a72   0201     mulwf   0x01, 0x0        
003a74   0104     movlb   0x4              
003a76   0402     decf    0x02, 0x0, 0x0   
003a78   1008     iorwf   0x08, 0x0, 0x0   	DB	0x08, 0x10, 0x20, 0x40, 0x80, 0x10
003a7a   4020     rrncf   0x20, 0x0, 0x0   
003a7c   1080     iorwf   0x80, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _port:
003a7e   0101     movlb   0x1              	DB	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02
003a80   0101     movlb   0x1              
003a82   0101     movlb   0x1              
003a84   0101     movlb   0x1              
003a86   0202     mulwf   0x02, 0x0        
003a88   0202     mulwf   0x02, 0x0        
003a8a   0002     dw      0x0002           	DB	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
003a8c   0000     nop                      
003a8e   0000     nop                      
003a90   0404     decf    0x04, 0x0, 0x0   
003a92   0304     mulwf   0x04, 0x1        
003a94   0303     mulwf   0x03, 0x1        
003a96   0303     mulwf   0x03, 0x1        	DB	0x03, 0x03, 0x03, 0x03, 0x03, 0x00
003a98   0303     mulwf   0x03, 0x1        
003a9a   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _libdevice_descriptor:
003a9c   0112     dw      0x0112           	DB	0x12, 0x01, 0x00, 0x02, 0x02, 0x00, 0x00, 0x40, 0xd8, 0x04, 0xab, 0xfe
003a9e   0200     mulwf   0x00, 0x0        
003aa0   0002     dw      0x0002           
003aa2   4000     rrncf   0x00, 0x0, 0x0   
003aa4   04d8     decf    0xd8, 0x0, 0x0   
003aa6   feab     dw      0xfeab           
003aa8   0000     nop                      	DB	0x00, 0x00, 0x01, 0x02, 0x00, 0x01
003aaa   0201     mulwf   0x01, 0x0        
003aac   0100     movlb   0x0              
                                           ; ; Starting pCode block for Ival
                                           _libconfiguration_descriptor:
003aae   0209     mulwf   0x09, 0x0        	DB	0x09, 0x02, 0x43, 0x00, 0x02, 0x01, 0x00, 0xc0, 0x14, 0x09, 0x04, 0x00
003ab0   0043     dw      0x0043           
003ab2   0102     movlb   0x2              
003ab4   c000     dw      0xc000           
003ab6   0914     iorlw   0x14             
003ab8   0004     clrwdt                   
003aba   0100     movlb   0x0              	DB	0x00, 0x01, 0x02, 0x02, 0x01, 0x00, 0x05, 0x24, 0x00, 0x10, 0x01, 0x04
003abc   0202     mulwf   0x02, 0x0        
003abe   0001     halt                     
003ac0   2405     addwf   0x05, 0x0, 0x0   
003ac2   1000     iorwf   0x00, 0x0, 0x0   
003ac4   0401     decf    0x01, 0x0, 0x0   
003ac6   0224     mulwf   0x24, 0x0        	DB	0x24, 0x02, 0x00, 0x05, 0x24, 0x06, 0x00, 0x01, 0x05, 0x24, 0x01, 0x00
003ac8   0500     decf    0x00, 0x0, 0x1   
003aca   0624     decf    0x24, 0x1, 0x0   
003acc   0100     movlb   0x0              
003ace   2405     addwf   0x05, 0x0, 0x0   
003ad0   0001     halt                     
003ad2   0701     decf    0x01, 0x1, 0x1   	DB	0x01, 0x07, 0x05, 0x82, 0x03, 0x10, 0x00, 0x02, 0x09, 0x04, 0x01, 0x00
003ad4   8205     bsf     0x05, 0x1, 0x0   
003ad6   1003     iorwf   0x03, 0x0, 0x0   
003ad8   0200     mulwf   0x00, 0x0        
003ada   0409     decf    0x09, 0x0, 0x0   
003adc   0001     halt                     
003ade   0a02     xorlw   0x02             	DB	0x02, 0x0a, 0x00, 0x00, 0x00, 0x07, 0x05, 0x03, 0x02, 0x40, 0x00, 0x00
003ae0   0000     nop                      
003ae2   0700     decf    0x00, 0x1, 0x1   
003ae4   0305     mulwf   0x05, 0x1        
003ae6   4002     rrncf   0x02, 0x0, 0x0   
003ae8   0000     nop                      
003aea   0507     decf    0x07, 0x0, 0x1   	DB	0x07, 0x05, 0x83, 0x02, 0x40, 0x00, 0x00
003aec   0283     mulwf   0x83, 0x0        
003aee   0040     dw      0x0040           
003af0   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _lang:
003af2   0304     mulwf   0x04, 0x1        	DB	0x04, 0x03, 0x09, 0x04
003af4   0409     decf    0x09, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _manu:
003af6   0316     mulwf   0x16, 0x1        	DB	0x16, 0x03, 0x4a, 0x00, 0x50, 0x00, 0x20, 0x00, 0x4d, 0x00, 0x41, 0x00
003af8   004a     dw      0x004a           
003afa   0050     dw      0x0050           
003afc   0020     dw      0x0020           
003afe   004d     dw      0x004d           
003b00   0041     dw      0x0041           
003b02   004e     dw      0x004e           	DB	0x4e, 0x00, 0x44, 0x00, 0x4f, 0x00, 0x4e, 0x00, 0x20, 0x00
003b04   0044     dw      0x0044           
003b06   004f     dw      0x004f           
003b08   004e     dw      0x004e           
003b0a   0020     dw      0x0020           
                                           ; ; Starting pCode block for Ival
                                           _prod:
003b0c   0312     mulwf   0x12, 0x1        	DB	0x12, 0x03, 0x50, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x67, 0x00, 0x75, 0x00
003b0e   0050     dw      0x0050           
003b10   0069     dw      0x0069           
003b12   006e     dw      0x006e           
003b14   0067     dw      0x0067           
003b16   0075     dw      0x0075           
003b18   0069     dw      0x0069           	DB	0x69, 0x00, 0x6e, 0x00, 0x6f, 0x00
003b1a   006e     dw      0x006e           
003b1c   006f     dw      0x006f           
                                           ; ; Starting pCode block for Ival
                                           _libstring_descriptor:
003b1e   3af2     swapf   0xf2, 0x1, 0x0   	DB	LOW(_lang), HIGH(_lang), UPPER(_lang), LOW(_manu), HIGH(_manu), UPPER(_manu), LOW(_prod), HIGH(_prod), UPPER(_prod)
003b20   f600     dw      0xf600           
003b22   003a     dw      0x003a           
003b24   3b0c     swapf   0x0c, 0x1, 0x1   
003b26   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_0:
003b28   0030     dw      0x0030           	DB	0x30, 0x00
                                           ; ; Starting pCode block
                                           ___str_1:
003b2a   0031     dw      0x0031           	DB	0x31, 0x00
                                           ; ; Starting pCode block
                                           ___str_2:
003b2c   0a66     xorlw   0x66             	DB	0x66, 0x0a, 0x00
003b2e   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_3:
003b30   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x61, 0x72, 0x6f, 0x20, 0x55, 0x53, 0x42, 0x20, 0x30, 0x32
003b32   7261     btg     0x61, 0x1, 0x0   
003b34   206f     addwfc  0x6f, 0x0, 0x0   
003b36   5355     movf    0x55, 0x1, 0x1   
003b38   2042     addwfc  0x42, 0x0, 0x0   
003b3a   3230     rrcf    0x30, 0x1, 0x0   
003b3c   0a20     xorlw   0x20             	DB	0x20, 0x0a, 0x00
003b3e   0000     nop                      


                                           ; Statistics:
                                           ; code size:	14688 (0x3960) bytes (11.21%)
                                           ;           	 7344 (0x1cb0) words
                                           ; udata size:	  794 (0x031a) bytes (44.31%)
                                           ; access size:	   10 (0x000a) bytes


                                           	end
