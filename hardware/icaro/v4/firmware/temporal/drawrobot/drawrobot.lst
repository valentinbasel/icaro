gplink-1.5.0 #1285 (Aug 10 2018)
Copyright (c) 1998-2016 gputils project
Listing File Generated: 27/12/18  13:02:59


Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.7.0 #10231 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	radix	dec


                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	___uflags
                                           	global	__i
                                           	global	_loopvar
                                           	global	_timingindex
                                           	global	__cpu_clock_
                                           	global	__entry
                                           	global	__startup
                                           	global	_main
                                           	global	_phase
                                           	global	_needreordering
                                           	global	_timedivision
                                           	global	_mascaratotal
                                           	global	_timevalue
                                           	global	_timings
                                           	global	_activatedservos
                                           	global	_servovalues
                                           	global	_maxminpos
                                           	global	_rx
                                           	global	_wpointer
                                           	global	_rpointer
                                           	global	_m1
                                           	global	_m2
                                           	global	_cantidad_p
                                           	global	_m1p
                                           	global	_m2p
                                           	global	_t
                                           	global	_System_readFlashMemory
                                           	global	_System_getCpuFrequency
                                           	global	_Delayms
                                           	global	_pinmode
                                           	global	_digitalwrite
                                           	global	_digitalread
                                           	global	_toggle
                                           	global	_servos_init
                                           	global	_ServoAttach
                                           	global	_ServoDetach
                                           	global	_ServoWrite
                                           	global	_ServoRead
                                           	global	_ServoMinimumPulse
                                           	global	_ServoMaximumPulse
                                           	global	_servos_interrupt
                                           	global	_analog_init
                                           	global	_analogreference
                                           	global	_analogread
                                           	global	_analogwrite_init
                                           	global	_analogwrite
                                           	global	_IO_init
                                           	global	_IO_digital
                                           	global	_Delayus
                                           	global	_setup
                                           	global	_sensordigital
                                           	global	_pprintf
                                           	global	_psprintf2
                                           	global	_psprintf
                                           	global	_Serial_begin
                                           	global	_serial_interrupt
                                           	global	_Serial_putchar
                                           	global	_Serial_read
                                           	global	_Serial_print
                                           	global	_Serial_println
                                           	global	_Serial_printNumber
                                           	global	_Serial_printf
                                           	global	_at
                                           	global	_ad
                                           	global	_iz
                                           	global	_de
                                           	global	_convert_ascii
                                           	global	_pot
                                           	global	_convertir_numero
                                           	global	_loop
                                           	global	_high_priority_isr
                                           	global	_low_priority_isr
                                           	global	_mask
                                           	global	_port

                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget3
                                           	extern	__gptrput1
                                           	extern	__gptrput3
                                           	extern	__gptrget1
                                           	extern	__gptrget4
                                           	extern	__gptrget2
                                           	extern	_SPPDATAbits
                                           	extern	_SPPCFGbits
                                           	extern	_SPPEPSbits
                                           	extern	_SPPCONbits
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_LATDbits
                                           	extern	_LATEbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_FSR2Hbits
                                           	extern	_BSRbits
                                           	extern	_FSR1Hbits
                                           	extern	_FSR0Hbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_TBLPTRUbits
                                           	extern	_PCLATHbits
                                           	extern	_PCLATUbits
                                           	extern	_STKPTRbits
                                           	extern	_TOSUbits
                                           	extern	_stack_end
                                           	extern	_SPPDATA
                                           	extern	_SPPCFG
                                           	extern	_SPPEPS
                                           	extern	_SPPCON
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_LATD
                                           	extern	_LATE
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	__divslong
                                           	extern	__divulong
                                           	extern	__mulint
                                           	extern	_delay100tcy
                                           	extern	__modulong
                                           	extern	__mullong
                                           	extern	___sint2fs
                                           	extern	___fslt
                                           	extern	_cinit

                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           INTCON	equ	0xff2
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TOSL	equ	0xffd
                                           TOSH	equ	0xffe
                                           TOSU	equ	0xfff
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           FSR2H	equ	0xfda
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4


                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           __i	db	0x00, 0x00
                                           _wpointer	db	0x01
                                           _rpointer	db	0x01
                                           _m1	db	0x01, 0x00, 0x02, 0x00, 0x04, 0x00, 0x08, 0x00
                                           _m2	db	0x10, 0x00, 0x20, 0x00, 0x40, 0x00, 0x80, 0x00
                                           _cantidad_p	db	0x04, 0x00
                                           _m1p	db	0x00, 0x00
                                           _m2p	db	0x00, 0x00
                                           _t	db	0x03, 0x00
                                           ___uflags	db	0x00


                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           r0x0e	res	1
                                           r0x0f	res	1
                                           r0x10	res	1
                                           r0x11	res	1
                                           r0x12	res	1
                                           r0x13	res	1
                                           r0x14	res	1
                                           r0x15	res	1
                                           r0x16	res	1
                                           r0x17	res	1
                                           r0x18	res	1
                                           r0x19	res	1
                                           r0x1a	res	1
                                           r0x1b	res	1
                                           r0x1c	res	1
                                           r0x1d	res	1
                                           r0x1e	res	1
                                           r0x1f	res	1

                                           udata_drawrobot_0	udata
                                           __cpu_clock_	res	4

                                           udata_drawrobot_1	udata
                                           _timingindex	res	1

                                           udata_drawrobot_2	udata
                                           _loopvar	res	1

                                           udata_drawrobot_3	udata
                                           _pputchar	res	3

                                           udata_drawrobot_4	udata
                                           _servovalues	res	30

                                           udata_drawrobot_5	udata
                                           _maxminpos	res	60

                                           udata_drawrobot_6	udata
                                           _activatedservos	res	5

                                           udata_drawrobot_7	udata
                                           _ServosPulseDown_timingindex_1_30	res	1

                                           udata_drawrobot_8	udata
                                           _timings	res	150

                                           udata_drawrobot_9	udata
                                           _timevalue	res	30

                                           udata_drawrobot_10	udata
                                           _SortServoTimings_t_1_35	res	1

                                           udata_drawrobot_11	udata
                                           _SortServoTimings_totalservos_1_35	res	1

                                           udata_drawrobot_12	udata
                                           _SortServoTimings_numservos_1_35	res	1

                                           udata_drawrobot_13	udata
                                           _SortServoTimings_s_1_35	res	1

                                           udata_drawrobot_14	udata
                                           _mascaratotal	res	5

                                           udata_drawrobot_15	udata
                                           _pprinti_buffer_1_159	res	12

                                           udata_drawrobot_16	udata
                                           _pprintfl_buffer_1_169	res	12

                                           udata_drawrobot_17	udata
                                           _pprintfl_tmp_1_169	res	12

                                           udata_drawrobot_18	udata
                                           _pprintfl_helper_1_169	res	4

                                           udata_drawrobot_19	udata
                                           _pprint_scr_1_185	res	2

                                           udata_drawrobot_20	udata
                                           _psprintf2_out_1_209	res	3

                                           udata_drawrobot_21	udata
                                           _rx	res	128

                                           udata_drawrobot_22	udata
                                           _Serial_printNumber_tmp_1_227	res	12

                                           udata_drawrobot_23	udata
                                           _Serial_printNumber_string_1_227	res	12

                                           udata_drawrobot_24	udata
                                           _convertir_numero_m_1_262	res	10

                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------

                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_drawrobot___entry	code	0X000C00
                                           __entry:
000c00   efb3     goto    0x005766         	goto	__startup
000c02   f02b
                                           	
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/source/drawrobot/crt0iz.c	}
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_drawrobot_ivec_0x1_high_priority_isr	code	0X000C08
                                           ivec_0x1_high_priority_isr:
000c08   efd1     goto    0x005fa2         	GOTO	_high_priority_isr
000c0a   f02f

                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_drawrobot_ivec_0x2_low_priority_isr	code	0X000C18
                                           ivec_0x2_low_priority_isr:
000c18   ef82     goto    0x006104         	GOTO	_low_priority_isr
000c1a   f030

                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_drawrobot__main	code
                                           _main:
                                           ;	.line	197; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	if (OSCCONbits.SCS > 0x01)
00662e   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
006630   0b03     andlw   0x03             	ANDLW	0x03
006632   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006634   0e02     movlw   0x02             	MOVLW	0x02
006636   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
006638   e302     bnc     0x00663e         	BNC	_01744_DS_
                                           _01740_DS_:
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	while (!OSCCONbits.IOFS);
00663a   a4d3     btfss   0xd3, 0x2, 0x0   	BTFSS	_OSCCONbits, 2
00663c   d7fe     bra     0x00663a         	BRA	_01740_DS_
                                           _01744_DS_:
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	IO_init();
00663e   ec2b     call    0x006656, 0x0    	CALL	_IO_init
006640   f033
                                           ;	.line	244; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	IO_digital();
006642   ec06     call    0x000c0c, 0x0    	CALL	_IO_digital
006644   f006
                                           ;	.line	288; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	servos_init();
006646   ec0a     call    0x005a14, 0x0    	CALL	_servos_init
006648   f02d
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	setup();
00664a   ec5a     call    0x0056b4, 0x0    	CALL	_setup
00664c   f02b
                                           _01746_DS_:
                                           ;	.line	327; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	loop();
00664e   ecbb     call    0x003576, 0x0    	CALL	_loop
006650   f01a
006652   d7fd     bra     0x00664e         	BRA	_01746_DS_
                                           ;	.line	330; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	}
006654   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__low_priority_isr	code
                                           _low_priority_isr:
                                           ;	.line	535; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	void low_priority_isr(void) __interrupt 2
006104   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
006106   ffe5
006108   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00610a   ffe5
00610c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00610e   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
006110   ffe5
006112   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
006114   ffe5
006116   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
006118   ffe5
00611a   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
00611c   ffe5
00611e   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
006120   ffe5
006122   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
006124   ffe5
006126   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006128   ffe5
00612a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00612c   ffd9
00612e   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
006130   ffe5
006132   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
006134   ffe5
006136   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
006138   ffe5
00613a   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
00613c   ffe5
                                           	
00613e   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
006140   fff5
006142   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
006144   fff8
006146   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
006148   fff7
00614a   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
00614c   fff6
                                           	
                                           ;	.line	565; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	}
00614e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006150   ffd9
006152   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
006154   fffb
006156   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
006158   fffa
00615a   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00615c   ffea
00615e   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
006160   ffe9
006162   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
006164   fff4
006166   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
006168   fff3
00616a   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
00616c   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
00616e   ffe0
006170   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
006172   ffd8
006174   0010     retfie  0x0              	RETFIE	

                                           ; ; Starting pCode block
                                           S_drawrobot__high_priority_isr	code
                                           _high_priority_isr:
                                           ;	.line	438; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	void high_priority_isr(void) __interrupt 1
005fa2   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
005fa4   ffe5
005fa6   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
005fa8   ffe5
005faa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005fac   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
005fae   ffe5
005fb0   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
005fb2   ffe5
005fb4   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
005fb6   ffe5
005fb8   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
005fba   ffe5
005fbc   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
005fbe   ffe5
005fc0   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
005fc2   ffe5
005fc4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005fc6   ffe5
005fc8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005fca   ffd9
005fcc   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
005fce   ffe5
005fd0   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
005fd2   ffe5
005fd4   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
005fd6   ffe5
005fd8   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
005fda   ffe5
                                           	
                                           ;	.line	463; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	serial_interrupt();
005fdc   ecf4     call    0x0061e8, 0x0    	CALL	_serial_interrupt
005fde   f030
                                           ;	.line	475; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	servos_interrupt();
005fe0   ec1d     call    0x00643a, 0x0    	CALL	_servos_interrupt
005fe2   f032
005fe4   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
005fe6   fff5
005fe8   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
005fea   fff8
005fec   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
005fee   fff7
005ff0   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
005ff2   fff6
                                           	
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/source/drawrobot/drawrobot.c	}
005ff4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005ff6   ffd9
005ff8   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
005ffa   fffb
005ffc   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
005ffe   fffa
006000   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
006002   ffea
006004   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
006006   ffe9
006008   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
00600a   fff4
00600c   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00600e   fff3
006010   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
006012   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
006014   ffe0
006016   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
006018   ffd8
00601a   0010     retfie  0x0              	RETFIE	

                                           ; ; Starting pCode block
                                           S_drawrobot___startup	code
                                           __startup:
                                           	;	Initialize the stack pointer
005766   ee14     lfsr    0x1, 0x4ff       	lfsr	1, _stack_end
005768   f0ff
00576a   ee24     lfsr    0x2, 0x4ff       	lfsr	2, _stack_end
00576c   f0ff
                                           	;	1st silicon does not do this on POR
00576e   6af8     clrf    0xf8, 0x0        	clrf	_TBLPTRU, 0
                                           	;	Initialize the flash memory access configuration.
                                           	;	This is harmless for non-flash devices, so we do it on all parts.
005770   8ea6     bsf     0xa6, 0x7, 0x0   	bsf	0xa6, 7, 0 ; EECON1.EEPGD = 1, TBLPTR accesses program memory
005772   9ca6     bcf     0xa6, 0x6, 0x0   	bcf	0xa6, 6, 0 ; EECON1.CFGS = 0, TBLPTR accesses program memory
                                           	;	Load FSR0 with top of RAM.
005774   0ebf     movlw   0xbf             	movlw	0xbf
005776   6ee9     movwf   0xe9, 0x0        	movwf	_FSR0L, 0
005778   0e0e     movlw   0x0e             	movlw	0x0e
00577a   6eea     movwf   0xea, 0x0        	movwf	_FSR0H, 0
                                           	;	Place 0xff at address 0x00 as a sentinel.
00577c   6800     setf    0x00, 0x0        	setf	0x00, 0
                                           clear_loop:
00577e   6aed     clrf    0xed, 0x0        	clrf	_POSTDEC0, 0
005780   5000     movf    0x00, 0x0, 0x0   	movf	0x00, w, 0
005782   e1fd     bnz     0x00577e         	bnz	clear_loop
                                           	;	TBLPTR = &cinit
005784   0ec0     movlw   0xc0             	movlw	low(_cinit)
005786   6ef6     movwf   0xf6, 0x0        	movwf	_TBLPTRL, 0
005788   0e67     movlw   0x67             	movlw	high(_cinit)
00578a   6ef7     movwf   0xf7, 0x0        	movwf	_TBLPTRH, 0
00578c   0e00     movlw   0x00             	movlw	upper(_cinit)
00578e   6ef8     movwf   0xf8, 0x0        	movwf	_TBLPTRU, 0
                                           	;	0x05 = cinit.num_init
005790   0009     tblrd*+                  	tblrd*+
005792   cff5     movff   0xff5, 0x005     	movff	_TABLAT, 0x05
005794   f005
005796   0009     tblrd*+                  	tblrd*+
005798   cff5     movff   0xff5, 0x006     	movff	_TABLAT, (0x05 + 1)
00579a   f006
                                           	;	while (0x05)
00579c   d034     bra     0x005806         	bra	entry_loop_dec
                                           entry_loop:
                                           	;	Count down so we only have to look up the data in _cinit once.
                                           	;	At this point we know that TBLPTR points to the top of the current
                                           	;	entry in _cinit, so we can just start reading the from, to, and
                                           	;	size values.
                                           	;	Read the source address low.
                                           	;	0x00 = 0x07 ->from;
00579e   0009     tblrd*+                  	tblrd*+
0057a0   cff5     movff   0xff5, 0x000     	movff	_TABLAT, 0x00
0057a2   f000
                                           	;	source address high
0057a4   0009     tblrd*+                  	tblrd*+
0057a6   cff5     movff   0xff5, 0x001     	movff	_TABLAT, (0x00 + 1)
0057a8   f001
                                           	;	source address upper
0057aa   0009     tblrd*+                  	tblrd*+
0057ac   cff5     movff   0xff5, 0x002     	movff	_TABLAT, (0x00 + 2)
0057ae   f002
                                           	;	Skip a byte since it is stored as a 32bit int.
0057b0   0009     tblrd*+                  	tblrd*+
                                           	;	Read the destination address directly into FSR0
                                           	;	destination address low.
                                           	;	FSR0 = (unsigned short)0x07 ->to;
0057b2   0009     tblrd*+                  	tblrd*+
0057b4   cff5     movff   0xff5, 0xfe9     	movff	_TABLAT, _FSR0L
0057b6   ffe9
                                           	;	destination address high
0057b8   0009     tblrd*+                  	tblrd*+
0057ba   cff5     movff   0xff5, 0xfea     	movff	_TABLAT, _FSR0H
0057bc   ffea
                                           	;	Skip two bytes since it is stored as a 32bit int.
0057be   0009     tblrd*+                  	tblrd*+
0057c0   0009     tblrd*+                  	tblrd*+
                                           	;	Read the size of data to transfer to destination address.
                                           	;	0x03 = (unsigned short)0x07 ->size;
0057c2   0009     tblrd*+                  	tblrd*+
0057c4   cff5     movff   0xff5, 0x003     	movff	_TABLAT, 0x03
0057c6   f003
0057c8   0009     tblrd*+                  	tblrd*+
0057ca   cff5     movff   0xff5, 0x004     	movff	_TABLAT, (0x03 + 1)
0057cc   f004
                                           	;	Skip two bytes since it is stored as a 32bit int.
0057ce   0009     tblrd*+                  	tblrd*+
0057d0   0009     tblrd*+                  	tblrd*+
                                           	;	0x00 = 0x07 ->from;
                                           	;	FSR0 = (unsigned short)0x07 ->to;
                                           	;	0x03 = (unsigned short)0x07 ->size;
                                           	;	The table pointer now points to the next entry. Save it
                                           	;	off since we will be using the table pointer to do the copying
                                           	;	for the entry.
                                           	;	0x07 = TBLPTR
0057d2   cff6     movff   0xff6, 0x007     	movff	_TBLPTRL, 0x07
0057d4   f007
0057d6   cff7     movff   0xff7, 0x008     	movff	_TBLPTRH, (0x07 + 1)
0057d8   f008
0057da   cff8     movff   0xff8, 0x009     	movff	_TBLPTRU, (0x07 + 2)
0057dc   f009
                                           	;	Now assign the source address to the table pointer.
                                           	;	TBLPTR = 0x00
0057de   c000     movff   0x000, 0xff6     	movff	0x00, _TBLPTRL
0057e0   fff6
0057e2   c001     movff   0x001, 0xff7     	movff	(0x00 + 1), _TBLPTRH
0057e4   fff7
0057e6   c002     movff   0x002, 0xff8     	movff	(0x00 + 2), _TBLPTRU
0057e8   fff8
0057ea   d003     bra     0x0057f2         	bra	copy_loop_dec
                                           copy_loop:
0057ec   0009     tblrd*+                  	tblrd*+
0057ee   cff5     movff   0xff5, 0xfee     	movff	_TABLAT, _POSTINC0
0057f0   ffee
                                           copy_loop_dec:
                                           	;	while (--0x03);
                                           	;	Decrement and test the byte counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
0057f2   0603     decf    0x03, 0x1, 0x0   	decf	0x03, f, 0
0057f4   e2fb     bc      0x0057ec         	bc	copy_loop
0057f6   0604     decf    0x04, 0x1, 0x0   	decf	(0x03 + 1), f, 0
0057f8   e2f9     bc      0x0057ec         	bc	copy_loop
                                           	;	Restore the table pointer for the next entry.
                                           	;	TBLPTR = 0x07
0057fa   c007     movff   0x007, 0xff6     	movff	0x07, _TBLPTRL
0057fc   fff6
0057fe   c008     movff   0x008, 0xff7     	movff	(0x07 + 1), _TBLPTRH
005800   fff7
005802   c009     movff   0x009, 0xff8     	movff	(0x07 + 2), _TBLPTRU
005804   fff8
                                           entry_loop_dec:
                                           	;	while (--0x05);
                                           	;	Decrement and test the entry counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
005806   0605     decf    0x05, 0x1, 0x0   	decf	0x05, f, 0
005808   e2ca     bc      0x00579e         	bc	entry_loop
00580a   0606     decf    0x06, 0x1, 0x0   	decf	(0x05 + 1), f, 0
00580c   e2c8     bc      0x00579e         	bc	entry_loop
                                           	
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/source/drawrobot/crt0iz.c	main ();
00580e   ec17     call    0x00662e, 0x0    	CALL	_main
005810   f033
                                           lockup:
                                           	;	Returning from main will lock up.
005812   d7ff     bra     0x005812         	bra	lockup
                                           	
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/source/drawrobot/crt0iz.c	}
                                           ; ; Starting pCode block
                                           S_drawrobot__loop	code
                                           _loop:
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	void loop()
003576   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003578   ffe5
00357a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00357c   ffe5
00357e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003580   ffe5
003582   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003584   ffe5
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Serial_begin(9600);  
003586   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003588   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00358a   0e25     movlw   0x25             	MOVLW	0x25
00358c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00358e   0e80     movlw   0x80             	MOVLW	0x80
003590   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003592   ec2b     call    0x005256, 0x0    	CALL	_Serial_begin
003594   f029
003596   0e04     movlw   0x04             	MOVLW	0x04
003598   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _01674_DS_:
00359a   0105     movlb   0x5              	BANKSEL	_wpointer
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if (Serial_available())
00359c   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_wpointer, W, B
00359e   0105     movlb   0x5              	BANKSEL	_rpointer
0035a0   19d8     xorwf   0xd8, 0x0, 0x1   	XORWF	_rpointer, W, B
0035a2   e0fb     bz      0x00359a         	BZ	_01674_DS_
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	b=Serial_read();
0035a4   ec5b     call    0x0062b6, 0x0    	CALL	_Serial_read
0035a6   f031
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	178; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	switch(b)
0035a8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0035aa   0a61     xorlw   0x61             	XORLW	0x61
0035ac   e01c     bz      0x0035e6         	BZ	_01661_DS_
0035ae   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0035b0   0a62     xorlw   0x62             	XORLW	0x62
0035b2   e101     bnz     0x0035b6         	BNZ	_01713_DS_
0035b4   d0b4     bra     0x00371e         	BRA	_01666_DS_
                                           _01713_DS_:
0035b6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0035b8   0a63     xorlw   0x63             	XORLW	0x63
0035ba   e101     bnz     0x0035be         	BNZ	_01715_DS_
0035bc   d0d3     bra     0x003764         	BRA	_01668_DS_
                                           _01715_DS_:
0035be   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0035c0   0a64     xorlw   0x64             	XORLW	0x64
0035c2   e101     bnz     0x0035c6         	BNZ	_01717_DS_
0035c4   d049     bra     0x003658         	BRA	_01663_DS_
                                           _01717_DS_:
0035c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0035c8   0a69     xorlw   0x69             	XORLW	0x69
0035ca   e101     bnz     0x0035ce         	BNZ	_01719_DS_
0035cc   d06b     bra     0x0036a4         	BRA	_01664_DS_
                                           _01719_DS_:
0035ce   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0035d0   0a6c     xorlw   0x6c             	XORLW	0x6c
0035d2   e101     bnz     0x0035d6         	BNZ	_01721_DS_
0035d4   d08d     bra     0x0036f0         	BRA	_01665_DS_
                                           _01721_DS_:
0035d6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0035d8   0a74     xorlw   0x74             	XORLW	0x74
0035da   e02b     bz      0x003632         	BZ	_01662_DS_
0035dc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0035de   0a76     xorlw   0x76             	XORLW	0x76
0035e0   e101     bnz     0x0035e4         	BNZ	_01725_DS_
0035e2   d0b4     bra     0x00374c         	BRA	_01667_DS_
                                           _01725_DS_:
0035e4   d0c6     bra     0x003772         	BRA	_01669_DS_
                                           _01661_DS_:
                                           ;	.line	181; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	ad(convertir_numero());
0035e6   ecbd     call    0x003f7a, 0x0    	CALL	_convertir_numero
0035e8   f01f
0035ea   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0035ec   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0035ee   f001
0035f0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0035f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0035f4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0035f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0035f8   ec48     call    0x006090, 0x0    	CALL	___sint2fs
0035fa   f030
0035fc   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0035fe   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
003600   f001
003602   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
003604   f002
003606   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
003608   f003
00360a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00360c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00360e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003610   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003612   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003614   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003616   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003618   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00361a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00361c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00361e   ece3     call    0x0047c6, 0x0    	CALL	_ad
003620   f023
003622   0e04     movlw   0x04             	MOVLW	0x04
003624   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Serial_putchar('0');
003626   0e30     movlw   0x30             	MOVLW	0x30
003628   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00362a   ec53     call    0x0066a6, 0x0    	CALL	_Serial_putchar
00362c   f033
00362e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	183; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	break;
003630   d7b4     bra     0x00359a         	BRA	_01674_DS_
                                           _01662_DS_:
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	at(convertir_numero());
003632   ecbd     call    0x003f7a, 0x0    	CALL	_convertir_numero
003634   f01f
003636   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003638   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
00363a   f001
00363c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00363e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003640   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003642   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003644   ecd4     call    0x004da8, 0x0    	CALL	_at
003646   f026
003648   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00364a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	186; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Serial_putchar('0');
00364c   0e30     movlw   0x30             	MOVLW	0x30
00364e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003650   ec53     call    0x0066a6, 0x0    	CALL	_Serial_putchar
003652   f033
003654   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	break;
003656   d7a1     bra     0x00359a         	BRA	_01674_DS_
                                           _01663_DS_:
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	de(convertir_numero());
003658   ecbd     call    0x003f7a, 0x0    	CALL	_convertir_numero
00365a   f01f
00365c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00365e   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
003660   f001
003662   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003664   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003666   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003668   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00366a   ec48     call    0x006090, 0x0    	CALL	___sint2fs
00366c   f030
00366e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003670   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
003672   f001
003674   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
003676   f002
003678   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
00367a   f003
00367c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00367e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
003680   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003682   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003684   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003686   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003688   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00368a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00368c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00368e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003690   ec47     call    0x00448e, 0x0    	CALL	_de
003692   f022
003694   0e04     movlw   0x04             	MOVLW	0x04
003696   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Serial_putchar('0');
003698   0e30     movlw   0x30             	MOVLW	0x30
00369a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00369c   ec53     call    0x0066a6, 0x0    	CALL	_Serial_putchar
00369e   f033
0036a0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	break;
0036a2   d77b     bra     0x00359a         	BRA	_01674_DS_
                                           _01664_DS_:
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	iz(convertir_numero());
0036a4   ecbd     call    0x003f7a, 0x0    	CALL	_convertir_numero
0036a6   f01f
0036a8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0036aa   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0036ac   f001
0036ae   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0036b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036b2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0036b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036b6   ec48     call    0x006090, 0x0    	CALL	___sint2fs
0036b8   f030
0036ba   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0036bc   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0036be   f001
0036c0   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
0036c2   f002
0036c4   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
0036c6   f003
0036c8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0036ca   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0036cc   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0036ce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036d0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0036d2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036d4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0036d6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036d8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0036da   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036dc   ec15     call    0x00462a, 0x0    	CALL	_iz
0036de   f023
0036e0   0e04     movlw   0x04             	MOVLW	0x04
0036e2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Serial_putchar('0');
0036e4   0e30     movlw   0x30             	MOVLW	0x30
0036e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036e8   ec53     call    0x0066a6, 0x0    	CALL	_Serial_putchar
0036ea   f033
0036ec   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	break;
0036ee   d755     bra     0x00359a         	BRA	_01674_DS_
                                           _01665_DS_:
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	ServoWrite(10,30);
0036f0   0e1e     movlw   0x1e             	MOVLW	0x1e
0036f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036f4   0e0a     movlw   0x0a             	MOVLW	0x0a
0036f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0036f8   ec86     call    0x00630c, 0x0    	CALL	_ServoWrite
0036fa   f031
0036fc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0036fe   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Delayms(1000);
003700   0e03     movlw   0x03             	MOVLW	0x03
003702   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003704   0ee8     movlw   0xe8             	MOVLW	0xe8
003706   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003708   eca1     call    0x005542, 0x0    	CALL	_Delayms
00370a   f02a
00370c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00370e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Serial_putchar('0');
003710   0e30     movlw   0x30             	MOVLW	0x30
003712   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003714   ec53     call    0x0066a6, 0x0    	CALL	_Serial_putchar
003716   f033
003718   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	201; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	PORTB=0;
00371a   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	break;
00371c   d73e     bra     0x00359a         	BRA	_01674_DS_
                                           _01666_DS_:
                                           ;	.line	205; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	ServoWrite(10,120);
00371e   0e78     movlw   0x78             	MOVLW	0x78
003720   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003722   0e0a     movlw   0x0a             	MOVLW	0x0a
003724   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003726   ec86     call    0x00630c, 0x0    	CALL	_ServoWrite
003728   f031
00372a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00372c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	206; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Delayms(1000);
00372e   0e03     movlw   0x03             	MOVLW	0x03
003730   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003732   0ee8     movlw   0xe8             	MOVLW	0xe8
003734   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003736   eca1     call    0x005542, 0x0    	CALL	_Delayms
003738   f02a
00373a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00373c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	207; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Serial_putchar('0');
00373e   0e30     movlw   0x30             	MOVLW	0x30
003740   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003742   ec53     call    0x0066a6, 0x0    	CALL	_Serial_putchar
003744   f033
003746   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	208; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	PORTB=0;
003748   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	209; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	break;
00374a   d727     bra     0x00359a         	BRA	_01674_DS_
                                           _01667_DS_:
                                           ;	.line	211; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	t=convertir_numero();
00374c   ecbd     call    0x003f7a, 0x0    	CALL	_convertir_numero
00374e   f01f
003750   0105     movlb   0x5              	BANKSEL	_t
003752   6fef     movwf   0xef, 0x1        	MOVWF	_t, B
003754   cff3     movff   0xff3, 0x5f0     	MOVFF	PRODL, (_t + 1)
003756   f5f0
                                           ;	.line	212; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Serial_putchar('0');
003758   0e30     movlw   0x30             	MOVLW	0x30
00375a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00375c   ec53     call    0x0066a6, 0x0    	CALL	_Serial_putchar
00375e   f033
003760   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	213; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	break;
003762   d71b     bra     0x00359a         	BRA	_01674_DS_
                                           _01668_DS_:
                                           ;	.line	215; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	PORTB=0;
003764   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	217; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Serial_putchar('0');
003766   0e30     movlw   0x30             	MOVLW	0x30
003768   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00376a   ec53     call    0x0066a6, 0x0    	CALL	_Serial_putchar
00376c   f033
00376e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	218; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	break;
003770   d714     bra     0x00359a         	BRA	_01674_DS_
                                           _01669_DS_:
                                           ;	.line	221; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	PORTB=0;
003772   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	222; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Serial_putchar('1');
003774   0e31     movlw   0x31             	MOVLW	0x31
003776   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003778   ec53     call    0x0066a6, 0x0    	CALL	_Serial_putchar
00377a   f033
00377c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	223; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	}
00377e   d70d     bra     0x00359a         	BRA	_01674_DS_
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	}
003780   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003782   f003
003784   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003786   f002
003788   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00378a   f001
00378c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00378e   f000
003790   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__convertir_numero	code
                                           _convertir_numero:
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	int convertir_numero()
003f7a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003f7c   ffe5
003f7e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003f80   ffe5
003f82   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003f84   ffe5
003f86   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003f88   ffe5
003f8a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003f8c   ffe5
003f8e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003f90   ffe5
003f92   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
003f94   ffe5
003f96   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
003f98   ffe5
003f9a   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
003f9c   ffe5
003f9e   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
003fa0   ffe5
003fa2   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
003fa4   ffe5
003fa6   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
003fa8   ffe5
003faa   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
003fac   ffe5
003fae   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
003fb0   ffe5
003fb2   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
003fb4   ffe5
                                           ;	.line	129; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	char b=0;
003fb6   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ;	.line	130; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	int n=0;
003fb8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003fba   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           ;	.line	133; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	int n_f=0;
003fbc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003fbe   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003fc0   0106     movlb   0x6              	BANKSEL	_convertir_numero_m_1_262
                                           ;	.line	134; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	int m[5]={0,0,0,0,0};
003fc2   6bec     clrf    0xec, 0x1        	CLRF	_convertir_numero_m_1_262, B
                                           ; removed redundant BANKSEL
003fc4   6bed     clrf    0xed, 0x1        	CLRF	(_convertir_numero_m_1_262 + 1), B
                                           ; removed redundant BANKSEL
003fc6   6bee     clrf    0xee, 0x1        	CLRF	(_convertir_numero_m_1_262 + 2), B
                                           ; removed redundant BANKSEL
003fc8   6bef     clrf    0xef, 0x1        	CLRF	(_convertir_numero_m_1_262 + 3), B
                                           ; removed redundant BANKSEL
003fca   6bf0     clrf    0xf0, 0x1        	CLRF	(_convertir_numero_m_1_262 + 4), B
                                           ; removed redundant BANKSEL
003fcc   6bf1     clrf    0xf1, 0x1        	CLRF	(_convertir_numero_m_1_262 + 5), B
                                           ; removed redundant BANKSEL
003fce   6bf2     clrf    0xf2, 0x1        	CLRF	(_convertir_numero_m_1_262 + 6), B
                                           ; removed redundant BANKSEL
003fd0   6bf3     clrf    0xf3, 0x1        	CLRF	(_convertir_numero_m_1_262 + 7), B
                                           ; removed redundant BANKSEL
003fd2   6bf4     clrf    0xf4, 0x1        	CLRF	(_convertir_numero_m_1_262 + 8), B
                                           ; removed redundant BANKSEL
003fd4   6bf5     clrf    0xf5, 0x1        	CLRF	(_convertir_numero_m_1_262 + 9), B
                                           ;	.line	135; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	int fin=0;
003fd6   6a05     clrf    0x05, 0x0        	CLRF	r0x05
003fd8   6a06     clrf    0x06, 0x0        	CLRF	r0x06
                                           _01614_DS_:
                                           ;	.line	136; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	while(b!=';' ){//|| b!='\n' || b!='\r'){
003fda   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003fdc   0a3b     xorlw   0x3b             	XORLW	0x3b
003fde   e101     bnz     0x003fe2         	BNZ	_01648_DS_
003fe0   d091     bra     0x004104         	BRA	_01616_DS_
                                           _01648_DS_:
003fe2   0105     movlb   0x5              	BANKSEL	_wpointer
                                           ;	.line	137; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if (Serial_available())
003fe4   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_wpointer, W, B
003fe6   0105     movlb   0x5              	BANKSEL	_rpointer
003fe8   19d8     xorwf   0xd8, 0x0, 0x1   	XORWF	_rpointer, W, B
003fea   e0f7     bz      0x003fda         	BZ	_01614_DS_
                                           ;	.line	139; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	b=Serial_read();
003fec   ec5b     call    0x0062b6, 0x0    	CALL	_Serial_read
003fee   f031
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	141; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if (b==';'){
003ff0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003ff2   0a3b     xorlw   0x3b             	XORLW	0x3b
003ff4   e001     bz      0x003ff8         	BZ	_01652_DS_
003ff6   d05c     bra     0x0040b0         	BRA	_01610_DS_
                                           _01652_DS_:
                                           ;	.line	143; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	for(i=0;i<=n;i++){
003ff8   6a07     clrf    0x07, 0x0        	CLRF	r0x07
003ffa   6a08     clrf    0x08, 0x0        	CLRF	r0x08
003ffc   6a09     clrf    0x09, 0x0        	CLRF	r0x09
003ffe   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
                                           _01618_DS_:
004000   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004002   0f80     addlw   0x80             	ADDLW	0x80
004004   6ef3     movwf   0xf3, 0x0        	MOVWF	PRODL
004006   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
004008   0f80     addlw   0x80             	ADDLW	0x80
00400a   5cf3     subwf   0xf3, 0x0, 0x0   	SUBWF	PRODL, W
00400c   e102     bnz     0x004012         	BNZ	_01653_DS_
00400e   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
004010   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _01653_DS_:
004012   e337     bnc     0x004082         	BNC	_01603_DS_
                                           ;	.line	144; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	n_f=n_f+m[i]*pot(n-i);//*powf(10,n-i-1);
004014   0eec     movlw   0xec             	MOVLW	LOW(_convertir_numero_m_1_262)
004016   2409     addwf   0x09, 0x0, 0x0   	ADDWF	r0x09, W
004018   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
00401a   0e06     movlw   0x06             	MOVLW	HIGH(_convertir_numero_m_1_262)
00401c   200a     addwfc  0x0a, 0x0, 0x0   	ADDWFC	r0x0a, W
00401e   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
004020   c00b     movff   0x00b, 0xfe9     	MOVFF	r0x0b, FSR0L
004022   ffe9
004024   c00c     movff   0x00c, 0xfea     	MOVFF	r0x0c, FSR0H
004026   ffea
004028   cfee     movff   0xfee, 0x00b     	MOVFF	POSTINC0, r0x0b
00402a   f00b
00402c   cfef     movff   0xfef, 0x00c     	MOVFF	INDF0, r0x0c
00402e   f00c
004030   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
004032   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
004034   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
004036   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
004038   5802     subwfb  0x02, 0x0, 0x0   	SUBWFB	r0x02, W
                                           ; #	MOVWF	r0x0e
                                           ; #	MOVF	r0x0e, W
00403a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00403c   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
00403e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004040   ec3d     call    0x005e7a, 0x0    	CALL	_pot
004042   f02f
004044   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
004046   cff3     movff   0xff3, 0x00e     	MOVFF	PRODL, r0x0e
004048   f00e
00404a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00404c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00404e   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
004050   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004052   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
004054   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004056   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
004058   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00405a   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
00405c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00405e   ec9e     call    0x005d3c, 0x0    	CALL	__mulint
004060   f02e
004062   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
004064   cff3     movff   0xff3, 0x00c     	MOVFF	PRODL, r0x0c
004066   f00c
004068   0e04     movlw   0x04             	MOVLW	0x04
00406a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00406c   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
00406e   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
004070   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
004072   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
                                           ;	.line	143; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	for(i=0;i<=n;i++){
004074   0e02     movlw   0x02             	MOVLW	0x02
004076   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
004078   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00407a   2a0a     incf    0x0a, 0x1, 0x0   	INCF	r0x0a, F
00407c   4a07     infsnz  0x07, 0x1, 0x0   	INFSNZ	r0x07, F
00407e   2a08     incf    0x08, 0x1, 0x0   	INCF	r0x08, F
004080   d7bf     bra     0x004000         	BRA	_01618_DS_
                                           _01603_DS_:
                                           ;	.line	147; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if(n>2)
004082   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004084   0f80     addlw   0x80             	ADDLW	0x80
004086   0f80     addlw   0x80             	ADDLW	0x80
004088   e102     bnz     0x00408e         	BNZ	_01654_DS_
00408a   0e03     movlw   0x03             	MOVLW	0x03
00408c   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _01654_DS_:
00408e   e307     bnc     0x00409e         	BNC	_01605_DS_
                                           ;	.line	149; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	fin=n_f+1;
004090   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004092   0f01     addlw   0x01             	ADDLW	0x01
004094   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
004096   0e00     movlw   0x00             	MOVLW	0x00
004098   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
00409a   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
00409c   d004     bra     0x0040a6         	BRA	_01606_DS_
                                           _01605_DS_:
                                           ;	.line	151; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	fin=n_f;
00409e   c003     movff   0x003, 0x005     	MOVFF	r0x03, r0x05
0040a0   f005
0040a2   c004     movff   0x004, 0x006     	MOVFF	r0x04, r0x06
0040a4   f006
                                           _01606_DS_:
                                           ;	.line	153; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	n_f=0;
0040a6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0040a8   6a04     clrf    0x04, 0x0        	CLRF	r0x04
                                           ;	.line	154; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	n=0;
0040aa   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0040ac   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0040ae   d795     bra     0x003fda         	BRA	_01614_DS_
                                           _01610_DS_:
                                           ;	.line	156; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	nn=convert_ascii(b);
0040b0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0040b2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0040b4   ecff     call    0x0055fe, 0x0    	CALL	_convert_ascii
0040b6   f02a
0040b8   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0040ba   cff3     movff   0xff3, 0x008     	MOVFF	PRODL, r0x08
0040bc   f008
0040be   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if(nn!=255){
0040c0   0aff     xorlw   0xff             	XORLW	0xff
0040c2   e103     bnz     0x0040ca         	BNZ	_01656_DS_
0040c4   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
0040c6   e101     bnz     0x0040ca         	BNZ	_01656_DS_
0040c8   d788     bra     0x003fda         	BRA	_01614_DS_
                                           _01656_DS_:
                                           ;	.line	158; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	m[n]=nn;
0040ca   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0040cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0040ce   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0040d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0040d2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0040d4   0e02     movlw   0x02             	MOVLW	0x02
0040d6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0040d8   ec9e     call    0x005d3c, 0x0    	CALL	__mulint
0040da   f02e
0040dc   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
0040de   cff3     movff   0xff3, 0x00a     	MOVFF	PRODL, r0x0a
0040e0   f00a
0040e2   0e04     movlw   0x04             	MOVLW	0x04
0040e4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0040e6   0eec     movlw   0xec             	MOVLW	LOW(_convertir_numero_m_1_262)
0040e8   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
0040ea   0e06     movlw   0x06             	MOVLW	HIGH(_convertir_numero_m_1_262)
0040ec   220a     addwfc  0x0a, 0x1, 0x0   	ADDWFC	r0x0a, F
0040ee   c009     movff   0x009, 0xfe9     	MOVFF	r0x09, FSR0L
0040f0   ffe9
0040f2   c00a     movff   0x00a, 0xfea     	MOVFF	r0x0a, FSR0H
0040f4   ffea
0040f6   c007     movff   0x007, 0xfee     	MOVFF	r0x07, POSTINC0
0040f8   ffee
0040fa   c008     movff   0x008, 0xfef     	MOVFF	r0x08, INDF0
0040fc   ffef
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	n++;
0040fe   4a01     infsnz  0x01, 0x1, 0x0   	INFSNZ	r0x01, F
004100   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
004102   d76b     bra     0x003fda         	BRA	_01614_DS_
                                           _01616_DS_:
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return fin;
004104   c006     movff   0x006, 0xff3     	MOVFF	r0x06, PRODL
004106   fff3
004108   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	}
00410a   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
00410c   f00e
00410e   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
004110   f00d
004112   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
004114   f00c
004116   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
004118   f00b
00411a   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
00411c   f00a
00411e   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
004120   f009
004122   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
004124   f008
004126   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004128   f007
00412a   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00412c   f006
00412e   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004130   f005
004132   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004134   f004
004136   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004138   f003
00413a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00413c   f002
00413e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004140   f001
004142   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004144   f000
004146   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__pot	code
                                           _pot:
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	int pot(int a)
005e7a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005e7c   ffe5
005e7e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005e80   ffd9
005e82   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005e84   ffe5
005e86   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005e88   ffe5
005e8a   0e02     movlw   0x02             	MOVLW	0x02
005e8c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005e8e   f000
005e90   0e03     movlw   0x03             	MOVLW	0x03
005e92   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005e94   f001
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	switch(a)
005e96   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
005e98   ae01     btfss   0x01, 0x7, 0x0   	BTFSS	r0x01, 7
005e9a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
005e9c   e230     bc      0x005efe         	BC	_01587_DS_
005e9e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005ea0   0f80     addlw   0x80             	ADDLW	0x80
005ea2   0f80     addlw   0x80             	ADDLW	0x80
005ea4   e102     bnz     0x005eaa         	BNZ	_01597_DS_
005ea6   0e05     movlw   0x05             	MOVLW	0x05
005ea8   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _01597_DS_:
005eaa   e229     bc      0x005efe         	BC	_01587_DS_
005eac   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
005eae   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
005eb0   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
005eb2   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
005eb4   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
005eb6   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
005eb8   0bfc     andlw   0xfc             	ANDLW	0xfc
005eba   0fca     addlw   0xca             	ADDLW	LOW(_01598_DS_)
005ebc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005ebe   0e5e     movlw   0x5e             	MOVLW	HIGH(_01598_DS_)
005ec0   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
005ec2   0e00     movlw   0x00             	MOVLW	UPPER(_01598_DS_)
005ec4   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
005ec6   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
005ec8   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01598_DS_:
005eca   ef6f     goto    0x005ede         	GOTO	_01582_DS_
005ecc   f02f
005ece   ef72     goto    0x005ee4         	GOTO	_01583_DS_
005ed0   f02f
005ed2   ef75     goto    0x005eea         	GOTO	_01584_DS_
005ed4   f02f
005ed6   ef78     goto    0x005ef0         	GOTO	_01585_DS_
005ed8   f02f
005eda   ef7b     goto    0x005ef6         	GOTO	_01586_DS_
005edc   f02f
                                           _01582_DS_:
                                           ;	.line	113; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 0;
005ede   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005ee0   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
005ee2   d00f     bra     0x005f02         	BRA	_01589_DS_
                                           _01583_DS_:
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 1;
005ee4   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005ee6   0e01     movlw   0x01             	MOVLW	0x01
005ee8   d00c     bra     0x005f02         	BRA	_01589_DS_
                                           _01584_DS_:
                                           ;	.line	117; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 10;
005eea   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005eec   0e0a     movlw   0x0a             	MOVLW	0x0a
005eee   d009     bra     0x005f02         	BRA	_01589_DS_
                                           _01585_DS_:
                                           ;	.line	119; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 100;
005ef0   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005ef2   0e64     movlw   0x64             	MOVLW	0x64
005ef4   d006     bra     0x005f02         	BRA	_01589_DS_
                                           _01586_DS_:
                                           ;	.line	121; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 1000;
005ef6   0e03     movlw   0x03             	MOVLW	0x03
005ef8   6ef3     movwf   0xf3, 0x0        	MOVWF	PRODL
005efa   0ee8     movlw   0xe8             	MOVLW	0xe8
005efc   d002     bra     0x005f02         	BRA	_01589_DS_
                                           _01587_DS_:
                                           ;	.line	123; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 0;
005efe   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005f00   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _01589_DS_:
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	}
005f02   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005f04   f001
005f06   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005f08   f000
005f0a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005f0c   ffd9
005f0e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__convert_ascii	code
                                           _convert_ascii:
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	int convert_ascii(char a)
0055fe   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005600   ffe5
005602   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005604   ffd9
005606   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005608   ffe5
00560a   0e02     movlw   0x02             	MOVLW	0x02
00560c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00560e   f000
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	switch(a)
005610   0e30     movlw   0x30             	MOVLW	0x30
005612   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
005614   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
005616   d047     bra     0x0056a6         	BRA	_01565_DS_
005618   0e3a     movlw   0x3a             	MOVLW	0x3a
00561a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00561c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00561e   d043     bra     0x0056a6         	BRA	_01565_DS_
005620   0ed0     movlw   0xd0             	MOVLW	0xd0
005622   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005624   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
005626   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
005628   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
00562a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00562c   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
00562e   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
005630   0bfc     andlw   0xfc             	ANDLW	0xfc
005632   0f42     addlw   0x42             	ADDLW	LOW(_01577_DS_)
005634   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005636   0e56     movlw   0x56             	MOVLW	HIGH(_01577_DS_)
005638   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00563a   0e00     movlw   0x00             	MOVLW	UPPER(_01577_DS_)
00563c   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
00563e   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
005640   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01577_DS_:
005642   ef35     goto    0x00566a         	GOTO	_01555_DS_
005644   f02b
005646   ef38     goto    0x005670         	GOTO	_01556_DS_
005648   f02b
00564a   ef3b     goto    0x005676         	GOTO	_01557_DS_
00564c   f02b
00564e   ef3e     goto    0x00567c         	GOTO	_01558_DS_
005650   f02b
005652   ef41     goto    0x005682         	GOTO	_01559_DS_
005654   f02b
005656   ef44     goto    0x005688         	GOTO	_01560_DS_
005658   f02b
00565a   ef47     goto    0x00568e         	GOTO	_01561_DS_
00565c   f02b
00565e   ef4a     goto    0x005694         	GOTO	_01562_DS_
005660   f02b
005662   ef4d     goto    0x00569a         	GOTO	_01563_DS_
005664   f02b
005666   ef50     goto    0x0056a0         	GOTO	_01564_DS_
005668   f02b
                                           _01555_DS_:
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 0;
00566a   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
00566c   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
00566e   d01d     bra     0x0056aa         	BRA	_01567_DS_
                                           _01556_DS_:
                                           ;	.line	87; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 1;
005670   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005672   0e01     movlw   0x01             	MOVLW	0x01
005674   d01a     bra     0x0056aa         	BRA	_01567_DS_
                                           _01557_DS_:
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 2;
005676   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005678   0e02     movlw   0x02             	MOVLW	0x02
00567a   d017     bra     0x0056aa         	BRA	_01567_DS_
                                           _01558_DS_:
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 3;
00567c   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
00567e   0e03     movlw   0x03             	MOVLW	0x03
005680   d014     bra     0x0056aa         	BRA	_01567_DS_
                                           _01559_DS_:
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 4;
005682   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005684   0e04     movlw   0x04             	MOVLW	0x04
005686   d011     bra     0x0056aa         	BRA	_01567_DS_
                                           _01560_DS_:
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 5;
005688   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
00568a   0e05     movlw   0x05             	MOVLW	0x05
00568c   d00e     bra     0x0056aa         	BRA	_01567_DS_
                                           _01561_DS_:
                                           ;	.line	97; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 6;
00568e   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005690   0e06     movlw   0x06             	MOVLW	0x06
005692   d00b     bra     0x0056aa         	BRA	_01567_DS_
                                           _01562_DS_:
                                           ;	.line	99; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 7;
005694   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005696   0e07     movlw   0x07             	MOVLW	0x07
005698   d008     bra     0x0056aa         	BRA	_01567_DS_
                                           _01563_DS_:
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 8;
00569a   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
00569c   0e08     movlw   0x08             	MOVLW	0x08
00569e   d005     bra     0x0056aa         	BRA	_01567_DS_
                                           _01564_DS_:
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 9;
0056a0   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
0056a2   0e09     movlw   0x09             	MOVLW	0x09
0056a4   d002     bra     0x0056aa         	BRA	_01567_DS_
                                           _01565_DS_:
                                           ;	.line	105; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	return 255;
0056a6   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
0056a8   68e8     setf    0xe8, 0x0        	SETF	WREG
                                           _01567_DS_:
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	}
0056aa   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0056ac   f000
0056ae   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0056b0   ffd9
0056b2   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__de	code
                                           _de:
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	void de(float p)
00448e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004490   ffe5
004492   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004494   ffd9
004496   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004498   ffe5
00449a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00449c   ffe5
00449e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0044a0   ffe5
0044a2   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0044a4   ffe5
0044a6   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0044a8   ffe5
0044aa   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0044ac   ffe5
0044ae   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
0044b0   ffe5
0044b2   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
0044b4   ffe5
0044b6   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
0044b8   ffe5
0044ba   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
0044bc   ffe5
0044be   0e02     movlw   0x02             	MOVLW	0x02
0044c0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0044c2   f000
0044c4   0e03     movlw   0x03             	MOVLW	0x03
0044c6   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0044c8   f001
0044ca   0e04     movlw   0x04             	MOVLW	0x04
0044cc   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0044ce   f002
0044d0   0e05     movlw   0x05             	MOVLW	0x05
0044d2   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0044d4   f003
                                           ;	.line	67; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	for(n=0;n<p;n++){
0044d6   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0044d8   6a05     clrf    0x05, 0x0        	CLRF	r0x05
                                           _01532_DS_:
0044da   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0044dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0044de   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0044e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0044e2   ec48     call    0x006090, 0x0    	CALL	___sint2fs
0044e4   f030
0044e6   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
0044e8   cff3     movff   0xff3, 0x007     	MOVFF	PRODL, r0x07
0044ea   f007
0044ec   cff4     movff   0xff4, 0x008     	MOVFF	PRODH, r0x08
0044ee   f008
0044f0   cfe9     movff   0xfe9, 0x009     	MOVFF	FSR0L, r0x09
0044f2   f009
0044f4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0044f6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0044f8   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0044fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0044fc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0044fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004500   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004502   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004504   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004506   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004508   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
00450a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00450c   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
00450e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004510   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
004512   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004514   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
004516   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004518   ec10     call    0x005020, 0x0    	CALL	___fslt
00451a   f028
00451c   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
00451e   0e08     movlw   0x08             	MOVLW	0x08
004520   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004522   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
004524   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
004526   d06a     bra     0x0045fc         	BRA	_01534_DS_
004528   0105     movlb   0x5              	BANKSEL	(_m2p + 1)
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	PORTB=m2[m2p]+m1[m1p];
00452a   51ee     movf    0xee, 0x0, 0x1   	MOVF	(_m2p + 1), W, B
00452c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00452e   51ed     movf    0xed, 0x0, 0x1   	MOVF	_m2p, W, B
004530   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004532   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004534   0e02     movlw   0x02             	MOVLW	0x02
004536   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004538   ec9e     call    0x005d3c, 0x0    	CALL	__mulint
00453a   f02e
00453c   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
00453e   cff3     movff   0xff3, 0x007     	MOVFF	PRODL, r0x07
004540   f007
004542   0e04     movlw   0x04             	MOVLW	0x04
004544   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004546   0ee1     movlw   0xe1             	MOVLW	LOW(_m2)
004548   2606     addwf   0x06, 0x1, 0x0   	ADDWF	r0x06, F
00454a   0e05     movlw   0x05             	MOVLW	HIGH(_m2)
00454c   2207     addwfc  0x07, 0x1, 0x0   	ADDWFC	r0x07, F
00454e   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
004550   ffe9
004552   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
004554   ffea
004556   cfee     movff   0xfee, 0x006     	MOVFF	POSTINC0, r0x06
004558   f006
00455a   cfef     movff   0xfef, 0x007     	MOVFF	INDF0, r0x07
00455c   f007
00455e   0105     movlb   0x5              	BANKSEL	(_m1p + 1)
004560   51ec     movf    0xec, 0x0, 0x1   	MOVF	(_m1p + 1), W, B
004562   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
004564   51eb     movf    0xeb, 0x0, 0x1   	MOVF	_m1p, W, B
004566   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004568   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00456a   0e02     movlw   0x02             	MOVLW	0x02
00456c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00456e   ec9e     call    0x005d3c, 0x0    	CALL	__mulint
004570   f02e
004572   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
004574   cff3     movff   0xff3, 0x008     	MOVFF	PRODL, r0x08
004576   f008
004578   0e04     movlw   0x04             	MOVLW	0x04
00457a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00457c   0ed9     movlw   0xd9             	MOVLW	LOW(_m1)
00457e   2607     addwf   0x07, 0x1, 0x0   	ADDWF	r0x07, F
004580   0e05     movlw   0x05             	MOVLW	HIGH(_m1)
004582   2208     addwfc  0x08, 0x1, 0x0   	ADDWFC	r0x08, F
004584   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
004586   ffe9
004588   c008     movff   0x008, 0xfea     	MOVFF	r0x08, FSR0H
00458a   ffea
00458c   cfee     movff   0xfee, 0x007     	MOVFF	POSTINC0, r0x07
00458e   f007
004590   cfef     movff   0xfef, 0x008     	MOVFF	INDF0, r0x08
004592   f008
004594   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
004596   2406     addwf   0x06, 0x0, 0x0   	ADDWF	r0x06, W
004598   6e81     movwf   0x81, 0x0        	MOVWF	_PORTB
00459a   0105     movlb   0x5              	BANKSEL	(_t + 1)
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Delayms(t);
00459c   51f0     movf    0xf0, 0x0, 0x1   	MOVF	(_t + 1), W, B
00459e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0045a0   51ef     movf    0xef, 0x0, 0x1   	MOVF	_t, W, B
0045a2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0045a4   eca1     call    0x005542, 0x0    	CALL	_Delayms
0045a6   f02a
0045a8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0045aa   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	m1p--;
0045ac   0eff     movlw   0xff             	MOVLW	0xff
0045ae   0105     movlb   0x5              	BANKSEL	_m1p
0045b0   27eb     addwf   0xeb, 0x1, 0x1   	ADDWF	_m1p, F, B
                                           ; removed redundant BANKSEL
0045b2   23ec     addwfc  0xec, 0x1, 0x1   	ADDWFC	(_m1p + 1), F, B
0045b4   0105     movlb   0x5              	BANKSEL	_m2p
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	m2p++;
0045b6   3fed     incfsz  0xed, 0x1, 0x1   	INCFSZ	_m2p, F, B
0045b8   d001     bra     0x0045bc         	BRA	_11766_DS_
                                           ; removed redundant BANKSEL
0045ba   2bee     incf    0xee, 0x1, 0x1   	INCF	(_m2p + 1), F, B
                                           _11766_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if (m1p<0){m1p=cantidad_p-1;}
0045bc   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0045be   0105     movlb   0x5              	BANKSEL	(_m1p + 1)
0045c0   afec     btfss   0xec, 0x7, 0x1   	BTFSS	(_m1p + 1), 7, B
0045c2   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0045c4   e30a     bnc     0x0045da         	BNC	_01527_DS_
0045c6   0105     movlb   0x5              	BANKSEL	_cantidad_p
0045c8   51e9     movf    0xe9, 0x0, 0x1   	MOVF	_cantidad_p, W, B
0045ca   0fff     addlw   0xff             	ADDLW	0xff
0045cc   0105     movlb   0x5              	BANKSEL	_m1p
0045ce   6feb     movwf   0xeb, 0x1        	MOVWF	_m1p, B
0045d0   0eff     movlw   0xff             	MOVLW	0xff
0045d2   0105     movlb   0x5              	BANKSEL	(_cantidad_p + 1)
0045d4   21ea     addwfc  0xea, 0x0, 0x1   	ADDWFC	(_cantidad_p + 1), W, B
0045d6   0105     movlb   0x5              	BANKSEL	(_m1p + 1)
0045d8   6fec     movwf   0xec, 0x1        	MOVWF	(_m1p + 1), B
                                           _01527_DS_:
0045da   0105     movlb   0x5              	BANKSEL	_m2p
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if (m2p==cantidad_p){m2p=0;}
0045dc   51ed     movf    0xed, 0x0, 0x1   	MOVF	_m2p, W, B
0045de   0105     movlb   0x5              	BANKSEL	_cantidad_p
0045e0   19e9     xorwf   0xe9, 0x0, 0x1   	XORWF	_cantidad_p, W, B
0045e2   e105     bnz     0x0045ee         	BNZ	_01549_DS_
0045e4   0105     movlb   0x5              	BANKSEL	(_m2p + 1)
0045e6   51ee     movf    0xee, 0x0, 0x1   	MOVF	(_m2p + 1), W, B
0045e8   0105     movlb   0x5              	BANKSEL	(_cantidad_p + 1)
0045ea   19ea     xorwf   0xea, 0x0, 0x1   	XORWF	(_cantidad_p + 1), W, B
0045ec   e001     bz      0x0045f0         	BZ	_01550_DS_
                                           _01549_DS_:
0045ee   d003     bra     0x0045f6         	BRA	_01533_DS_
                                           _01550_DS_:
0045f0   0105     movlb   0x5              	BANKSEL	_m2p
0045f2   6bed     clrf    0xed, 0x1        	CLRF	_m2p, B
                                           ; removed redundant BANKSEL
0045f4   6bee     clrf    0xee, 0x1        	CLRF	(_m2p + 1), B
                                           _01533_DS_:
                                           ;	.line	67; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	for(n=0;n<p;n++){
0045f6   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
0045f8   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
0045fa   d76f     bra     0x0044da         	BRA	_01532_DS_
                                           _01534_DS_:
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	}
0045fc   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
0045fe   f009
004600   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
004602   f008
004604   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004606   f007
004608   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00460a   f006
00460c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00460e   f005
004610   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004612   f004
004614   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004616   f003
004618   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00461a   f002
00461c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00461e   f001
004620   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004622   f000
004624   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004626   ffd9
004628   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__iz	code
                                           _iz:
                                           ;	.line	49; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	void iz(float p)
00462a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00462c   ffe5
00462e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004630   ffd9
004632   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004634   ffe5
004636   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004638   ffe5
00463a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00463c   ffe5
00463e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004640   ffe5
004642   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004644   ffe5
004646   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004648   ffe5
00464a   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00464c   ffe5
00464e   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004650   ffe5
004652   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
004654   ffe5
004656   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
004658   ffe5
00465a   0e02     movlw   0x02             	MOVLW	0x02
00465c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00465e   f000
004660   0e03     movlw   0x03             	MOVLW	0x03
004662   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004664   f001
004666   0e04     movlw   0x04             	MOVLW	0x04
004668   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
00466a   f002
00466c   0e05     movlw   0x05             	MOVLW	0x05
00466e   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
004670   f003
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	for(n=0;n<p;n++){
004672   6a04     clrf    0x04, 0x0        	CLRF	r0x04
004674   6a05     clrf    0x05, 0x0        	CLRF	r0x05
                                           _01503_DS_:
004676   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
004678   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00467a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00467c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00467e   ec48     call    0x006090, 0x0    	CALL	___sint2fs
004680   f030
004682   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
004684   cff3     movff   0xff3, 0x007     	MOVFF	PRODL, r0x07
004686   f007
004688   cff4     movff   0xff4, 0x008     	MOVFF	PRODH, r0x08
00468a   f008
00468c   cfe9     movff   0xfe9, 0x009     	MOVFF	FSR0L, r0x09
00468e   f009
004690   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004692   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004694   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004696   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004698   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00469a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00469c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00469e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046a0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0046a2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046a4   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
0046a6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046a8   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
0046aa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046ac   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
0046ae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046b0   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0046b2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046b4   ec10     call    0x005020, 0x0    	CALL	___fslt
0046b6   f028
0046b8   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
0046ba   0e08     movlw   0x08             	MOVLW	0x08
0046bc   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0046be   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0046c0   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
0046c2   d06a     bra     0x004798         	BRA	_01505_DS_
0046c4   0105     movlb   0x5              	BANKSEL	(_m2p + 1)
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	PORTB=m2[m2p]+m1[m1p];
0046c6   51ee     movf    0xee, 0x0, 0x1   	MOVF	(_m2p + 1), W, B
0046c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0046ca   51ed     movf    0xed, 0x0, 0x1   	MOVF	_m2p, W, B
0046cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046ce   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0046d0   0e02     movlw   0x02             	MOVLW	0x02
0046d2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0046d4   ec9e     call    0x005d3c, 0x0    	CALL	__mulint
0046d6   f02e
0046d8   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
0046da   cff3     movff   0xff3, 0x007     	MOVFF	PRODL, r0x07
0046dc   f007
0046de   0e04     movlw   0x04             	MOVLW	0x04
0046e0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0046e2   0ee1     movlw   0xe1             	MOVLW	LOW(_m2)
0046e4   2606     addwf   0x06, 0x1, 0x0   	ADDWF	r0x06, F
0046e6   0e05     movlw   0x05             	MOVLW	HIGH(_m2)
0046e8   2207     addwfc  0x07, 0x1, 0x0   	ADDWFC	r0x07, F
0046ea   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
0046ec   ffe9
0046ee   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
0046f0   ffea
0046f2   cfee     movff   0xfee, 0x006     	MOVFF	POSTINC0, r0x06
0046f4   f006
0046f6   cfef     movff   0xfef, 0x007     	MOVFF	INDF0, r0x07
0046f8   f007
0046fa   0105     movlb   0x5              	BANKSEL	(_m1p + 1)
0046fc   51ec     movf    0xec, 0x0, 0x1   	MOVF	(_m1p + 1), W, B
0046fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
004700   51eb     movf    0xeb, 0x0, 0x1   	MOVF	_m1p, W, B
004702   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004704   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004706   0e02     movlw   0x02             	MOVLW	0x02
004708   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00470a   ec9e     call    0x005d3c, 0x0    	CALL	__mulint
00470c   f02e
00470e   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
004710   cff3     movff   0xff3, 0x008     	MOVFF	PRODL, r0x08
004712   f008
004714   0e04     movlw   0x04             	MOVLW	0x04
004716   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004718   0ed9     movlw   0xd9             	MOVLW	LOW(_m1)
00471a   2607     addwf   0x07, 0x1, 0x0   	ADDWF	r0x07, F
00471c   0e05     movlw   0x05             	MOVLW	HIGH(_m1)
00471e   2208     addwfc  0x08, 0x1, 0x0   	ADDWFC	r0x08, F
004720   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
004722   ffe9
004724   c008     movff   0x008, 0xfea     	MOVFF	r0x08, FSR0H
004726   ffea
004728   cfee     movff   0xfee, 0x007     	MOVFF	POSTINC0, r0x07
00472a   f007
00472c   cfef     movff   0xfef, 0x008     	MOVFF	INDF0, r0x08
00472e   f008
004730   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
004732   2406     addwf   0x06, 0x0, 0x0   	ADDWF	r0x06, W
004734   6e81     movwf   0x81, 0x0        	MOVWF	_PORTB
004736   0105     movlb   0x5              	BANKSEL	(_t + 1)
                                           ;	.line	56; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Delayms(t);
004738   51f0     movf    0xf0, 0x0, 0x1   	MOVF	(_t + 1), W, B
00473a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00473c   51ef     movf    0xef, 0x0, 0x1   	MOVF	_t, W, B
00473e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004740   eca1     call    0x005542, 0x0    	CALL	_Delayms
004742   f02a
004744   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004746   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004748   0105     movlb   0x5              	BANKSEL	_m1p
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	m1p++;
00474a   3feb     incfsz  0xeb, 0x1, 0x1   	INCFSZ	_m1p, F, B
00474c   d001     bra     0x004750         	BRA	_21767_DS_
                                           ; removed redundant BANKSEL
00474e   2bec     incf    0xec, 0x1, 0x1   	INCF	(_m1p + 1), F, B
                                           _21767_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	m2p--;
004750   0eff     movlw   0xff             	MOVLW	0xff
004752   0105     movlb   0x5              	BANKSEL	_m2p
004754   27ed     addwf   0xed, 0x1, 0x1   	ADDWF	_m2p, F, B
                                           ; removed redundant BANKSEL
004756   23ee     addwfc  0xee, 0x1, 0x1   	ADDWFC	(_m2p + 1), F, B
004758   0105     movlb   0x5              	BANKSEL	_m1p
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if (m1p==cantidad_p){m1p=0;}
00475a   51eb     movf    0xeb, 0x0, 0x1   	MOVF	_m1p, W, B
00475c   0105     movlb   0x5              	BANKSEL	_cantidad_p
00475e   19e9     xorwf   0xe9, 0x0, 0x1   	XORWF	_cantidad_p, W, B
004760   e105     bnz     0x00476c         	BNZ	_01520_DS_
004762   0105     movlb   0x5              	BANKSEL	(_m1p + 1)
004764   51ec     movf    0xec, 0x0, 0x1   	MOVF	(_m1p + 1), W, B
004766   0105     movlb   0x5              	BANKSEL	(_cantidad_p + 1)
004768   19ea     xorwf   0xea, 0x0, 0x1   	XORWF	(_cantidad_p + 1), W, B
00476a   e001     bz      0x00476e         	BZ	_01521_DS_
                                           _01520_DS_:
00476c   d003     bra     0x004774         	BRA	_01498_DS_
                                           _01521_DS_:
00476e   0105     movlb   0x5              	BANKSEL	_m1p
004770   6beb     clrf    0xeb, 0x1        	CLRF	_m1p, B
                                           ; removed redundant BANKSEL
004772   6bec     clrf    0xec, 0x1        	CLRF	(_m1p + 1), B
                                           _01498_DS_:
                                           ;	.line	60; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if (m2p<0){m2p=cantidad_p-1;}
004774   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004776   0105     movlb   0x5              	BANKSEL	(_m2p + 1)
004778   afee     btfss   0xee, 0x7, 0x1   	BTFSS	(_m2p + 1), 7, B
00477a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00477c   e30a     bnc     0x004792         	BNC	_01504_DS_
00477e   0105     movlb   0x5              	BANKSEL	_cantidad_p
004780   51e9     movf    0xe9, 0x0, 0x1   	MOVF	_cantidad_p, W, B
004782   0fff     addlw   0xff             	ADDLW	0xff
004784   0105     movlb   0x5              	BANKSEL	_m2p
004786   6fed     movwf   0xed, 0x1        	MOVWF	_m2p, B
004788   0eff     movlw   0xff             	MOVLW	0xff
00478a   0105     movlb   0x5              	BANKSEL	(_cantidad_p + 1)
00478c   21ea     addwfc  0xea, 0x0, 0x1   	ADDWFC	(_cantidad_p + 1), W, B
00478e   0105     movlb   0x5              	BANKSEL	(_m2p + 1)
004790   6fee     movwf   0xee, 0x1        	MOVWF	(_m2p + 1), B
                                           _01504_DS_:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	for(n=0;n<p;n++){
004792   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
004794   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
004796   d76f     bra     0x004676         	BRA	_01503_DS_
                                           _01505_DS_:
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	}
004798   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
00479a   f009
00479c   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00479e   f008
0047a0   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
0047a2   f007
0047a4   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
0047a6   f006
0047a8   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0047aa   f005
0047ac   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0047ae   f004
0047b0   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0047b2   f003
0047b4   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0047b6   f002
0047b8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0047ba   f001
0047bc   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0047be   f000
0047c0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0047c2   ffd9
0047c4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__ad	code
                                           _ad:
                                           ;	.line	35; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	void ad(float p)
0047c6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0047c8   ffe5
0047ca   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0047cc   ffd9
0047ce   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0047d0   ffe5
0047d2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0047d4   ffe5
0047d6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0047d8   ffe5
0047da   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0047dc   ffe5
0047de   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0047e0   ffe5
0047e2   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0047e4   ffe5
0047e6   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
0047e8   ffe5
0047ea   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
0047ec   ffe5
0047ee   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
0047f0   ffe5
0047f2   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
0047f4   ffe5
0047f6   0e02     movlw   0x02             	MOVLW	0x02
0047f8   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0047fa   f000
0047fc   0e03     movlw   0x03             	MOVLW	0x03
0047fe   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004800   f001
004802   0e04     movlw   0x04             	MOVLW	0x04
004804   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004806   f002
004808   0e05     movlw   0x05             	MOVLW	0x05
00480a   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
00480c   f003
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	for(n=0;n<p;n++){
00480e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
004810   6a05     clrf    0x05, 0x0        	CLRF	r0x05
                                           _01490_DS_:
004812   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
004814   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004816   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004818   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00481a   ec48     call    0x006090, 0x0    	CALL	___sint2fs
00481c   f030
00481e   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
004820   cff3     movff   0xff3, 0x007     	MOVFF	PRODL, r0x07
004822   f007
004824   cff4     movff   0xff4, 0x008     	MOVFF	PRODH, r0x08
004826   f008
004828   cfe9     movff   0xfe9, 0x009     	MOVFF	FSR0L, r0x09
00482a   f009
00482c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00482e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004830   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004832   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004834   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004836   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004838   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00483a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00483c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00483e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004840   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
004842   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004844   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
004846   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004848   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
00484a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00484c   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
00484e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004850   ec10     call    0x005020, 0x0    	CALL	___fslt
004852   f028
004854   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
004856   0e08     movlw   0x08             	MOVLW	0x08
004858   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00485a   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
00485c   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
00485e   d06a     bra     0x004934         	BRA	_01492_DS_
004860   0105     movlb   0x5              	BANKSEL	(_m2p + 1)
                                           ;	.line	41; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	PORTB=m2[m2p]+m1[m1p];
004862   51ee     movf    0xee, 0x0, 0x1   	MOVF	(_m2p + 1), W, B
004864   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
004866   51ed     movf    0xed, 0x0, 0x1   	MOVF	_m2p, W, B
004868   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00486a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00486c   0e02     movlw   0x02             	MOVLW	0x02
00486e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004870   ec9e     call    0x005d3c, 0x0    	CALL	__mulint
004872   f02e
004874   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
004876   cff3     movff   0xff3, 0x007     	MOVFF	PRODL, r0x07
004878   f007
00487a   0e04     movlw   0x04             	MOVLW	0x04
00487c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00487e   0ee1     movlw   0xe1             	MOVLW	LOW(_m2)
004880   2606     addwf   0x06, 0x1, 0x0   	ADDWF	r0x06, F
004882   0e05     movlw   0x05             	MOVLW	HIGH(_m2)
004884   2207     addwfc  0x07, 0x1, 0x0   	ADDWFC	r0x07, F
004886   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
004888   ffe9
00488a   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
00488c   ffea
00488e   cfee     movff   0xfee, 0x006     	MOVFF	POSTINC0, r0x06
004890   f006
004892   cfef     movff   0xfef, 0x007     	MOVFF	INDF0, r0x07
004894   f007
004896   0105     movlb   0x5              	BANKSEL	(_m1p + 1)
004898   51ec     movf    0xec, 0x0, 0x1   	MOVF	(_m1p + 1), W, B
00489a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00489c   51eb     movf    0xeb, 0x0, 0x1   	MOVF	_m1p, W, B
00489e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048a0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0048a2   0e02     movlw   0x02             	MOVLW	0x02
0048a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048a6   ec9e     call    0x005d3c, 0x0    	CALL	__mulint
0048a8   f02e
0048aa   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0048ac   cff3     movff   0xff3, 0x008     	MOVFF	PRODL, r0x08
0048ae   f008
0048b0   0e04     movlw   0x04             	MOVLW	0x04
0048b2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0048b4   0ed9     movlw   0xd9             	MOVLW	LOW(_m1)
0048b6   2607     addwf   0x07, 0x1, 0x0   	ADDWF	r0x07, F
0048b8   0e05     movlw   0x05             	MOVLW	HIGH(_m1)
0048ba   2208     addwfc  0x08, 0x1, 0x0   	ADDWFC	r0x08, F
0048bc   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
0048be   ffe9
0048c0   c008     movff   0x008, 0xfea     	MOVFF	r0x08, FSR0H
0048c2   ffea
0048c4   cfee     movff   0xfee, 0x007     	MOVFF	POSTINC0, r0x07
0048c6   f007
0048c8   cfef     movff   0xfef, 0x008     	MOVFF	INDF0, r0x08
0048ca   f008
0048cc   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
0048ce   2406     addwf   0x06, 0x0, 0x0   	ADDWF	r0x06, W
0048d0   6e81     movwf   0x81, 0x0        	MOVWF	_PORTB
0048d2   0105     movlb   0x5              	BANKSEL	(_t + 1)
                                           ;	.line	42; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Delayms(t);
0048d4   51f0     movf    0xf0, 0x0, 0x1   	MOVF	(_t + 1), W, B
0048d6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0048d8   51ef     movf    0xef, 0x0, 0x1   	MOVF	_t, W, B
0048da   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048dc   eca1     call    0x005542, 0x0    	CALL	_Delayms
0048de   f02a
0048e0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0048e2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	43; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	m1p--;
0048e4   0eff     movlw   0xff             	MOVLW	0xff
0048e6   0105     movlb   0x5              	BANKSEL	_m1p
0048e8   27eb     addwf   0xeb, 0x1, 0x1   	ADDWF	_m1p, F, B
                                           ; removed redundant BANKSEL
0048ea   23ec     addwfc  0xec, 0x1, 0x1   	ADDWFC	(_m1p + 1), F, B
0048ec   0105     movlb   0x5              	BANKSEL	_m2p
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	m2p--;
0048ee   27ed     addwf   0xed, 0x1, 0x1   	ADDWF	_m2p, F, B
                                           ; removed redundant BANKSEL
0048f0   23ee     addwfc  0xee, 0x1, 0x1   	ADDWFC	(_m2p + 1), F, B
                                           ;	.line	45; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if (m1p<0){m1p=cantidad_p-1;}
0048f2   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0048f4   0105     movlb   0x5              	BANKSEL	(_m1p + 1)
0048f6   afec     btfss   0xec, 0x7, 0x1   	BTFSS	(_m1p + 1), 7, B
0048f8   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0048fa   e30a     bnc     0x004910         	BNC	_01485_DS_
0048fc   0105     movlb   0x5              	BANKSEL	_cantidad_p
0048fe   51e9     movf    0xe9, 0x0, 0x1   	MOVF	_cantidad_p, W, B
004900   0fff     addlw   0xff             	ADDLW	0xff
004902   0105     movlb   0x5              	BANKSEL	_m1p
004904   6feb     movwf   0xeb, 0x1        	MOVWF	_m1p, B
004906   0eff     movlw   0xff             	MOVLW	0xff
004908   0105     movlb   0x5              	BANKSEL	(_cantidad_p + 1)
00490a   21ea     addwfc  0xea, 0x0, 0x1   	ADDWFC	(_cantidad_p + 1), W, B
00490c   0105     movlb   0x5              	BANKSEL	(_m1p + 1)
00490e   6fec     movwf   0xec, 0x1        	MOVWF	(_m1p + 1), B
                                           _01485_DS_:
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if (m2p<0){m2p=cantidad_p-1;}
004910   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004912   0105     movlb   0x5              	BANKSEL	(_m2p + 1)
004914   afee     btfss   0xee, 0x7, 0x1   	BTFSS	(_m2p + 1), 7, B
004916   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004918   e30a     bnc     0x00492e         	BNC	_01491_DS_
00491a   0105     movlb   0x5              	BANKSEL	_cantidad_p
00491c   51e9     movf    0xe9, 0x0, 0x1   	MOVF	_cantidad_p, W, B
00491e   0fff     addlw   0xff             	ADDLW	0xff
004920   0105     movlb   0x5              	BANKSEL	_m2p
004922   6fed     movwf   0xed, 0x1        	MOVWF	_m2p, B
004924   0eff     movlw   0xff             	MOVLW	0xff
004926   0105     movlb   0x5              	BANKSEL	(_cantidad_p + 1)
004928   21ea     addwfc  0xea, 0x0, 0x1   	ADDWFC	(_cantidad_p + 1), W, B
00492a   0105     movlb   0x5              	BANKSEL	(_m2p + 1)
00492c   6fee     movwf   0xee, 0x1        	MOVWF	(_m2p + 1), B
                                           _01491_DS_:
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	for(n=0;n<p;n++){
00492e   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
004930   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
004932   d76f     bra     0x004812         	BRA	_01490_DS_
                                           _01492_DS_:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	}
004934   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
004936   f009
004938   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00493a   f008
00493c   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
00493e   f007
004940   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004942   f006
004944   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004946   f005
004948   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00494a   f004
00494c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00494e   f003
004950   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004952   f002
004954   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004956   f001
004958   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00495a   f000
00495c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00495e   ffd9
004960   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__at	code
                                           _at:
                                           ;	.line	20; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	void at(int p)
004da8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004daa   ffe5
004dac   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004dae   ffd9
004db0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004db2   ffe5
004db4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004db6   ffe5
004db8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004dba   ffe5
004dbc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004dbe   ffe5
004dc0   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004dc2   ffe5
004dc4   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004dc6   ffe5
004dc8   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004dca   ffe5
004dcc   0e02     movlw   0x02             	MOVLW	0x02
004dce   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004dd0   f000
004dd2   0e03     movlw   0x03             	MOVLW	0x03
004dd4   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004dd6   f001
                                           ;	.line	24; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	for(n=0;n<p;n++){
004dd8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004dda   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01458_DS_:
004ddc   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004dde   0f80     addlw   0x80             	ADDLW	0x80
004de0   6ef3     movwf   0xf3, 0x0        	MOVWF	PRODL
004de2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004de4   0f80     addlw   0x80             	ADDLW	0x80
004de6   5cf3     subwf   0xf3, 0x0, 0x0   	SUBWF	PRODL, W
004de8   e102     bnz     0x004dee         	BNZ	_01475_DS_
004dea   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004dec   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01475_DS_:
004dee   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004df0   d069     bra     0x004ec4         	BRA	_01460_DS_
004df2   0105     movlb   0x5              	BANKSEL	(_m2p + 1)
                                           ;	.line	26; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	PORTB=m2[m2p]+m1[m1p];
004df4   51ee     movf    0xee, 0x0, 0x1   	MOVF	(_m2p + 1), W, B
004df6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
004df8   51ed     movf    0xed, 0x0, 0x1   	MOVF	_m2p, W, B
004dfa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004dfc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004dfe   0e02     movlw   0x02             	MOVLW	0x02
004e00   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e02   ec9e     call    0x005d3c, 0x0    	CALL	__mulint
004e04   f02e
004e06   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
004e08   cff3     movff   0xff3, 0x005     	MOVFF	PRODL, r0x05
004e0a   f005
004e0c   0e04     movlw   0x04             	MOVLW	0x04
004e0e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004e10   0ee1     movlw   0xe1             	MOVLW	LOW(_m2)
004e12   2604     addwf   0x04, 0x1, 0x0   	ADDWF	r0x04, F
004e14   0e05     movlw   0x05             	MOVLW	HIGH(_m2)
004e16   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
004e18   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
004e1a   ffe9
004e1c   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
004e1e   ffea
004e20   cfee     movff   0xfee, 0x004     	MOVFF	POSTINC0, r0x04
004e22   f004
004e24   cfef     movff   0xfef, 0x005     	MOVFF	INDF0, r0x05
004e26   f005
004e28   0105     movlb   0x5              	BANKSEL	(_m1p + 1)
004e2a   51ec     movf    0xec, 0x0, 0x1   	MOVF	(_m1p + 1), W, B
004e2c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
004e2e   51eb     movf    0xeb, 0x0, 0x1   	MOVF	_m1p, W, B
004e30   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e32   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004e34   0e02     movlw   0x02             	MOVLW	0x02
004e36   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e38   ec9e     call    0x005d3c, 0x0    	CALL	__mulint
004e3a   f02e
004e3c   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
004e3e   cff3     movff   0xff3, 0x006     	MOVFF	PRODL, r0x06
004e40   f006
004e42   0e04     movlw   0x04             	MOVLW	0x04
004e44   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004e46   0ed9     movlw   0xd9             	MOVLW	LOW(_m1)
004e48   2605     addwf   0x05, 0x1, 0x0   	ADDWF	r0x05, F
004e4a   0e05     movlw   0x05             	MOVLW	HIGH(_m1)
004e4c   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
004e4e   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
004e50   ffe9
004e52   c006     movff   0x006, 0xfea     	MOVFF	r0x06, FSR0H
004e54   ffea
004e56   cfee     movff   0xfee, 0x005     	MOVFF	POSTINC0, r0x05
004e58   f005
004e5a   cfef     movff   0xfef, 0x006     	MOVFF	INDF0, r0x06
004e5c   f006
004e5e   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
004e60   2404     addwf   0x04, 0x0, 0x0   	ADDWF	r0x04, W
004e62   6e81     movwf   0x81, 0x0        	MOVWF	_PORTB
004e64   0105     movlb   0x5              	BANKSEL	(_t + 1)
                                           ;	.line	27; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	Delayms(t);
004e66   51f0     movf    0xf0, 0x0, 0x1   	MOVF	(_t + 1), W, B
004e68   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
004e6a   51ef     movf    0xef, 0x0, 0x1   	MOVF	_t, W, B
004e6c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e6e   eca1     call    0x005542, 0x0    	CALL	_Delayms
004e70   f02a
004e72   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004e74   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004e76   0105     movlb   0x5              	BANKSEL	_m1p
                                           ;	.line	28; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	m1p++;
004e78   3feb     incfsz  0xeb, 0x1, 0x1   	INCFSZ	_m1p, F, B
004e7a   d001     bra     0x004e7e         	BRA	_31768_DS_
                                           ; removed redundant BANKSEL
004e7c   2bec     incf    0xec, 0x1, 0x1   	INCF	(_m1p + 1), F, B
                                           _31768_DS_:
004e7e   0105     movlb   0x5              	BANKSEL	_m2p
                                           ;	.line	29; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	m2p++;
004e80   3fed     incfsz  0xed, 0x1, 0x1   	INCFSZ	_m2p, F, B
004e82   d001     bra     0x004e86         	BRA	_41769_DS_
                                           ; removed redundant BANKSEL
004e84   2bee     incf    0xee, 0x1, 0x1   	INCF	(_m2p + 1), F, B
                                           _41769_DS_:
004e86   0105     movlb   0x5              	BANKSEL	_m1p
                                           ;	.line	30; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if (m1p==cantidad_p){m1p=0;}
004e88   51eb     movf    0xeb, 0x0, 0x1   	MOVF	_m1p, W, B
004e8a   0105     movlb   0x5              	BANKSEL	_cantidad_p
004e8c   19e9     xorwf   0xe9, 0x0, 0x1   	XORWF	_cantidad_p, W, B
004e8e   e105     bnz     0x004e9a         	BNZ	_01476_DS_
004e90   0105     movlb   0x5              	BANKSEL	(_m1p + 1)
004e92   51ec     movf    0xec, 0x0, 0x1   	MOVF	(_m1p + 1), W, B
004e94   0105     movlb   0x5              	BANKSEL	(_cantidad_p + 1)
004e96   19ea     xorwf   0xea, 0x0, 0x1   	XORWF	(_cantidad_p + 1), W, B
004e98   e001     bz      0x004e9c         	BZ	_01477_DS_
                                           _01476_DS_:
004e9a   d003     bra     0x004ea2         	BRA	_01453_DS_
                                           _01477_DS_:
004e9c   0105     movlb   0x5              	BANKSEL	_m1p
004e9e   6beb     clrf    0xeb, 0x1        	CLRF	_m1p, B
                                           ; removed redundant BANKSEL
004ea0   6bec     clrf    0xec, 0x1        	CLRF	(_m1p + 1), B
                                           _01453_DS_:
004ea2   0105     movlb   0x5              	BANKSEL	_m2p
                                           ;	.line	31; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	if (m2p==cantidad_p){m2p=0;}
004ea4   51ed     movf    0xed, 0x0, 0x1   	MOVF	_m2p, W, B
004ea6   0105     movlb   0x5              	BANKSEL	_cantidad_p
004ea8   19e9     xorwf   0xe9, 0x0, 0x1   	XORWF	_cantidad_p, W, B
004eaa   e105     bnz     0x004eb6         	BNZ	_01478_DS_
004eac   0105     movlb   0x5              	BANKSEL	(_m2p + 1)
004eae   51ee     movf    0xee, 0x0, 0x1   	MOVF	(_m2p + 1), W, B
004eb0   0105     movlb   0x5              	BANKSEL	(_cantidad_p + 1)
004eb2   19ea     xorwf   0xea, 0x0, 0x1   	XORWF	(_cantidad_p + 1), W, B
004eb4   e001     bz      0x004eb8         	BZ	_01479_DS_
                                           _01478_DS_:
004eb6   d003     bra     0x004ebe         	BRA	_01459_DS_
                                           _01479_DS_:
004eb8   0105     movlb   0x5              	BANKSEL	_m2p
004eba   6bed     clrf    0xed, 0x1        	CLRF	_m2p, B
                                           ; removed redundant BANKSEL
004ebc   6bee     clrf    0xee, 0x1        	CLRF	(_m2p + 1), B
                                           _01459_DS_:
                                           ;	.line	24; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	for(n=0;n<p;n++){
004ebe   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
004ec0   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
004ec2   d78c     bra     0x004ddc         	BRA	_01458_DS_
                                           _01460_DS_:
                                           ;	.line	33; /home/vbasel/.icaro/v4/firmware/source/drawrobot/user.c	}
004ec4   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004ec6   f006
004ec8   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004eca   f005
004ecc   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004ece   f004
004ed0   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004ed2   f003
004ed4   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004ed6   f002
004ed8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004eda   f001
004edc   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004ede   f000
004ee0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ee2   ffd9
004ee4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__Serial_printf	code
                                           _Serial_printf:
                                           ;	.line	513; /home/vbasel/.icaro/v4/firmware/core/serial.c	void Serial_printf(char *fmt, ...)
006176   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006178   ffe5
00617a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00617c   ffd9
00617e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006180   ffe5
006182   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006184   ffe5
006186   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006188   ffe5
                                           ;	.line	517; /home/vbasel/.icaro/v4/firmware/core/serial.c	va_start(args, fmt);
00618a   0e02     movlw   0x02             	MOVLW	0x02
00618c   24d9     addwf   0xd9, 0x0, 0x0   	ADDWF	FSR2L, W
00618e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006190   0e00     movlw   0x00             	MOVLW	0x00
006192   20da     addwfc  0xda, 0x0, 0x0   	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVWF	r0x01
006194   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
006196   0e80     movlw   0x80             	MOVLW	0x80
006198   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00619a   0e03     movlw   0x03             	MOVLW	0x03
00619c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00619e   0e00     movlw   0x00             	MOVLW	0x00
0061a0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0061a2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
                                           ;	.line	518; /home/vbasel/.icaro/v4/firmware/core/serial.c	pprintf(Serial_putchar, fmt, args);
0061a4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0061a6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061a8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0061aa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061ac   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0061ae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061b0   0e04     movlw   0x04             	MOVLW	0x04
0061b2   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
0061b4   ffe5
0061b6   0e03     movlw   0x03             	MOVLW	0x03
0061b8   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
0061ba   ffe5
0061bc   0e02     movlw   0x02             	MOVLW	0x02
0061be   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
0061c0   ffe5
0061c2   0e00     movlw   0x00             	MOVLW	UPPER(_Serial_putchar)
0061c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061c6   0e66     movlw   0x66             	MOVLW	HIGH(_Serial_putchar)
0061c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061ca   0ea6     movlw   0xa6             	MOVLW	LOW(_Serial_putchar)
0061cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0061ce   ecfe     call    0x005bfc, 0x0    	CALL	_pprintf
0061d0   f02d
0061d2   0e09     movlw   0x09             	MOVLW	0x09
0061d4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/core/serial.c	}
0061d6   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0061d8   f002
0061da   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0061dc   f001
0061de   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0061e0   f000
0061e2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0061e4   ffd9
0061e6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__Serial_printNumber	code
                                           _Serial_printNumber:
                                           ;	.line	405; /home/vbasel/.icaro/v4/firmware/core/serial.c	void Serial_printNumber(long value, u8 base)
002d8a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002d8c   ffe5
002d8e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002d90   ffd9
002d92   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002d94   ffe5
002d96   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002d98   ffe5
002d9a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002d9c   ffe5
002d9e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002da0   ffe5
002da2   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002da4   ffe5
002da6   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
002da8   ffe5
002daa   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
002dac   ffe5
002dae   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
002db0   ffe5
002db2   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
002db4   ffe5
002db6   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
002db8   ffe5
002dba   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
002dbc   ffe5
002dbe   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
002dc0   ffe5
002dc2   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
002dc4   ffe5
002dc6   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
002dc8   ffe5
002dca   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
002dcc   ffe5
002dce   c00f     movff   0x00f, 0xfe5     	MOVFF	r0x0f, POSTDEC1
002dd0   ffe5
002dd2   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
002dd4   ffe5
002dd6   c011     movff   0x011, 0xfe5     	MOVFF	r0x11, POSTDEC1
002dd8   ffe5
002dda   c012     movff   0x012, 0xfe5     	MOVFF	r0x12, POSTDEC1
002ddc   ffe5
002dde   c013     movff   0x013, 0xfe5     	MOVFF	r0x13, POSTDEC1
002de0   ffe5
002de2   0e02     movlw   0x02             	MOVLW	0x02
002de4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002de6   f000
002de8   0e03     movlw   0x03             	MOVLW	0x03
002dea   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002dec   f001
002dee   0e04     movlw   0x04             	MOVLW	0x04
002df0   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
002df2   f002
002df4   0e05     movlw   0x05             	MOVLW	0x05
002df6   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
002df8   f003
002dfa   0e06     movlw   0x06             	MOVLW	0x06
002dfc   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
002dfe   f004
                                           ;	.line	413; /home/vbasel/.icaro/v4/firmware/core/serial.c	u8 *tp = tmp;       // pointer on tmp
002e00   0e06     movlw   0x06             	MOVLW	HIGH(_Serial_printNumber_tmp_1_227)
002e02   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
002e04   0ed4     movlw   0xd4             	MOVLW	LOW(_Serial_printNumber_tmp_1_227)
002e06   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002e08   0e80     movlw   0x80             	MOVLW	0x80
002e0a   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
                                           ;	.line	416; /home/vbasel/.icaro/v4/firmware/core/serial.c	u8 *sp = string;    // pointer on string
002e0c   0e06     movlw   0x06             	MOVLW	HIGH(_Serial_printNumber_string_1_227)
002e0e   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
002e10   0ee0     movlw   0xe0             	MOVLW	LOW(_Serial_printNumber_string_1_227)
002e12   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
002e14   0e80     movlw   0x80             	MOVLW	0x80
002e16   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
                                           ;	.line	418; /home/vbasel/.icaro/v4/firmware/core/serial.c	if (value==0)
002e18   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002e1a   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
002e1c   1002     iorwf   0x02, 0x0, 0x0   	IORWF	r0x02, W
002e1e   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
002e20   e106     bnz     0x002e2e         	BNZ	_01386_DS_
                                           ;	.line	420; /home/vbasel/.icaro/v4/firmware/core/serial.c	Serial_putchar('0');
002e22   0e30     movlw   0x30             	MOVLW	0x30
002e24   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e26   ec53     call    0x0066a6, 0x0    	CALL	_Serial_putchar
002e28   f033
002e2a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/core/serial.c	return;
002e2c   d0e9     bra     0x003000         	BRA	_01401_DS_
                                           _01386_DS_:
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/core/serial.c	sign = ( (base == 10) && (value < 0) );
002e2e   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
002e30   0a0a     xorlw   0x0a             	XORLW	0x0a
002e32   e104     bnz     0x002e3c         	BNZ	_01403_DS_
002e34   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
002e36   ae03     btfss   0x03, 0x7, 0x0   	BTFSS	r0x03, 7
002e38   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002e3a   e202     bc      0x002e40         	BC	_01404_DS_
                                           _01403_DS_:
002e3c   6a0b     clrf    0x0b, 0x0        	CLRF	r0x0b
002e3e   d002     bra     0x002e44         	BRA	_01405_DS_
                                           _01404_DS_:
002e40   0e01     movlw   0x01             	MOVLW	0x01
002e42   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
                                           _01405_DS_:
002e44   c00b     movff   0x00b, 0x00c     	MOVFF	r0x0b, r0x0c
002e46   f00c
                                           ;	.line	426; /home/vbasel/.icaro/v4/firmware/core/serial.c	if (sign)
002e48   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002e4a   e00f     bz      0x002e6a         	BZ	_01388_DS_
                                           ;	.line	427; /home/vbasel/.icaro/v4/firmware/core/serial.c	v = -value;
002e4c   1c03     comf    0x03, 0x0, 0x0   	COMF	r0x03, W
002e4e   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
002e50   1c02     comf    0x02, 0x0, 0x0   	COMF	r0x02, W
002e52   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
002e54   1c01     comf    0x01, 0x0, 0x0   	COMF	r0x01, W
002e56   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
002e58   1c00     comf    0x00, 0x0, 0x0   	COMF	r0x00, W
002e5a   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
002e5c   2a0b     incf    0x0b, 0x1, 0x0   	INCF	r0x0b, F
002e5e   e104     bnz     0x002e68         	BNZ	_01436_DS_
002e60   2a0d     incf    0x0d, 0x1, 0x0   	INCF	r0x0d, F
002e62   e102     bnz     0x002e68         	BNZ	_01436_DS_
002e64   4a0e     infsnz  0x0e, 0x1, 0x0   	INFSNZ	r0x0e, F
002e66   2a0f     incf    0x0f, 0x1, 0x0   	INCF	r0x0f, F
                                           _01436_DS_:
002e68   d008     bra     0x002e7a         	BRA	_01393_DS_
                                           _01388_DS_:
                                           ;	.line	429; /home/vbasel/.icaro/v4/firmware/core/serial.c	v = (unsigned long)value;
002e6a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002e6c   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
002e6e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002e70   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
002e72   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002e74   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
002e76   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002e78   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
                                           _01393_DS_:
                                           ;	.line	432; /home/vbasel/.icaro/v4/firmware/core/serial.c	while (v)
002e7a   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002e7c   100d     iorwf   0x0d, 0x0, 0x0   	IORWF	r0x0d, W
002e7e   100e     iorwf   0x0e, 0x0, 0x0   	IORWF	r0x0e, W
002e80   100f     iorwf   0x0f, 0x0, 0x0   	IORWF	r0x0f, W
002e82   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
002e84   d067     bra     0x002f54         	BRA	_01395_DS_
                                           ;	.line	434; /home/vbasel/.icaro/v4/firmware/core/serial.c	i = v % base;
002e86   c004     movff   0x004, 0x000     	MOVFF	r0x04, r0x00
002e88   f000
002e8a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002e8c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002e8e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002e90   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e92   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e94   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e96   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002e98   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e9a   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002e9c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e9e   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002ea0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ea2   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002ea4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ea6   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002ea8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002eaa   ec73     call    0x004ee6, 0x0    	CALL	__modulong
002eac   f027
002eae   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
002eb0   cff3     movff   0xff3, 0x011     	MOVFF	PRODL, r0x11
002eb2   f011
002eb4   cff4     movff   0xff4, 0x012     	MOVFF	PRODH, r0x12
002eb6   f012
002eb8   cfe9     movff   0xfe9, 0x013     	MOVFF	FSR0L, r0x13
002eba   f013
002ebc   0e08     movlw   0x08             	MOVLW	0x08
002ebe   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	435; /home/vbasel/.icaro/v4/firmware/core/serial.c	v = v / base;
002ec0   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002ec2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ec4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002ec6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ec8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002eca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ecc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002ece   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ed0   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002ed2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ed4   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002ed6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ed8   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002eda   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002edc   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002ede   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ee0   ec9f     call    0x00513e, 0x0    	CALL	__divulong
002ee2   f028
002ee4   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
002ee6   cff3     movff   0xff3, 0x00d     	MOVFF	PRODL, r0x0d
002ee8   f00d
002eea   cff4     movff   0xff4, 0x00e     	MOVFF	PRODH, r0x0e
002eec   f00e
002eee   cfe9     movff   0xfe9, 0x00f     	MOVFF	FSR0L, r0x0f
002ef0   f00f
002ef2   0e08     movlw   0x08             	MOVLW	0x08
002ef4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/core/serial.c	if (i < 10)
002ef6   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
002ef8   0f80     addlw   0x80             	ADDLW	0x80
002efa   0f80     addlw   0x80             	ADDLW	0x80
002efc   e108     bnz     0x002f0e         	BNZ	_01437_DS_
002efe   0e00     movlw   0x00             	MOVLW	0x00
002f00   5c12     subwf   0x12, 0x0, 0x0   	SUBWF	r0x12, W
002f02   e105     bnz     0x002f0e         	BNZ	_01437_DS_
002f04   0e00     movlw   0x00             	MOVLW	0x00
002f06   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
002f08   e102     bnz     0x002f0e         	BNZ	_01437_DS_
002f0a   0e0a     movlw   0x0a             	MOVLW	0x0a
002f0c   5c10     subwf   0x10, 0x0, 0x0   	SUBWF	r0x10, W
                                           _01437_DS_:
002f0e   e212     bc      0x002f34         	BC	_01391_DS_
                                           ;	.line	438; /home/vbasel/.icaro/v4/firmware/core/serial.c	*tp++ = i + '0';
002f10   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
002f12   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002f14   0e30     movlw   0x30             	MOVLW	0x30
002f16   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002f18   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002f1a   ffe5
002f1c   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
002f1e   ffe9
002f20   c006     movff   0x006, 0xff3     	MOVFF	r0x06, PRODL
002f22   fff3
002f24   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
002f26   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
002f28   f033
002f2a   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
002f2c   e302     bnc     0x002f32         	BNC	_01438_DS_
002f2e   4a06     infsnz  0x06, 0x1, 0x0   	INFSNZ	r0x06, F
002f30   2a07     incf    0x07, 0x1, 0x0   	INCF	r0x07, F
                                           _01438_DS_:
002f32   d7a3     bra     0x002e7a         	BRA	_01393_DS_
                                           _01391_DS_:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/core/serial.c	*tp++ = i + 'A' - 10;
002f34   0e37     movlw   0x37             	MOVLW	0x37
002f36   2610     addwf   0x10, 0x1, 0x0   	ADDWF	r0x10, F
002f38   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
002f3a   ffe5
002f3c   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
002f3e   ffe9
002f40   c006     movff   0x006, 0xff3     	MOVFF	r0x06, PRODL
002f42   fff3
002f44   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
002f46   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
002f48   f033
002f4a   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
002f4c   e302     bnc     0x002f52         	BNC	_01439_DS_
002f4e   4a06     infsnz  0x06, 0x1, 0x0   	INFSNZ	r0x06, F
002f50   2a07     incf    0x07, 0x1, 0x0   	INCF	r0x07, F
                                           _01439_DS_:
002f52   d793     bra     0x002e7a         	BRA	_01393_DS_
                                           _01395_DS_:
                                           ;	.line	444; /home/vbasel/.icaro/v4/firmware/core/serial.c	if (sign)
002f54   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002f56   e00d     bz      0x002f72         	BZ	_01414_DS_
                                           ;	.line	445; /home/vbasel/.icaro/v4/firmware/core/serial.c	*sp++ = '-';
002f58   0e2d     movlw   0x2d             	MOVLW	0x2d
002f5a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002f5c   c008     movff   0x008, 0xfe9     	MOVFF	r0x08, FSR0L
002f5e   ffe9
002f60   c009     movff   0x009, 0xff3     	MOVFF	r0x09, PRODL
002f62   fff3
002f64   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
002f66   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
002f68   f033
002f6a   2a08     incf    0x08, 0x1, 0x0   	INCF	r0x08, F
002f6c   e302     bnc     0x002f72         	BNC	_01414_DS_
002f6e   4a09     infsnz  0x09, 0x1, 0x0   	INFSNZ	r0x09, F
002f70   2a0a     incf    0x0a, 0x1, 0x0   	INCF	r0x0a, F
                                           _01440_DS_:
                                           _01414_DS_:
                                           ;	.line	448; /home/vbasel/.icaro/v4/firmware/core/serial.c	while (tp > tmp)
002f72   c005     movff   0x005, 0x000     	MOVFF	r0x05, r0x00
002f74   f000
002f76   c006     movff   0x006, 0x001     	MOVFF	r0x06, r0x01
002f78   f001
002f7a   c007     movff   0x007, 0x002     	MOVFF	r0x07, r0x02
002f7c   f002
002f7e   c008     movff   0x008, 0x003     	MOVFF	r0x08, r0x03
002f80   f003
002f82   c009     movff   0x009, 0x004     	MOVFF	r0x09, r0x04
002f84   f004
002f86   c00a     movff   0x00a, 0x005     	MOVFF	r0x0a, r0x05
002f88   f005
                                           _01398_DS_:
002f8a   0e06     movlw   0x06             	MOVLW	HIGH(_Serial_printNumber_tmp_1_227)
002f8c   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
002f8e   0ed4     movlw   0xd4             	MOVLW	LOW(_Serial_printNumber_tmp_1_227)
002f90   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
002f92   0e80     movlw   0x80             	MOVLW	0x80
002f94   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
002f96   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002f98   5c08     subwf   0x08, 0x0, 0x0   	SUBWF	r0x08, W
002f9a   e105     bnz     0x002fa6         	BNZ	_01441_DS_
002f9c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002f9e   5c07     subwf   0x07, 0x0, 0x0   	SUBWF	r0x07, W
002fa0   e102     bnz     0x002fa6         	BNZ	_01441_DS_
002fa2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002fa4   5c06     subwf   0x06, 0x0, 0x0   	SUBWF	r0x06, W
                                           _01441_DS_:
002fa6   e21a     bc      0x002fdc         	BC	_01400_DS_
                                           ;	.line	449; /home/vbasel/.icaro/v4/firmware/core/serial.c	*sp++ = *--tp;
002fa8   0eff     movlw   0xff             	MOVLW	0xff
002faa   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002fac   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002fae   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002fb0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
002fb2   ffe9
002fb4   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
002fb6   fff3
002fb8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002fba   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
002fbc   f033
002fbe   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
002fc0   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
002fc2   ffe5
002fc4   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002fc6   ffe9
002fc8   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
002fca   fff3
002fcc   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
002fce   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
002fd0   f033
002fd2   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
002fd4   e302     bnc     0x002fda         	BNC	_01442_DS_
002fd6   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
002fd8   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01442_DS_:
002fda   d7d7     bra     0x002f8a         	BRA	_01398_DS_
                                           _01400_DS_:
                                           ;	.line	452; /home/vbasel/.icaro/v4/firmware/core/serial.c	*sp = 0;
002fdc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002fde   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002fe0   ffe9
002fe2   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
002fe4   fff3
002fe6   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
002fe8   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
002fea   f033
                                           ;	.line	454; /home/vbasel/.icaro/v4/firmware/core/serial.c	Serial_print(string);
002fec   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
002fee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ff0   0e06     movlw   0x06             	MOVLW	HIGH(_Serial_printNumber_string_1_227)
002ff2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ff4   0ee0     movlw   0xe0             	MOVLW	LOW(_Serial_printNumber_string_1_227)
002ff6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ff8   ec0e     call    0x00601c, 0x0    	CALL	_Serial_print
002ffa   f030
002ffc   0e03     movlw   0x03             	MOVLW	0x03
002ffe   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _01401_DS_:
                                           ;	.line	455; /home/vbasel/.icaro/v4/firmware/core/serial.c	}
003000   cfe4     movff   0xfe4, 0x013     	MOVFF	PREINC1, r0x13
003002   f013
003004   cfe4     movff   0xfe4, 0x012     	MOVFF	PREINC1, r0x12
003006   f012
003008   cfe4     movff   0xfe4, 0x011     	MOVFF	PREINC1, r0x11
00300a   f011
00300c   cfe4     movff   0xfe4, 0x010     	MOVFF	PREINC1, r0x10
00300e   f010
003010   cfe4     movff   0xfe4, 0x00f     	MOVFF	PREINC1, r0x0f
003012   f00f
003014   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
003016   f00e
003018   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
00301a   f00d
00301c   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
00301e   f00c
003020   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
003022   f00b
003024   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
003026   f00a
003028   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
00302a   f009
00302c   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00302e   f008
003030   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
003032   f007
003034   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003036   f006
003038   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00303a   f005
00303c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00303e   f004
003040   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003042   f003
003044   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003046   f002
003048   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00304a   f001
00304c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00304e   f000
003050   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003052   ffd9
003054   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__Serial_println	code
                                           _Serial_println:
                                           ;	.line	390; /home/vbasel/.icaro/v4/firmware/core/serial.c	void Serial_println(char *string)
006256   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006258   ffe5
00625a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00625c   ffd9
00625e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006260   ffe5
006262   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006264   ffe5
006266   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006268   ffe5
00626a   0e02     movlw   0x02             	MOVLW	0x02
00626c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00626e   f000
006270   0e03     movlw   0x03             	MOVLW	0x03
006272   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006274   f001
006276   0e04     movlw   0x04             	MOVLW	0x04
006278   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
00627a   f002
                                           ;	.line	392; /home/vbasel/.icaro/v4/firmware/core/serial.c	Serial_print(string);
00627c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00627e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006280   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
006282   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006284   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006286   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006288   ec0e     call    0x00601c, 0x0    	CALL	_Serial_print
00628a   f030
00628c   0e03     movlw   0x03             	MOVLW	0x03
00628e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/core/serial.c	Serial_print("\n\r");
006290   0e00     movlw   0x00             	MOVLW	UPPER(___str_1)
006292   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006294   0e59     movlw   0x59             	MOVLW	HIGH(___str_1)
006296   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006298   0e2e     movlw   0x2e             	MOVLW	LOW(___str_1)
00629a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00629c   ec0e     call    0x00601c, 0x0    	CALL	_Serial_print
00629e   f030
0062a0   0e03     movlw   0x03             	MOVLW	0x03
0062a2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	394; /home/vbasel/.icaro/v4/firmware/core/serial.c	}
0062a4   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0062a6   f002
0062a8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0062aa   f001
0062ac   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0062ae   f000
0062b0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0062b2   ffd9
0062b4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__Serial_print	code
                                           _Serial_print:
                                           ;	.line	310; /home/vbasel/.icaro/v4/firmware/core/serial.c	void Serial_print(char *s)
00601c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00601e   ffe5
006020   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006022   ffd9
006024   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006026   ffe5
006028   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00602a   ffe5
00602c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00602e   ffe5
006030   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006032   ffe5
006034   0e02     movlw   0x02             	MOVLW	0x02
006036   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006038   f000
00603a   0e03     movlw   0x03             	MOVLW	0x03
00603c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00603e   f001
006040   0e04     movlw   0x04             	MOVLW	0x04
006042   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
006044   f002
                                           _01363_DS_:
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/serial.c	while (*s++)
006046   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
006048   ffe9
00604a   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
00604c   fff3
00604e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
006050   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
006052   f033
006054   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
006056   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
006058   e302     bnc     0x00605e         	BNC	_01375_DS_
00605a   4a01     infsnz  0x01, 0x1, 0x0   	INFSNZ	r0x01, F
00605c   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
                                           _01375_DS_:
00605e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
006060   e00c     bz      0x00607a         	BZ	_01366_DS_
                                           ;	.line	318; /home/vbasel/.icaro/v4/firmware/core/serial.c	Serial_putchar(*s);
006062   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
006064   ffe9
006066   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
006068   fff3
00606a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00606c   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
00606e   f033
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	r0x03, W
006070   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006072   ec53     call    0x0066a6, 0x0    	CALL	_Serial_putchar
006074   f033
006076   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006078   d7e6     bra     0x006046         	BRA	_01363_DS_
                                           _01366_DS_:
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/core/serial.c	}
00607a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00607c   f003
00607e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006080   f002
006082   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006084   f001
006086   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006088   f000
00608a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00608c   ffd9
00608e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__Serial_read	code
                                           _Serial_read:
                                           ;	.line	283; /home/vbasel/.icaro/v4/firmware/core/serial.c	u8 Serial_read()
0062b6   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0062b8   ffe5
0062ba   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0062bc   ffe5
0062be   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0062c0   ffe5
                                           ;	.line	285; /home/vbasel/.icaro/v4/firmware/core/serial.c	u8 caractere=0;
0062c2   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0062c4   0105     movlb   0x5              	BANKSEL	_wpointer
                                           ;	.line	287; /home/vbasel/.icaro/v4/firmware/core/serial.c	if (Serial_available())
0062c6   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_wpointer, W, B
0062c8   0105     movlb   0x5              	BANKSEL	_rpointer
0062ca   19d8     xorwf   0xd8, 0x0, 0x1   	XORWF	_rpointer, W, B
0062cc   e017     bz      0x0062fc         	BZ	_01346_DS_
                                           ;	.line	289; /home/vbasel/.icaro/v4/firmware/core/serial.c	PIE1bits.RCIE = 0;             // Atomic operation start
0062ce   9a9d     bcf     0x9d, 0x5, 0x0   	BCF	_PIE1bits, 5
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/core/serial.c	caractere = rx[rpointer++];
0062d0   c5d8     movff   0x5d8, 0x001     	MOVFF	_rpointer, r0x01
0062d2   f001
0062d4   0105     movlb   0x5              	BANKSEL	_rpointer
0062d6   2bd8     incf    0xd8, 0x1, 0x1   	INCF	_rpointer, F, B
0062d8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0062da   0e00     movlw   0x00             	MOVLW	LOW(_rx)
0062dc   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
0062de   0e06     movlw   0x06             	MOVLW	HIGH(_rx)
0062e0   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0062e2   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0062e4   ffe9
0062e6   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0062e8   ffea
0062ea   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0062ec   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	291; /home/vbasel/.icaro/v4/firmware/core/serial.c	if (rpointer == RXBUFFERLENGTH)
0062ee   51d8     movf    0xd8, 0x0, 0x1   	MOVF	_rpointer, W, B
0062f0   0a80     xorlw   0x80             	XORLW	0x80
0062f2   e103     bnz     0x0062fa         	BNZ	_01344_DS_
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/core/serial.c	rpointer = 1;
0062f4   0e01     movlw   0x01             	MOVLW	0x01
0062f6   0105     movlb   0x5              	BANKSEL	_rpointer
0062f8   6fd8     movwf   0xd8, 0x1        	MOVWF	_rpointer, B
                                           _01344_DS_:
                                           ;	.line	293; /home/vbasel/.icaro/v4/firmware/core/serial.c	PIE1bits.RCIE = 1;             // Atomic operation end
0062fa   8a9d     bsf     0x9d, 0x5, 0x0   	BSF	_PIE1bits, 5
                                           _01346_DS_:
                                           ;	.line	295; /home/vbasel/.icaro/v4/firmware/core/serial.c	return(caractere);
0062fc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	296; /home/vbasel/.icaro/v4/firmware/core/serial.c	}
0062fe   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006300   f002
006302   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006304   f001
006306   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006308   f000
00630a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__Serial_putchar	code
                                           _Serial_putchar:
                                           ;	.line	251; /home/vbasel/.icaro/v4/firmware/core/serial.c	void Serial_putchar(u8 caractere)
0066a6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0066a8   ffe5
0066aa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0066ac   ffd9
0066ae   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0066b0   ffe5
0066b2   0e02     movlw   0x02             	MOVLW	0x02
0066b4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0066b6   f000
                                           _01335_DS_:
                                           ;	.line	261; /home/vbasel/.icaro/v4/firmware/core/serial.c	while (!TXSTAbits.TRMT);
0066b8   a2ac     btfss   0xac, 0x1, 0x0   	BTFSS	_TXSTAbits, 1
0066ba   d7fe     bra     0x0066b8         	BRA	_01335_DS_
                                           ;	.line	262; /home/vbasel/.icaro/v4/firmware/core/serial.c	TXREG=caractere;            // yes, send char
0066bc   c000     movff   0x000, 0xfad     	MOVFF	r0x00, _TXREG
0066be   ffad
                                           ;	.line	275; /home/vbasel/.icaro/v4/firmware/core/serial.c	}
0066c0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0066c2   f000
0066c4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0066c6   ffd9
0066c8   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__serial_interrupt	code
                                           _serial_interrupt:
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/core/serial.c	void serial_interrupt(void)
0061e8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0061ea   ffe5
0061ec   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0061ee   ffe5
0061f0   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0061f2   ffe5
                                           ;	.line	212; /home/vbasel/.icaro/v4/firmware/core/serial.c	if (PIR1bits.RCIF)
0061f4   aa9e     btfss   0x9e, 0x5, 0x0   	BTFSS	_PIR1bits, 5
0061f6   d028     bra     0x006248         	BRA	_01311_DS_
                                           ;	.line	214; /home/vbasel/.icaro/v4/firmware/core/serial.c	PIR1bits.RCIF=0;            // clear RX interrupt flag
0061f8   9a9e     bcf     0x9e, 0x5, 0x0   	BCF	_PIR1bits, 5
                                           ;	.line	215; /home/vbasel/.icaro/v4/firmware/core/serial.c	caractere=RCREG;            // take received char
0061fa   cfae     movff   0xfae, 0x000     	MOVFF	_RCREG, r0x00
0061fc   f000
0061fe   0105     movlb   0x5              	BANKSEL	_wpointer
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/core/serial.c	if (wpointer!=RXBUFFERLENGTH-1)  // if not last place in buffer
006200   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_wpointer, W, B
006202   0a7f     xorlw   0x7f             	XORLW	0x7f
006204   e005     bz      0x006210         	BZ	_01303_DS_
                                           _01326_DS_:
006206   0105     movlb   0x5              	BANKSEL	_wpointer
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/core/serial.c	newwp=wpointer+1;       // place=place+1
006208   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_wpointer, W, B
00620a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00620c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00620e   d002     bra     0x006214         	BRA	_01304_DS_
                                           _01303_DS_:
                                           ;	.line	236; /home/vbasel/.icaro/v4/firmware/core/serial.c	newwp=1;                // else place=1
006210   0e01     movlw   0x01             	MOVLW	0x01
006212   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           _01304_DS_:
006214   0105     movlb   0x5              	BANKSEL	_rpointer
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/core/serial.c	if (rpointer!=newwp)        // if read pointer!=write pointer
006216   51d8     movf    0xd8, 0x0, 0x1   	MOVF	_rpointer, W, B
006218   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
00621a   e00f     bz      0x00623a         	BZ	_01306_DS_
                                           ;	.line	239; /home/vbasel/.icaro/v4/firmware/core/serial.c	rx[wpointer++]=caractere;// store received char
00621c   c5d7     movff   0x5d7, 0x001     	MOVFF	_wpointer, r0x01
00621e   f001
006220   0105     movlb   0x5              	BANKSEL	_wpointer
006222   2bd7     incf    0xd7, 0x1, 0x1   	INCF	_wpointer, F, B
006224   6a02     clrf    0x02, 0x0        	CLRF	r0x02
006226   0e00     movlw   0x00             	MOVLW	LOW(_rx)
006228   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
00622a   0e06     movlw   0x06             	MOVLW	HIGH(_rx)
00622c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00622e   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
006230   ffe9
006232   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
006234   ffea
006236   c000     movff   0x000, 0xfef     	MOVFF	r0x00, INDF0
006238   ffef
                                           _01306_DS_:
00623a   0105     movlb   0x5              	BANKSEL	_wpointer
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/core/serial.c	if (wpointer==RXBUFFERLENGTH)// if write pointer=length buffer
00623c   51d7     movf    0xd7, 0x0, 0x1   	MOVF	_wpointer, W, B
00623e   0a80     xorlw   0x80             	XORLW	0x80
006240   e103     bnz     0x006248         	BNZ	_01311_DS_
                                           ;	.line	242; /home/vbasel/.icaro/v4/firmware/core/serial.c	wpointer=1;             // write pointer = 1
006242   0e01     movlw   0x01             	MOVLW	0x01
006244   0105     movlb   0x5              	BANKSEL	_wpointer
006246   6fd7     movwf   0xd7, 0x1        	MOVWF	_wpointer, B
                                           _01311_DS_:
                                           ;	.line	244; /home/vbasel/.icaro/v4/firmware/core/serial.c	}
006248   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00624a   f002
00624c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00624e   f001
006250   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006252   f000
006254   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__Serial_begin	code
                                           _Serial_begin:
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/core/serial.c	void Serial_begin(u32 baudrate)
005256   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005258   ffe5
00525a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00525c   ffd9
00525e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005260   ffe5
005262   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005264   ffe5
005266   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005268   ffe5
00526a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00526c   ffe5
00526e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
005270   ffe5
005272   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
005274   ffe5
005276   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
005278   ffe5
00527a   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
00527c   ffe5
00527e   0e02     movlw   0x02             	MOVLW	0x02
005280   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005282   f000
005284   0e03     movlw   0x03             	MOVLW	0x03
005286   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005288   f001
00528a   0e04     movlw   0x04             	MOVLW	0x04
00528c   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
00528e   f002
005290   0e05     movlw   0x05             	MOVLW	0x05
005292   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
005294   f003
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/core/serial.c	u16 spbrg = (u16)BaudRateDivisor(System_getCpuFrequency(), baudrate);
005296   ecd6     call    0x003bac, 0x0    	CALL	_System_getCpuFrequency
005298   f01d
00529a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00529c   cff3     movff   0xff3, 0x005     	MOVFF	PRODL, r0x05
00529e   f005
0052a0   cff4     movff   0xff4, 0x006     	MOVFF	PRODH, r0x06
0052a2   f006
0052a4   cfe9     movff   0xfe9, 0x007     	MOVFF	FSR0L, r0x07
0052a6   f007
0052a8   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0052aa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052ac   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0052ae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052b0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0052b2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052b4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0052b6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052b8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0052ba   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0052bc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0052be   0e04     movlw   0x04             	MOVLW	0x04
0052c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052c2   ecc9     call    0x003792, 0x0    	CALL	__mullong
0052c4   f01b
0052c6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0052c8   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0052ca   f001
0052cc   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
0052ce   f002
0052d0   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
0052d2   f003
0052d4   0e08     movlw   0x08             	MOVLW	0x08
0052d6   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0052d8   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0052da   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052dc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0052de   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052e0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0052e2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052e4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0052e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052e8   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
0052ea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052ec   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0052ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052f0   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0052f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052f4   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0052f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052f8   ec9f     call    0x00513e, 0x0    	CALL	__divulong
0052fa   f028
0052fc   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0052fe   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
005300   f001
005302   0e08     movlw   0x08             	MOVLW	0x08
005304   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
005306   0eff     movlw   0xff             	MOVLW	0xff
005308   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00530a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ;	.line	125; /home/vbasel/.icaro/v4/firmware/core/serial.c	TRISCbits.TRISC7= 1;        // Rx1    set input
00530c   8e94     bsf     0x94, 0x7, 0x0   	BSF	_TRISCbits, 7
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/core/serial.c	TXSTAbits.BRGH=1;           // set BRGH bit
00530e   84ac     bsf     0xac, 0x2, 0x0   	BSF	_TXSTAbits, 2
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/core/serial.c	BAUDCONbits.BRG16=1;        // set 16 bits SPBRG
005310   86b8     bsf     0xb8, 0x3, 0x0   	BSF	_BAUDCONbits, 3
                                           ;	.line	128; /home/vbasel/.icaro/v4/firmware/core/serial.c	SPBRGH=high8(spbrg);        // set UART speed SPBRGH
005312   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005314   6eb0     movwf   0xb0, 0x0        	MOVWF	_SPBRGH
                                           ;	.line	129; /home/vbasel/.icaro/v4/firmware/core/serial.c	SPBRG=low8(spbrg);          // set UART speed SPBRGL
005316   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005318   6eaf     movwf   0xaf, 0x0        	MOVWF	_SPBRG
                                           ;	.line	130; /home/vbasel/.icaro/v4/firmware/core/serial.c	RCSTA=0x90;                 // set RCEN and SPEN
00531a   0e90     movlw   0x90             	MOVLW	0x90
00531c   6eab     movwf   0xab, 0x0        	MOVWF	_RCSTA
                                           ;	.line	131; /home/vbasel/.icaro/v4/firmware/core/serial.c	BAUDCONbits.RCIDL=1;        // set receive active
00531e   8cb8     bsf     0xb8, 0x6, 0x0   	BSF	_BAUDCONbits, 6
                                           ;	.line	132; /home/vbasel/.icaro/v4/firmware/core/serial.c	TXSTAbits.TXEN=1;           // enable TX
005320   8aac     bsf     0xac, 0x5, 0x0   	BSF	_TXSTAbits, 5
                                           ;	.line	135; /home/vbasel/.icaro/v4/firmware/core/serial.c	PIR1bits.RCIF = 0;         // Clear RX interrupt flag
005322   9a9e     bcf     0x9e, 0x5, 0x0   	BCF	_PIR1bits, 5
                                           ;	.line	136; /home/vbasel/.icaro/v4/firmware/core/serial.c	IPR1bits.RCIP = 1;         // Define high priority for RX interrupt
005324   8a9f     bsf     0x9f, 0x5, 0x0   	BSF	_IPR1bits, 5
                                           ;	.line	137; /home/vbasel/.icaro/v4/firmware/core/serial.c	PIE1bits.RCIE = 1;         // Enable interrupt on RX
005326   8a9d     bsf     0x9d, 0x5, 0x0   	BSF	_PIE1bits, 5
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/core/serial.c	INTCONbits.PEIE = 1;            // Enable peripheral interrupts
005328   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/core/serial.c	INTCONbits.GIEH = 1;            // Enable global HP interrupts
00532a   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/core/serial.c	INTCONbits.GIEL = 1;            // Enable global LP interrupts
00532c   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/core/serial.c	}
00532e   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
005330   f007
005332   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
005334   f006
005336   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
005338   f005
00533a   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00533c   f004
00533e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005340   f003
005342   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005344   f002
005346   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005348   f001
00534a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00534c   f000
00534e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005350   ffd9
005352   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__psprintf	code
                                           _psprintf:
                                           ;	.line	506; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 psprintf(u8 *out, const u8 *format, ...)
005f10   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005f12   ffe5
005f14   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005f16   ffd9
005f18   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005f1a   ffe5
005f1c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005f1e   ffe5
005f20   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005f22   ffe5
005f24   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005f26   ffe5
005f28   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
005f2a   ffe5
                                           ;	.line	510; /home/vbasel/.icaro/v4/firmware/core/stdio.c	va_start(args, format);
005f2c   0e05     movlw   0x05             	MOVLW	0x05
005f2e   24d9     addwf   0xd9, 0x0, 0x0   	ADDWF	FSR2L, W
005f30   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005f32   0e00     movlw   0x00             	MOVLW	0x00
005f34   20da     addwfc  0xda, 0x0, 0x0   	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVWF	r0x01
005f36   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
005f38   0e80     movlw   0x80             	MOVLW	0x80
005f3a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
005f3c   0e03     movlw   0x03             	MOVLW	0x03
005f3e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005f40   0e00     movlw   0x00             	MOVLW	0x00
005f42   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005f44   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
                                           ;	.line	511; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprint(&out, format, args);
005f46   0e02     movlw   0x02             	MOVLW	0x02
005f48   24d9     addwf   0xd9, 0x0, 0x0   	ADDWF	FSR2L, W
005f4a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
005f4c   0e00     movlw   0x00             	MOVLW	0x00
005f4e   20da     addwfc  0xda, 0x0, 0x0   	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
                                           ; #	MOVWF	r0x04
                                           ; #	MOVWF	r0x04
005f50   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; #	MOVF	r0x03, W
                                           ; #	MOVWF	r0x03
005f52   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005f54   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f56   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005f58   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f5a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005f5c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f5e   0e07     movlw   0x07             	MOVLW	0x07
005f60   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
005f62   ffe5
005f64   0e06     movlw   0x06             	MOVLW	0x06
005f66   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
005f68   ffe5
005f6a   0e05     movlw   0x05             	MOVLW	0x05
005f6c   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
005f6e   ffe5
005f70   0e80     movlw   0x80             	MOVLW	0x80
005f72   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f74   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
005f76   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f78   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
005f7a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005f7c   ec32     call    0x001a64, 0x0    	CALL	_pprint
005f7e   f00d
005f80   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005f82   0e09     movlw   0x09             	MOVLW	0x09
005f84   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
005f86   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	512; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
005f88   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
005f8a   f004
005f8c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005f8e   f003
005f90   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005f92   f002
005f94   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005f96   f001
005f98   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005f9a   f000
005f9c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005f9e   ffd9
005fa0   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__psprintf2	code
                                           _psprintf2:
                                           ;	.line	500; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 psprintf2(u8 *out, const u8 *format, va_list args)
005970   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005972   ffe5
005974   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005976   ffd9
005978   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00597a   ffe5
00597c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00597e   ffe5
005980   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005982   ffe5
005984   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005986   ffe5
005988   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00598a   ffe5
00598c   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00598e   ffe5
005990   0e02     movlw   0x02             	MOVLW	0x02
005992   cfdb     movff   0xfdb, 0x72b     	MOVFF	PLUSW2, _psprintf2_out_1_209
005994   f72b
005996   0e03     movlw   0x03             	MOVLW	0x03
005998   cfdb     movff   0xfdb, 0x72c     	MOVFF	PLUSW2, (_psprintf2_out_1_209 + 1)
00599a   f72c
00599c   0e04     movlw   0x04             	MOVLW	0x04
00599e   cfdb     movff   0xfdb, 0x72d     	MOVFF	PLUSW2, (_psprintf2_out_1_209 + 2)
0059a0   f72d
0059a2   0e05     movlw   0x05             	MOVLW	0x05
0059a4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0059a6   f000
0059a8   0e06     movlw   0x06             	MOVLW	0x06
0059aa   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0059ac   f001
0059ae   0e07     movlw   0x07             	MOVLW	0x07
0059b0   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0059b2   f002
0059b4   0e08     movlw   0x08             	MOVLW	0x08
0059b6   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0059b8   f003
0059ba   0e09     movlw   0x09             	MOVLW	0x09
0059bc   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
0059be   f004
0059c0   0e0a     movlw   0x0a             	MOVLW	0x0a
0059c2   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
0059c4   f005
                                           ;	.line	502; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprint(&out, format, args);
0059c6   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0059c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0059ca   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0059cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0059ce   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0059d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0059d2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0059d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0059d6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0059d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0059da   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0059dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0059de   0e80     movlw   0x80             	MOVLW	0x80
0059e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0059e2   0e07     movlw   0x07             	MOVLW	HIGH(_psprintf2_out_1_209)
0059e4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0059e6   0e2b     movlw   0x2b             	MOVLW	LOW(_psprintf2_out_1_209)
0059e8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0059ea   ec32     call    0x001a64, 0x0    	CALL	_pprint
0059ec   f00d
0059ee   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0059f0   0e09     movlw   0x09             	MOVLW	0x09
0059f2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0059f4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	503; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
0059f6   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0059f8   f005
0059fa   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0059fc   f004
0059fe   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005a00   f003
005a02   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005a04   f002
005a06   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005a08   f001
005a0a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005a0c   f000
005a0e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005a10   ffd9
005a12   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__pprintf	code
                                           _pprintf:
                                           ;	.line	486; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 pprintf(funcout func, const u8 *format, va_list args)
005bfc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005bfe   ffe5
005c00   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005c02   ffd9
005c04   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005c06   ffe5
005c08   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005c0a   ffe5
005c0c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005c0e   ffe5
005c10   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005c12   ffe5
005c14   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
005c16   ffe5
005c18   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
005c1a   ffe5
005c1c   0e02     movlw   0x02             	MOVLW	0x02
005c1e   cfdb     movff   0xfdb, 0x728     	MOVFF	PLUSW2, _pputchar
005c20   f728
005c22   0e03     movlw   0x03             	MOVLW	0x03
005c24   cfdb     movff   0xfdb, 0x729     	MOVFF	PLUSW2, (_pputchar + 1)
005c26   f729
005c28   0e04     movlw   0x04             	MOVLW	0x04
005c2a   cfdb     movff   0xfdb, 0x72a     	MOVFF	PLUSW2, (_pputchar + 2)
005c2c   f72a
005c2e   0e05     movlw   0x05             	MOVLW	0x05
005c30   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005c32   f000
005c34   0e06     movlw   0x06             	MOVLW	0x06
005c36   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005c38   f001
005c3a   0e07     movlw   0x07             	MOVLW	0x07
005c3c   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005c3e   f002
005c40   0e08     movlw   0x08             	MOVLW	0x08
005c42   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
005c44   f003
005c46   0e09     movlw   0x09             	MOVLW	0x09
005c48   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
005c4a   f004
005c4c   0e0a     movlw   0x0a             	MOVLW	0x0a
005c4e   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
005c50   f005
                                           ;	.line	492; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprint(0, format, args);
005c52   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
005c54   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005c56   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
005c58   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005c5a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
005c5c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005c5e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005c60   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005c62   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005c64   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005c66   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005c68   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005c6a   0e00     movlw   0x00             	MOVLW	0x00
005c6c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005c6e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005c70   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005c72   ec32     call    0x001a64, 0x0    	CALL	_pprint
005c74   f00d
005c76   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005c78   0e09     movlw   0x09             	MOVLW	0x09
005c7a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
005c7c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	493; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
005c7e   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
005c80   f005
005c82   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
005c84   f004
005c86   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005c88   f003
005c8a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005c8c   f002
005c8e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005c90   f001
005c92   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005c94   f000
005c96   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005c98   ffd9
005c9a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__pprint	code
                                           _pprint:
                                           ;	.line	338; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static u8 pprint(u8 **out, const u8 *format, va_list args)
001a64   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001a66   ffe5
001a68   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001a6a   ffd9
001a6c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001a6e   ffe5
001a70   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001a72   ffe5
001a74   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001a76   ffe5
001a78   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001a7a   ffe5
001a7c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
001a7e   ffe5
001a80   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
001a82   ffe5
001a84   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
001a86   ffe5
001a88   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
001a8a   ffe5
001a8c   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
001a8e   ffe5
001a90   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
001a92   ffe5
001a94   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
001a96   ffe5
001a98   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
001a9a   ffe5
001a9c   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
001a9e   ffe5
001aa0   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
001aa2   ffe5
001aa4   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
001aa6   ffe5
001aa8   c00f     movff   0x00f, 0xfe5     	MOVFF	r0x0f, POSTDEC1
001aaa   ffe5
001aac   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
001aae   ffe5
001ab0   c011     movff   0x011, 0xfe5     	MOVFF	r0x11, POSTDEC1
001ab2   ffe5
001ab4   c012     movff   0x012, 0xfe5     	MOVFF	r0x12, POSTDEC1
001ab6   ffe5
001ab8   c013     movff   0x013, 0xfe5     	MOVFF	r0x13, POSTDEC1
001aba   ffe5
001abc   c014     movff   0x014, 0xfe5     	MOVFF	r0x14, POSTDEC1
001abe   ffe5
001ac0   c015     movff   0x015, 0xfe5     	MOVFF	r0x15, POSTDEC1
001ac2   ffe5
001ac4   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
001ac6   ffe5
001ac8   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
001aca   ffe5
001acc   c018     movff   0x018, 0xfe5     	MOVFF	r0x18, POSTDEC1
001ace   ffe5
001ad0   c019     movff   0x019, 0xfe5     	MOVFF	r0x19, POSTDEC1
001ad2   ffe5
001ad4   0e02     movlw   0x02             	MOVLW	0x02
001ad6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
001ad8   f000
001ada   0e03     movlw   0x03             	MOVLW	0x03
001adc   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
001ade   f001
001ae0   0e04     movlw   0x04             	MOVLW	0x04
001ae2   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
001ae4   f002
001ae6   0e05     movlw   0x05             	MOVLW	0x05
001ae8   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
001aea   f003
001aec   0e06     movlw   0x06             	MOVLW	0x06
001aee   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
001af0   f004
001af2   0e07     movlw   0x07             	MOVLW	0x07
001af4   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
001af6   f005
001af8   0e08     movlw   0x08             	MOVLW	0x08
001afa   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
001afc   f006
001afe   0e09     movlw   0x09             	MOVLW	0x09
001b00   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
001b02   f007
001b04   0e0a     movlw   0x0a             	MOVLW	0x0a
001b06   cfdb     movff   0xfdb, 0x008     	MOVFF	PLUSW2, r0x08
001b08   f008
                                           ;	.line	342; /home/vbasel/.icaro/v4/firmware/core/stdio.c	register u8 pc = 0;
001b0a   6a09     clrf    0x09, 0x0        	CLRF	r0x09
                                           ;	.line	343; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 precision = 2; // default value is 2 digits fractional part
001b0c   0e02     movlw   0x02             	MOVLW	0x02
001b0e   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
                                           _01111_DS_:
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (; *format != 0; ++format)
001b10   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
001b12   ffe9
001b14   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
001b16   fff3
001b18   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001b1a   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
001b1c   f033
001b1e   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
001b20   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001b22   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
001b24   ef09     goto    0x002412         	GOTO	_01099_DS_
001b26   f012
                                           ;	.line	350; /home/vbasel/.icaro/v4/firmware/core/stdio.c	islong = 0;                 // default is 16-bit
001b28   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
                                           ;	.line	352; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '%')
001b2a   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001b2c   0a25     xorlw   0x25             	XORLW	0x25
001b2e   e002     bz      0x001b34         	BZ	_01231_DS_
001b30   eff0     goto    0x0023e0         	GOTO	_01094_DS_
001b32   f011
                                           _01231_DS_:
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width = pad = 0;		// default is left justify, no zero padded
001b34   6a0b     clrf    0x0b, 0x0        	CLRF	r0x0b
001b36   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
                                           ;	.line	355; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;				// get the next format identifier
001b38   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001b3a   e302     bnc     0x001b40         	BNC	_01232_DS_
001b3c   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
001b3e   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01232_DS_:
                                           ;	.line	357; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '\0')	// end of line
001b40   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
001b42   ffe9
001b44   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
001b46   fff3
001b48   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001b4a   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
001b4c   f033
001b4e   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
001b50   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001b52   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
001b54   ef09     goto    0x002412         	GOTO	_01099_DS_
001b56   f012
                                           ;	.line	360; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '%')		// error
001b58   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001b5a   0a25     xorlw   0x25             	XORLW	0x25
001b5c   e102     bnz     0x001b62         	BNZ	_01234_DS_
001b5e   eff0     goto    0x0023e0         	GOTO	_01094_DS_
001b60   f011
                                           _01234_DS_:
                                           ;	.line	363; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '-')		// right justify
001b62   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001b64   0a2d     xorlw   0x2d             	XORLW	0x2d
001b66   e106     bnz     0x001b74         	BNZ	_01134_DS_
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;
001b68   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001b6a   e302     bnc     0x001b70         	BNC	_01237_DS_
001b6c   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
001b6e   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01237_DS_:
                                           ;	.line	366; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pad = PAD_RIGHT;
001b70   0e01     movlw   0x01             	MOVLW	0x01
001b72   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
                                           _01134_DS_:
                                           ;	.line	369; /home/vbasel/.icaro/v4/firmware/core/stdio.c	while (*format == '0')	// field is padded with 0's instead of blanks
001b74   c003     movff   0x003, 0x00e     	MOVFF	r0x03, r0x0e
001b76   f00e
001b78   c004     movff   0x004, 0x00f     	MOVFF	r0x04, r0x0f
001b7a   f00f
001b7c   c005     movff   0x005, 0x010     	MOVFF	r0x05, r0x10
001b7e   f010
                                           _01064_DS_:
001b80   c00e     movff   0x00e, 0xfe9     	MOVFF	r0x0e, FSR0L
001b82   ffe9
001b84   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
001b86   fff3
001b88   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001b8a   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
001b8c   f033
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
001b8e   0a30     xorlw   0x30             	XORLW	0x30
001b90   e10a     bnz     0x001ba6         	BNZ	_01104_DS_
                                           ;	.line	371; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;
001b92   2a0e     incf    0x0e, 0x1, 0x0   	INCF	r0x0e, F
001b94   e302     bnc     0x001b9a         	BNC	_01240_DS_
001b96   4a0f     infsnz  0x0f, 0x1, 0x0   	INFSNZ	r0x0f, F
001b98   2a10     incf    0x10, 0x1, 0x0   	INCF	r0x10, F
                                           _01240_DS_:
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pad |= PAD_ZERO;
001b9a   c00b     movff   0x00b, 0x011     	MOVFF	r0x0b, r0x11
001b9c   f011
001b9e   8211     bsf     0x11, 0x1, 0x0   	BSF	r0x11, 1
001ba0   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001ba2   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
001ba4   d7ed     bra     0x001b80         	BRA	_01064_DS_
                                           _01104_DS_:
                                           ;	.line	375; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
001ba6   c00e     movff   0x00e, 0xfe9     	MOVFF	r0x0e, FSR0L
001ba8   ffe9
001baa   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
001bac   fff3
001bae   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001bb0   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
001bb2   f033
001bb4   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001bb6   0e30     movlw   0x30             	MOVLW	0x30
001bb8   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
001bba   e313     bnc     0x001be2         	BNC	_01162_DS_
001bbc   0e3a     movlw   0x3a             	MOVLW	0x3a
001bbe   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
001bc0   e210     bc      0x001be2         	BC	_01162_DS_
                                           ; ;multiply lit val:0x0a by variable r0x0d and store in r0x0d
                                           ;	.line	377; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width *= 10;
001bc2   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001bc4   0d0a     mullw   0x0a             	MULLW	0x0a
001bc6   cff3     movff   0xff3, 0x00d     	MOVFF	PRODL, r0x0d
001bc8   f00d
                                           ;	.line	378; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width += *format - '0';
001bca   0ed0     movlw   0xd0             	MOVLW	0xd0
001bcc   2611     addwf   0x11, 0x1, 0x0   	ADDWF	r0x11, F
001bce   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001bd0   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
001bd2   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001bd4   2412     addwf   0x12, 0x0, 0x0   	ADDWF	r0x12, W
001bd6   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
                                           ;	.line	375; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
001bd8   2a0e     incf    0x0e, 0x1, 0x0   	INCF	r0x0e, F
001bda   e302     bnc     0x001be0         	BNC	_01244_DS_
001bdc   4a0f     infsnz  0x0f, 0x1, 0x0   	INFSNZ	r0x0f, F
001bde   2a10     incf    0x10, 0x1, 0x0   	INCF	r0x10, F
                                           _01244_DS_:
001be0   d7e2     bra     0x001ba6         	BRA	_01104_DS_
                                           _01162_DS_:
001be2   c00e     movff   0x00e, 0x003     	MOVFF	r0x0e, r0x03
001be4   f003
001be6   c00f     movff   0x00f, 0x004     	MOVFF	r0x0f, r0x04
001be8   f004
001bea   c010     movff   0x010, 0x005     	MOVFF	r0x10, r0x05
001bec   f005
                                           ;	.line	388; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == '.')		// float precision
001bee   c00e     movff   0x00e, 0xfe9     	MOVFF	r0x0e, FSR0L
001bf0   ffe9
001bf2   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
001bf4   fff3
001bf6   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001bf8   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
001bfa   f033
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
001bfc   0a2e     xorlw   0x2e             	XORLW	0x2e
001bfe   e134     bnz     0x001c68         	BNZ	_01070_DS_
                                           ;	.line	390; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;
001c00   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001c02   0f01     addlw   0x01             	ADDLW	0x01
001c04   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001c06   0e00     movlw   0x00             	MOVLW	0x00
001c08   200f     addwfc  0x0f, 0x0, 0x0   	ADDWFC	r0x0f, W
001c0a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
001c0c   0e00     movlw   0x00             	MOVLW	0x00
001c0e   2010     addwfc  0x10, 0x0, 0x0   	ADDWFC	r0x10, W
001c10   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
                                           ;	.line	391; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision = 0;
001c12   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
001c14   c003     movff   0x003, 0x00e     	MOVFF	r0x03, r0x0e
001c16   f00e
001c18   c004     movff   0x004, 0x00f     	MOVFF	r0x04, r0x0f
001c1a   f00f
001c1c   c005     movff   0x005, 0x010     	MOVFF	r0x05, r0x10
001c1e   f010
                                           _01108_DS_:
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
001c20   c00e     movff   0x00e, 0xfe9     	MOVFF	r0x0e, FSR0L
001c22   ffe9
001c24   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
001c26   fff3
001c28   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001c2a   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
001c2c   f033
001c2e   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001c30   0e30     movlw   0x30             	MOVLW	0x30
001c32   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
001c34   e313     bnc     0x001c5c         	BNC	_01163_DS_
001c36   0e3a     movlw   0x3a             	MOVLW	0x3a
001c38   5c11     subwf   0x11, 0x0, 0x0   	SUBWF	r0x11, W
001c3a   e210     bc      0x001c5c         	BC	_01163_DS_
                                           ; ;multiply lit val:0x0a by variable r0x0a and store in r0x0a
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision *= 10;
001c3c   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
001c3e   0d0a     mullw   0x0a             	MULLW	0x0a
001c40   cff3     movff   0xff3, 0x00a     	MOVFF	PRODL, r0x0a
001c42   f00a
                                           ;	.line	396; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision += *format - '0';
001c44   0ed0     movlw   0xd0             	MOVLW	0xd0
001c46   2611     addwf   0x11, 0x1, 0x0   	ADDWF	r0x11, F
001c48   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
001c4a   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
001c4c   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001c4e   2412     addwf   0x12, 0x0, 0x0   	ADDWF	r0x12, W
001c50   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
001c52   2a0e     incf    0x0e, 0x1, 0x0   	INCF	r0x0e, F
001c54   e302     bnc     0x001c5a         	BNC	_01249_DS_
001c56   4a0f     infsnz  0x0f, 0x1, 0x0   	INFSNZ	r0x0f, F
001c58   2a10     incf    0x10, 0x1, 0x0   	INCF	r0x10, F
                                           _01249_DS_:
001c5a   d7e2     bra     0x001c20         	BRA	_01108_DS_
                                           _01163_DS_:
001c5c   c00e     movff   0x00e, 0x003     	MOVFF	r0x0e, r0x03
001c5e   f003
001c60   c00f     movff   0x00f, 0x004     	MOVFF	r0x0f, r0x04
001c62   f004
001c64   c010     movff   0x010, 0x005     	MOVFF	r0x10, r0x05
001c66   f005
                                           _01070_DS_:
                                           ;	.line	400; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'f') 	// float
001c68   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
001c6a   ffe9
001c6c   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
001c6e   fff3
001c70   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001c72   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
001c74   f033
                                           ; #	MOVWF	r0x0e
                                           ; #	MOVF	r0x0e, W
001c76   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
001c78   0a66     xorlw   0x66             	XORLW	0x66
001c7a   e001     bz      0x001c7e         	BZ	_01251_DS_
001c7c   d040     bra     0x001cfe         	BRA	_01072_DS_
                                           _01251_DS_:
                                           ;	.line	402; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprintfl(out, va_arg(args, float), width, pad, separator, precision);
001c7e   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001c80   0f04     addlw   0x04             	ADDLW	0x04
001c82   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001c84   0e00     movlw   0x00             	MOVLW	0x00
001c86   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001c88   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001c8a   0e00     movlw   0x00             	MOVLW	0x00
001c8c   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001c8e   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001c90   c00f     movff   0x00f, 0x006     	MOVFF	r0x0f, r0x06
001c92   f006
001c94   c010     movff   0x010, 0x007     	MOVFF	r0x10, r0x07
001c96   f007
001c98   c011     movff   0x011, 0x008     	MOVFF	r0x11, r0x08
001c9a   f008
001c9c   0efc     movlw   0xfc             	MOVLW	0xfc
001c9e   260f     addwf   0x0f, 0x1, 0x0   	ADDWF	r0x0f, F
001ca0   0eff     movlw   0xff             	MOVLW	0xff
001ca2   2210     addwfc  0x10, 0x1, 0x0   	ADDWFC	r0x10, F
001ca4   2211     addwfc  0x11, 0x1, 0x0   	ADDWFC	r0x11, F
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVWF	r0x0f
001ca6   c00f     movff   0x00f, 0xfe9     	MOVFF	r0x0f, FSR0L
001ca8   ffe9
001caa   c010     movff   0x010, 0xff3     	MOVFF	r0x10, PRODL
001cac   fff3
001cae   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001cb0   ec81     call    0x006502, 0x0    	CALL	__gptrget4
001cb2   f032
001cb4   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001cb6   cff3     movff   0xff3, 0x010     	MOVFF	PRODL, r0x10
001cb8   f010
001cba   cff4     movff   0xff4, 0x011     	MOVFF	PRODH, r0x11
001cbc   f011
001cbe   cfe9     movff   0xfe9, 0x012     	MOVFF	FSR0L, r0x12
001cc0   f012
001cc2   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
001cc4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cc6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001cc8   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001cca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ccc   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001cce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cd0   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
001cd2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cd4   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001cd6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cd8   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001cda   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cdc   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001cde   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ce0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001ce2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ce4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001ce6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ce8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001cea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001cec   ec59     call    0x0024b2, 0x0    	CALL	_pprintfl
001cee   f012
001cf0   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001cf2   0e0b     movlw   0x0b             	MOVLW	0x0b
001cf4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001cf6   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001cf8   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	403; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
001cfa   ef03     goto    0x002406         	GOTO	_01098_DS_
001cfc   f012
                                           _01072_DS_:
                                           ;	.line	406; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 's')		// string
001cfe   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001d00   0a73     xorlw   0x73             	XORLW	0x73
001d02   e001     bz      0x001d06         	BZ	_01253_DS_
001d04   d052     bra     0x001daa         	BRA	_01074_DS_
                                           _01253_DS_:
                                           ;	.line	408; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 *s = va_arg(args, u8*);
001d06   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001d08   0f03     addlw   0x03             	ADDLW	0x03
001d0a   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001d0c   0e00     movlw   0x00             	MOVLW	0x00
001d0e   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001d10   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001d12   0e00     movlw   0x00             	MOVLW	0x00
001d14   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001d16   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001d18   c00f     movff   0x00f, 0x006     	MOVFF	r0x0f, r0x06
001d1a   f006
001d1c   c010     movff   0x010, 0x007     	MOVFF	r0x10, r0x07
001d1e   f007
001d20   c011     movff   0x011, 0x008     	MOVFF	r0x11, r0x08
001d22   f008
001d24   0efd     movlw   0xfd             	MOVLW	0xfd
001d26   260f     addwf   0x0f, 0x1, 0x0   	ADDWF	r0x0f, F
001d28   0eff     movlw   0xff             	MOVLW	0xff
001d2a   2210     addwfc  0x10, 0x1, 0x0   	ADDWFC	r0x10, F
001d2c   2211     addwfc  0x11, 0x1, 0x0   	ADDWFC	r0x11, F
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVWF	r0x0f
001d2e   c00f     movff   0x00f, 0xfe9     	MOVFF	r0x0f, FSR0L
001d30   ffe9
001d32   c010     movff   0x010, 0xff3     	MOVFF	r0x10, PRODL
001d34   fff3
001d36   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001d38   eca1     call    0x006542, 0x0    	CALL	__gptrget3
001d3a   f032
001d3c   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001d3e   cff3     movff   0xff3, 0x010     	MOVFF	PRODL, r0x10
001d40   f010
001d42   cff4     movff   0xff4, 0x011     	MOVFF	PRODH, r0x11
001d44   f011
001d46   c00f     movff   0x00f, 0x012     	MOVFF	r0x0f, r0x12
001d48   f012
001d4a   c010     movff   0x010, 0x013     	MOVFF	r0x10, r0x13
001d4c   f013
001d4e   c011     movff   0x011, 0x014     	MOVFF	r0x11, r0x14
001d50   f014
                                           ;	.line	409; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprints(out, s?s:"(null)", width, pad);
001d52   1010     iorwf   0x10, 0x0, 0x0   	IORWF	r0x10, W
001d54   1011     iorwf   0x11, 0x0, 0x0   	IORWF	r0x11, W
001d56   e007     bz      0x001d66         	BZ	_01114_DS_
001d58   c012     movff   0x012, 0x00f     	MOVFF	r0x12, r0x0f
001d5a   f00f
001d5c   c013     movff   0x013, 0x010     	MOVFF	r0x13, r0x10
001d5e   f010
001d60   c014     movff   0x014, 0x011     	MOVFF	r0x14, r0x11
001d62   f011
001d64   d006     bra     0x001d72         	BRA	_01115_DS_
                                           _01114_DS_:
001d66   0e00     movlw   0x00             	MOVLW	UPPER(___str_0)
001d68   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001d6a   0e59     movlw   0x59             	MOVLW	HIGH(___str_0)
001d6c   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001d6e   0e26     movlw   0x26             	MOVLW	LOW(___str_0)
001d70   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
                                           _01115_DS_:
001d72   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001d74   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d76   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001d78   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d7a   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001d7c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d7e   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001d80   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d82   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001d84   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d86   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001d88   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d8a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001d8c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d8e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001d90   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d92   eca4     call    0x004148, 0x0    	CALL	_pprints
001d94   f020
001d96   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001d98   0e08     movlw   0x08             	MOVLW	0x08
001d9a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001d9c   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
001d9e   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001da0   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001da2   2410     addwf   0x10, 0x0, 0x0   	ADDWF	r0x10, W
001da4   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           ;	.line	410; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
001da6   ef03     goto    0x002406         	GOTO	_01098_DS_
001da8   f012
                                           _01074_DS_:
                                           ;	.line	413; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'l')		// long support
001daa   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001dac   0a6c     xorlw   0x6c             	XORLW	0x6c
001dae   e106     bnz     0x001dbc         	BNZ	_01076_DS_
                                           ;	.line	415; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++format;
001db0   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001db2   e302     bnc     0x001db8         	BNC	_01256_DS_
001db4   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
001db6   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01256_DS_:
                                           ;	.line	416; /home/vbasel/.icaro/v4/firmware/core/stdio.c	islong = 1;
001db8   0e01     movlw   0x01             	MOVLW	0x01
001dba   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
                                           _01076_DS_:
                                           ;	.line	419; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'u')		// decimal (10) unsigned (0) integer
001dbc   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
001dbe   ffe9
001dc0   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
001dc2   fff3
001dc4   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001dc6   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
001dc8   f033
                                           ; #	MOVWF	r0x0e
                                           ; #	MOVF	r0x0e, W
001dca   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
001dcc   0a75     xorlw   0x75             	XORLW	0x75
001dce   e001     bz      0x001dd2         	BZ	_01258_DS_
001dd0   d06c     bra     0x001eaa         	BRA	_01078_DS_
                                           _01258_DS_:
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
001dd2   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001dd4   e023     bz      0x001e1c         	BZ	_01116_DS_
001dd6   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001dd8   0f04     addlw   0x04             	ADDLW	0x04
001dda   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001ddc   0e00     movlw   0x00             	MOVLW	0x00
001dde   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001de0   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
001de2   0e00     movlw   0x00             	MOVLW	0x00
001de4   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001de6   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
001de8   c00f     movff   0x00f, 0x006     	MOVFF	r0x0f, r0x06
001dea   f006
001dec   c010     movff   0x010, 0x007     	MOVFF	r0x10, r0x07
001dee   f007
001df0   c011     movff   0x011, 0x008     	MOVFF	r0x11, r0x08
001df2   f008
001df4   0efc     movlw   0xfc             	MOVLW	0xfc
001df6   260f     addwf   0x0f, 0x1, 0x0   	ADDWF	r0x0f, F
001df8   0eff     movlw   0xff             	MOVLW	0xff
001dfa   2210     addwfc  0x10, 0x1, 0x0   	ADDWFC	r0x10, F
001dfc   2211     addwfc  0x11, 0x1, 0x0   	ADDWFC	r0x11, F
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVWF	r0x0f
001dfe   c00f     movff   0x00f, 0xfe9     	MOVFF	r0x0f, FSR0L
001e00   ffe9
001e02   c010     movff   0x010, 0xff3     	MOVFF	r0x10, PRODL
001e04   fff3
001e06   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001e08   ec81     call    0x006502, 0x0    	CALL	__gptrget4
001e0a   f032
001e0c   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
001e0e   cff3     movff   0xff3, 0x010     	MOVFF	PRODL, r0x10
001e10   f010
001e12   cff4     movff   0xff4, 0x011     	MOVFF	PRODH, r0x11
001e14   f011
001e16   cfe9     movff   0xfe9, 0x012     	MOVFF	FSR0L, r0x12
001e18   f012
001e1a   d024     bra     0x001e64         	BRA	_01117_DS_
                                           _01116_DS_:
001e1c   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001e1e   0f02     addlw   0x02             	ADDLW	0x02
001e20   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001e22   0e00     movlw   0x00             	MOVLW	0x00
001e24   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001e26   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
001e28   0e00     movlw   0x00             	MOVLW	0x00
001e2a   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001e2c   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
001e2e   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
001e30   f006
001e32   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
001e34   f007
001e36   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
001e38   f008
001e3a   0efe     movlw   0xfe             	MOVLW	0xfe
001e3c   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
001e3e   0eff     movlw   0xff             	MOVLW	0xff
001e40   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
001e42   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
001e44   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
001e46   ffe9
001e48   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
001e4a   fff3
001e4c   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
001e4e   ecec     call    0x0065d8, 0x0    	CALL	__gptrget2
001e50   f032
001e52   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001e54   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
001e56   f014
001e58   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
001e5a   f00f
001e5c   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
001e5e   f010
001e60   6a11     clrf    0x11, 0x0        	CLRF	r0x11
001e62   6a12     clrf    0x12, 0x0        	CLRF	r0x12
                                           _01117_DS_:
                                           ;	.line	422; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 10, 0, width, pad, separator, 'a');
001e64   0e61     movlw   0x61             	MOVLW	0x61
001e66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e68   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001e6a   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001e6c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e6e   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001e70   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e72   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001e74   0e0a     movlw   0x0a             	MOVLW	0x0a
001e76   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e78   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001e7a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e7c   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
001e7e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e80   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001e82   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e84   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001e86   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e88   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001e8a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e8c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001e8e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e90   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001e92   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e94   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001e96   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001e98   ec0f     call    0x002a1e, 0x0    	CALL	_pprinti
001e9a   f015
001e9c   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001e9e   0e0e     movlw   0x0e             	MOVLW	0x0e
001ea0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001ea2   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
001ea4   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	423; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
001ea6   ef03     goto    0x002406         	GOTO	_01098_DS_
001ea8   f012
                                           _01078_DS_:
                                           ;	.line	426; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'd' || *format == 'i') // decimal (10) signed (1) integer
001eaa   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001eac   0a64     xorlw   0x64             	XORLW	0x64
001eae   e004     bz      0x001eb8         	BZ	_01079_DS_
001eb0   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001eb2   0a69     xorlw   0x69             	XORLW	0x69
001eb4   e001     bz      0x001eb8         	BZ	_01079_DS_
001eb6   d075     bra     0x001fa2         	BRA	_01080_DS_
                                           _01079_DS_:
                                           ;	.line	428; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
001eb8   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001eba   e023     bz      0x001f02         	BZ	_01118_DS_
001ebc   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001ebe   0f04     addlw   0x04             	ADDLW	0x04
001ec0   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001ec2   0e00     movlw   0x00             	MOVLW	0x00
001ec4   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001ec6   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
001ec8   0e00     movlw   0x00             	MOVLW	0x00
001eca   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001ecc   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
001ece   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
001ed0   f006
001ed2   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
001ed4   f007
001ed6   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
001ed8   f008
001eda   0efc     movlw   0xfc             	MOVLW	0xfc
001edc   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
001ede   0eff     movlw   0xff             	MOVLW	0xff
001ee0   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
001ee2   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
001ee4   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
001ee6   ffe9
001ee8   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
001eea   fff3
001eec   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
001eee   ec81     call    0x006502, 0x0    	CALL	__gptrget4
001ef0   f032
001ef2   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001ef4   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
001ef6   f014
001ef8   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
001efa   f015
001efc   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
001efe   f016
001f00   d024     bra     0x001f4a         	BRA	_01119_DS_
                                           _01118_DS_:
001f02   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001f04   0f02     addlw   0x02             	ADDLW	0x02
001f06   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
001f08   0e00     movlw   0x00             	MOVLW	0x00
001f0a   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001f0c   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
001f0e   0e00     movlw   0x00             	MOVLW	0x00
001f10   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001f12   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
001f14   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
001f16   f006
001f18   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
001f1a   f007
001f1c   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
001f1e   f008
001f20   0efe     movlw   0xfe             	MOVLW	0xfe
001f22   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
001f24   0eff     movlw   0xff             	MOVLW	0xff
001f26   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
001f28   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
001f2a   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
001f2c   ffe9
001f2e   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
001f30   fff3
001f32   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
001f34   ecec     call    0x0065d8, 0x0    	CALL	__gptrget2
001f36   f032
001f38   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
001f3a   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
001f3c   f018
001f3e   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
001f40   f013
001f42   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
001f44   f014
001f46   6a15     clrf    0x15, 0x0        	CLRF	r0x15
001f48   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01119_DS_:
001f4a   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
001f4c   f00f
001f4e   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
001f50   f010
001f52   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
001f54   f011
001f56   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
001f58   f012
                                           ;	.line	429; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 10, 1, width, pad, separator, 'a');
001f5a   0e61     movlw   0x61             	MOVLW	0x61
001f5c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f5e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001f60   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
001f62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f64   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
001f66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f68   0e01     movlw   0x01             	MOVLW	0x01
001f6a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f6c   0e0a     movlw   0x0a             	MOVLW	0x0a
001f6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f70   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001f72   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f74   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
001f76   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f78   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
001f7a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f7c   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
001f7e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f80   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
001f82   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f84   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001f86   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f88   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001f8a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f8c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001f8e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001f90   ec0f     call    0x002a1e, 0x0    	CALL	_pprinti
001f92   f015
001f94   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001f96   0e0e     movlw   0x0e             	MOVLW	0x0e
001f98   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
001f9a   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
001f9c   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	430; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
001f9e   ef03     goto    0x002406         	GOTO	_01098_DS_
001fa0   f012
                                           _01080_DS_:
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'x' || *format == 'p')	// unsigned (0) lower ('a') hexa (16) or pointer
001fa2   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001fa4   0a78     xorlw   0x78             	XORLW	0x78
001fa6   e004     bz      0x001fb0         	BZ	_01082_DS_
001fa8   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
001faa   0a70     xorlw   0x70             	XORLW	0x70
001fac   e001     bz      0x001fb0         	BZ	_01082_DS_
001fae   d073     bra     0x002096         	BRA	_01083_DS_
                                           _01082_DS_:
                                           ;	.line	435; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
001fb0   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
001fb2   e023     bz      0x001ffa         	BZ	_01120_DS_
001fb4   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001fb6   0f04     addlw   0x04             	ADDLW	0x04
001fb8   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001fba   0e00     movlw   0x00             	MOVLW	0x00
001fbc   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
001fbe   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
001fc0   0e00     movlw   0x00             	MOVLW	0x00
001fc2   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
001fc4   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
001fc6   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
001fc8   f006
001fca   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
001fcc   f007
001fce   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
001fd0   f008
001fd2   0efc     movlw   0xfc             	MOVLW	0xfc
001fd4   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
001fd6   0eff     movlw   0xff             	MOVLW	0xff
001fd8   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
001fda   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
001fdc   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
001fde   ffe9
001fe0   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
001fe2   fff3
001fe4   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
001fe6   ec81     call    0x006502, 0x0    	CALL	__gptrget4
001fe8   f032
001fea   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
001fec   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
001fee   f014
001ff0   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
001ff2   f015
001ff4   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
001ff6   f016
001ff8   d024     bra     0x002042         	BRA	_01121_DS_
                                           _01120_DS_:
001ffa   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
001ffc   0f02     addlw   0x02             	ADDLW	0x02
001ffe   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
002000   0e00     movlw   0x00             	MOVLW	0x00
002002   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
002004   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
002006   0e00     movlw   0x00             	MOVLW	0x00
002008   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
00200a   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
00200c   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
00200e   f006
002010   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
002012   f007
002014   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
002016   f008
002018   0efe     movlw   0xfe             	MOVLW	0xfe
00201a   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
00201c   0eff     movlw   0xff             	MOVLW	0xff
00201e   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
002020   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
002022   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
002024   ffe9
002026   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
002028   fff3
00202a   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
00202c   ecec     call    0x0065d8, 0x0    	CALL	__gptrget2
00202e   f032
002030   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
002032   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
002034   f018
002036   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
002038   f013
00203a   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
00203c   f014
00203e   6a15     clrf    0x15, 0x0        	CLRF	r0x15
002040   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01121_DS_:
002042   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
002044   f00f
002046   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
002048   f010
00204a   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
00204c   f011
00204e   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
002050   f012
                                           ;	.line	436; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 16, 0, width, pad, separator, 'a');
002052   0e61     movlw   0x61             	MOVLW	0x61
002054   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002056   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002058   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
00205a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00205c   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
00205e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002060   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002062   0e10     movlw   0x10             	MOVLW	0x10
002064   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002066   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002068   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00206a   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
00206c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00206e   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
002070   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002072   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
002074   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002076   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002078   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00207a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00207c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00207e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002080   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002082   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002084   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002086   ec0f     call    0x002a1e, 0x0    	CALL	_pprinti
002088   f015
00208a   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
00208c   0e0e     movlw   0x0e             	MOVLW	0x0e
00208e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002090   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
002092   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
002094   d1b8     bra     0x002406         	BRA	_01098_DS_
                                           _01083_DS_:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'X' || *format == 'P')	// unsigned (0) upper ('A') hexa (16) or pointer
002096   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002098   0a58     xorlw   0x58             	XORLW	0x58
00209a   e004     bz      0x0020a4         	BZ	_01085_DS_
00209c   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
00209e   0a50     xorlw   0x50             	XORLW	0x50
0020a0   e001     bz      0x0020a4         	BZ	_01085_DS_
0020a2   d073     bra     0x00218a         	BRA	_01086_DS_
                                           _01085_DS_:
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
0020a4   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
0020a6   e023     bz      0x0020ee         	BZ	_01122_DS_
0020a8   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0020aa   0f04     addlw   0x04             	ADDLW	0x04
0020ac   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
0020ae   0e00     movlw   0x00             	MOVLW	0x00
0020b0   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0020b2   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
0020b4   0e00     movlw   0x00             	MOVLW	0x00
0020b6   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0020b8   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
0020ba   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
0020bc   f006
0020be   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
0020c0   f007
0020c2   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
0020c4   f008
0020c6   0efc     movlw   0xfc             	MOVLW	0xfc
0020c8   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
0020ca   0eff     movlw   0xff             	MOVLW	0xff
0020cc   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
0020ce   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
0020d0   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
0020d2   ffe9
0020d4   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
0020d6   fff3
0020d8   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
0020da   ec81     call    0x006502, 0x0    	CALL	__gptrget4
0020dc   f032
0020de   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
0020e0   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
0020e2   f014
0020e4   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
0020e6   f015
0020e8   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
0020ea   f016
0020ec   d024     bra     0x002136         	BRA	_01123_DS_
                                           _01122_DS_:
0020ee   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0020f0   0f02     addlw   0x02             	ADDLW	0x02
0020f2   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
0020f4   0e00     movlw   0x00             	MOVLW	0x00
0020f6   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0020f8   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
0020fa   0e00     movlw   0x00             	MOVLW	0x00
0020fc   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0020fe   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
002100   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
002102   f006
002104   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
002106   f007
002108   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
00210a   f008
00210c   0efe     movlw   0xfe             	MOVLW	0xfe
00210e   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
002110   0eff     movlw   0xff             	MOVLW	0xff
002112   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
002114   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
002116   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
002118   ffe9
00211a   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
00211c   fff3
00211e   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
002120   ecec     call    0x0065d8, 0x0    	CALL	__gptrget2
002122   f032
002124   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
002126   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
002128   f018
00212a   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
00212c   f013
00212e   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
002130   f014
002132   6a15     clrf    0x15, 0x0        	CLRF	r0x15
002134   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01123_DS_:
002136   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
002138   f00f
00213a   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
00213c   f010
00213e   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
002140   f011
002142   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
002144   f012
                                           ;	.line	443; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 16, 0, width, pad, separator, 'A');
002146   0e41     movlw   0x41             	MOVLW	0x41
002148   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00214a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00214c   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
00214e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002150   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002152   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002154   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002156   0e10     movlw   0x10             	MOVLW	0x10
002158   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00215a   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
00215c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00215e   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
002160   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002162   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
002164   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002166   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
002168   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00216a   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
00216c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00216e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002170   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002172   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002174   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002176   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002178   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00217a   ec0f     call    0x002a1e, 0x0    	CALL	_pprinti
00217c   f015
00217e   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
002180   0e0e     movlw   0x0e             	MOVLW	0x0e
002182   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002184   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
002186   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	444; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
002188   d13e     bra     0x002406         	BRA	_01098_DS_
                                           _01086_DS_:
                                           ;	.line	447; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'b')		// binary
00218a   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
00218c   0a62     xorlw   0x62             	XORLW	0x62
00218e   e001     bz      0x002192         	BZ	_01272_DS_
002190   d073     bra     0x002278         	BRA	_01089_DS_
                                           _01272_DS_:
                                           ;	.line	449; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
002192   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002194   e023     bz      0x0021dc         	BZ	_01124_DS_
002196   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
002198   0f04     addlw   0x04             	ADDLW	0x04
00219a   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
00219c   0e00     movlw   0x00             	MOVLW	0x00
00219e   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0021a0   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
0021a2   0e00     movlw   0x00             	MOVLW	0x00
0021a4   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0021a6   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
0021a8   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
0021aa   f006
0021ac   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
0021ae   f007
0021b0   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
0021b2   f008
0021b4   0efc     movlw   0xfc             	MOVLW	0xfc
0021b6   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
0021b8   0eff     movlw   0xff             	MOVLW	0xff
0021ba   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
0021bc   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
0021be   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
0021c0   ffe9
0021c2   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
0021c4   fff3
0021c6   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
0021c8   ec81     call    0x006502, 0x0    	CALL	__gptrget4
0021ca   f032
0021cc   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
0021ce   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
0021d0   f014
0021d2   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
0021d4   f015
0021d6   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
0021d8   f016
0021da   d024     bra     0x002224         	BRA	_01125_DS_
                                           _01124_DS_:
0021dc   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0021de   0f02     addlw   0x02             	ADDLW	0x02
0021e0   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
0021e2   0e00     movlw   0x00             	MOVLW	0x00
0021e4   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0021e6   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
0021e8   0e00     movlw   0x00             	MOVLW	0x00
0021ea   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0021ec   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
0021ee   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
0021f0   f006
0021f2   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
0021f4   f007
0021f6   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
0021f8   f008
0021fa   0efe     movlw   0xfe             	MOVLW	0xfe
0021fc   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
0021fe   0eff     movlw   0xff             	MOVLW	0xff
002200   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
002202   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
002204   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
002206   ffe9
002208   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
00220a   fff3
00220c   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
00220e   ecec     call    0x0065d8, 0x0    	CALL	__gptrget2
002210   f032
002212   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
002214   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
002216   f018
002218   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
00221a   f013
00221c   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
00221e   f014
002220   6a15     clrf    0x15, 0x0        	CLRF	r0x15
002222   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01125_DS_:
002224   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
002226   f00f
002228   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
00222a   f010
00222c   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
00222e   f011
002230   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
002232   f012
                                           ;	.line	450; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 2, 0, width, pad, separator, 'a');
002234   0e61     movlw   0x61             	MOVLW	0x61
002236   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002238   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00223a   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
00223c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00223e   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002240   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002242   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002244   0e02     movlw   0x02             	MOVLW	0x02
002246   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002248   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
00224a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00224c   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
00224e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002250   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
002252   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002254   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
002256   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002258   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
00225a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00225c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00225e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002260   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002262   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002264   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002266   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002268   ec0f     call    0x002a1e, 0x0    	CALL	_pprinti
00226a   f015
00226c   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
00226e   0e0e     movlw   0x0e             	MOVLW	0x0e
002270   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002272   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
002274   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	451; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
002276   d0c7     bra     0x002406         	BRA	_01098_DS_
                                           _01089_DS_:
                                           ;	.line	454; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'o')		// octal
002278   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
00227a   0a6f     xorlw   0x6f             	XORLW	0x6f
00227c   e001     bz      0x002280         	BZ	_01274_DS_
00227e   d073     bra     0x002366         	BRA	_01091_DS_
                                           _01274_DS_:
                                           ;	.line	456; /home/vbasel/.icaro/v4/firmware/core/stdio.c	val = (islong) ? va_arg(args, u32) : va_arg(args, u16);
002280   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002282   e023     bz      0x0022ca         	BZ	_01126_DS_
002284   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
002286   0f04     addlw   0x04             	ADDLW	0x04
002288   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
00228a   0e00     movlw   0x00             	MOVLW	0x00
00228c   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
00228e   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
002290   0e00     movlw   0x00             	MOVLW	0x00
002292   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
002294   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
002296   c013     movff   0x013, 0x006     	MOVFF	r0x13, r0x06
002298   f006
00229a   c014     movff   0x014, 0x007     	MOVFF	r0x14, r0x07
00229c   f007
00229e   c015     movff   0x015, 0x008     	MOVFF	r0x15, r0x08
0022a0   f008
0022a2   0efc     movlw   0xfc             	MOVLW	0xfc
0022a4   2613     addwf   0x13, 0x1, 0x0   	ADDWF	r0x13, F
0022a6   0eff     movlw   0xff             	MOVLW	0xff
0022a8   2214     addwfc  0x14, 0x1, 0x0   	ADDWFC	r0x14, F
0022aa   2215     addwfc  0x15, 0x1, 0x0   	ADDWFC	r0x15, F
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVWF	r0x15
                                           ; #	MOVF	r0x15, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVWF	r0x14
                                           ; #	MOVF	r0x14, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVF	r0x13, W
                                           ; #	MOVWF	r0x13
0022ac   c013     movff   0x013, 0xfe9     	MOVFF	r0x13, FSR0L
0022ae   ffe9
0022b0   c014     movff   0x014, 0xff3     	MOVFF	r0x14, PRODL
0022b2   fff3
0022b4   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
0022b6   ec81     call    0x006502, 0x0    	CALL	__gptrget4
0022b8   f032
0022ba   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
0022bc   cff3     movff   0xff3, 0x014     	MOVFF	PRODL, r0x14
0022be   f014
0022c0   cff4     movff   0xff4, 0x015     	MOVFF	PRODH, r0x15
0022c2   f015
0022c4   cfe9     movff   0xfe9, 0x016     	MOVFF	FSR0L, r0x16
0022c6   f016
0022c8   d024     bra     0x002312         	BRA	_01127_DS_
                                           _01126_DS_:
0022ca   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0022cc   0f02     addlw   0x02             	ADDLW	0x02
0022ce   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
0022d0   0e00     movlw   0x00             	MOVLW	0x00
0022d2   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
0022d4   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
0022d6   0e00     movlw   0x00             	MOVLW	0x00
0022d8   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
0022da   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
0022dc   c017     movff   0x017, 0x006     	MOVFF	r0x17, r0x06
0022de   f006
0022e0   c018     movff   0x018, 0x007     	MOVFF	r0x18, r0x07
0022e2   f007
0022e4   c019     movff   0x019, 0x008     	MOVFF	r0x19, r0x08
0022e6   f008
0022e8   0efe     movlw   0xfe             	MOVLW	0xfe
0022ea   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
0022ec   0eff     movlw   0xff             	MOVLW	0xff
0022ee   2218     addwfc  0x18, 0x1, 0x0   	ADDWFC	r0x18, F
0022f0   2219     addwfc  0x19, 0x1, 0x0   	ADDWFC	r0x19, F
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVWF	r0x19
                                           ; #	MOVF	r0x19, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVF	r0x17, W
                                           ; #	MOVWF	r0x17
0022f2   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
0022f4   ffe9
0022f6   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
0022f8   fff3
0022fa   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
0022fc   ecec     call    0x0065d8, 0x0    	CALL	__gptrget2
0022fe   f032
002300   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
002302   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
002304   f018
002306   c017     movff   0x017, 0x013     	MOVFF	r0x17, r0x13
002308   f013
00230a   c018     movff   0x018, 0x014     	MOVFF	r0x18, r0x14
00230c   f014
00230e   6a15     clrf    0x15, 0x0        	CLRF	r0x15
002310   6a16     clrf    0x16, 0x0        	CLRF	r0x16
                                           _01127_DS_:
002312   c013     movff   0x013, 0x00f     	MOVFF	r0x13, r0x0f
002314   f00f
002316   c014     movff   0x014, 0x010     	MOVFF	r0x14, r0x10
002318   f010
00231a   c015     movff   0x015, 0x011     	MOVFF	r0x15, r0x11
00231c   f011
00231e   c016     movff   0x016, 0x012     	MOVFF	r0x16, r0x12
002320   f012
                                           ;	.line	457; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprinti(out, val, islong, 8, 0, width, pad, separator, 'a');
002322   0e61     movlw   0x61             	MOVLW	0x61
002324   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002326   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002328   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
00232a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00232c   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
00232e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002330   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002332   0e08     movlw   0x08             	MOVLW	0x08
002334   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002336   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002338   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00233a   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
00233c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00233e   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
002340   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002342   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
002344   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002346   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002348   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00234a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00234c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00234e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002350   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002352   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002354   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002356   ec0f     call    0x002a1e, 0x0    	CALL	_pprinti
002358   f015
00235a   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
00235c   0e0e     movlw   0x0e             	MOVLW	0x0e
00235e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002360   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002362   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
                                           ;	.line	458; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
002364   d050     bra     0x002406         	BRA	_01098_DS_
                                           _01091_DS_:
                                           ;	.line	461; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (*format == 'c') 	// ascii
002366   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002368   0a63     xorlw   0x63             	XORLW	0x63
00236a   e001     bz      0x00236e         	BZ	_01276_DS_
00236c   d04c     bra     0x002406         	BRA	_01098_DS_
                                           _01276_DS_:
                                           ;	.line	463; /home/vbasel/.icaro/v4/firmware/core/stdio.c	scr[0] = va_arg(args, u16);
00236e   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
002370   0f02     addlw   0x02             	ADDLW	0x02
002372   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
002374   0e00     movlw   0x00             	MOVLW	0x00
002376   2007     addwfc  0x07, 0x0, 0x0   	ADDWFC	r0x07, W
002378   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
00237a   0e00     movlw   0x00             	MOVLW	0x00
00237c   2008     addwfc  0x08, 0x0, 0x0   	ADDWFC	r0x08, W
00237e   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
002380   c00c     movff   0x00c, 0x006     	MOVFF	r0x0c, r0x06
002382   f006
002384   c00e     movff   0x00e, 0x007     	MOVFF	r0x0e, r0x07
002386   f007
002388   c00f     movff   0x00f, 0x008     	MOVFF	r0x0f, r0x08
00238a   f008
00238c   0efe     movlw   0xfe             	MOVLW	0xfe
00238e   260c     addwf   0x0c, 0x1, 0x0   	ADDWF	r0x0c, F
002390   0eff     movlw   0xff             	MOVLW	0xff
002392   220e     addwfc  0x0e, 0x1, 0x0   	ADDWFC	r0x0e, F
002394   220f     addwfc  0x0f, 0x1, 0x0   	ADDWFC	r0x0f, F
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVWF	r0x0f
                                           ; #	MOVF	r0x0f, W
                                           ; #	MOVF	r0x0e, W
                                           ; #	MOVF	r0x0e, W
                                           ; #	MOVWF	r0x0e
                                           ; #	MOVF	r0x0e, W
                                           ; #	MOVF	r0x0c, W
                                           ; #	MOVF	r0x0c, W
                                           ; #	MOVWF	r0x0c
002396   c00c     movff   0x00c, 0xfe9     	MOVFF	r0x0c, FSR0L
002398   ffe9
00239a   c00e     movff   0x00e, 0xff3     	MOVFF	r0x0e, PRODL
00239c   fff3
00239e   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
0023a0   ecec     call    0x0065d8, 0x0    	CALL	__gptrget2
0023a2   f032
0023a4   0105     movlb   0x5              	BANKSEL	_pprint_scr_1_185
0023a6   6ffe     movwf   0xfe, 0x1        	MOVWF	_pprint_scr_1_185, B
                                           ; removed redundant BANKSEL
                                           ;	.line	464; /home/vbasel/.icaro/v4/firmware/core/stdio.c	scr[1] = '\0';
0023a8   6bff     clrf    0xff, 0x1        	CLRF	(_pprint_scr_1_185 + 1), B
                                           ;	.line	465; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pc += pprints(out, scr, width, pad);
0023aa   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
0023ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023ae   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
0023b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023b2   0e80     movlw   0x80             	MOVLW	0x80
0023b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023b6   0e05     movlw   0x05             	MOVLW	HIGH(_pprint_scr_1_185)
0023b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023ba   0efe     movlw   0xfe             	MOVLW	LOW(_pprint_scr_1_185)
0023bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023be   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0023c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023c2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0023c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0023c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023ca   eca4     call    0x004148, 0x0    	CALL	_pprints
0023cc   f020
0023ce   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
0023d0   0e08     movlw   0x08             	MOVLW	0x08
0023d2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0023d4   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
0023d6   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
0023d8   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
0023da   240c     addwf   0x0c, 0x0, 0x0   	ADDWF	r0x0c, W
0023dc   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           ;	.line	466; /home/vbasel/.icaro/v4/firmware/core/stdio.c	continue;
0023de   d013     bra     0x002406         	BRA	_01098_DS_
                                           _01094_DS_:
                                           ;	.line	473; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, *format);
0023e0   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0023e2   ffe9
0023e4   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
0023e6   fff3
0023e8   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0023ea   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
0023ec   f033
                                           ; #	MOVWF	r0x0b
                                           ; #	MOVF	r0x0b, W
0023ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023f0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0023f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023f4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0023f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023f8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0023fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023fc   ecaa     call    0x005354, 0x0    	CALL	_pprintc
0023fe   f029
002400   0e04     movlw   0x04             	MOVLW	0x04
002402   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	474; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
002404   2a09     incf    0x09, 0x1, 0x0   	INCF	r0x09, F
                                           _01098_DS_:
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (; *format != 0; ++format)
002406   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
002408   e302     bnc     0x00240e         	BNC	_01277_DS_
00240a   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
00240c   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01277_DS_:
00240e   ef88     goto    0x001b10         	GOTO	_01111_DS_
002410   f00d
                                           _01099_DS_:
                                           ;	.line	477; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (out) **out = '\0';
002412   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002414   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
002416   1002     iorwf   0x02, 0x0, 0x0   	IORWF	r0x02, W
002418   e014     bz      0x002442         	BZ	_01101_DS_
00241a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00241c   ffe9
00241e   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
002420   fff3
002422   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002424   eca1     call    0x006542, 0x0    	CALL	__gptrget3
002426   f032
002428   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00242a   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
00242c   f001
00242e   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
002430   f002
002432   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002434   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
002436   ffe9
002438   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
00243a   fff3
00243c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00243e   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
002440   f033
                                           _01101_DS_:
                                           ;	.line	478; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pc;
002442   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
                                           ;	.line	479; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
002444   cfe4     movff   0xfe4, 0x019     	MOVFF	PREINC1, r0x19
002446   f019
002448   cfe4     movff   0xfe4, 0x018     	MOVFF	PREINC1, r0x18
00244a   f018
00244c   cfe4     movff   0xfe4, 0x017     	MOVFF	PREINC1, r0x17
00244e   f017
002450   cfe4     movff   0xfe4, 0x016     	MOVFF	PREINC1, r0x16
002452   f016
002454   cfe4     movff   0xfe4, 0x015     	MOVFF	PREINC1, r0x15
002456   f015
002458   cfe4     movff   0xfe4, 0x014     	MOVFF	PREINC1, r0x14
00245a   f014
00245c   cfe4     movff   0xfe4, 0x013     	MOVFF	PREINC1, r0x13
00245e   f013
002460   cfe4     movff   0xfe4, 0x012     	MOVFF	PREINC1, r0x12
002462   f012
002464   cfe4     movff   0xfe4, 0x011     	MOVFF	PREINC1, r0x11
002466   f011
002468   cfe4     movff   0xfe4, 0x010     	MOVFF	PREINC1, r0x10
00246a   f010
00246c   cfe4     movff   0xfe4, 0x00f     	MOVFF	PREINC1, r0x0f
00246e   f00f
002470   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
002472   f00e
002474   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
002476   f00d
002478   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
00247a   f00c
00247c   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
00247e   f00b
002480   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
002482   f00a
002484   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
002486   f009
002488   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00248a   f008
00248c   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
00248e   f007
002490   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
002492   f006
002494   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
002496   f005
002498   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00249a   f004
00249c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00249e   f003
0024a0   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0024a2   f002
0024a4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0024a6   f001
0024a8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0024aa   f000
0024ac   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0024ae   ffd9
0024b0   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__pprintfl	code
                                           _pprintfl:
                                           ;	.line	178; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static u8 pprintfl(u8 **out, float value, u8 width, u8 pad, u8 separator, u8 precision)
0024b2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0024b4   ffe5
0024b6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0024b8   ffd9
0024ba   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0024bc   ffe5
0024be   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0024c0   ffe5
0024c2   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0024c4   ffe5
0024c6   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0024c8   ffe5
0024ca   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0024cc   ffe5
0024ce   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0024d0   ffe5
0024d2   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
0024d4   ffe5
0024d6   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
0024d8   ffe5
0024da   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
0024dc   ffe5
0024de   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
0024e0   ffe5
0024e2   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
0024e4   ffe5
0024e6   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
0024e8   ffe5
0024ea   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
0024ec   ffe5
0024ee   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
0024f0   ffe5
0024f2   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
0024f4   ffe5
0024f6   c00f     movff   0x00f, 0xfe5     	MOVFF	r0x0f, POSTDEC1
0024f8   ffe5
0024fa   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
0024fc   ffe5
0024fe   c011     movff   0x011, 0xfe5     	MOVFF	r0x11, POSTDEC1
002500   ffe5
002502   c012     movff   0x012, 0xfe5     	MOVFF	r0x12, POSTDEC1
002504   ffe5
002506   c013     movff   0x013, 0xfe5     	MOVFF	r0x13, POSTDEC1
002508   ffe5
00250a   c014     movff   0x014, 0xfe5     	MOVFF	r0x14, POSTDEC1
00250c   ffe5
00250e   c015     movff   0x015, 0xfe5     	MOVFF	r0x15, POSTDEC1
002510   ffe5
002512   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
002514   ffe5
002516   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
002518   ffe5
00251a   c018     movff   0x018, 0xfe5     	MOVFF	r0x18, POSTDEC1
00251c   ffe5
00251e   c019     movff   0x019, 0xfe5     	MOVFF	r0x19, POSTDEC1
002520   ffe5
002522   c01a     movff   0x01a, 0xfe5     	MOVFF	r0x1a, POSTDEC1
002524   ffe5
002526   c01b     movff   0x01b, 0xfe5     	MOVFF	r0x1b, POSTDEC1
002528   ffe5
00252a   c01c     movff   0x01c, 0xfe5     	MOVFF	r0x1c, POSTDEC1
00252c   ffe5
00252e   c01d     movff   0x01d, 0xfe5     	MOVFF	r0x1d, POSTDEC1
002530   ffe5
002532   c01e     movff   0x01e, 0xfe5     	MOVFF	r0x1e, POSTDEC1
002534   ffe5
002536   c01f     movff   0x01f, 0xfe5     	MOVFF	r0x1f, POSTDEC1
002538   ffe5
00253a   0e02     movlw   0x02             	MOVLW	0x02
00253c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00253e   f000
002540   0e03     movlw   0x03             	MOVLW	0x03
002542   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002544   f001
002546   0e04     movlw   0x04             	MOVLW	0x04
002548   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
00254a   f002
00254c   0e05     movlw   0x05             	MOVLW	0x05
00254e   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
002550   f003
002552   0e06     movlw   0x06             	MOVLW	0x06
002554   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
002556   f004
002558   0e07     movlw   0x07             	MOVLW	0x07
00255a   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
00255c   f005
00255e   0e08     movlw   0x08             	MOVLW	0x08
002560   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
002562   f006
002564   0e09     movlw   0x09             	MOVLW	0x09
002566   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
002568   f007
00256a   0e0a     movlw   0x0a             	MOVLW	0x0a
00256c   cfdb     movff   0xfdb, 0x008     	MOVFF	PLUSW2, r0x08
00256e   f008
002570   0e0c     movlw   0x0c             	MOVLW	0x0c
002572   cfdb     movff   0xfdb, 0x009     	MOVFF	PLUSW2, r0x09
002574   f009
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u32 int_part  = 0;
002576   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
002578   6a0b     clrf    0x0b, 0x0        	CLRF	r0x0b
00257a   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
00257c   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
                                           ;	.line	188; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u32 frac_part = 0;
00257e   6a0e     clrf    0x0e, 0x0        	CLRF	r0x0e
002580   6a0f     clrf    0x0f, 0x0        	CLRF	r0x0f
002582   6a10     clrf    0x10, 0x0        	CLRF	r0x10
002584   6a11     clrf    0x11, 0x0        	CLRF	r0x11
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 buffer[PRINTF_BUF_LEN], *string = buffer;
002586   0e06     movlw   0x06             	MOVLW	HIGH(_pprintfl_buffer_1_169)
002588   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
00258a   0ebc     movlw   0xbc             	MOVLW	LOW(_pprintfl_buffer_1_169)
00258c   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
00258e   0e80     movlw   0x80             	MOVLW	0x80
002590   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 tmp[PRINTF_BUF_LEN], *s = tmp;
002592   0e06     movlw   0x06             	MOVLW	HIGH(_pprintfl_tmp_1_169)
002594   6e16     movwf   0x16, 0x0        	MOVWF	r0x16
002596   0ec8     movlw   0xc8             	MOVLW	LOW(_pprintfl_tmp_1_169)
002598   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
00259a   0e80     movlw   0x80             	MOVLW	0x80
00259c   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 count = 0, m, t;
00259e   6a18     clrf    0x18, 0x0        	CLRF	r0x18
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 length = PRINTF_BUF_LEN - 1;
0025a0   0e0b     movlw   0x0b             	MOVLW	0x0b
0025a2   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/stdio.c	helper.f = value;
0025a4   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0025a6   0107     movlb   0x7              	BANKSEL	_pprintfl_helper_1_169
0025a8   6f04     movwf   0x04, 0x1        	MOVWF	_pprintfl_helper_1_169, B
0025aa   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
0025ac   6f05     movwf   0x05, 0x1        	MOVWF	(_pprintfl_helper_1_169 + 1), B
0025ae   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
                                           ; removed redundant BANKSEL
0025b0   6f06     movwf   0x06, 0x1        	MOVWF	(_pprintfl_helper_1_169 + 2), B
0025b2   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
                                           ; removed redundant BANKSEL
0025b4   6f07     movwf   0x07, 0x1        	MOVWF	(_pprintfl_helper_1_169 + 3), B
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (helper.l < 0)
0025b6   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
                                           ; removed redundant BANKSEL
0025b8   af07     btfss   0x07, 0x7, 0x1   	BTFSS	(_pprintfl_helper_1_169 + 3), 7, B
0025ba   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0025bc   e325     bnc     0x002608         	BNC	_00937_DS_
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (width && (pad & PAD_ZERO))
0025be   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
0025c0   e014     bz      0x0025ea         	BZ	_00933_DS_
0025c2   c008     movff   0x008, 0x003     	MOVFF	r0x08, r0x03
0025c4   f003
0025c6   a203     btfss   0x03, 0x1, 0x0   	BTFSS	r0x03, 1
0025c8   d010     bra     0x0025ea         	BRA	_00933_DS_
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, '-');
0025ca   0e2d     movlw   0x2d             	MOVLW	0x2d
0025cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025ce   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0025d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025d2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0025d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025d6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0025d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025da   ecaa     call    0x005354, 0x0    	CALL	_pprintc
0025dc   f029
0025de   0e04     movlw   0x04             	MOVLW	0x04
0025e0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	203; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++count;
0025e2   0e01     movlw   0x01             	MOVLW	0x01
0025e4   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/core/stdio.c	--width;
0025e6   0607     decf    0x07, 0x1, 0x0   	DECF	r0x07, F
0025e8   d00f     bra     0x002608         	BRA	_00937_DS_
                                           _00933_DS_:
                                           ;	.line	208; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = '-';
0025ea   0e2d     movlw   0x2d             	MOVLW	0x2d
0025ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025ee   c012     movff   0x012, 0xfe9     	MOVFF	r0x12, FSR0L
0025f0   ffe9
0025f2   c013     movff   0x013, 0xff3     	MOVFF	r0x13, PRODL
0025f4   fff3
0025f6   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
0025f8   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
0025fa   f033
0025fc   2a12     incf    0x12, 0x1, 0x0   	INCF	r0x12, F
0025fe   e302     bnc     0x002604         	BNC	_01026_DS_
002600   4a13     infsnz  0x13, 0x1, 0x0   	INFSNZ	r0x13, F
002602   2a14     incf    0x14, 0x1, 0x0   	INCF	r0x14, F
                                           _01026_DS_:
                                           ;	.line	209; /home/vbasel/.icaro/v4/firmware/core/stdio.c	length--;
002604   0e0a     movlw   0x0a             	MOVLW	0x0a
002606   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
                                           _00937_DS_:
002608   0107     movlb   0x7              	BANKSEL	(_pprintfl_helper_1_169 + 2)
                                           ;	.line	215; /home/vbasel/.icaro/v4/firmware/core/stdio.c	exponent = ((helper.l >> 23) & 0xFF) - 127;	
00260a   3506     rlcf    0x06, 0x0, 0x1   	RLCF	(_pprintfl_helper_1_169 + 2), W, B
                                           ; removed redundant BANKSEL
00260c   3507     rlcf    0x07, 0x0, 0x1   	RLCF	(_pprintfl_helper_1_169 + 3), W, B
00260e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002610   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002612   0e81     movlw   0x81             	MOVLW	0x81
002614   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
                                           ; removed redundant BANKSEL
                                           ;	.line	218; /home/vbasel/.icaro/v4/firmware/core/stdio.c	mantissa = (helper.l & 0x7FFFFF) | 0x800000;
002616   5104     movf    0x04, 0x0, 0x1   	MOVF	_pprintfl_helper_1_169, W, B
002618   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; removed redundant BANKSEL
00261a   5105     movf    0x05, 0x0, 0x1   	MOVF	(_pprintfl_helper_1_169 + 1), W, B
00261c   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00261e   0e7f     movlw   0x7f             	MOVLW	0x7f
                                           ; removed redundant BANKSEL
002620   1506     andwf   0x06, 0x0, 0x1   	ANDWF	(_pprintfl_helper_1_169 + 2), W, B
002622   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
002624   6a1a     clrf    0x1a, 0x0        	CLRF	r0x1a
002626   8e06     bsf     0x06, 0x7, 0x0   	BSF	r0x06, 7
                                           ;	.line	231; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (exponent >= 31)
002628   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00262a   0f80     addlw   0x80             	ADDLW	0x80
00262c   0f61     addlw   0x61             	ADDLW	0x61
00262e   e321     bnc     0x002672         	BNC	_00948_DS_
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[0] = '+';
002630   0e2b     movlw   0x2b             	MOVLW	0x2b
002632   0106     movlb   0x6              	BANKSEL	_pprintfl_buffer_1_169
002634   6fbc     movwf   0xbc, 0x1        	MOVWF	_pprintfl_buffer_1_169, B
                                           ;	.line	234; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[1] = 'i';
002636   0e69     movlw   0x69             	MOVLW	0x69
                                           ; removed redundant BANKSEL
002638   6fbd     movwf   0xbd, 0x1        	MOVWF	(_pprintfl_buffer_1_169 + 1), B
                                           ;	.line	235; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[2] = 'n';
00263a   0e6e     movlw   0x6e             	MOVLW	0x6e
                                           ; removed redundant BANKSEL
00263c   6fbe     movwf   0xbe, 0x1        	MOVWF	(_pprintfl_buffer_1_169 + 2), B
                                           ;	.line	236; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[3] = 'f';
00263e   0e66     movlw   0x66             	MOVLW	0x66
                                           ; removed redundant BANKSEL
002640   6fbf     movwf   0xbf, 0x1        	MOVWF	(_pprintfl_buffer_1_169 + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[4] = '\0';
002642   6bc0     clrf    0xc0, 0x1        	CLRF	(_pprintfl_buffer_1_169 + 4), B
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprints(out, buffer, width, pad);
002644   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
002646   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002648   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
00264a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00264c   0e80     movlw   0x80             	MOVLW	0x80
00264e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002650   0e06     movlw   0x06             	MOVLW	HIGH(_pprintfl_buffer_1_169)
002652   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002654   0ebc     movlw   0xbc             	MOVLW	LOW(_pprintfl_buffer_1_169)
002656   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002658   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00265a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00265c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00265e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002660   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002662   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002664   eca4     call    0x004148, 0x0    	CALL	_pprints
002666   f020
002668   6e1b     movwf   0x1b, 0x0        	MOVWF	r0x1b
00266a   0e08     movlw   0x08             	MOVLW	0x08
00266c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00266e   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
002670   d193     bra     0x002998         	BRA	_00969_DS_
                                           _00948_DS_:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/core/stdio.c	else if (exponent < -23)
002672   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002674   0f80     addlw   0x80             	ADDLW	0x80
002676   0f97     addlw   0x97             	ADDLW	0x97
002678   e209     bc      0x00268c         	BC	_00945_DS_
                                           ;	.line	251; /home/vbasel/.icaro/v4/firmware/core/stdio.c	int_part  = 0;
00267a   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
00267c   6a0b     clrf    0x0b, 0x0        	CLRF	r0x0b
00267e   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
002680   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
                                           ;	.line	252; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part = 0;
002682   6a0e     clrf    0x0e, 0x0        	CLRF	r0x0e
002684   6a0f     clrf    0x0f, 0x0        	CLRF	r0x0f
002686   6a10     clrf    0x10, 0x0        	CLRF	r0x10
002688   6a11     clrf    0x11, 0x0        	CLRF	r0x11
00268a   d075     bra     0x002776         	BRA	_00949_DS_
                                           _00945_DS_:
                                           ;	.line	255; /home/vbasel/.icaro/v4/firmware/core/stdio.c	else if (exponent >= 23)
00268c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00268e   0f80     addlw   0x80             	ADDLW	0x80
002690   0f69     addlw   0x69             	ADDLW	0x69
002692   e317     bnc     0x0026c2         	BNC	_00942_DS_
                                           ;	.line	257; /home/vbasel/.icaro/v4/firmware/core/stdio.c	int_part = mantissa << (exponent - 23);
002694   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002696   6e1b     movwf   0x1b, 0x0        	MOVWF	r0x1b
002698   0ee9     movlw   0xe9             	MOVLW	0xe9
00269a   261b     addwf   0x1b, 0x1, 0x0   	ADDWF	r0x1b, F
00269c   c004     movff   0x004, 0x00a     	MOVFF	r0x04, r0x0a
00269e   f00a
0026a0   c005     movff   0x005, 0x00b     	MOVFF	r0x05, r0x0b
0026a2   f00b
0026a4   c006     movff   0x006, 0x00c     	MOVFF	r0x06, r0x0c
0026a6   f00c
0026a8   c01a     movff   0x01a, 0x00d     	MOVFF	r0x1a, r0x0d
0026aa   f00d
0026ac   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
0026ae   e008     bz      0x0026c0         	BZ	_01032_DS_
0026b0   6ce8     negf    0xe8, 0x0        	NEGF	WREG
0026b2   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01033_DS_:
0026b4   360a     rlcf    0x0a, 0x1, 0x0   	RLCF	r0x0a, F
0026b6   360b     rlcf    0x0b, 0x1, 0x0   	RLCF	r0x0b, F
0026b8   360c     rlcf    0x0c, 0x1, 0x0   	RLCF	r0x0c, F
0026ba   360d     rlcf    0x0d, 0x1, 0x0   	RLCF	r0x0d, F
0026bc   0f01     addlw   0x01             	ADDLW	0x01
0026be   e3fa     bnc     0x0026b4         	BNC	_01033_DS_
                                           _01032_DS_:
0026c0   d05a     bra     0x002776         	BRA	_00949_DS_
                                           _00942_DS_:
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/core/stdio.c	else if (exponent >= 0) 
0026c2   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0026c4   ae03     btfss   0x03, 0x7, 0x0   	BTFSS	r0x03, 7
0026c6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0026c8   e231     bc      0x00272c         	BC	_00939_DS_
                                           ; #	MOVF	r0x03, W
                                           ; #	MOVWF	r0x1b
                                           ; #	MOVF	r0x1b, W
                                           ;	.line	262; /home/vbasel/.icaro/v4/firmware/core/stdio.c	int_part = mantissa >> (23 - exponent);
0026ca   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0026cc   6e1b     movwf   0x1b, 0x0        	MOVWF	r0x1b
0026ce   0817     sublw   0x17             	SUBLW	0x17
0026d0   6e1c     movwf   0x1c, 0x0        	MOVWF	r0x1c
0026d2   c004     movff   0x004, 0x00a     	MOVFF	r0x04, r0x0a
0026d4   f00a
0026d6   c005     movff   0x005, 0x00b     	MOVFF	r0x05, r0x0b
0026d8   f00b
0026da   c006     movff   0x006, 0x00c     	MOVFF	r0x06, r0x0c
0026dc   f00c
0026de   c01a     movff   0x01a, 0x00d     	MOVFF	r0x1a, r0x0d
0026e0   f00d
0026e2   501c     movf    0x1c, 0x0, 0x0   	MOVF	r0x1c, W
0026e4   e008     bz      0x0026f6         	BZ	_01034_DS_
0026e6   6ce8     negf    0xe8, 0x0        	NEGF	WREG
0026e8   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01035_DS_:
0026ea   320d     rrcf    0x0d, 0x1, 0x0   	RRCF	r0x0d, F
0026ec   320c     rrcf    0x0c, 0x1, 0x0   	RRCF	r0x0c, F
0026ee   320b     rrcf    0x0b, 0x1, 0x0   	RRCF	r0x0b, F
0026f0   320a     rrcf    0x0a, 0x1, 0x0   	RRCF	r0x0a, F
0026f2   0f01     addlw   0x01             	ADDLW	0x01
0026f4   e3fa     bnc     0x0026ea         	BNC	_01035_DS_
                                           _01034_DS_:
                                           ;	.line	263; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part = (mantissa << (exponent + 1)) & 0xFFFFFF; // mfh
0026f6   2a1b     incf    0x1b, 0x1, 0x0   	INCF	r0x1b, F
0026f8   c004     movff   0x004, 0x01c     	MOVFF	r0x04, r0x1c
0026fa   f01c
0026fc   c005     movff   0x005, 0x01d     	MOVFF	r0x05, r0x1d
0026fe   f01d
002700   c006     movff   0x006, 0x01e     	MOVFF	r0x06, r0x1e
002702   f01e
002704   c01a     movff   0x01a, 0x01f     	MOVFF	r0x1a, r0x1f
002706   f01f
002708   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
00270a   e008     bz      0x00271c         	BZ	_01036_DS_
00270c   6ce8     negf    0xe8, 0x0        	NEGF	WREG
00270e   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01037_DS_:
002710   361c     rlcf    0x1c, 0x1, 0x0   	RLCF	r0x1c, F
002712   361d     rlcf    0x1d, 0x1, 0x0   	RLCF	r0x1d, F
002714   361e     rlcf    0x1e, 0x1, 0x0   	RLCF	r0x1e, F
002716   361f     rlcf    0x1f, 0x1, 0x0   	RLCF	r0x1f, F
002718   0f01     addlw   0x01             	ADDLW	0x01
00271a   e3fa     bnc     0x002710         	BNC	_01037_DS_
                                           _01036_DS_:
00271c   501c     movf    0x1c, 0x0, 0x0   	MOVF	r0x1c, W
00271e   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
002720   501d     movf    0x1d, 0x0, 0x0   	MOVF	r0x1d, W
002722   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
002724   501e     movf    0x1e, 0x0, 0x0   	MOVF	r0x1e, W
002726   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
002728   6a11     clrf    0x11, 0x0        	CLRF	r0x11
00272a   d025     bra     0x002776         	BRA	_00949_DS_
                                           _00939_DS_:
                                           ;	.line	267; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part = (mantissa & 0xFFFFFF) >> -(exponent + 1);
00272c   6a1a     clrf    0x1a, 0x0        	CLRF	r0x1a
00272e   6a1b     clrf    0x1b, 0x0        	CLRF	r0x1b
002730   be03     btfsc   0x03, 0x7, 0x0   	BTFSC	r0x03, 7
002732   681b     setf    0x1b, 0x0        	SETF	r0x1b
002734   4a03     infsnz  0x03, 0x1, 0x0   	INFSNZ	r0x03, F
002736   2a1b     incf    0x1b, 0x1, 0x0   	INCF	r0x1b, F
002738   1e1b     comf    0x1b, 0x1, 0x0   	COMF	r0x1b, F
00273a   6c03     negf    0x03, 0x0        	NEGF	r0x03
00273c   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
00273e   2a1b     incf    0x1b, 0x1, 0x0   	INCF	r0x1b, F
002740   c004     movff   0x004, 0x00e     	MOVFF	r0x04, r0x0e
002742   f00e
002744   c005     movff   0x005, 0x00f     	MOVFF	r0x05, r0x0f
002746   f00f
002748   c006     movff   0x006, 0x010     	MOVFF	r0x06, r0x10
00274a   f010
00274c   c01a     movff   0x01a, 0x011     	MOVFF	r0x1a, r0x11
00274e   f011
002750   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002752   e011     bz      0x002776         	BZ	_00949_DS_
002754   e609     bn      0x002768         	BN	_01044_DS_
002756   6ce8     negf    0xe8, 0x0        	NEGF	WREG
002758   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01042_DS_:
00275a   3211     rrcf    0x11, 0x1, 0x0   	RRCF	r0x11, F
00275c   3210     rrcf    0x10, 0x1, 0x0   	RRCF	r0x10, F
00275e   320f     rrcf    0x0f, 0x1, 0x0   	RRCF	r0x0f, F
002760   320e     rrcf    0x0e, 0x1, 0x0   	RRCF	r0x0e, F
002762   0f01     addlw   0x01             	ADDLW	0x01
002764   e3fa     bnc     0x00275a         	BNC	_01042_DS_
002766   d007     bra     0x002776         	BRA	_00949_DS_
                                           _01044_DS_:
002768   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           _01043_DS_:
00276a   360e     rlcf    0x0e, 0x1, 0x0   	RLCF	r0x0e, F
00276c   360f     rlcf    0x0f, 0x1, 0x0   	RLCF	r0x0f, F
00276e   3610     rlcf    0x10, 0x1, 0x0   	RLCF	r0x10, F
002770   3611     rlcf    0x11, 0x1, 0x0   	RLCF	r0x11, F
002772   0f01     addlw   0x01             	ADDLW	0x01
002774   e3fa     bnc     0x00276a         	BNC	_01043_DS_
                                           _00949_DS_:
                                           ;	.line	270; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (int_part == 0)
002776   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
002778   100b     iorwf   0x0b, 0x0, 0x0   	IORWF	r0x0b, W
00277a   100c     iorwf   0x0c, 0x0, 0x0   	IORWF	r0x0c, W
00277c   100d     iorwf   0x0d, 0x0, 0x0   	IORWF	r0x0d, W
00277e   e10f     bnz     0x00279e         	BNZ	_00980_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = '0';
002780   0e30     movlw   0x30             	MOVLW	0x30
002782   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002784   c012     movff   0x012, 0xfe9     	MOVFF	r0x12, FSR0L
002786   ffe9
002788   c013     movff   0x013, 0xff3     	MOVFF	r0x13, PRODL
00278a   fff3
00278c   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
00278e   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
002790   f033
002792   2a12     incf    0x12, 0x1, 0x0   	INCF	r0x12, F
002794   e302     bnc     0x00279a         	BNC	_01045_DS_
002796   4a13     infsnz  0x13, 0x1, 0x0   	INFSNZ	r0x13, F
002798   2a14     incf    0x14, 0x1, 0x0   	INCF	r0x14, F
                                           _01045_DS_:
                                           ;	.line	273; /home/vbasel/.icaro/v4/firmware/core/stdio.c	length--;
00279a   0619     decf    0x19, 0x1, 0x0   	DECF	r0x19, F
00279c   d078     bra     0x00288e         	BRA	_00958_DS_
                                           _00980_DS_:
                                           ;	.line	279; /home/vbasel/.icaro/v4/firmware/core/stdio.c	while (int_part)
00279e   c015     movff   0x015, 0x003     	MOVFF	r0x15, r0x03
0027a0   f003
0027a2   c016     movff   0x016, 0x004     	MOVFF	r0x16, r0x04
0027a4   f004
0027a6   c017     movff   0x017, 0x005     	MOVFF	r0x17, r0x05
0027a8   f005
0027aa   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0027ac   c019     movff   0x019, 0x015     	MOVFF	r0x19, r0x15
0027ae   f015
                                           _00950_DS_:
0027b0   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
0027b2   100b     iorwf   0x0b, 0x0, 0x0   	IORWF	r0x0b, W
0027b4   100c     iorwf   0x0c, 0x0, 0x0   	IORWF	r0x0c, W
0027b6   100d     iorwf   0x0d, 0x0, 0x0   	IORWF	r0x0d, W
0027b8   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
0027ba   d03c     bra     0x002834         	BRA	_00988_DS_
                                           ;	.line	281; /home/vbasel/.icaro/v4/firmware/core/stdio.c	t = int_part % 10;		// decimal base
0027bc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0027be   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0027c0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0027c2   0e0a     movlw   0x0a             	MOVLW	0x0a
0027c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0027c6   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
0027c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0027ca   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
0027cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0027ce   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
0027d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0027d2   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
0027d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0027d6   ec73     call    0x004ee6, 0x0    	CALL	__modulong
0027d8   f027
0027da   6e16     movwf   0x16, 0x0        	MOVWF	r0x16
0027dc   0e08     movlw   0x08             	MOVLW	0x08
0027de   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	282; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*s++ = t + '0';
0027e0   0e30     movlw   0x30             	MOVLW	0x30
0027e2   2616     addwf   0x16, 0x1, 0x0   	ADDWF	r0x16, F
0027e4   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
0027e6   ffe5
0027e8   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0027ea   ffe9
0027ec   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
0027ee   fff3
0027f0   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0027f2   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
0027f4   f033
0027f6   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0027f8   e302     bnc     0x0027fe         	BNC	_01046_DS_
0027fa   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
0027fc   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01046_DS_:
                                           ;	.line	283; /home/vbasel/.icaro/v4/firmware/core/stdio.c	int_part /= 10;
0027fe   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002800   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002802   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002804   0e0a     movlw   0x0a             	MOVLW	0x0a
002806   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002808   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
00280a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00280c   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
00280e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002810   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002812   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002814   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
002816   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002818   ec9f     call    0x00513e, 0x0    	CALL	__divulong
00281a   f028
00281c   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
00281e   cff3     movff   0xff3, 0x00b     	MOVFF	PRODL, r0x0b
002820   f00b
002822   cff4     movff   0xff4, 0x00c     	MOVFF	PRODH, r0x0c
002824   f00c
002826   cfe9     movff   0xfe9, 0x00d     	MOVFF	FSR0L, r0x0d
002828   f00d
00282a   0e08     movlw   0x08             	MOVLW	0x08
00282c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/core/stdio.c	m++;					// string's length counter
00282e   2a06     incf    0x06, 0x1, 0x0   	INCF	r0x06, F
                                           ;	.line	285; /home/vbasel/.icaro/v4/firmware/core/stdio.c	length--;
002830   0615     decf    0x15, 0x1, 0x0   	DECF	r0x15, F
002832   d7be     bra     0x0027b0         	BRA	_00950_DS_
                                           _00988_DS_:
                                           ;	.line	288; /home/vbasel/.icaro/v4/firmware/core/stdio.c	while (m--)
002834   c015     movff   0x015, 0x019     	MOVFF	r0x15, r0x19
002836   f019
002838   c012     movff   0x012, 0x00a     	MOVFF	r0x12, r0x0a
00283a   f00a
00283c   c013     movff   0x013, 0x00b     	MOVFF	r0x13, r0x0b
00283e   f00b
002840   c014     movff   0x014, 0x00c     	MOVFF	r0x14, r0x0c
002842   f00c
                                           _00953_DS_:
002844   c006     movff   0x006, 0x00d     	MOVFF	r0x06, r0x0d
002846   f00d
002848   0606     decf    0x06, 0x1, 0x0   	DECF	r0x06, F
00284a   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
00284c   e01a     bz      0x002882         	BZ	_00989_DS_
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = *--s;
00284e   0eff     movlw   0xff             	MOVLW	0xff
002850   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
002852   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002854   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
002856   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002858   ffe9
00285a   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
00285c   fff3
00285e   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
002860   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
002862   f033
002864   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
002866   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
002868   ffe5
00286a   c00a     movff   0x00a, 0xfe9     	MOVFF	r0x0a, FSR0L
00286c   ffe9
00286e   c00b     movff   0x00b, 0xff3     	MOVFF	r0x0b, PRODL
002870   fff3
002872   500c     movf    0x0c, 0x0, 0x0   	MOVF	r0x0c, W
002874   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
002876   f033
002878   2a0a     incf    0x0a, 0x1, 0x0   	INCF	r0x0a, F
00287a   e3e4     bnc     0x002844         	BNC	_00953_DS_
00287c   4a0b     infsnz  0x0b, 0x1, 0x0   	INFSNZ	r0x0b, F
00287e   2a0c     incf    0x0c, 0x1, 0x0   	INCF	r0x0c, F
                                           _01047_DS_:
002880   d7e1     bra     0x002844         	BRA	_00953_DS_
                                           _00989_DS_:
002882   c00a     movff   0x00a, 0x012     	MOVFF	r0x0a, r0x12
002884   f012
002886   c00b     movff   0x00b, 0x013     	MOVFF	r0x0b, r0x13
002888   f013
00288a   c00c     movff   0x00c, 0x014     	MOVFF	r0x0c, r0x14
00288c   f014
                                           _00958_DS_:
                                           ;	.line	303; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (precision > 6)
00288e   0e07     movlw   0x07             	MOVLW	0x07
002890   5c09     subwf   0x09, 0x0, 0x0   	SUBWF	r0x09, W
002892   e302     bnc     0x002898         	BNC	_00960_DS_
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision = 6;
002894   0e06     movlw   0x06             	MOVLW	0x06
002896   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           _00960_DS_:
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (precision > length)
002898   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
                                           ; #	SUBWF	r0x19, W
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00962_DS_
                                           ; #	MOVFF	r0x19, r0x09
                                           ; #	MOVLW	0x01
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/core/stdio.c	precision = length;
00289a   5c19     subwf   0x19, 0x0, 0x0   	SUBWF	r0x19, W
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (precision >= 1)
00289c   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
00289e   c019     movff   0x019, 0x009     	MOVFF	r0x19, r0x09
0028a0   f009
0028a2   0e01     movlw   0x01             	MOVLW	0x01
0028a4   5c09     subwf   0x09, 0x0, 0x0   	SUBWF	r0x09, W
0028a6   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
0028a8   d057     bra     0x002958         	BRA	_00965_DS_
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = '.';
0028aa   0e2e     movlw   0x2e             	MOVLW	0x2e
0028ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0028ae   c012     movff   0x012, 0xfe9     	MOVFF	r0x12, FSR0L
0028b0   ffe9
0028b2   c013     movff   0x013, 0xff3     	MOVFF	r0x13, PRODL
0028b4   fff3
0028b6   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
0028b8   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
0028ba   f033
0028bc   2a12     incf    0x12, 0x1, 0x0   	INCF	r0x12, F
0028be   e302     bnc     0x0028c4         	BNC	_01051_DS_
0028c0   4a13     infsnz  0x13, 0x1, 0x0   	INFSNZ	r0x13, F
0028c2   2a14     incf    0x14, 0x1, 0x0   	INCF	r0x14, F
                                           _01051_DS_:
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (m = 0; m < precision; m++)
0028c4   c012     movff   0x012, 0x003     	MOVFF	r0x12, r0x03
0028c6   f003
0028c8   c013     movff   0x013, 0x004     	MOVFF	r0x13, r0x04
0028ca   f004
0028cc   c014     movff   0x014, 0x005     	MOVFF	r0x14, r0x05
0028ce   f005
0028d0   6a06     clrf    0x06, 0x0        	CLRF	r0x06
                                           _00967_DS_:
0028d2   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
0028d4   5c06     subwf   0x06, 0x0, 0x0   	SUBWF	r0x06, W
0028d6   e23a     bc      0x00294c         	BC	_00990_DS_
                                           ;	.line	320; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part = (frac_part << 3) + (frac_part << 1); 
0028d8   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
0028da   240e     addwf   0x0e, 0x0, 0x0   	ADDWF	r0x0e, W
0028dc   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
0028de   340f     rlcf    0x0f, 0x0, 0x0   	RLCF	r0x0f, W
0028e0   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
0028e2   3410     rlcf    0x10, 0x0, 0x0   	RLCF	r0x10, W
0028e4   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
0028e6   3411     rlcf    0x11, 0x0, 0x0   	RLCF	r0x11, W
0028e8   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
0028ea   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
0028ec   260a     addwf   0x0a, 0x1, 0x0   	ADDWF	r0x0a, F
0028ee   360b     rlcf    0x0b, 0x1, 0x0   	RLCF	r0x0b, F
0028f0   360c     rlcf    0x0c, 0x1, 0x0   	RLCF	r0x0c, F
0028f2   360d     rlcf    0x0d, 0x1, 0x0   	RLCF	r0x0d, F
0028f4   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
0028f6   260a     addwf   0x0a, 0x1, 0x0   	ADDWF	r0x0a, F
0028f8   360b     rlcf    0x0b, 0x1, 0x0   	RLCF	r0x0b, F
0028fa   360c     rlcf    0x0c, 0x1, 0x0   	RLCF	r0x0c, F
0028fc   360d     rlcf    0x0d, 0x1, 0x0   	RLCF	r0x0d, F
0028fe   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002900   240e     addwf   0x0e, 0x0, 0x0   	ADDWF	r0x0e, W
002902   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
002904   340f     rlcf    0x0f, 0x0, 0x0   	RLCF	r0x0f, W
002906   6e16     movwf   0x16, 0x0        	MOVWF	r0x16
002908   3410     rlcf    0x10, 0x0, 0x0   	RLCF	r0x10, W
00290a   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
00290c   3411     rlcf    0x11, 0x0, 0x0   	RLCF	r0x11, W
00290e   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
002910   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
002912   240a     addwf   0x0a, 0x0, 0x0   	ADDWF	r0x0a, W
002914   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
002916   5016     movf    0x16, 0x0, 0x0   	MOVF	r0x16, W
002918   200b     addwfc  0x0b, 0x0, 0x0   	ADDWFC	r0x0b, W
00291a   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
00291c   5017     movf    0x17, 0x0, 0x0   	MOVF	r0x17, W
00291e   200c     addwfc  0x0c, 0x0, 0x0   	ADDWFC	r0x0c, W
002920   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
002922   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
002924   200d     addwfc  0x0d, 0x0, 0x0   	ADDWFC	r0x0d, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = (frac_part >> 24) + '0';
002926   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
002928   0e30     movlw   0x30             	MOVLW	0x30
00292a   260a     addwf   0x0a, 0x1, 0x0   	ADDWF	r0x0a, F
00292c   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
00292e   ffe5
002930   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002932   ffe9
002934   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
002936   fff3
002938   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00293a   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
00293c   f033
00293e   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
002940   e302     bnc     0x002946         	BNC	_01053_DS_
002942   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
002944   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _01053_DS_:
                                           ;	.line	324; /home/vbasel/.icaro/v4/firmware/core/stdio.c	frac_part &= 0xFFFFFF;
002946   6a11     clrf    0x11, 0x0        	CLRF	r0x11
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (m = 0; m < precision; m++)
002948   2a06     incf    0x06, 0x1, 0x0   	INCF	r0x06, F
00294a   d7c3     bra     0x0028d2         	BRA	_00967_DS_
                                           _00990_DS_:
00294c   c003     movff   0x003, 0x012     	MOVFF	r0x03, r0x12
00294e   f012
002950   c004     movff   0x004, 0x013     	MOVFF	r0x04, r0x13
002952   f013
002954   c005     movff   0x005, 0x014     	MOVFF	r0x05, r0x14
002956   f014
                                           _00965_DS_:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string++ = '\0';
002958   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00295a   c012     movff   0x012, 0xfe9     	MOVFF	r0x12, FSR0L
00295c   ffe9
00295e   c013     movff   0x013, 0xff3     	MOVFF	r0x13, PRODL
002960   fff3
002962   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
002964   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
002966   f033
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return count + pprints(out, buffer, width, pad);
002968   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
00296a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00296c   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
00296e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002970   0e80     movlw   0x80             	MOVLW	0x80
002972   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002974   0e06     movlw   0x06             	MOVLW	HIGH(_pprintfl_buffer_1_169)
002976   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002978   0ebc     movlw   0xbc             	MOVLW	LOW(_pprintfl_buffer_1_169)
00297a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00297c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00297e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002980   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002982   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002984   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002986   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002988   eca4     call    0x004148, 0x0    	CALL	_pprints
00298a   f020
00298c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00298e   0e08     movlw   0x08             	MOVLW	0x08
002990   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002992   5018     movf    0x18, 0x0, 0x0   	MOVF	r0x18, W
002994   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002996   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00969_DS_:
                                           ;	.line	332; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
002998   cfe4     movff   0xfe4, 0x01f     	MOVFF	PREINC1, r0x1f
00299a   f01f
00299c   cfe4     movff   0xfe4, 0x01e     	MOVFF	PREINC1, r0x1e
00299e   f01e
0029a0   cfe4     movff   0xfe4, 0x01d     	MOVFF	PREINC1, r0x1d
0029a2   f01d
0029a4   cfe4     movff   0xfe4, 0x01c     	MOVFF	PREINC1, r0x1c
0029a6   f01c
0029a8   cfe4     movff   0xfe4, 0x01b     	MOVFF	PREINC1, r0x1b
0029aa   f01b
0029ac   cfe4     movff   0xfe4, 0x01a     	MOVFF	PREINC1, r0x1a
0029ae   f01a
0029b0   cfe4     movff   0xfe4, 0x019     	MOVFF	PREINC1, r0x19
0029b2   f019
0029b4   cfe4     movff   0xfe4, 0x018     	MOVFF	PREINC1, r0x18
0029b6   f018
0029b8   cfe4     movff   0xfe4, 0x017     	MOVFF	PREINC1, r0x17
0029ba   f017
0029bc   cfe4     movff   0xfe4, 0x016     	MOVFF	PREINC1, r0x16
0029be   f016
0029c0   cfe4     movff   0xfe4, 0x015     	MOVFF	PREINC1, r0x15
0029c2   f015
0029c4   cfe4     movff   0xfe4, 0x014     	MOVFF	PREINC1, r0x14
0029c6   f014
0029c8   cfe4     movff   0xfe4, 0x013     	MOVFF	PREINC1, r0x13
0029ca   f013
0029cc   cfe4     movff   0xfe4, 0x012     	MOVFF	PREINC1, r0x12
0029ce   f012
0029d0   cfe4     movff   0xfe4, 0x011     	MOVFF	PREINC1, r0x11
0029d2   f011
0029d4   cfe4     movff   0xfe4, 0x010     	MOVFF	PREINC1, r0x10
0029d6   f010
0029d8   cfe4     movff   0xfe4, 0x00f     	MOVFF	PREINC1, r0x0f
0029da   f00f
0029dc   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
0029de   f00e
0029e0   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
0029e2   f00d
0029e4   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
0029e6   f00c
0029e8   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
0029ea   f00b
0029ec   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
0029ee   f00a
0029f0   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
0029f2   f009
0029f4   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
0029f6   f008
0029f8   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
0029fa   f007
0029fc   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
0029fe   f006
002a00   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
002a02   f005
002a04   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002a06   f004
002a08   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002a0a   f003
002a0c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002a0e   f002
002a10   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002a12   f001
002a14   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002a16   f000
002a18   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002a1a   ffd9
002a1c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__pprinti	code
                                           _pprinti:
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static u8 pprinti(u8 **out, u32 i, u8 islong, u8 base, u8 sign, u8 width, u8 pad, u8 separator, u8 letterbase)
002a1e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002a20   ffe5
002a22   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002a24   ffd9
002a26   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002a28   ffe5
002a2a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002a2c   ffe5
002a2e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002a30   ffe5
002a32   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002a34   ffe5
002a36   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002a38   ffe5
002a3a   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
002a3c   ffe5
002a3e   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
002a40   ffe5
002a42   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
002a44   ffe5
002a46   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
002a48   ffe5
002a4a   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
002a4c   ffe5
002a4e   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
002a50   ffe5
002a52   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
002a54   ffe5
002a56   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
002a58   ffe5
002a5a   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
002a5c   ffe5
002a5e   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
002a60   ffe5
002a62   c00f     movff   0x00f, 0xfe5     	MOVFF	r0x0f, POSTDEC1
002a64   ffe5
002a66   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
002a68   ffe5
002a6a   c011     movff   0x011, 0xfe5     	MOVFF	r0x11, POSTDEC1
002a6c   ffe5
002a6e   c012     movff   0x012, 0xfe5     	MOVFF	r0x12, POSTDEC1
002a70   ffe5
002a72   c013     movff   0x013, 0xfe5     	MOVFF	r0x13, POSTDEC1
002a74   ffe5
002a76   c014     movff   0x014, 0xfe5     	MOVFF	r0x14, POSTDEC1
002a78   ffe5
002a7a   c015     movff   0x015, 0xfe5     	MOVFF	r0x15, POSTDEC1
002a7c   ffe5
002a7e   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
002a80   ffe5
002a82   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
002a84   ffe5
002a86   c018     movff   0x018, 0xfe5     	MOVFF	r0x18, POSTDEC1
002a88   ffe5
002a8a   c019     movff   0x019, 0xfe5     	MOVFF	r0x19, POSTDEC1
002a8c   ffe5
002a8e   c01a     movff   0x01a, 0xfe5     	MOVFF	r0x1a, POSTDEC1
002a90   ffe5
002a92   c01b     movff   0x01b, 0xfe5     	MOVFF	r0x1b, POSTDEC1
002a94   ffe5
002a96   0e02     movlw   0x02             	MOVLW	0x02
002a98   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002a9a   f000
002a9c   0e03     movlw   0x03             	MOVLW	0x03
002a9e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002aa0   f001
002aa2   0e04     movlw   0x04             	MOVLW	0x04
002aa4   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
002aa6   f002
002aa8   0e05     movlw   0x05             	MOVLW	0x05
002aaa   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
002aac   f003
002aae   0e06     movlw   0x06             	MOVLW	0x06
002ab0   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
002ab2   f004
002ab4   0e07     movlw   0x07             	MOVLW	0x07
002ab6   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
002ab8   f005
002aba   0e08     movlw   0x08             	MOVLW	0x08
002abc   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
002abe   f006
002ac0   0e09     movlw   0x09             	MOVLW	0x09
002ac2   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
002ac4   f007
002ac6   0e0a     movlw   0x0a             	MOVLW	0x0a
002ac8   cfdb     movff   0xfdb, 0x008     	MOVFF	PLUSW2, r0x08
002aca   f008
002acc   0e0b     movlw   0x0b             	MOVLW	0x0b
002ace   cfdb     movff   0xfdb, 0x009     	MOVFF	PLUSW2, r0x09
002ad0   f009
002ad2   0e0c     movlw   0x0c             	MOVLW	0x0c
002ad4   cfdb     movff   0xfdb, 0x00a     	MOVFF	PLUSW2, r0x0a
002ad6   f00a
002ad8   0e0d     movlw   0x0d             	MOVLW	0x0d
002ada   cfdb     movff   0xfdb, 0x00b     	MOVFF	PLUSW2, r0x0b
002adc   f00b
002ade   0e0f     movlw   0x0f             	MOVLW	0x0f
002ae0   cfdb     movff   0xfdb, 0x00c     	MOVFF	PLUSW2, r0x0c
002ae2   f00c
                                           ;	.line	119; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 neg = 0, pc = 0;
002ae4   6a0d     clrf    0x0d, 0x0        	CLRF	r0x0d
002ae6   6a0e     clrf    0x0e, 0x0        	CLRF	r0x0e
                                           ;	.line	120; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u32 t, uns32 = i;
002ae8   c003     movff   0x003, 0x00f     	MOVFF	r0x03, r0x0f
002aea   f00f
002aec   c004     movff   0x004, 0x010     	MOVFF	r0x04, r0x10
002aee   f010
002af0   c005     movff   0x005, 0x011     	MOVFF	r0x05, r0x11
002af2   f011
002af4   c006     movff   0x006, 0x012     	MOVFF	r0x06, r0x12
002af6   f012
                                           ;	.line	122; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (i == 0)
002af8   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002afa   1004     iorwf   0x04, 0x0, 0x0   	IORWF	r0x04, W
002afc   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
002afe   1006     iorwf   0x06, 0x0, 0x0   	IORWF	r0x06, W
002b00   e11b     bnz     0x002b38         	BNZ	_00859_DS_
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[0] = '0';
002b02   0e30     movlw   0x30             	MOVLW	0x30
002b04   0105     movlb   0x5              	BANKSEL	_pprinti_buffer_1_159
002b06   6ff2     movwf   0xf2, 0x1        	MOVWF	_pprinti_buffer_1_159, B
                                           ; removed redundant BANKSEL
                                           ;	.line	125; /home/vbasel/.icaro/v4/firmware/core/stdio.c	buffer[1] = '\0';
002b08   6bf3     clrf    0xf3, 0x1        	CLRF	(_pprinti_buffer_1_159 + 1), B
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pprints(out, buffer, width, pad);
002b0a   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002b0c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b0e   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
002b10   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b12   0e80     movlw   0x80             	MOVLW	0x80
002b14   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b16   0e05     movlw   0x05             	MOVLW	HIGH(_pprinti_buffer_1_159)
002b18   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b1a   0ef2     movlw   0xf2             	MOVLW	LOW(_pprinti_buffer_1_159)
002b1c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b1e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002b20   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b22   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002b24   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b26   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002b28   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b2a   eca4     call    0x004148, 0x0    	CALL	_pprints
002b2c   f020
002b2e   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
002b30   0e08     movlw   0x08             	MOVLW	0x08
002b32   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002b34   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
002b36   d0ee     bra     0x002d14         	BRA	_00880_DS_
                                           _00859_DS_:
                                           ;	.line	130; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if  ( (sign) && (base == 10) )          // decimal signed number ?
002b38   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
002b3a   e036     bz      0x002ba8         	BZ	_00867_DS_
002b3c   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
002b3e   0a0a     xorlw   0x0a             	XORLW	0x0a
002b40   e133     bnz     0x002ba8         	BNZ	_00867_DS_
                                           ;	.line	132; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if ( (islong) && ((s32)i < 0) )     // negative 32-bit ?
002b42   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
002b44   e01c     bz      0x002b7e         	BZ	_00861_DS_
002b46   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002b48   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
002b4a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
002b4c   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
002b4e   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
002b50   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
002b52   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
002b54   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
002b56   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
002b58   ae15     btfss   0x15, 0x7, 0x0   	BTFSS	r0x15, 7
002b5a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002b5c   e310     bnc     0x002b7e         	BNC	_00861_DS_
                                           ;	.line	134; /home/vbasel/.icaro/v4/firmware/core/stdio.c	neg = 1;
002b5e   0e01     movlw   0x01             	MOVLW	0x01
002b60   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
                                           ;	.line	135; /home/vbasel/.icaro/v4/firmware/core/stdio.c	uns32 = - (s32)i;
002b62   1c15     comf    0x15, 0x0, 0x0   	COMF	r0x15, W
002b64   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
002b66   1c14     comf    0x14, 0x0, 0x0   	COMF	r0x14, W
002b68   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
002b6a   1c13     comf    0x13, 0x0, 0x0   	COMF	r0x13, W
002b6c   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
002b6e   1c09     comf    0x09, 0x0, 0x0   	COMF	r0x09, W
002b70   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
002b72   2a0f     incf    0x0f, 0x1, 0x0   	INCF	r0x0f, F
002b74   e104     bnz     0x002b7e         	BNZ	_00861_DS_
002b76   2a10     incf    0x10, 0x1, 0x0   	INCF	r0x10, F
002b78   e102     bnz     0x002b7e         	BNZ	_00861_DS_
002b7a   4a11     infsnz  0x11, 0x1, 0x0   	INFSNZ	r0x11, F
002b7c   2a12     incf    0x12, 0x1, 0x0   	INCF	r0x12, F
                                           _00861_DS_:
                                           ;	.line	137; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if ( (!islong) && ((s16)i < 0) )    // negative 16-bit ?
002b7e   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
002b80   e113     bnz     0x002ba8         	BNZ	_00867_DS_
002b82   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
002b84   ae04     btfss   0x04, 0x7, 0x0   	BTFSS	r0x04, 7
002b86   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002b88   e30f     bnc     0x002ba8         	BNC	_00867_DS_
                                           ;	.line	139; /home/vbasel/.icaro/v4/firmware/core/stdio.c	neg = 1;
002b8a   0e01     movlw   0x01             	MOVLW	0x01
002b8c   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
                                           ;	.line	140; /home/vbasel/.icaro/v4/firmware/core/stdio.c	uns32 = - (s16)i;
002b8e   1e04     comf    0x04, 0x1, 0x0   	COMF	r0x04, F
002b90   6c03     negf    0x03, 0x0        	NEGF	r0x03
002b92   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
002b94   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
002b96   c003     movff   0x003, 0x00f     	MOVFF	r0x03, r0x0f
002b98   f00f
002b9a   c004     movff   0x004, 0x010     	MOVFF	r0x04, r0x10
002b9c   f010
002b9e   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
002ba0   be04     btfsc   0x04, 0x7, 0x0   	BTFSC	r0x04, 7
002ba2   0eff     movlw   0xff             	MOVLW	0xff
002ba4   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
002ba6   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
                                           _00867_DS_:
                                           ;	.line	145; /home/vbasel/.icaro/v4/firmware/core/stdio.c	string = buffer + PRINTF_BUF_LEN - 1;
002ba8   0e05     movlw   0x05             	MOVLW	HIGH(_pprinti_buffer_1_159 + 11)
002baa   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002bac   0efd     movlw   0xfd             	MOVLW	LOW(_pprinti_buffer_1_159 + 11)
002bae   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002bb0   0e80     movlw   0x80             	MOVLW	0x80
002bb2   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
                                           ;	.line	146; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*string = '\0';
002bb4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002bb6   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002bb8   ffe9
002bba   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
002bbc   fff3
002bbe   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
002bc0   f033
                                           ;	.line	148; /home/vbasel/.icaro/v4/firmware/core/stdio.c	while (uns32)
002bc2   c003     movff   0x003, 0x006     	MOVFF	r0x03, r0x06
002bc4   f006
002bc6   c004     movff   0x004, 0x007     	MOVFF	r0x04, r0x07
002bc8   f007
002bca   c005     movff   0x005, 0x009     	MOVFF	r0x05, r0x09
002bcc   f009
                                           _00871_DS_:
002bce   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002bd0   1010     iorwf   0x10, 0x0, 0x0   	IORWF	r0x10, W
002bd2   1011     iorwf   0x11, 0x0, 0x0   	IORWF	r0x11, W
002bd4   1012     iorwf   0x12, 0x0, 0x0   	IORWF	r0x12, W
002bd6   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
002bd8   d05a     bra     0x002c8e         	BRA	_00895_DS_
                                           ;	.line	150; /home/vbasel/.icaro/v4/firmware/core/stdio.c	t = uns32 % base;
002bda   c008     movff   0x008, 0x013     	MOVFF	r0x08, r0x13
002bdc   f013
002bde   6a14     clrf    0x14, 0x0        	CLRF	r0x14
002be0   6a15     clrf    0x15, 0x0        	CLRF	r0x15
002be2   6a16     clrf    0x16, 0x0        	CLRF	r0x16
002be4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002be6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002be8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002bea   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
002bec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bee   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
002bf0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bf2   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
002bf4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bf6   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
002bf8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bfa   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002bfc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bfe   ec73     call    0x004ee6, 0x0    	CALL	__modulong
002c00   f027
002c02   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
002c04   cff3     movff   0xff3, 0x018     	MOVFF	PRODL, r0x18
002c06   f018
002c08   cff4     movff   0xff4, 0x019     	MOVFF	PRODH, r0x19
002c0a   f019
002c0c   cfe9     movff   0xfe9, 0x01a     	MOVFF	FSR0L, r0x1a
002c0e   f01a
002c10   0e08     movlw   0x08             	MOVLW	0x08
002c12   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	151; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if ( t >= 10 )
002c14   0e00     movlw   0x00             	MOVLW	0x00
002c16   5c1a     subwf   0x1a, 0x0, 0x0   	SUBWF	r0x1a, W
002c18   e108     bnz     0x002c2a         	BNZ	_00926_DS_
002c1a   0e00     movlw   0x00             	MOVLW	0x00
002c1c   5c19     subwf   0x19, 0x0, 0x0   	SUBWF	r0x19, W
002c1e   e105     bnz     0x002c2a         	BNZ	_00926_DS_
002c20   0e00     movlw   0x00             	MOVLW	0x00
002c22   5c18     subwf   0x18, 0x0, 0x0   	SUBWF	r0x18, W
002c24   e102     bnz     0x002c2a         	BNZ	_00926_DS_
002c26   0e0a     movlw   0x0a             	MOVLW	0x0a
002c28   5c17     subwf   0x17, 0x0, 0x0   	SUBWF	r0x17, W
                                           _00926_DS_:
002c2a   e306     bnc     0x002c38         	BNC	_00870_DS_
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/core/stdio.c	t += letterbase - '0' - 10;
002c2c   c00c     movff   0x00c, 0x01b     	MOVFF	r0x0c, r0x1b
002c2e   f01b
002c30   0ec6     movlw   0xc6             	MOVLW	0xc6
002c32   261b     addwf   0x1b, 0x1, 0x0   	ADDWF	r0x1b, F
002c34   501b     movf    0x1b, 0x0, 0x0   	MOVF	r0x1b, W
002c36   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
                                           _00870_DS_:
                                           ;	.line	153; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*--string = t + '0';
002c38   0eff     movlw   0xff             	MOVLW	0xff
002c3a   2606     addwf   0x06, 0x1, 0x0   	ADDWF	r0x06, F
002c3c   2207     addwfc  0x07, 0x1, 0x0   	ADDWFC	r0x07, F
002c3e   2209     addwfc  0x09, 0x1, 0x0   	ADDWFC	r0x09, F
002c40   0e30     movlw   0x30             	MOVLW	0x30
002c42   2617     addwf   0x17, 0x1, 0x0   	ADDWF	r0x17, F
002c44   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
002c46   ffe5
002c48   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
002c4a   ffe9
002c4c   c007     movff   0x007, 0xff3     	MOVFF	r0x07, PRODL
002c4e   fff3
002c50   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
002c52   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
002c54   f033
                                           ;	.line	154; /home/vbasel/.icaro/v4/firmware/core/stdio.c	uns32 /= base;
002c56   5016     movf    0x16, 0x0, 0x0   	MOVF	r0x16, W
002c58   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c5a   5015     movf    0x15, 0x0, 0x0   	MOVF	r0x15, W
002c5c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c5e   5014     movf    0x14, 0x0, 0x0   	MOVF	r0x14, W
002c60   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c62   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
002c64   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c66   5012     movf    0x12, 0x0, 0x0   	MOVF	r0x12, W
002c68   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c6a   5011     movf    0x11, 0x0, 0x0   	MOVF	r0x11, W
002c6c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c6e   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
002c70   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c72   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
002c74   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c76   ec9f     call    0x00513e, 0x0    	CALL	__divulong
002c78   f028
002c7a   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
002c7c   cff3     movff   0xff3, 0x010     	MOVFF	PRODL, r0x10
002c7e   f010
002c80   cff4     movff   0xff4, 0x011     	MOVFF	PRODH, r0x11
002c82   f011
002c84   cfe9     movff   0xfe9, 0x012     	MOVFF	FSR0L, r0x12
002c86   f012
002c88   0e08     movlw   0x08             	MOVLW	0x08
002c8a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002c8c   d7a0     bra     0x002bce         	BRA	_00871_DS_
                                           _00895_DS_:
002c8e   c006     movff   0x006, 0x003     	MOVFF	r0x06, r0x03
002c90   f003
002c92   c007     movff   0x007, 0x004     	MOVFF	r0x07, r0x04
002c94   f004
002c96   c009     movff   0x009, 0x005     	MOVFF	r0x09, r0x05
002c98   f005
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (neg)
002c9a   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
002c9c   e023     bz      0x002ce4         	BZ	_00879_DS_
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (width && (pad & PAD_ZERO))
002c9e   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
002ca0   e014     bz      0x002cca         	BZ	_00875_DS_
002ca2   c00b     movff   0x00b, 0x006     	MOVFF	r0x0b, r0x06
002ca4   f006
002ca6   a206     btfss   0x06, 0x1, 0x0   	BTFSS	r0x06, 1
002ca8   d010     bra     0x002cca         	BRA	_00875_DS_
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, '-');
002caa   0e2d     movlw   0x2d             	MOVLW	0x2d
002cac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002cae   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002cb0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002cb2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002cb4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002cb6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002cb8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002cba   ecaa     call    0x005354, 0x0    	CALL	_pprintc
002cbc   f029
002cbe   0e04     movlw   0x04             	MOVLW	0x04
002cc0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	162; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
002cc2   0e01     movlw   0x01             	MOVLW	0x01
002cc4   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
                                           ;	.line	163; /home/vbasel/.icaro/v4/firmware/core/stdio.c	--width;
002cc6   060a     decf    0x0a, 0x1, 0x0   	DECF	r0x0a, F
002cc8   d00d     bra     0x002ce4         	BRA	_00879_DS_
                                           _00875_DS_:
                                           ;	.line	167; /home/vbasel/.icaro/v4/firmware/core/stdio.c	*--string = '-';
002cca   0eff     movlw   0xff             	MOVLW	0xff
002ccc   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
002cce   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002cd0   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
002cd2   0e2d     movlw   0x2d             	MOVLW	0x2d
002cd4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002cd6   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002cd8   ffe9
002cda   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
002cdc   fff3
002cde   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
002ce0   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
002ce2   f033
                                           _00879_DS_:
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pc + pprints(out, string, width, pad);
002ce4   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002ce6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ce8   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
002cea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002cec   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
002cee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002cf0   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
002cf2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002cf4   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002cf6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002cf8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002cfa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002cfc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002cfe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002d00   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002d02   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002d04   eca4     call    0x004148, 0x0    	CALL	_pprints
002d06   f020
002d08   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002d0a   0e08     movlw   0x08             	MOVLW	0x08
002d0c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002d0e   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
002d10   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002d12   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00880_DS_:
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
002d14   cfe4     movff   0xfe4, 0x01b     	MOVFF	PREINC1, r0x1b
002d16   f01b
002d18   cfe4     movff   0xfe4, 0x01a     	MOVFF	PREINC1, r0x1a
002d1a   f01a
002d1c   cfe4     movff   0xfe4, 0x019     	MOVFF	PREINC1, r0x19
002d1e   f019
002d20   cfe4     movff   0xfe4, 0x018     	MOVFF	PREINC1, r0x18
002d22   f018
002d24   cfe4     movff   0xfe4, 0x017     	MOVFF	PREINC1, r0x17
002d26   f017
002d28   cfe4     movff   0xfe4, 0x016     	MOVFF	PREINC1, r0x16
002d2a   f016
002d2c   cfe4     movff   0xfe4, 0x015     	MOVFF	PREINC1, r0x15
002d2e   f015
002d30   cfe4     movff   0xfe4, 0x014     	MOVFF	PREINC1, r0x14
002d32   f014
002d34   cfe4     movff   0xfe4, 0x013     	MOVFF	PREINC1, r0x13
002d36   f013
002d38   cfe4     movff   0xfe4, 0x012     	MOVFF	PREINC1, r0x12
002d3a   f012
002d3c   cfe4     movff   0xfe4, 0x011     	MOVFF	PREINC1, r0x11
002d3e   f011
002d40   cfe4     movff   0xfe4, 0x010     	MOVFF	PREINC1, r0x10
002d42   f010
002d44   cfe4     movff   0xfe4, 0x00f     	MOVFF	PREINC1, r0x0f
002d46   f00f
002d48   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
002d4a   f00e
002d4c   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
002d4e   f00d
002d50   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
002d52   f00c
002d54   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
002d56   f00b
002d58   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
002d5a   f00a
002d5c   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
002d5e   f009
002d60   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
002d62   f008
002d64   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
002d66   f007
002d68   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
002d6a   f006
002d6c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
002d6e   f005
002d70   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002d72   f004
002d74   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002d76   f003
002d78   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002d7a   f002
002d7c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002d7e   f001
002d80   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002d82   f000
002d84   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002d86   ffd9
002d88   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__pprints	code
                                           _pprints:
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static int pprints(u8 **out, const u8 *string, u8 width, u8 pad)
004148   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00414a   ffe5
00414c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00414e   ffd9
004150   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004152   ffe5
004154   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004156   ffe5
004158   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00415a   ffe5
00415c   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00415e   ffe5
004160   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004162   ffe5
004164   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004166   ffe5
004168   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00416a   ffe5
00416c   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
00416e   ffe5
004170   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
004172   ffe5
004174   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
004176   ffe5
004178   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
00417a   ffe5
00417c   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
00417e   ffe5
004180   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
004182   ffe5
004184   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
004186   ffe5
004188   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
00418a   ffe5
00418c   0e02     movlw   0x02             	MOVLW	0x02
00418e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004190   f000
004192   0e03     movlw   0x03             	MOVLW	0x03
004194   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004196   f001
004198   0e04     movlw   0x04             	MOVLW	0x04
00419a   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
00419c   f002
00419e   0e05     movlw   0x05             	MOVLW	0x05
0041a0   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0041a2   f003
0041a4   0e06     movlw   0x06             	MOVLW	0x06
0041a6   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
0041a8   f004
0041aa   0e07     movlw   0x07             	MOVLW	0x07
0041ac   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
0041ae   f005
0041b0   0e08     movlw   0x08             	MOVLW	0x08
0041b2   cfdb     movff   0xfdb, 0x006     	MOVFF	PLUSW2, r0x06
0041b4   f006
0041b6   0e09     movlw   0x09             	MOVLW	0x09
0041b8   cfdb     movff   0xfdb, 0x007     	MOVFF	PLUSW2, r0x07
0041ba   f007
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/core/stdio.c	register u8 pc = 0;
0041bc   6a08     clrf    0x08, 0x0        	CLRF	r0x08
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/stdio.c	u8 padchar = ' ';
0041be   0e20     movlw   0x20             	MOVLW	0x20
0041c0   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (width > 0)
0041c2   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0041c4   e024     bz      0x00420e         	BZ	_00786_DS_
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (ptr = string; *ptr; ++ptr)
0041c6   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
0041c8   c003     movff   0x003, 0x00b     	MOVFF	r0x03, r0x0b
0041ca   f00b
0041cc   c004     movff   0x004, 0x00c     	MOVFF	r0x04, r0x0c
0041ce   f00c
0041d0   c005     movff   0x005, 0x00d     	MOVFF	r0x05, r0x0d
0041d2   f00d
                                           _00793_DS_:
0041d4   c00b     movff   0x00b, 0xfe9     	MOVFF	r0x0b, FSR0L
0041d6   ffe9
0041d8   c00c     movff   0x00c, 0xff3     	MOVFF	r0x0c, PRODL
0041da   fff3
0041dc   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
0041de   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
0041e0   f033
0041e2   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
0041e4   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
0041e6   e006     bz      0x0041f4         	BZ	_00779_DS_
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++len;
0041e8   2a0a     incf    0x0a, 0x1, 0x0   	INCF	r0x0a, F
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for (ptr = string; *ptr; ++ptr)
0041ea   2a0b     incf    0x0b, 0x1, 0x0   	INCF	r0x0b, F
0041ec   e3f3     bnc     0x0041d4         	BNC	_00793_DS_
0041ee   4a0c     infsnz  0x0c, 0x1, 0x0   	INFSNZ	r0x0c, F
0041f0   2a0d     incf    0x0d, 0x1, 0x0   	INCF	r0x0d, F
                                           _00849_DS_:
0041f2   d7f0     bra     0x0041d4         	BRA	_00793_DS_
                                           _00779_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (len >= width)
0041f4   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0041f6   5c0a     subwf   0x0a, 0x0, 0x0   	SUBWF	r0x0a, W
0041f8   e302     bnc     0x0041fe         	BNC	_00781_DS_
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width = 0;
0041fa   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0041fc   d002     bra     0x004202         	BRA	_00782_DS_
                                           _00781_DS_:
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/core/stdio.c	width -= len;
0041fe   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
004200   5e06     subwf   0x06, 0x1, 0x0   	SUBWF	r0x06, F
                                           _00782_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (pad & PAD_ZERO) padchar = '0';
004202   c007     movff   0x007, 0x00a     	MOVFF	r0x07, r0x0a
004204   f00a
004206   a20a     btfss   0x0a, 0x1, 0x0   	BTFSS	r0x0a, 1
004208   d002     bra     0x00420e         	BRA	_00786_DS_
00420a   0e30     movlw   0x30             	MOVLW	0x30
00420c   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           _00786_DS_:
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (!(pad & PAD_RIGHT))
00420e   b007     btfsc   0x07, 0x0, 0x0   	BTFSC	r0x07, 0
004210   d019     bra     0x004244         	BRA	_00818_DS_
004212   6a07     clrf    0x07, 0x0        	CLRF	r0x07
004214   c006     movff   0x006, 0x00a     	MOVFF	r0x06, r0x0a
004216   f00a
                                           _00796_DS_:
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; width > 0; --width)
004218   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
00421a   e105     bnz     0x004226         	BNZ	_00795_DS_
00421c   c007     movff   0x007, 0x008     	MOVFF	r0x07, r0x08
00421e   f008
004220   c00a     movff   0x00a, 0x006     	MOVFF	r0x0a, r0x06
004222   f006
004224   d00f     bra     0x004244         	BRA	_00818_DS_
                                           _00795_DS_:
                                           ;	.line	84; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, padchar);
004226   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
004228   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00422a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00422c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00422e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004230   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004232   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004234   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004236   ecaa     call    0x005354, 0x0    	CALL	_pprintc
004238   f029
00423a   0e04     movlw   0x04             	MOVLW	0x04
00423c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
00423e   2a07     incf    0x07, 0x1, 0x0   	INCF	r0x07, F
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; width > 0; --width)
004240   060a     decf    0x0a, 0x1, 0x0   	DECF	r0x0a, F
004242   d7ea     bra     0x004218         	BRA	_00796_DS_
                                           _00818_DS_:
004244   c008     movff   0x008, 0x007     	MOVFF	r0x08, r0x07
004246   f007
                                           _00799_DS_:
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *string ; ++string)
004248   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
00424a   ffe9
00424c   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
00424e   fff3
004250   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
004252   ec65     call    0x0066ca, 0x0    	CALL	__gptrget1
004254   f033
004256   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
004258   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
00425a   e012     bz      0x004280         	BZ	_00820_DS_
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, *string);
00425c   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
00425e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004260   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004262   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004264   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004266   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004268   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00426a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00426c   ecaa     call    0x005354, 0x0    	CALL	_pprintc
00426e   f029
004270   0e04     movlw   0x04             	MOVLW	0x04
004272   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
004274   2a07     incf    0x07, 0x1, 0x0   	INCF	r0x07, F
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; *string ; ++string)
004276   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
004278   e3e7     bnc     0x004248         	BNC	_00799_DS_
00427a   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
00427c   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
                                           _00853_DS_:
00427e   d7e4     bra     0x004248         	BRA	_00799_DS_
                                           _00820_DS_:
004280   c007     movff   0x007, 0x003     	MOVFF	r0x07, r0x03
004282   f003
004284   c006     movff   0x006, 0x004     	MOVFF	r0x06, r0x04
004286   f004
                                           _00802_DS_:
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; width > 0; --width)
004288   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00428a   e00f     bz      0x0042aa         	BZ	_00791_DS_
                                           ;	.line	97; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pprintc(out, padchar);
00428c   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
00428e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004290   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004292   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004294   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004296   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004298   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00429a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00429c   ecaa     call    0x005354, 0x0    	CALL	_pprintc
00429e   f029
0042a0   0e04     movlw   0x04             	MOVLW	0x04
0042a2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	98; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++pc;
0042a4   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/stdio.c	for ( ; width > 0; --width)
0042a6   0604     decf    0x04, 0x1, 0x0   	DECF	r0x04, F
0042a8   d7ef     bra     0x004288         	BRA	_00802_DS_
                                           ; =DF= MOVFF: replaced by CRLF/SETF
                                           _00791_DS_:
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/stdio.c	return pc;
0042aa   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
0042ac   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
0042ae   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
0042b0   f00e
0042b2   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
0042b4   f00d
0042b6   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
0042b8   f00c
0042ba   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
0042bc   f00b
0042be   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
0042c0   f00a
0042c2   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
0042c4   f009
0042c6   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
0042c8   f008
0042ca   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
0042cc   f007
0042ce   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
0042d0   f006
0042d2   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0042d4   f005
0042d6   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0042d8   f004
0042da   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0042dc   f003
0042de   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0042e0   f002
0042e2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0042e4   f001
0042e6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0042e8   f000
0042ea   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0042ec   ffd9
0042ee   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__pprintc	code
                                           _pprintc:
                                           ;	.line	42; /home/vbasel/.icaro/v4/firmware/core/stdio.c	static void pprintc(u8 **str, u8 c)
005354   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005356   ffe5
005358   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00535a   ffd9
00535c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00535e   ffe5
005360   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005362   ffe5
005364   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005366   ffe5
005368   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00536a   ffe5
00536c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00536e   ffe5
005370   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
005372   ffe5
005374   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
005376   ffe5
005378   0e02     movlw   0x02             	MOVLW	0x02
00537a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00537c   f000
00537e   0e03     movlw   0x03             	MOVLW	0x03
005380   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005382   f001
005384   0e04     movlw   0x04             	MOVLW	0x04
005386   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005388   f002
00538a   0e05     movlw   0x05             	MOVLW	0x05
00538c   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
00538e   f003
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/core/stdio.c	if (str)
005390   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005392   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
005394   1002     iorwf   0x02, 0x0, 0x0   	IORWF	r0x02, W
005396   e033     bz      0x0053fe         	BZ	_00766_DS_
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/core/stdio.c	**str = c;
005398   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00539a   ffe9
00539c   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
00539e   fff3
0053a0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0053a2   eca1     call    0x006542, 0x0    	CALL	__gptrget3
0053a4   f032
0053a6   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0053a8   cff3     movff   0xff3, 0x005     	MOVFF	PRODL, r0x05
0053aa   f005
0053ac   cff4     movff   0xff4, 0x006     	MOVFF	PRODH, r0x06
0053ae   f006
0053b0   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0053b2   ffe5
0053b4   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
0053b6   ffe9
0053b8   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
0053ba   fff3
0053bc   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0053be   eccd     call    0x00679a, 0x0    	CALL	__gptrput1
0053c0   f033
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/core/stdio.c	++(*str);
0053c2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0053c4   ffe9
0053c6   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
0053c8   fff3
0053ca   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0053cc   eca1     call    0x006542, 0x0    	CALL	__gptrget3
0053ce   f032
0053d0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0053d2   cff3     movff   0xff3, 0x005     	MOVFF	PRODL, r0x05
0053d4   f005
0053d6   cff4     movff   0xff4, 0x006     	MOVFF	PRODH, r0x06
0053d8   f006
0053da   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
0053dc   e302     bnc     0x0053e2         	BNC	_00773_DS_
0053de   4a05     infsnz  0x05, 0x1, 0x0   	INFSNZ	r0x05, F
0053e0   2a06     incf    0x06, 0x1, 0x0   	INCF	r0x06, F
                                           _00773_DS_:
0053e2   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0053e4   ffe5
0053e6   c005     movff   0x005, 0xff4     	MOVFF	r0x05, PRODH
0053e8   fff4
0053ea   c006     movff   0x006, 0xff6     	MOVFF	r0x06, TBLPTRL
0053ec   fff6
0053ee   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0053f0   ffe9
0053f2   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
0053f4   fff3
0053f6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0053f8   eca6     call    0x00674c, 0x0    	CALL	__gptrput3
0053fa   f033
0053fc   d016     bra     0x00542a         	BRA	_00768_DS_
                                           _00766_DS_:
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/stdio.c	pputchar(c);
0053fe   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
005400   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005402   cff2     movff   0xff2, 0xfe5     	MOVFF	INTCON, POSTDEC1
005404   ffe5
005406   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	INTCON, 7
005408   0005     push                     	PUSH	
00540a   0e28     movlw   0x28             	MOVLW	LOW(_00774_DS_)
00540c   6efd     movwf   0xfd, 0x0        	MOVWF	TOSL
00540e   0e54     movlw   0x54             	MOVLW	HIGH(_00774_DS_)
005410   6efe     movwf   0xfe, 0x0        	MOVWF	TOSH
005412   0e00     movlw   0x00             	MOVLW	UPPER(_00774_DS_)
005414   6eff     movwf   0xff, 0x0        	MOVWF	TOSU
005416   bee4     btfsc   0xe4, 0x7, 0x0   	BTFSC	PREINC1, 7
005418   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	INTCON, 7
00541a   c72a     movff   0x72a, 0xffb     	MOVFF	(_pputchar + 2), PCLATU
00541c   fffb
00541e   c729     movff   0x729, 0xffa     	MOVFF	(_pputchar + 1), PCLATH
005420   fffa
005422   0107     movlb   0x7              	BANKSEL	_pputchar
005424   5128     movf    0x28, 0x0, 0x1   	MOVF	_pputchar, W, B
005426   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00774_DS_:
005428   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           _00768_DS_:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/stdio.c	}
00542a   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00542c   f006
00542e   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
005430   f005
005432   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
005434   f004
005436   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005438   f003
00543a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00543c   f002
00543e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005440   f001
005442   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005444   f000
005446   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005448   ffd9
00544a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__sensordigital	code
                                           _sensordigital:
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	int sensordigital(int valor)
0063f6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0063f8   ffe5
0063fa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0063fc   ffd9
0063fe   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006400   ffe5
006402   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006404   ffe5
006406   0e02     movlw   0x02             	MOVLW	0x02
006408   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00640a   f000
00640c   0e03     movlw   0x03             	MOVLW	0x03
00640e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006410   f001
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	temp=digitalread(valor);
006412   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006414   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006416   ecca     call    0x003d94, 0x0    	CALL	_digitalread
006418   f01e
00641a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00641c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	if (temp==0)
00641e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006420   e103     bnz     0x006428         	BNZ	_00758_DS_
                                           ;	.line	118; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	return 1;
006422   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
006424   0e01     movlw   0x01             	MOVLW	0x01
006426   d002     bra     0x00642c         	BRA	_00760_DS_
                                           _00758_DS_:
                                           ;	.line	122; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	return 0;
006428   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
00642a   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00760_DS_:
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	}
00642c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00642e   f001
006430   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006432   f000
006434   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006436   ffd9
006438   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__setup	code
                                           _setup:
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	TRISB=0; //defino PORTB como salida
0056b4   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	PORTB=0; 
0056b6   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	PORTD=0;
0056b8   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	83; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG1,INPUT);
0056ba   0e01     movlw   0x01             	MOVLW	0x01
0056bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0056be   0e15     movlw   0x15             	MOVLW	0x15
0056c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0056c2   ec73     call    0x0032e6, 0x0    	CALL	_pinmode
0056c4   f019
0056c6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0056c8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	84; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG2,INPUT);
0056ca   0e01     movlw   0x01             	MOVLW	0x01
0056cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0056ce   0e16     movlw   0x16             	MOVLW	0x16
0056d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0056d2   ec73     call    0x0032e6, 0x0    	CALL	_pinmode
0056d4   f019
0056d6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0056d8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	86; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG3,TRIG);
0056da   0e01     movlw   0x01             	MOVLW	0x01
0056dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0056de   0e17     movlw   0x17             	MOVLW	0x17
0056e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0056e2   ec73     call    0x0032e6, 0x0    	CALL	_pinmode
0056e4   f019
0056e6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0056e8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	87; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG4,ECHO);
0056ea   0e01     movlw   0x01             	MOVLW	0x01
0056ec   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0056ee   0e18     movlw   0x18             	MOVLW	0x18
0056f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0056f2   ec73     call    0x0032e6, 0x0    	CALL	_pinmode
0056f4   f019
0056f6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0056f8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	88; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P1,OUTPUT);
0056fa   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0056fc   0e19     movlw   0x19             	MOVLW	0x19
0056fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005700   ec73     call    0x0032e6, 0x0    	CALL	_pinmode
005702   f019
005704   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005706   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P2,OUTPUT);
005708   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00570a   0e1a     movlw   0x1a             	MOVLW	0x1a
00570c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00570e   ec73     call    0x0032e6, 0x0    	CALL	_pinmode
005710   f019
005712   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005714   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	90; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P3,OUTPUT);
005716   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005718   0e1b     movlw   0x1b             	MOVLW	0x1b
00571a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00571c   ec73     call    0x0032e6, 0x0    	CALL	_pinmode
00571e   f019
005720   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005722   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P4,OUTPUT);
005724   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005726   0e1c     movlw   0x1c             	MOVLW	0x1c
005728   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00572a   ec73     call    0x0032e6, 0x0    	CALL	_pinmode
00572c   f019
00572e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005730   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV1);
005732   0e0a     movlw   0x0a             	MOVLW	0x0a
005734   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005736   ecd3     call    0x0039a6, 0x0    	CALL	_ServoAttach
005738   f01c
00573a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV2);
00573c   0e0b     movlw   0x0b             	MOVLW	0x0b
00573e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005740   ecd3     call    0x0039a6, 0x0    	CALL	_ServoAttach
005742   f01c
005744   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV3);
005746   0e0c     movlw   0x0c             	MOVLW	0x0c
005748   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00574a   ecd3     call    0x0039a6, 0x0    	CALL	_ServoAttach
00574c   f01c
00574e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV4);
005750   0e09     movlw   0x09             	MOVLW	0x09
005752   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005754   ecd3     call    0x0039a6, 0x0    	CALL	_ServoAttach
005756   f01c
005758   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	96; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV5);
00575a   0e08     movlw   0x08             	MOVLW	0x08
00575c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00575e   ecd3     call    0x0039a6, 0x0    	CALL	_ServoAttach
005760   f01c
005762   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	}
005764   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__Delayus	code
                                           _Delayus:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/delayus.c	void Delayus(unsigned int microseconds)
006360   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006362   ffe5
006364   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006366   ffd9
006368   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00636a   ffe5
00636c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00636e   ffe5
006370   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006372   ffe5
006374   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
006376   ffe5
006378   0e02     movlw   0x02             	MOVLW	0x02
00637a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00637c   f000
00637e   0e03     movlw   0x03             	MOVLW	0x03
006380   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006382   f001
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/delayus.c	for (i=0; i<microseconds; i++)
006384   6a02     clrf    0x02, 0x0        	CLRF	r0x02
006386   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _00736_DS_:
006388   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00638a   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
00638c   e102     bnz     0x006392         	BNZ	_00747_DS_
00638e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006390   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _00747_DS_:
006392   e203     bc      0x00639a         	BC	_00738_DS_
006394   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
006396   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
006398   d7f7     bra     0x006388         	BRA	_00736_DS_
                                           _00738_DS_:
                                           ;	.line	75; /home/vbasel/.icaro/v4/firmware/core/delayus.c	}
00639a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00639c   f003
00639e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0063a0   f002
0063a2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0063a4   f001
0063a6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0063a8   f000
0063aa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0063ac   ffd9
0063ae   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__IO_digital	code
                                           _IO_digital:
                                           ;	.line	123; /home/vbasel/.icaro/v4/firmware/core/io.c	ADCON1 = 0x0F;				// AN0 to AN12 Digital I/O
000c0c   0e0f     movlw   0x0f             	MOVLW	0x0f
000c0e   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/core/io.c	CMCON = 0x07;               // Comparators as Digital I/O
000c10   0e07     movlw   0x07             	MOVLW	0x07
000c12   6eb4     movwf   0xb4, 0x0        	MOVWF	_CMCON
                                           ;	.line	155; /home/vbasel/.icaro/v4/firmware/core/io.c	}
000c14   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__IO_init	code
                                           _IO_init:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/io.c	LATA  = 0x00;
006656   6a89     clrf    0x89, 0x0        	CLRF	_LATA
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/io.c	LATB  = 0x00;
006658   6a8a     clrf    0x8a, 0x0        	CLRF	_LATB
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/io.c	LATC  = 0x00;
00665a   6a8b     clrf    0x8b, 0x0        	CLRF	_LATC
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/core/io.c	LATD  = 0x00; 
00665c   6a8c     clrf    0x8c, 0x0        	CLRF	_LATD
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/io.c	LATE  = 0x00; 
00665e   6a8d     clrf    0x8d, 0x0        	CLRF	_LATE
                                           ;	.line	83; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISA = 0x00;
006660   6a92     clrf    0x92, 0x0        	CLRF	_TRISA
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISB = 0x00;
006662   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC0 = 0x00;
006664   9094     bcf     0x94, 0x0, 0x0   	BCF	_TRISCbits, 0
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC1 = 0x00;
006666   9294     bcf     0x94, 0x1, 0x0   	BCF	_TRISCbits, 1
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC2 = 0x00;
006668   9494     bcf     0x94, 0x2, 0x0   	BCF	_TRISCbits, 2
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC6 = 0x00;
00666a   9c94     bcf     0x94, 0x6, 0x0   	BCF	_TRISCbits, 6
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC7 = 0x00;
00666c   9e94     bcf     0x94, 0x7, 0x0   	BCF	_TRISCbits, 7
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISD = 0x00; 
00666e   6a95     clrf    0x95, 0x0        	CLRF	_TRISD
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISE = 0x00; 
006670   6a96     clrf    0x96, 0x0        	CLRF	_TRISE
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTA  = 0x00;
006672   6a80     clrf    0x80, 0x0        	CLRF	_PORTA
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTB  = 0x00;
006674   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTC  = 0x00;
006676   6a82     clrf    0x82, 0x0        	CLRF	_PORTC
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTD  = 0x00; 
006678   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	113; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTE  = 0x00; 
00667a   6a84     clrf    0x84, 0x0        	CLRF	_PORTE
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/core/io.c	}
00667c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__analogwrite	code
                                           _analogwrite:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogwrite(u8 pin, u16 duty)
005c9c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005c9e   ffe5
005ca0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005ca2   ffd9
005ca4   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005ca6   ffe5
005ca8   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005caa   ffe5
005cac   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005cae   ffe5
005cb0   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005cb2   ffe5
005cb4   0e02     movlw   0x02             	MOVLW	0x02
005cb6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005cb8   f000
005cba   0e03     movlw   0x03             	MOVLW	0x03
005cbc   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005cbe   f001
005cc0   0e04     movlw   0x04             	MOVLW	0x04
005cc2   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005cc4   f002
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/core/analog.c	switch (pin)
005cc6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005cc8   0a0b     xorlw   0x0b             	XORLW	0x0b
005cca   e019     bz      0x005cfe         	BZ	_00706_DS_
005ccc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005cce   0a0c     xorlw   0x0c             	XORLW	0x0c
005cd0   e129     bnz     0x005d24         	BNZ	_00707_DS_
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON  = 0b00001100;
005cd2   0e0c     movlw   0x0c             	MOVLW	0x0c
005cd4   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR1L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
005cd6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
005cd8   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
005cda   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
005cdc   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
005cde   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005ce0   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
005ce2   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
005ce4   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
005ce6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005ce8   6ebe     movwf   0xbe, 0x0        	MOVWF	_CCPR1L
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
005cea   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005cec   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005cee   0e03     movlw   0x03             	MOVLW	0x03
005cf0   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
005cf2   3800     swapf   0x00, 0x0, 0x0   	SWAPF	r0x00, W
005cf4   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	_CCP1CON, W
                                           ; #;#	MOVWF	r0x00
                                           ; #;#	MOVF	r0x03, W
                                           ; #;#	IORWF	r0x00, W
                                           ; #	IORWF	r0x03, W
005cf6   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
005cf8   10bd     iorwf   0xbd, 0x0, 0x0   	IORWF	_CCP1CON, W
005cfa   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
                                           ;	.line	309; /home/vbasel/.icaro/v4/firmware/core/analog.c	break;
005cfc   d013     bra     0x005d24         	BRA	_00707_DS_
                                           _00706_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON  = 0b00001100;
005cfe   0e0c     movlw   0x0c             	MOVLW	0x0c
005d00   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR2L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
005d02   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
005d04   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
005d06   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
005d08   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
005d0a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005d0c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
005d0e   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
005d10   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
005d12   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005d14   6ebb     movwf   0xbb, 0x0        	MOVWF	_CCPR2L
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
005d16   0e03     movlw   0x03             	MOVLW	0x03
005d18   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
005d1a   3801     swapf   0x01, 0x0, 0x0   	SWAPF	r0x01, W
005d1c   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	_CCP2CON, W
                                           ; #;#	MOVWF	r0x01
                                           ; #;#	MOVF	r0x00, W
                                           ; #;#	IORWF	r0x01, W
                                           ; #	IORWF	r0x00, W
005d1e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005d20   10ba     iorwf   0xba, 0x0, 0x0   	IORWF	_CCP2CON, W
005d22   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
                                           _00707_DS_:
                                           ;	.line	321; /home/vbasel/.icaro/v4/firmware/core/analog.c	PIR1bits.TMR2IF = 0;
005d24   929e     bcf     0x9e, 0x1, 0x0   	BCF	_PIR1bits, 1
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
005d26   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005d28   f003
005d2a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005d2c   f002
005d2e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005d30   f001
005d32   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005d34   f000
005d36   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005d38   ffd9
005d3a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__analogwrite_init	code
                                           _analogwrite_init:
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/core/analog.c	PR2 = 0xFF;                         // set PWM period to the max. to get 10-bit res.
0067ce   68cb     setf    0xcb, 0x0        	SETF	_PR2
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/core/analog.c	T2CON = 0b00000100;                 // Timer2 on, prescaler is 1
0067d0   0e04     movlw   0x04             	MOVLW	0x04
0067d2   6eca     movwf   0xca, 0x0        	MOVWF	_T2CON
                                           ;	.line	239; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
0067d4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__analogread	code
                                           _analogread:
                                           ;	.line	134; /home/vbasel/.icaro/v4/firmware/core/analog.c	u16 analogread(u8 channel)
005ddc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005dde   ffe5
005de0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005de2   ffd9
005de4   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005de6   ffe5
005de8   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005dea   ffe5
005dec   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005dee   ffe5
005df0   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005df2   ffe5
005df4   0e02     movlw   0x02             	MOVLW	0x02
005df6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005df8   f000
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(channel>=13 && channel<=20)
005dfa   0e0d     movlw   0x0d             	MOVLW	0x0d
005dfc   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
005dfe   e30c     bnc     0x005e18         	BNC	_00659_DS_
005e00   0e15     movlw   0x15             	MOVLW	0x15
005e02   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
005e04   e209     bc      0x005e18         	BC	_00659_DS_
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0=(channel-13) << 2;   // A0 = 13, ..., A4 = 17
005e06   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005e08   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005e0a   0ef3     movlw   0xf3             	MOVLW	0xf3
005e0c   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
005e0e   4401     rlncf   0x01, 0x0, 0x0   	RLNCF	r0x01, W
005e10   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
005e12   0bfc     andlw   0xfc             	ANDLW	0xfc
005e14   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
005e16   d007     bra     0x005e26         	BRA	_00660_DS_
                                           _00659_DS_:
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(channel<=5)
005e18   0e06     movlw   0x06             	MOVLW	0x06
005e1a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
005e1c   e204     bc      0x005e26         	BC	_00660_DS_
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0 = channel << 2;      // A0 = 0, ..., A4 = 4
005e1e   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
005e20   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
005e22   0bfc     andlw   0xfc             	ANDLW	0xfc
005e24   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
                                           _00660_DS_:
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON=1;                  // A/D Converter module is enabled
005e26   80c2     bsf     0xc2, 0x0, 0x0   	BSF	_ADCON0bits, 0
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
005e28   0e09     movlw   0x09             	MOVLW	0x09
005e2a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005e2c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00668_DS_:
005e2e   0000     nop                      	NOP
005e30   0eff     movlw   0xff             	MOVLW	0xff
005e32   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005e34   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
005e36   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005e38   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
005e3a   e1f9     bnz     0x005e2e         	BNZ	_00668_DS_
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.GO=1;                    // Start A/D Conversion
005e3c   82c2     bsf     0xc2, 0x1, 0x0   	BSF	_ADCON0bits, 1
                                           _00663_DS_:
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/core/analog.c	while (ADCON0bits.GO);              // Wait for conversion stop
005e3e   b2c2     btfsc   0xc2, 0x1, 0x0   	BTFSC	_ADCON0bits, 1
005e40   d7fe     bra     0x005e3e         	BRA	_00663_DS_
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/core/analog.c	result = ADRESH << 8;
005e42   cfc4     movff   0xfc4, 0x000     	MOVFF	_ADRESH, r0x00
005e44   f000
005e46   6a01     clrf    0x01, 0x0        	CLRF	r0x01
005e48   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005e4a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
005e4c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/analog.c	result += ADRESL;
005e4e   cfc3     movff   0xfc3, 0x000     	MOVFF	_ADRESL, r0x00
005e50   f000
005e52   6a01     clrf    0x01, 0x0        	CLRF	r0x01
005e54   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005e56   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
005e58   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005e5a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON = 0;                // A/D Converter module is disabled
005e5c   90c2     bcf     0xc2, 0x0, 0x0   	BCF	_ADCON0bits, 0
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/analog.c	return(result);
005e5e   c003     movff   0x003, 0xff3     	MOVFF	r0x03, PRODL
005e60   fff3
005e62   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
005e64   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005e66   f003
005e68   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005e6a   f002
005e6c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005e6e   f001
005e70   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005e72   f000
005e74   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005e76   ffd9
005e78   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__analogreference	code
                                           _analogreference:
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogreference(u8 Type)
00647e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006480   ffe5
006482   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006484   ffd9
006486   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006488   ffe5
00648a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00648c   ffe5
00648e   0e02     movlw   0x02             	MOVLW	0x02
006490   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006492   f000
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(Type == DEFAULT)			//the default analog reference of 5 volts (on 5V Arduino boards) or 3.3 volts (on 3.3V Arduino boards)
006494   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006496   e105     bnz     0x0064a2         	BNZ	_00640_DS_
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x00;			//Vref+ = VDD
006498   cfc1     movff   0xfc1, 0x001     	MOVFF	_ADCON1, r0x01
00649a   f001
00649c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00649e   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
0064a0   d008     bra     0x0064b2         	BRA	_00642_DS_
                                           _00640_DS_:
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(Type == EXTERNAL)	//the voltage applied to the AREF pin (0 to 5V only) is used as the reference.
0064a2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0064a4   0a01     xorlw   0x01             	XORLW	0x01
0064a6   e105     bnz     0x0064b2         	BNZ	_00642_DS_
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x10;			//Vref+ = External source
0064a8   cfc1     movff   0xfc1, 0x000     	MOVFF	_ADCON1, r0x00
0064aa   f000
0064ac   8800     bsf     0x00, 0x4, 0x0   	BSF	r0x00, 4
0064ae   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0064b0   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           _00642_DS_:
                                           ;	.line	121; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
0064b2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0064b4   f001
0064b6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0064b8   f000
0064ba   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0064bc   ffd9
0064be   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__analog_init	code
                                           _analog_init:
                                           ;	.line	25; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analog_init(void)
006604   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006606   ffe5
                                           ;	.line	36; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISA=TRISA | 0x2F;
006608   cf92     movff   0xf92, 0x000     	MOVFF	_TRISA, r0x00
00660a   f000
00660c   0e2f     movlw   0x2f             	MOVLW	0x2f
00660e   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
006610   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006612   6e92     movwf   0x92, 0x0        	MOVWF	_TRISA
                                           ;	.line	37; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISE=TRISE | 0x07;	
006614   cf96     movff   0xf96, 0x000     	MOVFF	_TRISE, r0x00
006616   f000
006618   0e07     movlw   0x07             	MOVLW	0x07
00661a   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
00661c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00661e   6e96     movwf   0x96, 0x0        	MOVWF	_TRISE
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1=0x07;
006620   0e07     movlw   0x07             	MOVLW	0x07
006622   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON2=0xBD;
006624   0ebd     movlw   0xbd             	MOVLW	0xbd
006626   6ec0     movwf   0xc0, 0x0        	MOVWF	_ADCON2
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
006628   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00662a   f000
00662c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	547; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (PIR1bits.TMR1IF)
00643a   a09e     btfss   0x9e, 0x0, 0x0   	BTFSS	_PIR1bits, 0
00643c   d01f     bra     0x00647c         	BRA	_00627_DS_
00643e   0105     movlb   0x5              	BANKSEL	_phase
                                           ;	.line	553; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (phase)
006440   51d2     movf    0xd2, 0x0, 0x1   	MOVF	_phase, W, B
006442   e00b     bz      0x00645a         	BZ	_00623_DS_
                                           ;	.line	555; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseUp();
006444   ecb5     call    0x00676a, 0x0    	CALL	_ServosPulseUp
006446   f033
                                           ;	.line	557; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0xe9;//0xe9;
006448   0ee9     movlw   0xe9             	MOVLW	0xe9
00644a   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	558; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0x59;
00644c   0e59     movlw   0x59             	MOVLW	0x59
00644e   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ;	.line	560; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=1;
006450   0e01     movlw   0x01             	MOVLW	0x01
006452   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
006454   0105     movlb   0x5              	BANKSEL	_phase
                                           ;	.line	561; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 0;
006456   6bd2     clrf    0xd2, 0x1        	CLRF	_phase, B
006458   d010     bra     0x00647a         	BRA	_00624_DS_
                                           _00623_DS_:
                                           ;	.line	569; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseDown();
00645a   ec2f     call    0x004c5e, 0x0    	CALL	_ServosPulseDown
00645c   f026
                                           ;	.line	573; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0x32;
00645e   0e32     movlw   0x32             	MOVLW	0x32
006460   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	574; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0xeb;
006462   0eeb     movlw   0xeb             	MOVLW	0xeb
006464   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00621_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
006466   0105     movlb   0x5              	BANKSEL	_needreordering
                                           ;	.line	576; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (needreordering)
006468   51d3     movf    0xd3, 0x0, 0x1   	MOVF	_needreordering, W, B
                                           ;	.line	577; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	SortServoTimings(); // This takes more than 1 ms, but it's call only if needed.
00646a   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
                                           ;	.line	578; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
00646c   ec0e     call    0x000c1c, 0x0    	CALL	_SortServoTimings
00646e   f006
006470   0e21     movlw   0x21             	MOVLW	0x21
006472   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	579; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 1;  			//This indicates that after next interrupt it will start the servos cycle.
006474   0e01     movlw   0x01             	MOVLW	0x01
006476   0105     movlb   0x5              	BANKSEL	_phase
006478   6fd2     movwf   0xd2, 0x1        	MOVWF	_phase, B
                                           _00624_DS_:
                                           ;	.line	583; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF=0;
00647a   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           _00627_DS_:
                                           ;	.line	586; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
00647c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	530; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMaximumPulse(unsigned char servo,int max_microseconds)
005ab8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005aba   ffe5
005abc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005abe   ffd9
005ac0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005ac2   ffe5
005ac4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005ac6   ffe5
005ac8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005aca   ffe5
005acc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005ace   ffe5
005ad0   0e02     movlw   0x02             	MOVLW	0x02
005ad2   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005ad4   f000
005ad6   0e03     movlw   0x03             	MOVLW	0x03
005ad8   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005ada   f001
005adc   0e04     movlw   0x04             	MOVLW	0x04
005ade   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005ae0   f002
                                           ;	.line	533; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
005ae2   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00597_DS_
                                           ; #	GOTO	_00602_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	534; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
005ae4   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds < MIDUS) max_microseconds = MIDUS;
005ae6   e22e     bc      0x005b44         	BC	_00602_DS_
005ae8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005aea   0f80     addlw   0x80             	ADDLW	0x80
005aec   0f7b     addlw   0x7b             	ADDLW	0x7b
005aee   e102     bnz     0x005af4         	BNZ	_00614_DS_
005af0   0edc     movlw   0xdc             	MOVLW	0xdc
005af2   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00614_DS_:
005af4   e204     bc      0x005afe         	BC	_00599_DS_
005af6   0edc     movlw   0xdc             	MOVLW	0xdc
005af8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005afa   0e05     movlw   0x05             	MOVLW	0x05
005afc   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00599_DS_:
                                           ;	.line	538; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds > MAXUS) max_microseconds = MAXUS;
005afe   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005b00   0f80     addlw   0x80             	ADDLW	0x80
005b02   0f77     addlw   0x77             	ADDLW	0x77
005b04   e102     bnz     0x005b0a         	BNZ	_00615_DS_
005b06   0ec5     movlw   0xc5             	MOVLW	0xc5
005b08   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00615_DS_:
005b0a   e304     bnc     0x005b14         	BNC	_00601_DS_
005b0c   0ec4     movlw   0xc4             	MOVLW	0xc4
005b0e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005b10   0e09     movlw   0x09             	MOVLW	0x09
005b12   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00601_DS_:
                                           ;	.line	541; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][servo]=(max_microseconds - MINUS)>>3;   // 125 < final_max < 250
005b14   6a03     clrf    0x03, 0x0        	CLRF	r0x03
005b16   0eb4     movlw   0xb4             	MOVLW	LOW(_maxminpos + 30)
005b18   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005b1a   0e05     movlw   0x05             	MOVLW	HIGH(_maxminpos + 30)
005b1c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
005b1e   0e0c     movlw   0x0c             	MOVLW	0x0c
005b20   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
005b22   0efe     movlw   0xfe             	MOVLW	0xfe
005b24   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005b26   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
005b28   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
005b2a   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
005b2c   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
005b2e   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
005b30   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
005b32   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
005b34   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
005b36   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
005b38   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005b3a   ffe9
005b3c   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
005b3e   ffea
005b40   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
005b42   ffef
                                           _00602_DS_:
                                           ;	.line	542; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
005b44   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005b46   f003
005b48   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005b4a   f002
005b4c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005b4e   f001
005b50   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005b52   f000
005b54   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005b56   ffd9
005b58   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	516; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMinimumPulse(unsigned char servo,int min_microseconds)
005b5a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005b5c   ffe5
005b5e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005b60   ffd9
005b62   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005b64   ffe5
005b66   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005b68   ffe5
005b6a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005b6c   ffe5
005b6e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005b70   ffe5
005b72   0e02     movlw   0x02             	MOVLW	0x02
005b74   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005b76   f000
005b78   0e03     movlw   0x03             	MOVLW	0x03
005b7a   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005b7c   f001
005b7e   0e04     movlw   0x04             	MOVLW	0x04
005b80   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005b82   f002
                                           ;	.line	519; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
005b84   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00573_DS_
                                           ; #	GOTO	_00578_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
005b86   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	523; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds < MINUS) min_microseconds = MINUS;
005b88   e22e     bc      0x005be6         	BC	_00578_DS_
005b8a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005b8c   0f80     addlw   0x80             	ADDLW	0x80
005b8e   0f7f     addlw   0x7f             	ADDLW	0x7f
005b90   e102     bnz     0x005b96         	BNZ	_00590_DS_
005b92   0ef4     movlw   0xf4             	MOVLW	0xf4
005b94   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00590_DS_:
005b96   e204     bc      0x005ba0         	BC	_00575_DS_
005b98   0ef4     movlw   0xf4             	MOVLW	0xf4
005b9a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005b9c   0e01     movlw   0x01             	MOVLW	0x01
005b9e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00575_DS_:
                                           ;	.line	524; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds > MIDUS) min_microseconds = MIDUS;
005ba0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005ba2   0f80     addlw   0x80             	ADDLW	0x80
005ba4   0f7b     addlw   0x7b             	ADDLW	0x7b
005ba6   e102     bnz     0x005bac         	BNZ	_00591_DS_
005ba8   0edd     movlw   0xdd             	MOVLW	0xdd
005baa   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00591_DS_:
005bac   e304     bnc     0x005bb6         	BNC	_00577_DS_
005bae   0edc     movlw   0xdc             	MOVLW	0xdc
005bb0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005bb2   0e05     movlw   0x05             	MOVLW	0x05
005bb4   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00577_DS_:
                                           ;	.line	527; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][servo]=(min_microseconds - MINUS)>>3;   // 0 < final_min < 125
005bb6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
005bb8   0e96     movlw   0x96             	MOVLW	LOW(_maxminpos)
005bba   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005bbc   0e05     movlw   0x05             	MOVLW	HIGH(_maxminpos)
005bbe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
005bc0   0e0c     movlw   0x0c             	MOVLW	0x0c
005bc2   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
005bc4   0efe     movlw   0xfe             	MOVLW	0xfe
005bc6   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005bc8   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
005bca   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
005bcc   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
005bce   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
005bd0   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
005bd2   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
005bd4   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
005bd6   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
005bd8   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
005bda   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005bdc   ffe9
005bde   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
005be0   ffea
005be2   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
005be4   ffef
                                           _00578_DS_:
                                           ;	.line	528; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
005be6   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005be8   f003
005bea   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005bec   f002
005bee   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005bf0   f001
005bf2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005bf4   f000
005bf6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005bf8   ffd9
005bfa   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__ServoRead	code
                                           _ServoRead:
                                           ;	.line	508; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	unsigned char ServoRead(unsigned char servo)
0063b0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0063b2   ffe5
0063b4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0063b6   ffd9
0063b8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0063ba   ffe5
0063bc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0063be   ffe5
0063c0   0e02     movlw   0x02             	MOVLW	0x02
0063c2   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0063c4   f000
                                           ;	.line	510; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)        // test if numservo is valid
0063c6   0e1e     movlw   0x1e             	MOVLW	0x1e
0063c8   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0063ca   e302     bnc     0x0063d0         	BNC	_00561_DS_
                                           ;	.line	511; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return 0;
0063cc   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0063ce   d00c     bra     0x0063e8         	BRA	_00562_DS_
                                           _00561_DS_:
                                           ;	.line	513; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return servovalues[servo];
0063d0   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0063d2   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
0063d4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0063d6   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0063d8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0063da   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0063dc   ffe9
0063de   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0063e0   ffea
0063e2   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0063e4   f000
0063e6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00562_DS_:
                                           ;	.line	514; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
0063e8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0063ea   f001
0063ec   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0063ee   f000
0063f0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0063f2   ffd9
0063f4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	484; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoWrite(unsigned char servo,unsigned char degrees)
00630c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00630e   ffe5
006310   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006312   ffd9
006314   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006316   ffe5
006318   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00631a   ffe5
00631c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00631e   ffe5
006320   0e02     movlw   0x02             	MOVLW	0x02
006322   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006324   f000
006326   0e03     movlw   0x03             	MOVLW	0x03
006328   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00632a   f001
                                           ;	.line	491; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
00632c   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00549_DS_
                                           ; #	GOTO	_00550_DS_
                                           ; #	CLRF	r0x02
                                           ;	.line	492; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
00632e   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	503; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[servo]= value;
006330   e20e     bc      0x00634e         	BC	_00550_DS_
006332   6a02     clrf    0x02, 0x0        	CLRF	r0x02
006334   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
006336   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
006338   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00633a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00633c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00633e   ffe9
006340   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
006342   ffea
006344   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
006346   ffef
                                           ;	.line	505; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
006348   0e01     movlw   0x01             	MOVLW	0x01
00634a   0105     movlb   0x5              	BANKSEL	_needreordering
00634c   6fd3     movwf   0xd3, 0x1        	MOVWF	_needreordering, B
                                           _00550_DS_:
                                           ;	.line	506; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
00634e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006350   f002
006352   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006354   f001
006356   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006358   f000
00635a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00635c   ffd9
00635e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	459; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoDetach(unsigned char pin)
004962   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004964   ffe5
004966   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004968   ffd9
00496a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00496c   ffe5
00496e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004970   ffe5
004972   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004974   ffe5
004976   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004978   ffe5
00497a   0e02     movlw   0x02             	MOVLW	0x02
00497c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00497e   f000
                                           ;	.line	461; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
004980   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00526_DS_
                                           ; #	GOTO	_00533_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	463; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
004982   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004984   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004986   d0a5     bra     0x004ad2         	BRA	_00533_DS_
004988   0e08     movlw   0x08             	MOVLW	LOW(_port)
00498a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00498c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00498e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004990   0e59     movlw   0x59             	MOVLW	HIGH(_port)
004992   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004994   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004996   0e00     movlw   0x00             	MOVLW	UPPER(_port)
004998   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00499a   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00499c   fff6
00499e   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0049a0   fff7
0049a2   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0049a4   fff8
0049a6   0009     tblrd*+                  	TBLRD*+	
0049a8   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0049aa   f001
0049ac   0e05     movlw   0x05             	MOVLW	0x05
0049ae   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
0049b0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0049b2   d08f     bra     0x004ad2         	BRA	_00533_DS_
0049b4   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0049b6   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0049b8   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
0049ba   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0049bc   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0049be   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0049c0   0bfc     andlw   0xfc             	ANDLW	0xfc
0049c2   0fd2     addlw   0xd2             	ADDLW	LOW(_00543_DS_)
0049c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0049c6   0e49     movlw   0x49             	MOVLW	HIGH(_00543_DS_)
0049c8   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0049ca   0e00     movlw   0x00             	MOVLW	UPPER(_00543_DS_)
0049cc   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0049ce   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0049d0   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00543_DS_:
0049d2   eff3     goto    0x0049e6         	GOTO	_00527_DS_
0049d4   f024
0049d6   ef0b     goto    0x004a16         	GOTO	_00528_DS_
0049d8   f025
0049da   ef23     goto    0x004a46         	GOTO	_00529_DS_
0049dc   f025
0049de   ef3b     goto    0x004a76         	GOTO	_00530_DS_
0049e0   f025
0049e2   ef53     goto    0x004aa6         	GOTO	_00531_DS_
0049e4   f025
                                           _00527_DS_:
                                           ;	.line	465; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pA: activatedservos[pA] = activatedservos[pA] ^ mask[pin];
0049e6   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0049e8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0049ea   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0049ec   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0049ee   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0049f0   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0049f2   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0049f4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0049f6   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0049f8   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0049fa   fff6
0049fc   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0049fe   fff7
004a00   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004a02   fff8
004a04   0009     tblrd*+                  	TBLRD*+	
004a06   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004a08   f001
004a0a   0106     movlb   0x6              	BANKSEL	_activatedservos
004a0c   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_activatedservos, W, B
004a0e   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
004a10   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
004a12   6ff6     movwf   0xf6, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	466; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
004a14   d05e     bra     0x004ad2         	BRA	_00533_DS_
                                           _00528_DS_:
                                           ;	.line	467; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pB: activatedservos[pB] = activatedservos[pB] ^ mask[pin];
004a16   0eea     movlw   0xea             	MOVLW	LOW(_mask)
004a18   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004a1a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004a1c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004a1e   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
004a20   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004a22   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004a24   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004a26   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004a28   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004a2a   fff6
004a2c   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004a2e   fff7
004a30   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004a32   fff8
004a34   0009     tblrd*+                  	TBLRD*+	
004a36   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004a38   f001
004a3a   0106     movlb   0x6              	BANKSEL	(_activatedservos + 1)
004a3c   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
004a3e   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
004a40   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
004a42   6ff7     movwf   0xf7, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	468; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
004a44   d046     bra     0x004ad2         	BRA	_00533_DS_
                                           _00529_DS_:
                                           ;	.line	470; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pC: activatedservos[pC] = activatedservos[pC] ^ mask[pin];
004a46   0eea     movlw   0xea             	MOVLW	LOW(_mask)
004a48   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004a4a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004a4c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004a4e   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
004a50   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004a52   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004a54   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004a56   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004a58   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004a5a   fff6
004a5c   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004a5e   fff7
004a60   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004a62   fff8
004a64   0009     tblrd*+                  	TBLRD*+	
004a66   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004a68   f001
004a6a   0106     movlb   0x6              	BANKSEL	(_activatedservos + 2)
004a6c   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
004a6e   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
004a70   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
004a72   6ff8     movwf   0xf8, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	471; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
004a74   d02e     bra     0x004ad2         	BRA	_00533_DS_
                                           _00530_DS_:
                                           ;	.line	474; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pD: activatedservos[pD] = activatedservos[pD] ^ mask[pin];
004a76   0eea     movlw   0xea             	MOVLW	LOW(_mask)
004a78   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004a7a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004a7c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004a7e   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
004a80   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004a82   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004a84   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004a86   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004a88   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004a8a   fff6
004a8c   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004a8e   fff7
004a90   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004a92   fff8
004a94   0009     tblrd*+                  	TBLRD*+	
004a96   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004a98   f001
004a9a   0106     movlb   0x6              	BANKSEL	(_activatedservos + 3)
004a9c   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
004a9e   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
004aa0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
004aa2   6ff9     movwf   0xf9, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	475; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
004aa4   d016     bra     0x004ad2         	BRA	_00533_DS_
                                           _00531_DS_:
                                           ;	.line	478; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pE: activatedservos[pE] = activatedservos[pE] ^ mask[pin];
004aa6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004aa8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004aaa   0eea     movlw   0xea             	MOVLW	LOW(_mask)
004aac   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004aae   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
004ab0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004ab2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
004ab4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004ab6   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
004ab8   fff6
004aba   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
004abc   fff7
004abe   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
004ac0   fff8
004ac2   0009     tblrd*+                  	TBLRD*+	
004ac4   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
004ac6   f000
004ac8   0106     movlb   0x6              	BANKSEL	(_activatedservos + 4)
004aca   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
004acc   1a00     xorwf   0x00, 0x1, 0x0   	XORWF	r0x00, F
004ace   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
004ad0   6ffa     movwf   0xfa, 0x1        	MOVWF	(_activatedservos + 4), B
                                           _00533_DS_:
                                           ;	.line	482; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
004ad2   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004ad4   f003
004ad6   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004ad8   f002
004ada   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004adc   f001
004ade   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004ae0   f000
004ae2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ae4   ffd9
004ae6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoAttach(unsigned char pin)
0039a6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0039a8   ffe5
0039aa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0039ac   ffd9
0039ae   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0039b0   ffe5
0039b2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0039b4   ffe5
0039b6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0039b8   ffe5
0039ba   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0039bc   ffe5
0039be   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0039c0   ffe5
0039c2   0e02     movlw   0x02             	MOVLW	0x02
0039c4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0039c6   f000
                                           ;	.line	426; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
0039c8   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00503_DS_
                                           ; #	GOTO	_00510_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	428; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
0039ca   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0039cc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0039ce   d0e1     bra     0x003b92         	BRA	_00510_DS_
0039d0   0e08     movlw   0x08             	MOVLW	LOW(_port)
0039d2   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0039d4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0039d6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0039d8   0e59     movlw   0x59             	MOVLW	HIGH(_port)
0039da   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0039dc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0039de   0e00     movlw   0x00             	MOVLW	UPPER(_port)
0039e0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0039e2   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0039e4   fff6
0039e6   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0039e8   fff7
0039ea   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0039ec   fff8
0039ee   0009     tblrd*+                  	TBLRD*+	
0039f0   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0039f2   f001
0039f4   0e05     movlw   0x05             	MOVLW	0x05
0039f6   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
0039f8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0039fa   d0cb     bra     0x003b92         	BRA	_00510_DS_
0039fc   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0039fe   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
003a00   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
003a02   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003a04   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
003a06   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003a08   0bfc     andlw   0xfc             	ANDLW	0xfc
003a0a   0f1a     addlw   0x1a             	ADDLW	LOW(_00520_DS_)
003a0c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a0e   0e3a     movlw   0x3a             	MOVLW	HIGH(_00520_DS_)
003a10   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
003a12   0e00     movlw   0x00             	MOVLW	UPPER(_00520_DS_)
003a14   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
003a16   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
003a18   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00520_DS_:
003a1a   ef17     goto    0x003a2e         	GOTO	_00504_DS_
003a1c   f01d
003a1e   ef3b     goto    0x003a76         	GOTO	_00505_DS_
003a20   f01d
003a22   ef5f     goto    0x003abe         	GOTO	_00506_DS_
003a24   f01d
003a26   ef83     goto    0x003b06         	GOTO	_00507_DS_
003a28   f01d
003a2a   efa7     goto    0x003b4e         	GOTO	_00508_DS_
003a2c   f01d
                                           _00504_DS_:
                                           ;	.line	431; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pA] = activatedservos[pA] | mask[pin];  // list pin as servo driver.
003a2e   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003a30   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003a32   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003a34   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003a36   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003a38   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003a3a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003a3c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003a3e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003a40   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003a42   fff6
003a44   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003a46   fff7
003a48   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003a4a   fff8
003a4c   0009     tblrd*+                  	TBLRD*+	
003a4e   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
003a50   f004
003a52   0106     movlb   0x6              	BANKSEL	_activatedservos
003a54   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_activatedservos, W, B
003a56   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
003a58   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003a5a   6ff6     movwf   0xf6, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	432; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISA = TRISA & (~mask[pin]); 					// set as output pin
003a5c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003a5e   fff6
003a60   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003a62   fff7
003a64   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003a66   fff8
003a68   0009     tblrd*+                  	TBLRD*+	
003a6a   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003a6c   f001
003a6e   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
003a70   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003a72   1692     andwf   0x92, 0x1, 0x0   	ANDWF	_TRISA, F
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
003a74   d08e     bra     0x003b92         	BRA	_00510_DS_
                                           _00505_DS_:
                                           ;	.line	435; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pB] = activatedservos[pB] | mask[pin];  // list pin as servo driver.
003a76   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003a78   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003a7a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003a7c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003a7e   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003a80   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003a82   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003a84   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003a86   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003a88   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003a8a   fff6
003a8c   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003a8e   fff7
003a90   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003a92   fff8
003a94   0009     tblrd*+                  	TBLRD*+	
003a96   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
003a98   f004
003a9a   0106     movlb   0x6              	BANKSEL	(_activatedservos + 1)
003a9c   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
003a9e   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
003aa0   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003aa2   6ff7     movwf   0xf7, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	436; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISB = TRISB & (~mask[pin]); 					// set as output pin
003aa4   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003aa6   fff6
003aa8   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003aaa   fff7
003aac   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003aae   fff8
003ab0   0009     tblrd*+                  	TBLRD*+	
003ab2   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003ab4   f001
003ab6   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
003ab8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003aba   1693     andwf   0x93, 0x1, 0x0   	ANDWF	_TRISB, F
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
003abc   d06a     bra     0x003b92         	BRA	_00510_DS_
                                           _00506_DS_:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pC] = activatedservos[pC] | mask[pin];  // list pin as servo driver.
003abe   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003ac0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003ac2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003ac4   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003ac6   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003ac8   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003aca   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003acc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003ace   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003ad0   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003ad2   fff6
003ad4   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003ad6   fff7
003ad8   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003ada   fff8
003adc   0009     tblrd*+                  	TBLRD*+	
003ade   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
003ae0   f004
003ae2   0106     movlb   0x6              	BANKSEL	(_activatedservos + 2)
003ae4   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
003ae6   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
003ae8   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003aea   6ff8     movwf   0xf8, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	441; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISC = TRISC & (~mask[pin]); 					// set as output pin
003aec   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003aee   fff6
003af0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003af2   fff7
003af4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003af6   fff8
003af8   0009     tblrd*+                  	TBLRD*+	
003afa   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003afc   f001
003afe   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
003b00   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003b02   1694     andwf   0x94, 0x1, 0x0   	ANDWF	_TRISC, F
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
003b04   d046     bra     0x003b92         	BRA	_00510_DS_
                                           _00507_DS_:
                                           ;	.line	446; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pD] = activatedservos[pD] | mask[pin];  // list pin as servo driver.
003b06   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003b08   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003b0a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003b0c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003b0e   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003b10   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003b12   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003b14   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003b16   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003b18   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003b1a   fff6
003b1c   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003b1e   fff7
003b20   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003b22   fff8
003b24   0009     tblrd*+                  	TBLRD*+	
003b26   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
003b28   f004
003b2a   0106     movlb   0x6              	BANKSEL	(_activatedservos + 3)
003b2c   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
003b2e   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
003b30   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003b32   6ff9     movwf   0xf9, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	447; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISD = TRISD & (~mask[pin]); 					// set as output pin
003b34   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003b36   fff6
003b38   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003b3a   fff7
003b3c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003b3e   fff8
003b40   0009     tblrd*+                  	TBLRD*+	
003b42   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003b44   f001
003b46   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
003b48   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003b4a   1695     andwf   0x95, 0x1, 0x0   	ANDWF	_TRISD, F
                                           ;	.line	448; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
003b4c   d022     bra     0x003b92         	BRA	_00510_DS_
                                           _00508_DS_:
                                           ;	.line	452; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pE] = activatedservos[pE] | mask[pin];  // list pin as servo driver.
003b4e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003b50   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003b52   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003b54   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003b56   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003b58   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003b5a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003b5c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003b5e   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
003b60   fff6
003b62   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003b64   fff7
003b66   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
003b68   fff8
003b6a   0009     tblrd*+                  	TBLRD*+	
003b6c   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
003b6e   f003
003b70   0106     movlb   0x6              	BANKSEL	(_activatedservos + 4)
003b72   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
003b74   1203     iorwf   0x03, 0x1, 0x0   	IORWF	r0x03, F
003b76   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
003b78   6ffa     movwf   0xfa, 0x1        	MOVWF	(_activatedservos + 4), B
                                           ;	.line	453; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISE = TRISE & (~mask[pin]); 					// set as output pin
003b7a   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
003b7c   fff6
003b7e   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003b80   fff7
003b82   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
003b84   fff8
003b86   0009     tblrd*+                  	TBLRD*+	
003b88   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003b8a   f000
003b8c   1e00     comf    0x00, 0x1, 0x0   	COMF	r0x00, F
003b8e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003b90   1696     andwf   0x96, 0x1, 0x0   	ANDWF	_TRISE, F
                                           _00510_DS_:
                                           ;	.line	457; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
003b92   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003b94   f004
003b96   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003b98   f003
003b9a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003b9c   f002
003b9e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003ba0   f001
003ba2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003ba4   f000
003ba6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003ba8   ffd9
003baa   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void SortServoTimings()
000c1c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000c1e   ffe5
000c20   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000c22   ffe5
000c24   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000c26   ffe5
000c28   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
000c2a   ffe5
000c2c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000c2e   ffe5
000c30   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
000c32   ffe5
000c34   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
000c36   ffe5
000c38   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000c3a   6b37     clrf    0x37, 0x1        	CLRF	_SortServoTimings_t_1_35, B
                                           _00386_DS_:
000c3c   0e1e     movlw   0x1e             	MOVLW	0x1e
000c3e   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
000c40   5d37     subwf   0x37, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_35, W, B
000c42   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000c44   d066     bra     0x000d12         	BRA	_00333_DS_
                                           ;	.line	256; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=255; 
000c46   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000c48   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000c4a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000c4c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000c4e   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
000c50   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c52   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c54   ffe9
000c56   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c58   ffea
000c5a   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	257; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
000c5c   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000c5e   0d05     mullw   0x05             	MULLW	0x05
000c60   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c62   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c64   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c66   f000
000c68   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c6a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c6c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000c6e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c70   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c72   ffe9
000c74   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c76   ffea
000c78   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000c7a   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000c7c   0d05     mullw   0x05             	MULLW	0x05
000c7e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c80   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c82   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c84   f000
000c86   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c88   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c8a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000c8c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c8e   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000c90   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000c92   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c94   ffe9
000c96   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c98   ffea
000c9a   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000c9c   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000c9e   0d05     mullw   0x05             	MULLW	0x05
000ca0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000ca2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ca4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ca6   f000
000ca8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000caa   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cac   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000cae   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cb0   0e02     movlw   0x02             	MOVLW	0x02
000cb2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cb4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cb6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cb8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000cba   ffe9
000cbc   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000cbe   ffea
000cc0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	263; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000cc2   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000cc4   0d05     mullw   0x05             	MULLW	0x05
000cc6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cc8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cca   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ccc   f000
000cce   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cd0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cd2   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000cd4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cd6   0e03     movlw   0x03             	MOVLW	0x03
000cd8   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cda   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cdc   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cde   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ce0   ffe9
000ce2   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ce4   ffea
000ce6   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000ce8   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000cea   0d05     mullw   0x05             	MULLW	0x05
000cec   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cee   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cf0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000cf2   f000
000cf4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cf6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cf8   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000cfa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cfc   0e04     movlw   0x04             	MOVLW	0x04
000cfe   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000d00   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d02   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000d04   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d06   ffe9
000d08   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d0a   ffea
000d0c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000d0e   2b37     incf    0x37, 0x1, 0x1   	INCF	_SortServoTimings_t_1_35, F, B
000d10   d795     bra     0x000c3c         	BRA	_00386_DS_
                                           _00333_DS_:
000d12   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d14   6b37     clrf    0x37, 0x1        	CLRF	_SortServoTimings_t_1_35, B
                                           _00389_DS_:
000d16   0e05     movlw   0x05             	MOVLW	0x05
000d18   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
000d1a   5d37     subwf   0x37, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_35, W, B
000d1c   e20d     bc      0x000d38         	BC	_00334_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[t]=0x00;
000d1e   0efb     movlw   0xfb             	MOVLW	LOW(_mascaratotal)
                                           ; removed redundant BANKSEL
000d20   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000d22   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d24   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d26   0e06     movlw   0x06             	MOVLW	HIGH(_mascaratotal)
000d28   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d2a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d2c   ffe9
000d2e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d30   ffea
000d32   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d34   2b37     incf    0x37, 0x1, 0x1   	INCF	_SortServoTimings_t_1_35, F, B
000d36   d7ef     bra     0x000d16         	BRA	_00389_DS_
                                           _00334_DS_:
000d38   0107     movlb   0x7              	BANKSEL	_SortServoTimings_totalservos_1_35
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos=0; // Total servos revised. This helps to keep within "while"
000d3a   6b38     clrf    0x38, 0x1        	CLRF	_SortServoTimings_totalservos_1_35, B
000d3c   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	275; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t=0;           // Index to go through timevalue and timings tables.
000d3e   6b37     clrf    0x37, 0x1        	CLRF	_SortServoTimings_t_1_35, B
                                           _00382_DS_:
                                           ;	.line	276; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	while(totalservos<TotalPICpins)
000d40   0e1e     movlw   0x1e             	MOVLW	0x1e
000d42   0107     movlb   0x7              	BANKSEL	_SortServoTimings_totalservos_1_35
000d44   5d38     subwf   0x38, 0x0, 0x1   	SUBWF	_SortServoTimings_totalservos_1_35, W, B
000d46   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d48   ef21     goto    0x001a42         	GOTO	_00384_DS_
000d4a   f00d
                                           ;	.line	278; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000d4c   0e01     movlw   0x01             	MOVLW	0x01
000d4e   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
000d50   6f39     movwf   0x39, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
000d52   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
                                           ;	.line	280; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
000d54   6b3a     clrf    0x3a, 0x1        	CLRF	_SortServoTimings_s_1_35, B
                                           _00392_DS_:
000d56   0e1e     movlw   0x1e             	MOVLW	0x1e
000d58   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000d5a   5d3a     subwf   0x3a, 0x0, 0x1   	SUBWF	_SortServoTimings_s_1_35, W, B
000d5c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d5e   ef9d     goto    0x00193a         	GOTO	_00381_DS_
000d60   f00c
                                           ;	.line	283; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[s])
000d62   0e08     movlw   0x08             	MOVLW	LOW(_port)
                                           ; removed redundant BANKSEL
000d64   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000d66   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d68   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d6a   0e59     movlw   0x59             	MOVLW	HIGH(_port)
000d6c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d6e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000d70   0e00     movlw   0x00             	MOVLW	UPPER(_port)
000d72   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000d74   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000d76   fff6
000d78   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000d7a   fff7
000d7c   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000d7e   fff8
000d80   0009     tblrd*+                  	TBLRD*+	
000d82   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000d84   f000
000d86   0e05     movlw   0x05             	MOVLW	0x05
000d88   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000d8a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d8c   ef99     goto    0x001932         	GOTO	_00393_DS_
000d8e   f00c
000d90   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
000d92   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
000d94   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
000d96   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d98   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
000d9a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d9c   0bfc     andlw   0xfc             	ANDLW	0xfc
000d9e   0fae     addlw   0xae             	ADDLW	LOW(_00473_DS_)
000da0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000da2   0e0d     movlw   0x0d             	MOVLW	HIGH(_00473_DS_)
000da4   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
000da6   0e00     movlw   0x00             	MOVLW	UPPER(_00473_DS_)
000da8   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
000daa   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
000dac   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00473_DS_:
000dae   efe1     goto    0x000dc2         	GOTO	_00335_DS_
000db0   f006
000db2   ef02     goto    0x001004         	GOTO	_00344_DS_
000db4   f008
000db6   ef27     goto    0x00124e         	GOTO	_00353_DS_
000db8   f009
000dba   ef50     goto    0x0014a0         	GOTO	_00362_DS_
000dbc   f00a
000dbe   ef76     goto    0x0016ec         	GOTO	_00371_DS_
000dc0   f00b
                                           _00335_DS_:
                                           ;	.line	286; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pA] & activatedservos[pA]){
000dc2   0eea     movlw   0xea             	MOVLW	LOW(_mask)
000dc4   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000dc6   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000dc8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000dca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000dcc   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
000dce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000dd0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000dd2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000dd4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000dd6   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000dd8   fff6
000dda   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000ddc   fff7
000dde   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000de0   fff8
000de2   0009     tblrd*+                  	TBLRD*+	
000de4   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000de6   f000
000de8   0106     movlb   0x6              	BANKSEL	_mascaratotal
000dea   51fb     movf    0xfb, 0x0, 0x1   	MOVF	_mascaratotal, W, B
000dec   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000dee   0106     movlb   0x6              	BANKSEL	_activatedservos
000df0   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_activatedservos, W, B
000df2   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000df4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000df6   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
000df8   ef99     goto    0x001932         	GOTO	_00393_DS_
000dfa   f00c
                                           ;	.line	289; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
000dfc   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
000dfe   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000e00   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000e02   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e04   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e06   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
000e08   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e0a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e0c   ffe9
000e0e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e10   ffea
000e12   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000e14   f000
000e16   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
000e18   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
000e1a   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000e1c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e1e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000e20   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
000e22   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000e24   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000e26   ffe9
000e28   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000e2a   ffea
000e2c   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000e2e   f001
000e30   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000e32   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000e34   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000e36   d08d     bra     0x000f52         	BRA	_00339_DS_
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
000e38   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000e3a   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000e3c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e3e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e40   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
000e42   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e44   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
000e46   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000e48   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000e4a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e4c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e4e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
000e50   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e52   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000e54   ffe9
000e56   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000e58   ffea
000e5a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000e5c   f002
000e5e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e60   ffe9
000e62   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e64   ffea
000e66   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000e68   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
000e6a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	291; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=mask[s];
000e6c   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000e6e   0d05     mullw   0x05             	MULLW	0x05
000e70   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000e72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e74   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000e76   f000
000e78   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000e7a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000e7c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000e7e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e80   0eea     movlw   0xea             	MOVLW	LOW(_mask)
000e82   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000e84   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000e86   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e88   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e8a   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
000e8c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e8e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
000e90   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000e92   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
000e94   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
000e96   fff6
000e98   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
000e9a   fff7
000e9c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
000e9e   fff8
000ea0   0009     tblrd*+                  	TBLRD*+	
000ea2   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
000ea4   f002
000ea6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ea8   ffe9
000eaa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000eac   ffea
000eae   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000eb0   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
000eb2   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000eb4   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000eb6   0d05     mullw   0x05             	MULLW	0x05
000eb8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000eba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ebc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ebe   f000
000ec0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ec2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ec4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000ec6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000ec8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000eca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ecc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ece   ffe9
000ed0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ed2   ffea
000ed4   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	294; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000ed6   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000ed8   0d05     mullw   0x05             	MULLW	0x05
000eda   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000edc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ede   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ee0   f000
000ee2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ee4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ee6   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000ee8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000eea   0e02     movlw   0x02             	MOVLW	0x02
000eec   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000eee   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000ef0   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ef2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ef4   ffe9
000ef6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ef8   ffea
000efa   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	297; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000efc   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000efe   0d05     mullw   0x05             	MULLW	0x05
000f00   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f02   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f04   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f06   f000
000f08   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f0a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f0c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000f0e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f10   0e03     movlw   0x03             	MOVLW	0x03
000f12   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f14   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f16   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f18   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f1a   ffe9
000f1c   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f1e   ffea
000f20   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000f22   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000f24   0d05     mullw   0x05             	MULLW	0x05
000f26   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f28   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f2a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f2c   f000
000f2e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f30   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f32   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000f34   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f36   0e04     movlw   0x04             	MOVLW	0x04
000f38   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f3a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f3c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f3e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f40   ffe9
000f42   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f44   ffea
000f46   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000f48   0e01     movlw   0x01             	MOVLW	0x01
000f4a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
000f4c   6f39     movwf   0x39, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
000f4e   ef99     goto    0x001932         	GOTO	_00393_DS_
000f50   f00c
                                           _00339_DS_:
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
000f52   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
000f54   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000f56   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000f58   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000f5a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000f5c   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
000f5e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f60   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f62   ffe9
000f64   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f66   ffea
000f68   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000f6a   f000
000f6c   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
000f6e   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
000f70   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000f72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f74   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000f76   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
000f78   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000f7a   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000f7c   ffe9
000f7e   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000f80   ffea
000f82   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000f84   f001
000f86   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000f88   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
000f8a   e002     bz      0x000f90         	BZ	_00477_DS_
000f8c   ef99     goto    0x001932         	GOTO	_00393_DS_
000f8e   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00477_DS_:
000f90   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	305; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA] |= mask[s];
000f92   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000f94   0d05     mullw   0x05             	MULLW	0x05
000f96   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f98   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f9a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f9c   f000
000f9e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fa0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000fa2   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000fa4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
000fa6   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000fa8   0d05     mullw   0x05             	MULLW	0x05
000faa   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000fac   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000fae   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
000fb0   f002
000fb2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fb4   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
000fb6   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000fb8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000fba   0eea     movlw   0xea             	MOVLW	LOW(_mask)
000fbc   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
000fbe   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000fc0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
000fc2   6a05     clrf    0x05, 0x0        	CLRF	r0x05
000fc4   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
000fc6   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
000fc8   6a06     clrf    0x06, 0x0        	CLRF	r0x06
000fca   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000fcc   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
000fce   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
000fd0   fff6
000fd2   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
000fd4   fff7
000fd6   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
000fd8   fff8
000fda   0009     tblrd*+                  	TBLRD*+	
000fdc   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
000fde   f004
000fe0   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000fe2   ffe9
000fe4   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000fe6   ffea
000fe8   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000fea   f002
000fec   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000fee   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
000ff0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ff2   ffe9
000ff4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ff6   ffea
000ff8   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
000ffa   ffef
000ffc   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
000ffe   2b39     incf    0x39, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;      		
001000   ef99     goto    0x001932         	GOTO	_00393_DS_
001002   f00c
                                           _00344_DS_:
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pB] & activatedservos[pB]){
001004   0eea     movlw   0xea             	MOVLW	LOW(_mask)
001006   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001008   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00100a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00100c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00100e   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
001010   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001012   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001014   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001016   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001018   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00101a   fff6
00101c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00101e   fff7
001020   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
001022   fff8
001024   0009     tblrd*+                  	TBLRD*+	
001026   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001028   f000
00102a   0106     movlb   0x6              	BANKSEL	(_mascaratotal + 1)
00102c   51fc     movf    0xfc, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
00102e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001030   0106     movlb   0x6              	BANKSEL	(_activatedservos + 1)
001032   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
001034   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001036   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001038   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
00103a   ef99     goto    0x001932         	GOTO	_00393_DS_
00103c   f00c
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
00103e   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
001040   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001042   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001044   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001046   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001048   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00104a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00104c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00104e   ffe9
001050   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001052   ffea
001054   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001056   f000
001058   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
00105a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
00105c   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00105e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001060   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001062   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001064   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001066   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001068   ffe9
00106a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00106c   ffea
00106e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001070   f001
001072   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001074   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001076   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001078   d08d     bra     0x001194         	BRA	_00348_DS_
                                           ;	.line	315; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
00107a   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
00107c   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00107e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001080   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001082   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001084   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001086   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
001088   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
00108a   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00108c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00108e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001090   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001092   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001094   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001096   ffe9
001098   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
00109a   ffea
00109c   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00109e   f002
0010a0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010a2   ffe9
0010a4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010a6   ffea
0010a8   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0010aa   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0010ac   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0010ae   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0010b0   0d05     mullw   0x05             	MULLW	0x05
0010b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010b8   f000
0010ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010be   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0010c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010c2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010c4   ffe9
0010c6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010c8   ffea
0010ca   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=mask[s];
0010cc   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0010ce   0d05     mullw   0x05             	MULLW	0x05
0010d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010d6   f000
0010d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010dc   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0010de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010e0   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0010e2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0010e4   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0010e6   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0010e8   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0010ea   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0010ec   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0010ee   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0010f0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0010f2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0010f4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0010f6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0010f8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0010fa   fff6
0010fc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0010fe   fff7
001100   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001102   fff8
001104   0009     tblrd*+                  	TBLRD*+	
001106   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001108   f002
00110a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00110c   ffe9
00110e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001110   ffea
001112   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001114   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001116   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
001118   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00111a   0d05     mullw   0x05             	MULLW	0x05
00111c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00111e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001120   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001122   f000
001124   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001126   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001128   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00112a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00112c   0e02     movlw   0x02             	MOVLW	0x02
00112e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001130   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001132   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001134   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001136   ffe9
001138   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00113a   ffea
00113c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
00113e   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001140   0d05     mullw   0x05             	MULLW	0x05
001142   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001144   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001146   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001148   f000
00114a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00114c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00114e   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001150   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001152   0e03     movlw   0x03             	MOVLW	0x03
001154   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001156   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001158   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00115a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00115c   ffe9
00115e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001160   ffea
001162   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	325; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001164   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001166   0d05     mullw   0x05             	MULLW	0x05
001168   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00116a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00116c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00116e   f000
001170   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001172   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001174   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001176   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001178   0e04     movlw   0x04             	MOVLW	0x04
00117a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00117c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00117e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001180   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001182   ffe9
001184   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001186   ffea
001188   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	327; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00118a   0e01     movlw   0x01             	MOVLW	0x01
00118c   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
00118e   6f39     movwf   0x39, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
001190   ef99     goto    0x001932         	GOTO	_00393_DS_
001192   f00c
                                           _00348_DS_:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001194   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
001196   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001198   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00119a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00119c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00119e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0011a0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011a2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0011a4   ffe9
0011a6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0011a8   ffea
0011aa   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0011ac   f000
0011ae   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
0011b0   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
0011b2   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0011b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011b6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0011b8   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
0011ba   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0011bc   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0011be   ffe9
0011c0   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0011c2   ffea
0011c4   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0011c6   f001
0011c8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0011ca   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0011cc   e002     bz      0x0011d2         	BZ	_00482_DS_
0011ce   ef99     goto    0x001932         	GOTO	_00393_DS_
0011d0   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00482_DS_:
0011d2   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	330; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB] |= mask[s];
0011d4   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0011d6   0d05     mullw   0x05             	MULLW	0x05
0011d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0011de   f000
0011e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0011e4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0011e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011e8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0011ea   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
0011ec   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0011ee   0d05     mullw   0x05             	MULLW	0x05
0011f0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011f2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0011f4   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0011f6   f002
0011f8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011fa   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0011fc   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0011fe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001200   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
001202   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001204   0eea     movlw   0xea             	MOVLW	LOW(_mask)
001206   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001208   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00120a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00120c   6a05     clrf    0x05, 0x0        	CLRF	r0x05
00120e   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
001210   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001212   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001214   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001216   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001218   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00121a   fff6
00121c   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
00121e   fff7
001220   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001222   fff8
001224   0009     tblrd*+                  	TBLRD*+	
001226   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001228   f004
00122a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00122c   ffe9
00122e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001230   ffea
001232   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001234   f002
001236   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001238   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00123a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00123c   ffe9
00123e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001240   ffea
001242   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001244   ffef
001246   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001248   2b39     incf    0x39, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	333; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00124a   ef99     goto    0x001932         	GOTO	_00393_DS_
00124c   f00c
                                           _00353_DS_:
                                           ;	.line	337; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pC] & activatedservos[pC]){
00124e   0eea     movlw   0xea             	MOVLW	LOW(_mask)
001250   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001252   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001254   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001256   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001258   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
00125a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00125c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00125e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001260   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001262   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001264   fff6
001266   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001268   fff7
00126a   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00126c   fff8
00126e   0009     tblrd*+                  	TBLRD*+	
001270   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001272   f000
001274   0106     movlb   0x6              	BANKSEL	(_mascaratotal + 2)
001276   51fd     movf    0xfd, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
001278   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00127a   0106     movlb   0x6              	BANKSEL	(_activatedservos + 2)
00127c   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
00127e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001280   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001282   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001284   ef99     goto    0x001932         	GOTO	_00393_DS_
001286   f00c
                                           ;	.line	340; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001288   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
00128a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
00128c   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00128e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001290   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001292   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001294   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001296   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001298   ffe9
00129a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00129c   ffea
00129e   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0012a0   f000
0012a2   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
0012a4   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
0012a6   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0012a8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0012aa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0012ac   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
0012ae   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0012b0   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0012b2   ffe9
0012b4   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0012b6   ffea
0012b8   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0012ba   f001
0012bc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0012be   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0012c0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0012c2   d08d     bra     0x0013de         	BRA	_00357_DS_
                                           ;	.line	341; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
0012c4   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
0012c6   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0012c8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0012ca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0012cc   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
0012ce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0012d0   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
0012d2   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0012d4   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0012d6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0012d8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0012da   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0012dc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0012de   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0012e0   ffe9
0012e2   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0012e4   ffea
0012e6   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0012e8   f002
0012ea   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0012ec   ffe9
0012ee   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0012f0   ffea
0012f2   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0012f4   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0012f6   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	342; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0012f8   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0012fa   0d05     mullw   0x05             	MULLW	0x05
0012fc   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0012fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001300   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001302   f000
001304   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001306   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001308   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00130a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00130c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00130e   ffe9
001310   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001312   ffea
001314   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	343; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001316   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001318   0d05     mullw   0x05             	MULLW	0x05
00131a   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00131c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00131e   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001320   f000
001322   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001324   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001326   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001328   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00132a   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00132c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00132e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001330   ffe9
001332   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001334   ffea
001336   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	344; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=mask[s];
001338   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00133a   0d05     mullw   0x05             	MULLW	0x05
00133c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00133e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001340   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001342   f000
001344   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001346   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001348   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00134a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00134c   0e02     movlw   0x02             	MOVLW	0x02
00134e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001350   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001352   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001354   0eea     movlw   0xea             	MOVLW	LOW(_mask)
001356   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001358   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00135a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00135c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00135e   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
001360   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001362   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001364   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001366   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001368   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00136a   fff6
00136c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00136e   fff7
001370   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001372   fff8
001374   0009     tblrd*+                  	TBLRD*+	
001376   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001378   f002
00137a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00137c   ffe9
00137e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001380   ffea
001382   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001384   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001386   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
001388   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00138a   0d05     mullw   0x05             	MULLW	0x05
00138c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00138e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001390   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001392   f000
001394   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001396   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001398   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00139a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00139c   0e03     movlw   0x03             	MOVLW	0x03
00139e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013a2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013a4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013a6   ffe9
0013a8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013aa   ffea
0013ac   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	349; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
0013ae   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0013b0   0d05     mullw   0x05             	MULLW	0x05
0013b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0013b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0013b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0013b8   f000
0013ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0013bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013be   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0013c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013c2   0e04     movlw   0x04             	MOVLW	0x04
0013c4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013c6   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013cc   ffe9
0013ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013d0   ffea
0013d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	351; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
0013d4   0e01     movlw   0x01             	MOVLW	0x01
0013d6   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
0013d8   6f39     movwf   0x39, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
0013da   ef99     goto    0x001932         	GOTO	_00393_DS_
0013dc   f00c
                                           _00357_DS_:
                                           ;	.line	353; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
0013de   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
0013e0   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0013e2   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0013e4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0013e6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0013e8   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0013ea   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013ec   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013ee   ffe9
0013f0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013f2   ffea
0013f4   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0013f6   f000
0013f8   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
0013fa   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
0013fc   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0013fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001400   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001402   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001404   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001406   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001408   ffe9
00140a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00140c   ffea
00140e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001410   f001
001412   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001414   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001416   e002     bz      0x00141c         	BZ	_00487_DS_
001418   ef99     goto    0x001932         	GOTO	_00393_DS_
00141a   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00487_DS_:
00141c   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC] |= mask[s];
00141e   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001420   0d05     mullw   0x05             	MULLW	0x05
001422   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001424   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001426   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001428   f000
00142a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00142c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00142e   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001430   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001432   0e02     movlw   0x02             	MOVLW	0x02
001434   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001436   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001438   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
00143a   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00143c   0d05     mullw   0x05             	MULLW	0x05
00143e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001440   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001442   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001444   f002
001446   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001448   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
00144a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00144c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00144e   0e02     movlw   0x02             	MOVLW	0x02
001450   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001452   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001454   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001456   0eea     movlw   0xea             	MOVLW	LOW(_mask)
001458   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
00145a   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00145c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00145e   6a05     clrf    0x05, 0x0        	CLRF	r0x05
001460   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
001462   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001464   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001466   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001468   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
00146a   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00146c   fff6
00146e   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001470   fff7
001472   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001474   fff8
001476   0009     tblrd*+                  	TBLRD*+	
001478   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00147a   f004
00147c   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00147e   ffe9
001480   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001482   ffea
001484   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001486   f002
001488   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00148a   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00148c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00148e   ffe9
001490   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001492   ffea
001494   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001496   ffef
001498   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	355; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
00149a   2b39     incf    0x39, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	357; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00149c   ef99     goto    0x001932         	GOTO	_00393_DS_
00149e   f00c
                                           _00362_DS_:
                                           ;	.line	362; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pD] & activatedservos[pD]){
0014a0   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0014a2   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0014a4   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0014a6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014a8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014aa   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0014ac   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014ae   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014b0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0014b2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0014b4   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0014b6   fff6
0014b8   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0014ba   fff7
0014bc   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0014be   fff8
0014c0   0009     tblrd*+                  	TBLRD*+	
0014c2   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0014c4   f000
0014c6   0106     movlb   0x6              	BANKSEL	(_mascaratotal + 3)
0014c8   51fe     movf    0xfe, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0014ca   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014cc   0106     movlb   0x6              	BANKSEL	(_activatedservos + 3)
0014ce   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
0014d0   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014d2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0014d4   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
0014d6   ef99     goto    0x001932         	GOTO	_00393_DS_
0014d8   f00c
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
0014da   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
0014dc   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0014de   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0014e0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014e2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014e4   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0014e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0014ea   ffe9
0014ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0014ee   ffea
0014f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0014f2   f000
0014f4   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
0014f6   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
0014f8   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0014fa   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0014fc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014fe   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001500   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001502   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001504   ffe9
001506   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001508   ffea
00150a   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
00150c   f001
00150e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001510   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001512   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001514   d08c     bra     0x00162e         	BRA	_00366_DS_
                                           ;	.line	366; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001516   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001518   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00151a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00151c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00151e   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001520   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001522   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
001524   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001526   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001528   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00152a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00152c   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00152e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001530   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001532   ffe9
001534   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001536   ffea
001538   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00153a   f002
00153c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00153e   ffe9
001540   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001542   ffea
001544   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001546   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001548   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	367; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
00154a   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00154c   0d05     mullw   0x05             	MULLW	0x05
00154e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001550   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001552   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001554   f000
001556   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001558   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00155a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00155c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00155e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001560   ffe9
001562   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001564   ffea
001566   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	368; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001568   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00156a   0d05     mullw   0x05             	MULLW	0x05
00156c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00156e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001570   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001572   f000
001574   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001576   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001578   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00157a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00157c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00157e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001580   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001582   ffe9
001584   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001586   ffea
001588   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	369; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
00158a   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00158c   0d05     mullw   0x05             	MULLW	0x05
00158e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001590   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001592   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001594   f000
001596   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001598   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00159a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00159c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00159e   0e02     movlw   0x02             	MOVLW	0x02
0015a0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015a2   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015a4   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015a6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015a8   ffe9
0015aa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015ac   ffea
0015ae   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	370; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=mask[s];
0015b0   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0015b2   0d05     mullw   0x05             	MULLW	0x05
0015b4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0015b6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0015b8   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0015ba   f000
0015bc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0015be   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c0   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0015c2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0015c4   0e03     movlw   0x03             	MOVLW	0x03
0015c6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015ca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015cc   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0015ce   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0015d0   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0015d2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0015d4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0015d6   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0015d8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0015da   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0015dc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0015de   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0015e0   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0015e2   fff6
0015e4   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0015e6   fff7
0015e8   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0015ea   fff8
0015ec   0009     tblrd*+                  	TBLRD*+	
0015ee   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0015f0   f002
0015f2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015f4   ffe9
0015f6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015f8   ffea
0015fa   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0015fc   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0015fe   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001600   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001602   0d05     mullw   0x05             	MULLW	0x05
001604   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001606   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001608   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00160a   f000
00160c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00160e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001610   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001612   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001614   0e04     movlw   0x04             	MOVLW	0x04
001616   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001618   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00161a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00161c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00161e   ffe9
001620   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001622   ffea
001624   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	374; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
001626   0e01     movlw   0x01             	MOVLW	0x01
001628   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
00162a   6f39     movwf   0x39, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
00162c   d182     bra     0x001932         	BRA	_00393_DS_
                                           _00366_DS_:
                                           ;	.line	376; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
00162e   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
001630   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001632   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001634   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001636   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001638   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00163a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00163c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00163e   ffe9
001640   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001642   ffea
001644   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001646   f000
001648   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
00164a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
00164c   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00164e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001650   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001652   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001654   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001656   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001658   ffe9
00165a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00165c   ffea
00165e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001660   f001
001662   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001664   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001666   e001     bz      0x00166a         	BZ	_00492_DS_
001668   d164     bra     0x001932         	BRA	_00393_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00492_DS_:
00166a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	377; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD] |= mask[s];
00166c   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00166e   0d05     mullw   0x05             	MULLW	0x05
001670   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001672   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001674   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001676   f000
001678   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00167a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00167c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00167e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001680   0e03     movlw   0x03             	MOVLW	0x03
001682   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001684   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001686   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
001688   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00168a   0d05     mullw   0x05             	MULLW	0x05
00168c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00168e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001690   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001692   f002
001694   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001696   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001698   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00169a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00169c   0e03     movlw   0x03             	MOVLW	0x03
00169e   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0016a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0016a2   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0016a4   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0016a6   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0016a8   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0016aa   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0016ac   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0016ae   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0016b0   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0016b2   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0016b4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016b6   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0016b8   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0016ba   fff6
0016bc   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0016be   fff7
0016c0   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0016c2   fff8
0016c4   0009     tblrd*+                  	TBLRD*+	
0016c6   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0016c8   f004
0016ca   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0016cc   ffe9
0016ce   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0016d0   ffea
0016d2   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0016d4   f002
0016d6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0016d8   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0016da   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0016dc   ffe9
0016de   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0016e0   ffea
0016e2   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
0016e4   ffef
0016e6   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	378; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
0016e8   2b39     incf    0x39, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	380; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0016ea   d123     bra     0x001932         	BRA	_00393_DS_
                                           _00371_DS_:
                                           ;	.line	385; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pE] & activatedservos[pE]){
0016ec   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0016ee   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0016f0   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0016f2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0016f4   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0016f6   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0016f8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0016fa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0016fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016fe   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001700   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001702   fff6
001704   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001706   fff7
001708   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00170a   fff8
00170c   0009     tblrd*+                  	TBLRD*+	
00170e   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001710   f000
001712   0106     movlb   0x6              	BANKSEL	(_mascaratotal + 4)
001714   51ff     movf    0xff, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001716   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001718   0106     movlb   0x6              	BANKSEL	(_activatedservos + 4)
00171a   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
00171c   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00171e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001720   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001722   d107     bra     0x001932         	BRA	_00393_DS_
                                           ;	.line	388; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001724   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
001726   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001728   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00172a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00172c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00172e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001730   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001732   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001734   ffe9
001736   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001738   ffea
00173a   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00173c   f000
00173e   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
001740   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
001742   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
001744   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001746   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001748   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
00174a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00174c   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
00174e   ffe9
001750   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001752   ffea
001754   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001756   f001
001758   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00175a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00175c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00175e   d08b     bra     0x001876         	BRA	_00375_DS_
                                           ;	.line	389; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001760   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001762   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
001764   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001766   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001768   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
00176a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00176c   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
00176e   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001770   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001772   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001774   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001776   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001778   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00177a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00177c   ffe9
00177e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001780   ffea
001782   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001784   f002
001786   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001788   ffe9
00178a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00178c   ffea
00178e   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001790   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001792   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	390; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
001794   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001796   0d05     mullw   0x05             	MULLW	0x05
001798   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00179a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00179c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00179e   f000
0017a0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017a2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017a4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0017a6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017a8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017aa   ffe9
0017ac   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017ae   ffea
0017b0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	391; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
0017b2   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0017b4   0d05     mullw   0x05             	MULLW	0x05
0017b6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017b8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017ba   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017bc   f000
0017be   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017c0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017c2   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0017c4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017c6   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0017c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017cc   ffe9
0017ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017d0   ffea
0017d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	392; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
0017d4   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0017d6   0d05     mullw   0x05             	MULLW	0x05
0017d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017de   f000
0017e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017e4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0017e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017e8   0e02     movlw   0x02             	MOVLW	0x02
0017ea   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017ec   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0017ee   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017f0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017f2   ffe9
0017f4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017f6   ffea
0017f8   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
0017fa   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0017fc   0d05     mullw   0x05             	MULLW	0x05
0017fe   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001800   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001802   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001804   f000
001806   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001808   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00180a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00180c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00180e   0e03     movlw   0x03             	MOVLW	0x03
001810   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001812   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001814   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001816   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001818   ffe9
00181a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00181c   ffea
00181e   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	394; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=mask[s];
001820   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001822   0d05     mullw   0x05             	MULLW	0x05
001824   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001826   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001828   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00182a   f000
00182c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00182e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001830   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001832   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001834   0e04     movlw   0x04             	MOVLW	0x04
001836   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001838   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00183a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00183c   0eea     movlw   0xea             	MOVLW	LOW(_mask)
00183e   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
001840   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001842   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001844   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001846   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
001848   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00184a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00184c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00184e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001850   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001852   fff6
001854   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001856   fff7
001858   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00185a   fff8
00185c   0009     tblrd*+                  	TBLRD*+	
00185e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001860   f002
001862   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001864   ffe9
001866   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001868   ffea
00186a   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
00186c   ffef
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00186e   0e01     movlw   0x01             	MOVLW	0x01
001870   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
001872   6f39     movwf   0x39, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
001874   d05e     bra     0x001932         	BRA	_00393_DS_
                                           _00375_DS_:
                                           ;	.line	397; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001876   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
001878   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
00187a   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00187c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00187e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001880   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001882   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001884   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001886   ffe9
001888   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00188a   ffea
00188c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00188e   f000
001890   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
001892   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
001894   2537     addwf   0x37, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
001896   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001898   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00189a   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
00189c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00189e   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0018a0   ffe9
0018a2   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0018a4   ffea
0018a6   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0018a8   f001
0018aa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0018ac   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0018ae   e001     bz      0x0018b2         	BZ	_00497_DS_
0018b0   d040     bra     0x001932         	BRA	_00393_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00497_DS_:
0018b2   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	398; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE] |= mask[s];
0018b4   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0018b6   0d05     mullw   0x05             	MULLW	0x05
0018b8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018ba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0018bc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0018be   f000
0018c0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018c2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018c4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0018c6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0018c8   0e04     movlw   0x04             	MOVLW	0x04
0018ca   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018cc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ce   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
0018d0   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0018d2   0d05     mullw   0x05             	MULLW	0x05
0018d4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018d6   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0018d8   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0018da   f002
0018dc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018de   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e0   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0018e2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0018e4   0e04     movlw   0x04             	MOVLW	0x04
0018e6   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ea   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0018ec   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0018ee   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
0018f0   253a     addwf   0x3a, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0018f2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0018f4   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0018f6   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0018f8   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0018fa   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0018fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0018fe   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001900   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
001902   fff6
001904   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001906   fff7
001908   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
00190a   fff8
00190c   0009     tblrd*+                  	TBLRD*+	
00190e   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001910   f004
001912   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001914   ffe9
001916   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001918   ffea
00191a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00191c   f002
00191e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001920   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
001922   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001924   ffe9
001926   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001928   ffea
00192a   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
00192c   ffef
00192e   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	399; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001930   2b39     incf    0x39, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           _00393_DS_:
001932   0107     movlb   0x7              	BANKSEL	_SortServoTimings_s_1_35
                                           ;	.line	280; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
001934   2b3a     incf    0x3a, 0x1, 0x1   	INCF	_SortServoTimings_s_1_35, F, B
001936   efab     goto    0x000d56         	GOTO	_00392_DS_
001938   f006
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00381_DS_:
00193a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	405; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pA] |= timings[t][pA];
00193c   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00193e   0d05     mullw   0x05             	MULLW	0x05
001940   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001942   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001944   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001946   f000
001948   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00194a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00194c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00194e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001950   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001952   ffe9
001954   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001956   ffea
001958   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00195a   f000
00195c   0106     movlb   0x6              	BANKSEL	_mascaratotal
00195e   51fb     movf    0xfb, 0x0, 0x1   	MOVF	_mascaratotal, W, B
001960   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001962   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001964   6ffb     movwf   0xfb, 0x1        	MOVWF	_mascaratotal, B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001966   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	406; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pB] |= timings[t][pB];
001968   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00196a   0d05     mullw   0x05             	MULLW	0x05
00196c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00196e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001970   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001972   f000
001974   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001976   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001978   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00197a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00197c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00197e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001980   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001982   ffe9
001984   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001986   ffea
001988   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00198a   f000
00198c   0106     movlb   0x6              	BANKSEL	(_mascaratotal + 1)
00198e   51fc     movf    0xfc, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
001990   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001992   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001994   6ffc     movwf   0xfc, 0x1        	MOVWF	(_mascaratotal + 1), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001996   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	408; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pC] |= timings[t][pC];
001998   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00199a   0d05     mullw   0x05             	MULLW	0x05
00199c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00199e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019a0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019a2   f000
0019a4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019a6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019a8   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0019aa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019ac   0e02     movlw   0x02             	MOVLW	0x02
0019ae   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019b0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019b2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019b4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019b6   ffe9
0019b8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ba   ffea
0019bc   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019be   f000
0019c0   0106     movlb   0x6              	BANKSEL	(_mascaratotal + 2)
0019c2   51fd     movf    0xfd, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
0019c4   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019c8   6ffd     movwf   0xfd, 0x1        	MOVWF	(_mascaratotal + 2), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0019ca   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	411; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pD] |= timings[t][pD];
0019cc   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0019ce   0d05     mullw   0x05             	MULLW	0x05
0019d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0019d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019d6   f000
0019d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019dc   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0019de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019e0   0e03     movlw   0x03             	MOVLW	0x03
0019e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019e4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019e6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019ea   ffe9
0019ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ee   ffea
0019f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019f2   f000
0019f4   0106     movlb   0x6              	BANKSEL	(_mascaratotal + 3)
0019f6   51fe     movf    0xfe, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0019f8   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019fa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019fc   6ffe     movwf   0xfe, 0x1        	MOVWF	(_mascaratotal + 3), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0019fe   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	414; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pE] |= timings[t][pE];
001a00   5137     movf    0x37, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001a02   0d05     mullw   0x05             	MULLW	0x05
001a04   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001a06   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001a08   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001a0a   f000
001a0c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001a0e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a10   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001a12   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001a14   0e04     movlw   0x04             	MOVLW	0x04
001a16   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a18   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001a1a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001a1c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001a1e   ffe9
001a20   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001a22   ffea
001a24   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001a26   f000
001a28   0106     movlb   0x6              	BANKSEL	(_mascaratotal + 4)
001a2a   51ff     movf    0xff, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001a2c   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001a2e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001a30   6fff     movwf   0xff, 0x1        	MOVWF	(_mascaratotal + 4), B
001a32   0107     movlb   0x7              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	417; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos += numservos;
001a34   5139     movf    0x39, 0x0, 0x1   	MOVF	_SortServoTimings_numservos_1_35, W, B
001a36   0107     movlb   0x7              	BANKSEL	_SortServoTimings_totalservos_1_35
001a38   2738     addwf   0x38, 0x1, 0x1   	ADDWF	_SortServoTimings_totalservos_1_35, F, B
001a3a   0107     movlb   0x7              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	418; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t++;
001a3c   2b37     incf    0x37, 0x1, 0x1   	INCF	_SortServoTimings_t_1_35, F, B
001a3e   efa0     goto    0x000d40         	GOTO	_00382_DS_
001a40   f006
                                           _00384_DS_:
001a42   0105     movlb   0x5              	BANKSEL	_needreordering
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=0;  // This indicates that servo timings are sorted.
001a44   6bd3     clrf    0xd3, 0x1        	CLRF	_needreordering, B
                                           ;	.line	422; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
001a46   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
001a48   f006
001a4a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
001a4c   f005
001a4e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001a50   f004
001a52   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001a54   f003
001a56   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001a58   f002
001a5a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001a5c   f001
001a5e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001a60   f000
001a62   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__ServosPulseUp	code
                                           _ServosPulseUp:
00676a   0106     movlb   0x6              	BANKSEL	_activatedservos
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA | activatedservos[pA];
00676c   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_activatedservos, W, B
00676e   1280     iorwf   0x80, 0x1, 0x0   	IORWF	_PORTA, F
                                           ; removed redundant BANKSEL
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB | activatedservos[pB];
006770   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
006772   1281     iorwf   0x81, 0x1, 0x0   	IORWF	_PORTB, F
                                           ; removed redundant BANKSEL
                                           ;	.line	235; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC | activatedservos[pC];
006774   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
006776   1282     iorwf   0x82, 0x1, 0x0   	IORWF	_PORTC, F
                                           ; removed redundant BANKSEL
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD | activatedservos[pD];
006778   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
00677a   1283     iorwf   0x83, 0x1, 0x0   	IORWF	_PORTD, F
                                           ; removed redundant BANKSEL
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE | activatedservos[pE];
00677c   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
00677e   1284     iorwf   0x84, 0x1, 0x0   	IORWF	_PORTE, F
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
006780   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void ServosPulseDown()
004c5e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004c60   ffe5
004c62   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004c64   ffd9
004c66   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004c68   ffe5
004c6a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004c6c   ffe5
004c6e   0107     movlb   0x7              	BANKSEL	_ServosPulseDown_timingindex_1_30
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	volatile unsigned char timingindex = 0;
004c70   6b36     clrf    0x36, 0x1        	CLRF	_ServosPulseDown_timingindex_1_30, B
004c72   0105     movlb   0x5              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
004c74   6bd4     clrf    0xd4, 0x1        	CLRF	_timedivision, B
                                           _00306_DS_:
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (timevalue[timingindex] == timedivision)
004c76   0e9e     movlw   0x9e             	MOVLW	LOW(_timevalue)
004c78   0107     movlb   0x7              	BANKSEL	_ServosPulseDown_timingindex_1_30
004c7a   2536     addwf   0x36, 0x0, 0x1   	ADDWF	_ServosPulseDown_timingindex_1_30, W, B
004c7c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004c7e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004c80   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
004c82   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004c84   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004c86   ffe9
004c88   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
004c8a   ffea
004c8c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
004c8e   f000
004c90   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004c92   0105     movlb   0x5              	BANKSEL	_timedivision
004c94   19d4     xorwf   0xd4, 0x0, 0x1   	XORWF	_timedivision, W, B
004c96   e001     bz      0x004c9a         	BZ	_00317_DS_
004c98   d06a     bra     0x004d6e         	BRA	_00304_DS_
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           _00317_DS_:
004c9a   0107     movlb   0x7              	BANKSEL	_ServosPulseDown_timingindex_1_30
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA ^ timings[timingindex][pA];
004c9c   5136     movf    0x36, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
004c9e   0d05     mullw   0x05             	MULLW	0x05
004ca0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
004ca2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004ca4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
004ca6   f000
004ca8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
004caa   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004cac   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
004cae   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004cb0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004cb2   ffe9
004cb4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
004cb6   ffea
004cb8   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
004cba   f000
004cbc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004cbe   1a80     xorwf   0x80, 0x1, 0x0   	XORWF	_PORTA, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB ^ timings[timingindex][pB];
004cc0   5136     movf    0x36, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
004cc2   0d05     mullw   0x05             	MULLW	0x05
004cc4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
004cc6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004cc8   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
004cca   f000
004ccc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
004cce   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004cd0   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
004cd2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004cd4   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
004cd6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
004cd8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004cda   ffe9
004cdc   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
004cde   ffea
004ce0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
004ce2   f000
004ce4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004ce6   1a81     xorwf   0x81, 0x1, 0x0   	XORWF	_PORTB, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC ^ timings[timingindex][pC];
004ce8   5136     movf    0x36, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
004cea   0d05     mullw   0x05             	MULLW	0x05
004cec   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
004cee   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004cf0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
004cf2   f000
004cf4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
004cf6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004cf8   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
004cfa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004cfc   0e02     movlw   0x02             	MOVLW	0x02
004cfe   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004d00   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004d02   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
004d04   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004d06   ffe9
004d08   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
004d0a   ffea
004d0c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
004d0e   f000
004d10   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004d12   1a82     xorwf   0x82, 0x1, 0x0   	XORWF	_PORTC, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD ^ timings[timingindex][pD];
004d14   5136     movf    0x36, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
004d16   0d05     mullw   0x05             	MULLW	0x05
004d18   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
004d1a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004d1c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
004d1e   f000
004d20   0e00     movlw   0x00             	MOVLW	LOW(_timings)
004d22   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004d24   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
004d26   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004d28   0e03     movlw   0x03             	MOVLW	0x03
004d2a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004d2c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004d2e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
004d30   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004d32   ffe9
004d34   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
004d36   ffea
004d38   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
004d3a   f000
004d3c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004d3e   1a83     xorwf   0x83, 0x1, 0x0   	XORWF	_PORTD, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE ^ timings[timingindex][pE];
004d40   5136     movf    0x36, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
004d42   0d05     mullw   0x05             	MULLW	0x05
004d44   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
004d46   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004d48   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
004d4a   f000
004d4c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
004d4e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004d50   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
004d52   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004d54   0e04     movlw   0x04             	MOVLW	0x04
004d56   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004d58   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
004d5a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
004d5c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004d5e   ffe9
004d60   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
004d62   ffea
004d64   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
004d66   f000
004d68   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004d6a   1a84     xorwf   0x84, 0x1, 0x0   	XORWF	_PORTE, F
                                           ; removed redundant BANKSEL
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timingindex++;
004d6c   2b36     incf    0x36, 0x1, 0x1   	INCF	_ServosPulseDown_timingindex_1_30, F, B
                                           _00304_DS_:
004d6e   0e07     movlw   0x07             	movlw	7
004d70   6f35     movwf   0x35, 0x1        	movwf	_loopvar
                                           bucle:
004d72   0000     nop                      	NOP
004d74   0000     nop                      	NOP
004d76   0000     nop                      	NOP
004d78   0000     nop                      	NOP
004d7a   0000     nop                      	NOP
004d7c   0000     nop                      	NOP
004d7e   0000     nop                      	NOP
004d80   0000     nop                      	NOP
004d82   0000     nop                      	NOP
004d84   0000     nop                      	NOP
004d86   0000     nop                      	NOP
004d88   2f35     decfsz  0x35, 0x1, 0x1   	decfsz	_loopvar,1
004d8a   efb9     goto    0x004d72         	goto	bucle
004d8c   f026
                                           	
004d8e   0105     movlb   0x5              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
004d90   2bd4     incf    0xd4, 0x1, 0x1   	INCF	_timedivision, F, B
004d92   0efb     movlw   0xfb             	MOVLW	0xfb
                                           ; removed redundant BANKSEL
004d94   5dd4     subwf   0xd4, 0x0, 0x1   	SUBWF	_timedivision, W, B
004d96   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
004d98   d76e     bra     0x004c76         	BRA	_00306_DS_
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
004d9a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004d9c   f001
004d9e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004da0   f000
004da2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004da4   ffd9
004da6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__servos_init	code
                                           _servos_init:
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void servos_init()
005a14   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005a16   ffe5
005a18   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005a1a   ffe5
005a1c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005a1e   ffe5
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
005a20   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00277_DS_:
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[a]=255;  //Filling up the servovalues table to 255.
005a22   0e80     movlw   0x80             	MOVLW	LOW(_servovalues)
005a24   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
005a26   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005a28   6a02     clrf    0x02, 0x0        	CLRF	r0x02
005a2a   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
005a2c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005a2e   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
005a30   ffe9
005a32   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
005a34   ffea
005a36   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ;	.line	160; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][a]= DefaultSERVOMIN; // Setting min servo position to 1000 usec.
005a38   0e96     movlw   0x96             	MOVLW	LOW(_maxminpos)
005a3a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
005a3c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005a3e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
005a40   0e05     movlw   0x05             	MOVLW	HIGH(_maxminpos)
005a42   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005a44   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
005a46   ffe9
005a48   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
005a4a   ffea
005a4c   0e40     movlw   0x40             	MOVLW	0x40
005a4e   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][a]= DefaultSERVOMAX; // Setting max servo position to 2000 usec.
005a50   0eb4     movlw   0xb4             	MOVLW	LOW(_maxminpos + 30)
005a52   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
005a54   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005a56   6a02     clrf    0x02, 0x0        	CLRF	r0x02
005a58   0e05     movlw   0x05             	MOVLW	HIGH(_maxminpos + 30)
005a5a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005a5c   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
005a5e   ffe9
005a60   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
005a62   ffea
005a64   0ec0     movlw   0xc0             	MOVLW	0xc0
005a66   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
005a68   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
005a6a   0e1e     movlw   0x1e             	MOVLW	0x1e
005a6c   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
005a6e   e3d9     bnc     0x005a22         	BNC	_00277_DS_
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
005a70   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00279_DS_:
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[a]=0x00;  // Setting all pins as deactivated as servo.
005a72   0ef6     movlw   0xf6             	MOVLW	LOW(_activatedservos)
005a74   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
005a76   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005a78   6a02     clrf    0x02, 0x0        	CLRF	r0x02
005a7a   0e06     movlw   0x06             	MOVLW	HIGH(_activatedservos)
005a7c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005a7e   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
005a80   ffe9
005a82   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
005a84   ffea
005a86   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
005a88   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
005a8a   0e05     movlw   0x05             	MOVLW	0x05
005a8c   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
005a8e   e3f1     bnc     0x005a72         	BNC	_00279_DS_
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 0; // Disable global HP interrupts
005a90   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	_INTCONbits, 7
                                           ;	.line	169; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 0; // Disable global LP interrupts
005a92   9cf2     bcf     0xf2, 0x6, 0x0   	BCF	_INTCONbits, 6
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=0x01; 			//timer 1 prescaler 1 source is internal oscillator
005a94   0e01     movlw   0x01             	MOVLW	0x01
005a96   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H=0xFF; 			// First value on timer to start up...
005a98   0eff     movlw   0xff             	MOVLW	0xff
005a9a   68cf     setf    0xcf, 0x0        	SETF	_TMR1H
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L=0x00; 			// ...now the first interrupt will be generated by timer after 9 ms.
005a9c   6ace     clrf    0xce, 0x0        	CLRF	_TMR1L
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	IPR1bits.TMR1IP = 1; 	// INT_HIGH_PRIORITY
005a9e   809f     bsf     0x9f, 0x0, 0x0   	BSF	_IPR1bits, 0
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF = 0; 	// Setting flag to 0
005aa0   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIE1bits.TMR1IE = 1; 	// INT_ENABLE
005aa2   809d     bsf     0x9d, 0x0, 0x0   	BSF	_PIE1bits, 0
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CONbits.TMR1ON   = 1; // Starting TMR1
005aa4   80cd     bsf     0xcd, 0x0, 0x0   	BSF	_T1CONbits, 0
                                           ;	.line	179; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 1; // Enable global HP interrupts
005aa6   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 1; // Enable global LP interrupts
005aa8   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
005aaa   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005aac   f002
005aae   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005ab0   f001
005ab2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005ab4   f000
005ab6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__toggle	code
                                           _toggle:
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	void toggle(u8 pin)
0064c0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0064c2   ffe5
0064c4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0064c6   ffd9
0064c8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0064ca   ffe5
0064cc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0064ce   ffe5
0064d0   0e02     movlw   0x02             	MOVLW	0x02
0064d2   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0064d4   f000
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	state = digitalread(pin);
0064d6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0064d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0064da   ecca     call    0x003d94, 0x0    	CALL	_digitalread
0064dc   f01e
0064de   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0064e0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	digitalwrite(pin, state^1);
0064e2   7001     btg     0x01, 0x0, 0x0   	BTG	r0x01, 0
0064e4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0064e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0064e8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0064ea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0064ec   ec2b     call    0x003056, 0x0    	CALL	_digitalwrite
0064ee   f018
0064f0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0064f2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	52; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	}
0064f4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0064f6   f001
0064f8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0064fa   f000
0064fc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0064fe   ffd9
006500   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__digitalread	code
                                           _digitalread:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	u8 digitalread(u8 pin)
003d94   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003d96   ffe5
003d98   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003d9a   ffd9
003d9c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003d9e   ffe5
003da0   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003da2   ffe5
003da4   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003da6   ffe5
003da8   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003daa   ffe5
003dac   0e02     movlw   0x02             	MOVLW	0x02
003dae   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003db0   f000
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	switch (port[pin])
003db2   0e08     movlw   0x08             	MOVLW	LOW(_port)
003db4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003db6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003db8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003dba   0e59     movlw   0x59             	MOVLW	HIGH(_port)
003dbc   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003dbe   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003dc0   0e00     movlw   0x00             	MOVLW	UPPER(_port)
003dc2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003dc4   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003dc6   fff6
003dc8   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003dca   fff7
003dcc   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003dce   fff8
003dd0   0009     tblrd*+                  	TBLRD*+	
003dd2   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003dd4   f001
003dd6   0e05     movlw   0x05             	MOVLW	0x05
003dd8   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
003dda   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
003ddc   d0c2     bra     0x003f62         	BRA	_00258_DS_
003dde   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
003de0   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
003de2   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
003de4   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003de6   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
003de8   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003dea   0bfc     andlw   0xfc             	ANDLW	0xfc
003dec   0ffc     addlw   0xfc             	ADDLW	LOW(_00265_DS_)
003dee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003df0   0e3d     movlw   0x3d             	MOVLW	HIGH(_00265_DS_)
003df2   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
003df4   0e00     movlw   0x00             	MOVLW	UPPER(_00265_DS_)
003df6   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
003df8   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
003dfa   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00265_DS_:
003dfc   ef08     goto    0x003e10         	GOTO	_00253_DS_
003dfe   f01f
003e00   ef2a     goto    0x003e54         	GOTO	_00254_DS_
003e02   f01f
003e04   ef4c     goto    0x003e98         	GOTO	_00255_DS_
003e06   f01f
003e08   ef6e     goto    0x003edc         	GOTO	_00256_DS_
003e0a   f01f
003e0c   ef90     goto    0x003f20         	GOTO	_00257_DS_
003e0e   f01f
                                           _00253_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTA & mask[pin])!=0);
003e10   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003e12   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003e14   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003e16   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003e18   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003e1a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003e1c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003e1e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003e20   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003e22   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003e24   fff6
003e26   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003e28   fff7
003e2a   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003e2c   fff8
003e2e   0009     tblrd*+                  	TBLRD*+	
003e30   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003e32   f001
003e34   5080     movf    0x80, 0x0, 0x0   	MOVF	_PORTA, W
003e36   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
003e38   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003e3a   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003e3c   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003e3e   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003e40   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003e42   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
003e44   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003e46   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003e48   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003e4a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003e4c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003e4e   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
003e50   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003e52   d088     bra     0x003f64         	BRA	_00259_DS_
                                           _00254_DS_:
                                           ;	.line	60; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTB & mask[pin])!=0);
003e54   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003e56   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003e58   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003e5a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003e5c   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003e5e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003e60   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003e62   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003e64   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003e66   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003e68   fff6
003e6a   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003e6c   fff7
003e6e   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003e70   fff8
003e72   0009     tblrd*+                  	TBLRD*+	
003e74   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003e76   f001
003e78   5081     movf    0x81, 0x0, 0x0   	MOVF	_PORTB, W
003e7a   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
003e7c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003e7e   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003e80   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003e82   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003e84   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003e86   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
003e88   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003e8a   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003e8c   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003e8e   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003e90   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003e92   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
003e94   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003e96   d066     bra     0x003f64         	BRA	_00259_DS_
                                           _00255_DS_:
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTC & mask[pin])!=0);
003e98   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003e9a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003e9c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003e9e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003ea0   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003ea2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003ea4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003ea6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003ea8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003eaa   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003eac   fff6
003eae   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003eb0   fff7
003eb2   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003eb4   fff8
003eb6   0009     tblrd*+                  	TBLRD*+	
003eb8   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003eba   f001
003ebc   5082     movf    0x82, 0x0, 0x0   	MOVF	_PORTC, W
003ebe   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
003ec0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003ec2   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003ec4   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003ec6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003ec8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003eca   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
003ecc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003ece   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003ed0   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003ed2   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003ed4   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003ed6   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
003ed8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003eda   d044     bra     0x003f64         	BRA	_00259_DS_
                                           _00256_DS_:
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTD & mask[pin])!=0);
003edc   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003ede   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003ee0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003ee2   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003ee4   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003ee6   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003ee8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003eea   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003eec   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003eee   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003ef0   fff6
003ef2   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003ef4   fff7
003ef6   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003ef8   fff8
003efa   0009     tblrd*+                  	TBLRD*+	
003efc   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003efe   f001
003f00   5083     movf    0x83, 0x0, 0x0   	MOVF	_PORTD, W
003f02   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
003f04   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003f06   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003f08   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003f0a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003f0c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003f0e   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
003f10   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003f12   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003f14   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003f16   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003f18   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003f1a   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
003f1c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003f1e   d022     bra     0x003f64         	BRA	_00259_DS_
                                           _00257_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTE & mask[pin])!=0);
003f20   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003f22   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003f24   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003f26   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003f28   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003f2a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003f2c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003f2e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003f30   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
003f32   fff6
003f34   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003f36   fff7
003f38   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
003f3a   fff8
003f3c   0009     tblrd*+                  	TBLRD*+	
003f3e   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003f40   f000
003f42   5084     movf    0x84, 0x0, 0x0   	MOVF	_PORTE, W
003f44   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
003f46   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003f48   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003f4a   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003f4c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003f4e   6a00     clrf    0x00, 0x0        	CLRF	r0x00
003f50   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
003f52   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003f54   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003f56   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003f58   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003f5a   6a00     clrf    0x00, 0x0        	CLRF	r0x00
003f5c   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
003f5e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003f60   d001     bra     0x003f64         	BRA	_00259_DS_
                                           _00258_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return 0;
003f62   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00259_DS_:
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	}
003f64   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003f66   f003
003f68   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003f6a   f002
003f6c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003f6e   f001
003f70   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003f72   f000
003f74   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003f76   ffd9
003f78   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	void digitalwrite(u8 pin, u8 state)
003056   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003058   ffe5
00305a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00305c   ffd9
00305e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003060   ffe5
003062   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003064   ffe5
003066   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003068   ffe5
00306a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00306c   ffe5
00306e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003070   ffe5
003072   0e02     movlw   0x02             	MOVLW	0x02
003074   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003076   f000
003078   0e03     movlw   0x03             	MOVLW	0x03
00307a   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00307c   f001
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	switch (port[pin])
00307e   0e08     movlw   0x08             	MOVLW	LOW(_port)
003080   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003082   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003084   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003086   0e59     movlw   0x59             	MOVLW	HIGH(_port)
003088   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00308a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00308c   0e00     movlw   0x00             	MOVLW	UPPER(_port)
00308e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003090   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003092   fff6
003094   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003096   fff7
003098   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00309a   fff8
00309c   0009     tblrd*+                  	TBLRD*+	
00309e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0030a0   f002
0030a2   0e05     movlw   0x05             	MOVLW	0x05
0030a4   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
0030a6   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0030a8   d111     bra     0x0032cc         	BRA	_00227_DS_
0030aa   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0030ac   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0030ae   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
0030b0   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0030b2   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0030b4   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0030b6   0bfc     andlw   0xfc             	ANDLW	0xfc
0030b8   0fc8     addlw   0xc8             	ADDLW	LOW(_00248_DS_)
0030ba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0030bc   0e30     movlw   0x30             	MOVLW	HIGH(_00248_DS_)
0030be   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0030c0   0e00     movlw   0x00             	MOVLW	UPPER(_00248_DS_)
0030c2   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0030c4   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0030c6   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00248_DS_:
0030c8   ef6e     goto    0x0030dc         	GOTO	_00206_DS_
0030ca   f018
0030cc   efa0     goto    0x003140         	GOTO	_00210_DS_
0030ce   f018
0030d0   efd2     goto    0x0031a4         	GOTO	_00214_DS_
0030d2   f018
0030d4   ef04     goto    0x003208         	GOTO	_00218_DS_
0030d6   f019
0030d8   ef36     goto    0x00326c         	GOTO	_00222_DS_
0030da   f019
                                           _00206_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATA=LATA | mask[pin];
0030dc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0030de   e015     bz      0x00310a         	BZ	_00208_DS_
0030e0   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0030e2   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0030e4   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0030e6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0030e8   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0030ea   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0030ec   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0030ee   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0030f0   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0030f2   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0030f4   fff6
0030f6   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0030f8   fff7
0030fa   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0030fc   fff8
0030fe   0009     tblrd*+                  	TBLRD*+	
003100   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003102   f002
003104   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003106   1289     iorwf   0x89, 0x1, 0x0   	IORWF	_LATA, F
003108   d0e1     bra     0x0032cc         	BRA	_00227_DS_
                                           _00208_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATA=LATA & (255-mask[pin]);
00310a   0eea     movlw   0xea             	MOVLW	LOW(_mask)
00310c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00310e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003110   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003112   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003114   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003116   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003118   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00311a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00311c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00311e   fff6
003120   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003122   fff7
003124   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003126   fff8
003128   0009     tblrd*+                  	TBLRD*+	
00312a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00312c   f002
00312e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003130   08ff     sublw   0xff             	SUBLW	0xff
003132   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003134   5089     movf    0x89, 0x0, 0x0   	MOVF	_LATA, W
003136   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003138   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00313a   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
00313c   6e89     movwf   0x89, 0x0        	MOVWF	_LATA
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
00313e   d0c6     bra     0x0032cc         	BRA	_00227_DS_
                                           _00210_DS_:
                                           ;	.line	61; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATB=LATB | mask[pin]; 
003140   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003142   e015     bz      0x00316e         	BZ	_00212_DS_
003144   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003146   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003148   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00314a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00314c   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
00314e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003150   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003152   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003154   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003156   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003158   fff6
00315a   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00315c   fff7
00315e   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003160   fff8
003162   0009     tblrd*+                  	TBLRD*+	
003164   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003166   f002
003168   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00316a   128a     iorwf   0x8a, 0x1, 0x0   	IORWF	_LATB, F
00316c   d0af     bra     0x0032cc         	BRA	_00227_DS_
                                           _00212_DS_:
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATB=LATB & (255-mask[pin]);
00316e   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003170   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003172   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003174   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003176   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003178   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00317a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00317c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00317e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003180   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003182   fff6
003184   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003186   fff7
003188   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00318a   fff8
00318c   0009     tblrd*+                  	TBLRD*+	
00318e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003190   f002
003192   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003194   08ff     sublw   0xff             	SUBLW	0xff
003196   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003198   508a     movf    0x8a, 0x0, 0x0   	MOVF	_LATB, W
00319a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00319c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00319e   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
0031a0   6e8a     movwf   0x8a, 0x0        	MOVWF	_LATB
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
0031a2   d094     bra     0x0032cc         	BRA	_00227_DS_
                                           _00214_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATC=LATC | mask[pin];
0031a4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0031a6   e015     bz      0x0031d2         	BZ	_00216_DS_
0031a8   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0031aa   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0031ac   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0031ae   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0031b0   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0031b2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0031b4   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0031b6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0031b8   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0031ba   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0031bc   fff6
0031be   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0031c0   fff7
0031c2   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0031c4   fff8
0031c6   0009     tblrd*+                  	TBLRD*+	
0031c8   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0031ca   f002
0031cc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0031ce   128b     iorwf   0x8b, 0x1, 0x0   	IORWF	_LATC, F
0031d0   d07d     bra     0x0032cc         	BRA	_00227_DS_
                                           _00216_DS_:
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATC=LATC & (255-mask[pin]);
0031d2   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0031d4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0031d6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0031d8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0031da   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0031dc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0031de   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0031e0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0031e2   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0031e4   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0031e6   fff6
0031e8   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0031ea   fff7
0031ec   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0031ee   fff8
0031f0   0009     tblrd*+                  	TBLRD*+	
0031f2   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0031f4   f002
0031f6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0031f8   08ff     sublw   0xff             	SUBLW	0xff
0031fa   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0031fc   508b     movf    0x8b, 0x0, 0x0   	MOVF	_LATC, W
0031fe   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003200   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003202   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
003204   6e8b     movwf   0x8b, 0x0        	MOVWF	_LATC
                                           ;	.line	67; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
003206   d062     bra     0x0032cc         	BRA	_00227_DS_
                                           _00218_DS_:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATD=LATD | mask[pin]; 
003208   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00320a   e015     bz      0x003236         	BZ	_00220_DS_
00320c   0eea     movlw   0xea             	MOVLW	LOW(_mask)
00320e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003210   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003212   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003214   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003216   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003218   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00321a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00321c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00321e   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003220   fff6
003222   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003224   fff7
003226   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003228   fff8
00322a   0009     tblrd*+                  	TBLRD*+	
00322c   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00322e   f002
003230   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003232   128c     iorwf   0x8c, 0x1, 0x0   	IORWF	_LATD, F
003234   d04b     bra     0x0032cc         	BRA	_00227_DS_
                                           _00220_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATD=LATD & (255-mask[pin]);
003236   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003238   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00323a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00323c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00323e   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003240   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003242   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003244   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003246   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003248   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00324a   fff6
00324c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00324e   fff7
003250   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003252   fff8
003254   0009     tblrd*+                  	TBLRD*+	
003256   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003258   f002
00325a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00325c   08ff     sublw   0xff             	SUBLW	0xff
00325e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003260   508c     movf    0x8c, 0x0, 0x0   	MOVF	_LATD, W
003262   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003264   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003266   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
003268   6e8c     movwf   0x8c, 0x0        	MOVWF	_LATD
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
00326a   d030     bra     0x0032cc         	BRA	_00227_DS_
                                           _00222_DS_:
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATE=LATE | mask[pin]; 
00326c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00326e   e015     bz      0x00329a         	BZ	_00224_DS_
003270   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003272   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003274   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003276   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003278   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
00327a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00327c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00327e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003280   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003282   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003284   fff6
003286   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003288   fff7
00328a   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00328c   fff8
00328e   0009     tblrd*+                  	TBLRD*+	
003290   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003292   f001
003294   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003296   128d     iorwf   0x8d, 0x1, 0x0   	IORWF	_LATE, F
003298   d019     bra     0x0032cc         	BRA	_00227_DS_
                                           _00224_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATE=LATE & (255-mask[pin]);
00329a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00329c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00329e   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0032a0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0032a2   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0032a4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0032a6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0032a8   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0032aa   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0032ac   fff6
0032ae   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0032b0   fff7
0032b2   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0032b4   fff8
0032b6   0009     tblrd*+                  	TBLRD*+	
0032b8   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0032ba   f000
0032bc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0032be   08ff     sublw   0xff             	SUBLW	0xff
0032c0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0032c2   508d     movf    0x8d, 0x0, 0x0   	MOVF	_LATE, W
0032c4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0032c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0032c8   1401     andwf   0x01, 0x0, 0x0   	ANDWF	r0x01, W
0032ca   6e8d     movwf   0x8d, 0x0        	MOVWF	_LATE
                                           _00227_DS_:
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	}
0032cc   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0032ce   f004
0032d0   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0032d2   f003
0032d4   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0032d6   f002
0032d8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0032da   f001
0032dc   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0032de   f000
0032e0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0032e2   ffd9
0032e4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__pinmode	code
                                           _pinmode:
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	void pinmode(u8 pin, u8 state)
0032e6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0032e8   ffe5
0032ea   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0032ec   ffd9
0032ee   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0032f0   ffe5
0032f2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0032f4   ffe5
0032f6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0032f8   ffe5
0032fa   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0032fc   ffe5
0032fe   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003300   ffe5
003302   0e02     movlw   0x02             	MOVLW	0x02
003304   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003306   f000
003308   0e03     movlw   0x03             	MOVLW	0x03
00330a   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00330c   f001
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	switch (port[pin])
00330e   0e08     movlw   0x08             	MOVLW	LOW(_port)
003310   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003312   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003314   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003316   0e59     movlw   0x59             	MOVLW	HIGH(_port)
003318   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00331a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00331c   0e00     movlw   0x00             	MOVLW	UPPER(_port)
00331e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003320   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003322   fff6
003324   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003326   fff7
003328   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00332a   fff8
00332c   0009     tblrd*+                  	TBLRD*+	
00332e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003330   f002
003332   0e05     movlw   0x05             	MOVLW	0x05
003334   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
003336   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
003338   d111     bra     0x00355c         	BRA	_00180_DS_
00333a   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
00333c   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
00333e   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
003340   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003342   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
003344   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003346   0bfc     andlw   0xfc             	ANDLW	0xfc
003348   0f58     addlw   0x58             	ADDLW	LOW(_00201_DS_)
00334a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00334c   0e33     movlw   0x33             	MOVLW	HIGH(_00201_DS_)
00334e   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
003350   0e00     movlw   0x00             	MOVLW	UPPER(_00201_DS_)
003352   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
003354   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
003356   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00201_DS_:
003358   efb6     goto    0x00336c         	GOTO	_00159_DS_
00335a   f019
00335c   efe8     goto    0x0033d0         	GOTO	_00163_DS_
00335e   f019
003360   ef1a     goto    0x003434         	GOTO	_00167_DS_
003362   f01a
003364   ef4c     goto    0x003498         	GOTO	_00171_DS_
003366   f01a
003368   ef7e     goto    0x0034fc         	GOTO	_00175_DS_
00336a   f01a
                                           _00159_DS_:
                                           ;	.line	49; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISA=TRISA | mask[pin];
00336c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00336e   e015     bz      0x00339a         	BZ	_00161_DS_
003370   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003372   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003374   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003376   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003378   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
00337a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00337c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00337e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003380   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003382   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003384   fff6
003386   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003388   fff7
00338a   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00338c   fff8
00338e   0009     tblrd*+                  	TBLRD*+	
003390   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003392   f002
003394   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003396   1292     iorwf   0x92, 0x1, 0x0   	IORWF	_TRISA, F
003398   d0e1     bra     0x00355c         	BRA	_00180_DS_
                                           _00161_DS_:
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISA=TRISA & (255-mask[pin]);
00339a   0eea     movlw   0xea             	MOVLW	LOW(_mask)
00339c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00339e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0033a0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0033a2   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0033a4   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0033a6   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0033a8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0033aa   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0033ac   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0033ae   fff6
0033b0   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0033b2   fff7
0033b4   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0033b6   fff8
0033b8   0009     tblrd*+                  	TBLRD*+	
0033ba   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0033bc   f002
0033be   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0033c0   08ff     sublw   0xff             	SUBLW	0xff
0033c2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0033c4   5092     movf    0x92, 0x0, 0x0   	MOVF	_TRISA, W
0033c6   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0033c8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0033ca   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
0033cc   6e92     movwf   0x92, 0x0        	MOVWF	_TRISA
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
0033ce   d0c6     bra     0x00355c         	BRA	_00180_DS_
                                           _00163_DS_:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISB=TRISB | mask[pin];
0033d0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0033d2   e015     bz      0x0033fe         	BZ	_00165_DS_
0033d4   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0033d6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0033d8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0033da   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0033dc   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0033de   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0033e0   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0033e2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0033e4   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0033e6   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0033e8   fff6
0033ea   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0033ec   fff7
0033ee   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0033f0   fff8
0033f2   0009     tblrd*+                  	TBLRD*+	
0033f4   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0033f6   f002
0033f8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0033fa   1293     iorwf   0x93, 0x1, 0x0   	IORWF	_TRISB, F
0033fc   d0af     bra     0x00355c         	BRA	_00180_DS_
                                           _00165_DS_:
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISB=TRISB & (255-mask[pin]);
0033fe   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003400   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003402   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003404   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003406   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003408   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00340a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00340c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00340e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003410   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003412   fff6
003414   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003416   fff7
003418   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00341a   fff8
00341c   0009     tblrd*+                  	TBLRD*+	
00341e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003420   f002
003422   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003424   08ff     sublw   0xff             	SUBLW	0xff
003426   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003428   5093     movf    0x93, 0x0, 0x0   	MOVF	_TRISB, W
00342a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00342c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00342e   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
003430   6e93     movwf   0x93, 0x0        	MOVWF	_TRISB
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
003432   d094     bra     0x00355c         	BRA	_00180_DS_
                                           _00167_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISC=TRISC | mask[pin];
003434   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003436   e015     bz      0x003462         	BZ	_00169_DS_
003438   0eea     movlw   0xea             	MOVLW	LOW(_mask)
00343a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00343c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00343e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003440   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003442   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003444   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003446   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003448   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00344a   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00344c   fff6
00344e   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003450   fff7
003452   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003454   fff8
003456   0009     tblrd*+                  	TBLRD*+	
003458   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00345a   f002
00345c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00345e   1294     iorwf   0x94, 0x1, 0x0   	IORWF	_TRISC, F
003460   d07d     bra     0x00355c         	BRA	_00180_DS_
                                           _00169_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISC=TRISC & (255-mask[pin]);
003462   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003464   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003466   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003468   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00346a   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
00346c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00346e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003470   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003472   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003474   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003476   fff6
003478   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00347a   fff7
00347c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00347e   fff8
003480   0009     tblrd*+                  	TBLRD*+	
003482   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003484   f002
003486   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003488   08ff     sublw   0xff             	SUBLW	0xff
00348a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00348c   5094     movf    0x94, 0x0, 0x0   	MOVF	_TRISC, W
00348e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003490   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003492   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
003494   6e94     movwf   0x94, 0x0        	MOVWF	_TRISC
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
003496   d062     bra     0x00355c         	BRA	_00180_DS_
                                           _00171_DS_:
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISD=TRISD | mask[pin];
003498   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00349a   e015     bz      0x0034c6         	BZ	_00173_DS_
00349c   0eea     movlw   0xea             	MOVLW	LOW(_mask)
00349e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0034a0   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0034a2   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0034a4   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0034a6   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0034a8   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0034aa   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0034ac   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0034ae   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0034b0   fff6
0034b2   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0034b4   fff7
0034b6   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0034b8   fff8
0034ba   0009     tblrd*+                  	TBLRD*+	
0034bc   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0034be   f002
0034c0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0034c2   1295     iorwf   0x95, 0x1, 0x0   	IORWF	_TRISD, F
0034c4   d04b     bra     0x00355c         	BRA	_00180_DS_
                                           _00173_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISD=TRISD & (255-mask[pin]);
0034c6   0eea     movlw   0xea             	MOVLW	LOW(_mask)
0034c8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0034ca   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0034cc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0034ce   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
0034d0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0034d2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0034d4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0034d6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0034d8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0034da   fff6
0034dc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0034de   fff7
0034e0   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0034e2   fff8
0034e4   0009     tblrd*+                  	TBLRD*+	
0034e6   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0034e8   f002
0034ea   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0034ec   08ff     sublw   0xff             	SUBLW	0xff
0034ee   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0034f0   5095     movf    0x95, 0x0, 0x0   	MOVF	_TRISD, W
0034f2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0034f4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0034f6   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
0034f8   6e95     movwf   0x95, 0x0        	MOVWF	_TRISD
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
0034fa   d030     bra     0x00355c         	BRA	_00180_DS_
                                           _00175_DS_:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISE=TRISE | mask[pin];
0034fc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0034fe   e015     bz      0x00352a         	BZ	_00177_DS_
003500   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003502   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003504   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003506   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003508   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
00350a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00350c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00350e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003510   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003512   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003514   fff6
003516   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003518   fff7
00351a   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00351c   fff8
00351e   0009     tblrd*+                  	TBLRD*+	
003520   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003522   f001
003524   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003526   1296     iorwf   0x96, 0x1, 0x0   	IORWF	_TRISE, F
003528   d019     bra     0x00355c         	BRA	_00180_DS_
                                           _00177_DS_:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISE=TRISE & (255-mask[pin]);
00352a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00352c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00352e   0eea     movlw   0xea             	MOVLW	LOW(_mask)
003530   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003532   0e58     movlw   0x58             	MOVLW	HIGH(_mask)
003534   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003536   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003538   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00353a   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00353c   fff6
00353e   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003540   fff7
003542   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
003544   fff8
003546   0009     tblrd*+                  	TBLRD*+	
003548   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
00354a   f000
00354c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00354e   08ff     sublw   0xff             	SUBLW	0xff
003550   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003552   5096     movf    0x96, 0x0, 0x0   	MOVF	_TRISE, W
003554   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003556   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003558   1401     andwf   0x01, 0x0, 0x0   	ANDWF	r0x01, W
00355a   6e96     movwf   0x96, 0x0        	MOVWF	_TRISE
                                           _00180_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	}
00355c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00355e   f004
003560   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003562   f003
003564   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003566   f002
003568   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00356a   f001
00356c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00356e   f000
003570   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003572   ffd9
003574   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__Delayms	code
                                           _Delayms:
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/delayms.c	void Delayms(u16 milliseconds)
005542   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005544   ffe5
005546   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005548   ffd9
00554a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00554c   ffe5
00554e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005550   ffe5
005552   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005554   ffe5
005556   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005558   ffe5
00555a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00555c   ffe5
00555e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
005560   ffe5
005562   0e02     movlw   0x02             	MOVLW	0x02
005564   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005566   f000
005568   0e03     movlw   0x03             	MOVLW	0x03
00556a   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00556c   f001
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/core/delayms.c	u16 n100tcy = System_getPeripheralFrequency() / 100000;
00556e   ecd6     call    0x003bac, 0x0    	CALL	_System_getCpuFrequency
005570   f01d
005572   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
005574   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
005576   f003
005578   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
00557a   f004
00557c   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
00557e   f005
005580   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
005582   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
005584   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
005586   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
005588   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
00558a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00558c   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
00558e   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
005590   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
005592   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
005594   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005596   0e01     movlw   0x01             	MOVLW	0x01
005598   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00559a   0e86     movlw   0x86             	MOVLW	0x86
00559c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00559e   0ea0     movlw   0xa0             	MOVLW	0xa0
0055a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0055a2   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0055a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0055a6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0055a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0055aa   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0055ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0055ae   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0055b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0055b2   ec9f     call    0x00513e, 0x0    	CALL	__divulong
0055b4   f028
0055b6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0055b8   0e08     movlw   0x08             	MOVLW	0x08
0055ba   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00151_DS_:
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/delayms.c	while (milliseconds--)
0055bc   c000     movff   0x000, 0x004     	MOVFF	r0x00, r0x04
0055be   f004
0055c0   c001     movff   0x001, 0x005     	MOVFF	r0x01, r0x05
0055c2   f005
0055c4   0eff     movlw   0xff             	MOVLW	0xff
0055c6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0055c8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0055ca   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0055cc   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
0055ce   e008     bz      0x0055e0         	BZ	_00154_DS_
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/delayms.c	delay100tcy(n100tcy-3);
0055d0   c002     movff   0x002, 0x004     	MOVFF	r0x02, r0x04
0055d2   f004
0055d4   0efd     movlw   0xfd             	MOVLW	0xfd
0055d6   2604     addwf   0x04, 0x1, 0x0   	ADDWF	r0x04, F
0055d8   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0055da   ec99     call    0x005932, 0x0    	CALL	_delay100tcy
0055dc   f02c
0055de   d7ee     bra     0x0055bc         	BRA	_00151_DS_
                                           _00154_DS_:
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/core/delayms.c	}
0055e0   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0055e2   f005
0055e4   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0055e6   f004
0055e8   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0055ea   f003
0055ec   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0055ee   f002
0055f0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0055f2   f001
0055f4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0055f6   f000
0055f8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0055fa   ffd9
0055fc   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__System_getCpuFrequency	code
                                           _System_getCpuFrequency:
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u32 System_getCpuFrequency() 
003bac   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003bae   ffe5
003bb0   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003bb2   ffe5
003bb4   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003bb6   ffe5
003bb8   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003bba   ffe5
003bbc   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003bbe   ffe5
003bc0   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003bc2   ffe5
                                           ;	.line	242; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 0)
003bc4   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
003bc6   0b03     andlw   0x03             	ANDLW	0x03
003bc8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003bca   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003bcc   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
003bce   d091     bra     0x003cf2         	BRA	_00116_DS_
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV  = ( System_readFlashMemory(__CONFIG1L) & 0b00011000 ) >> 3;
003bd0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003bd2   0e30     movlw   0x30             	MOVLW	0x30
003bd4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003bd6   0e00     movlw   0x00             	MOVLW	0x00
003bd8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003bda   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003bdc   ec0a     call    0x005814, 0x0    	CALL	_System_readFlashMemory
003bde   f02c
003be0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003be2   0e04     movlw   0x04             	MOVLW	0x04
003be4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003be6   0e18     movlw   0x18             	MOVLW	0x18
003be8   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
003bea   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003bec   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003bee   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
003bf0   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
003bf2   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003bf4   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
003bf6   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
003bf8   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003bfa   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
003bfc   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
                                           ;	.line	269; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV_XTAL = cpudiv_xtal[CPUDIV];
003bfe   0ec6     movlw   0xc6             	MOVLW	LOW(_cpudiv_xtal)
003c00   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003c02   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003c04   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003c06   0e58     movlw   0x58             	MOVLW	HIGH(_cpudiv_xtal)
003c08   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003c0a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003c0c   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv_xtal)
003c0e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003c10   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003c12   fff6
003c14   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003c16   fff7
003c18   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003c1a   fff8
003c1c   0009     tblrd*+                  	TBLRD*+	
003c1e   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003c20   f001
                                           ;	.line	270; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc  = System_readFlashMemory(__CONFIG1H) & 0b00001111;
003c22   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003c24   0e30     movlw   0x30             	MOVLW	0x30
003c26   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c28   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003c2a   0e01     movlw   0x01             	MOVLW	0x01
003c2c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c2e   ec0a     call    0x005814, 0x0    	CALL	_System_readFlashMemory
003c30   f02c
003c32   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003c34   0e04     movlw   0x04             	MOVLW	0x04
003c36   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003c38   0e0f     movlw   0x0f             	MOVLW	0x0f
003c3a   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV = cpudiv[CPUDIV];
003c3c   0ec2     movlw   0xc2             	MOVLW	LOW(_cpudiv)
003c3e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003c40   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003c42   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003c44   0e58     movlw   0x58             	MOVLW	HIGH(_cpudiv)
003c46   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003c48   6a05     clrf    0x05, 0x0        	CLRF	r0x05
003c4a   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv)
003c4c   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
003c4e   c003     movff   0x003, 0xff6     	MOVFF	r0x03, TBLPTRL
003c50   fff6
003c52   c004     movff   0x004, 0xff7     	MOVFF	r0x04, TBLPTRH
003c54   fff7
003c56   c005     movff   0x005, 0xff8     	MOVFF	r0x05, TBLPTRU
003c58   fff8
003c5a   0009     tblrd*+                  	TBLRD*+	
003c5c   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003c5e   f000
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc >>=1;
003c60   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003c62   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
                                           ;	.line	293; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if( (fosc==0) || (fosc==2) || (fosc==6) )
003c64   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003c66   e006     bz      0x003c74         	BZ	_00110_DS_
003c68   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003c6a   0a02     xorlw   0x02             	XORLW	0x02
003c6c   e003     bz      0x003c74         	BZ	_00110_DS_
003c6e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003c70   0a06     xorlw   0x06             	XORLW	0x06
003c72   e11f     bnz     0x003cb2         	BNZ	_00111_DS_
                                           _00110_DS_:
                                           ;	.line	295; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return CRYSTAL / CPUDIV_XTAL;
003c74   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003c76   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003c78   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003c7a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003c7c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c7e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003c80   0e7a     movlw   0x7a             	MOVLW	0x7a
003c82   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c84   0e12     movlw   0x12             	MOVLW	0x12
003c86   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c88   0e00     movlw   0x00             	MOVLW	0x00
003c8a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003c8c   ec78     call    0x0042f0, 0x0    	CALL	__divslong
003c8e   f021
003c90   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003c92   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
003c94   f002
003c96   cff4     movff   0xff4, 0x003     	MOVFF	PRODH, r0x03
003c98   f003
003c9a   cfe9     movff   0xfe9, 0x004     	MOVFF	FSR0L, r0x04
003c9c   f004
003c9e   0e08     movlw   0x08             	MOVLW	0x08
003ca0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003ca2   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
003ca4   ffe9
003ca6   c003     movff   0x003, 0xff4     	MOVFF	r0x03, PRODH
003ca8   fff4
003caa   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
003cac   fff3
003cae   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003cb0   d064     bra     0x003d7a         	BRA	_00121_DS_
                                           _00111_DS_:
                                           ;	.line	299; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 96000000UL / CPUDIV;
003cb2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003cb4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003cb6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003cb8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003cba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003cbc   0e05     movlw   0x05             	MOVLW	0x05
003cbe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003cc0   0eb8     movlw   0xb8             	MOVLW	0xb8
003cc2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003cc4   0ed8     movlw   0xd8             	MOVLW	0xd8
003cc6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003cc8   0e00     movlw   0x00             	MOVLW	0x00
003cca   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003ccc   ec9f     call    0x00513e, 0x0    	CALL	__divulong
003cce   f028
003cd0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003cd2   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
003cd4   f001
003cd6   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
003cd8   f002
003cda   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
003cdc   f003
003cde   0e08     movlw   0x08             	MOVLW	0x08
003ce0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003ce2   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
003ce4   ffe9
003ce6   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
003ce8   fff4
003cea   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
003cec   fff3
003cee   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003cf0   d044     bra     0x003d7a         	BRA	_00121_DS_
                                           _00116_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 1)
003cf2   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
003cf4   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003cf6   0a01     xorlw   0x01             	XORLW	0x01
003cf8   e106     bnz     0x003d06         	BNZ	_00118_DS_
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 32768;
003cfa   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
003cfc   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
003cfe   0e80     movlw   0x80             	MOVLW	0x80
003d00   6ef3     movwf   0xf3, 0x0        	MOVWF	PRODL
003d02   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003d04   d03a     bra     0x003d7a         	BRA	_00121_DS_
                                           _00118_DS_:
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS >= 2)
003d06   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
003d08   0b03     andlw   0x03             	ANDLW	0x03
003d0a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003d0c   0e02     movlw   0x02             	MOVLW	0x02
003d0e   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
003d10   e330     bnc     0x003d72         	BNC	_00120_DS_
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ircf[OSCCONbits.IRCF];
003d12   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
003d14   38e8     swapf   0xe8, 0x0, 0x0   	SWAPF	WREG, W
003d16   0b07     andlw   0x07             	ANDLW	0x07
003d18   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003d1a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d1c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003d1e   0e04     movlw   0x04             	MOVLW	0x04
003d20   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003d22   ec9e     call    0x005d3c, 0x0    	CALL	__mulint
003d24   f02e
003d26   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003d28   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
003d2a   f001
003d2c   0e04     movlw   0x04             	MOVLW	0x04
003d2e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003d30   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003d32   0eca     movlw   0xca             	MOVLW	LOW(_ircf)
003d34   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003d36   0e58     movlw   0x58             	MOVLW	HIGH(_ircf)
003d38   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003d3a   0e00     movlw   0x00             	MOVLW	UPPER(_ircf)
003d3c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003d3e   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
003d40   fff6
003d42   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003d44   fff7
003d46   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
003d48   fff8
003d4a   0009     tblrd*+                  	TBLRD*+	
003d4c   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003d4e   f000
003d50   0009     tblrd*+                  	TBLRD*+	
003d52   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003d54   f001
003d56   0009     tblrd*+                  	TBLRD*+	
003d58   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003d5a   f002
003d5c   0009     tblrd*+                  	TBLRD*+	
003d5e   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
003d60   f003
003d62   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
003d64   ffe9
003d66   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
003d68   fff4
003d6a   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
003d6c   fff3
003d6e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003d70   d004     bra     0x003d7a         	BRA	_00121_DS_
                                           _00120_DS_:
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 0;
003d72   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
003d74   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
003d76   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003d78   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00121_DS_:
                                           ;	.line	320; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	}
003d7a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003d7c   f005
003d7e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003d80   f004
003d82   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003d84   f003
003d86   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003d88   f002
003d8a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003d8c   f001
003d8e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003d90   f000
003d92   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_drawrobot__System_readFlashMemory	code
                                           _System_readFlashMemory:
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u16 System_readFlashMemory(u32 address)
005814   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005816   ffe5
005818   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00581a   ffd9
00581c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00581e   ffe5
005820   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005822   ffe5
005824   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005826   ffe5
005828   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00582a   ffe5
00582c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00582e   ffe5
005830   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
005832   ffe5
005834   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
005836   ffe5
005838   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
00583a   ffe5
00583c   0e02     movlw   0x02             	MOVLW	0x02
00583e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005840   f000
005842   0e03     movlw   0x03             	MOVLW	0x03
005844   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005846   f001
005848   0e04     movlw   0x04             	MOVLW	0x04
00584a   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
00584c   f002
00584e   0e05     movlw   0x05             	MOVLW	0x05
005850   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
005852   f003
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRU = address >> 16;
005854   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005856   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
005858   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00585a   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00585c   6a06     clrf    0x06, 0x0        	CLRF	r0x06
00585e   6a07     clrf    0x07, 0x0        	CLRF	r0x07
005860   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
005862   6ef8     movwf   0xf8, 0x0        	MOVWF	_TBLPTRU
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRH = address >> 8;
005864   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005866   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
005868   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00586a   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00586c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00586e   6a05     clrf    0x05, 0x0        	CLRF	r0x05
005870   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
005872   6ef7     movwf   0xf7, 0x0        	MOVWF	_TBLPTRH
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRL = address;
005874   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005876   6ef6     movwf   0xf6, 0x0        	MOVWF	_TBLPTRL
005878   0009     tblrd*+                  	tblrd*+
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	l8 = TABLAT;
00587a   cff5     movff   0xff5, 0x000     	MOVFF	_TABLAT, r0x00
00587c   f000
00587e   0009     tblrd*+                  	tblrd*+
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	h8 = TABLAT;
005880   cff5     movff   0xff5, 0x001     	MOVFF	_TABLAT, r0x01
005882   f001
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ((h8 << 8) + l8);
005884   6a02     clrf    0x02, 0x0        	CLRF	r0x02
005886   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005888   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00588a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00588c   6a05     clrf    0x05, 0x0        	CLRF	r0x05
00588e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005890   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
005892   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
005894   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
005896   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
005898   fff3
00589a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ;	.line	203; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	}
00589c   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
00589e   f007
0058a0   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
0058a2   f006
0058a4   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0058a6   f005
0058a8   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0058aa   f004
0058ac   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0058ae   f003
0058b0   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0058b2   f002
0058b4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0058b6   f001
0058b8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0058ba   f000
0058bc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0058be   ffd9
0058c0   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block for Ival
                                           	code
                                           _cpudiv:
0058c2   0302     mulwf   0x02, 0x1        	DB	0x02, 0x03, 0x04, 0x06
0058c4   0604     decf    0x04, 0x1, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _cpudiv_xtal:
0058c6   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x03, 0x04
0058c8   0403     decf    0x03, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _ircf:
0058ca   7a12     btg     0x12, 0x5, 0x0   	DB	0x12, 0x7a, 0x00, 0x00, 0x48, 0xe8, 0x01, 0x00, 0x90, 0xd0, 0x03, 0x00
0058cc   0000     nop                      
0058ce   e848     dw      0xe848           
0058d0   0001     halt                     
0058d2   d090     bra     0x0059f4         
0058d4   0003     sleep                    
0058d6   a120     btfss   0x20, 0x0, 0x1   	DB	0x20, 0xa1, 0x07, 0x00, 0x40, 0x42, 0x0f, 0x00, 0x80, 0x84, 0x1e, 0x00
0058d8   0007     daw                      
0058da   4240     rrncf   0x40, 0x1, 0x0   
0058dc   000f     tblwt+*                  
0058de   8480     bsf     0x80, 0x2, 0x0   
0058e0   001e     dw      0x001e           
0058e2   0900     iorlw   0x00             	DB	0x00, 0x09, 0x3d, 0x00, 0x00, 0x12, 0x7a, 0x00
0058e4   003d     dw      0x003d           
0058e6   1200     iorwf   0x00, 0x1, 0x0   
0058e8   007a     dw      0x007a           
                                           ; ; Starting pCode block for Ival
                                           _mask:
0058ea   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
0058ec   0804     sublw   0x04             
0058ee   2010     addwfc  0x10, 0x0, 0x0   
0058f0   8040     bsf     0x40, 0x0, 0x0   
0058f2   8040     bsf     0x40, 0x0, 0x0   
0058f4   0201     mulwf   0x01, 0x0        
0058f6   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
0058f8   0402     decf    0x02, 0x0, 0x0   
0058fa   2008     addwfc  0x08, 0x0, 0x0   
0058fc   0201     mulwf   0x01, 0x0        
0058fe   0104     movlb   0x4              
005900   0402     decf    0x02, 0x0, 0x0   
005902   1008     iorwf   0x08, 0x0, 0x0   	DB	0x08, 0x10, 0x20, 0x40, 0x80, 0x10
005904   4020     rrncf   0x20, 0x0, 0x0   
005906   1080     iorwf   0x80, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _port:
005908   0101     movlb   0x1              	DB	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02
00590a   0101     movlb   0x1              
00590c   0101     movlb   0x1              
00590e   0101     movlb   0x1              
005910   0202     mulwf   0x02, 0x0        
005912   0202     mulwf   0x02, 0x0        
005914   0002     dw      0x0002           	DB	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
005916   0000     nop                      
005918   0000     nop                      
00591a   0404     decf    0x04, 0x0, 0x0   
00591c   0304     mulwf   0x04, 0x1        
00591e   0303     mulwf   0x03, 0x1        
005920   0303     mulwf   0x03, 0x1        	DB	0x03, 0x03, 0x03, 0x03, 0x03, 0x00
005922   0303     mulwf   0x03, 0x1        
005924   0003     sleep                    
                                           ; ; Starting pCode block
                                           ___str_0:
005926   6e28     movwf   0x28, 0x0        	DB	0x28, 0x6e, 0x75, 0x6c, 0x6c, 0x29, 0x00
005928   6c75     negf    0x75, 0x0        
00592a   296c     incf    0x6c, 0x0, 0x1   
00592c   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_1:
00592e   0d0a     mullw   0x0a             	DB	0x0a, 0x0d, 0x00
005930   0000     nop                      


                                           ; Statistics:
                                           ; code size:	20138 (0x4eaa) bytes (15.36%)
                                           ;           	10069 (0x2755) words
                                           ; udata size:	  501 (0x01f5) bytes (27.96%)
                                           ; access size:	   32 (0x0020) bytes


                                           	end
