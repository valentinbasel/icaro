gplink-1.5.0 #1285 (Aug 10 2018)
Copyright (c) 1998-2016 gputils project
Listing File Generated: 04/02/19  11:52:38


Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.7.0 #10231 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	radix	dec


                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	___uflags
                                           	global	_loopvar
                                           	global	_timingindex
                                           	global	__cpu_clock_
                                           	global	__entry
                                           	global	__startup
                                           	global	_main
                                           	global	_phase
                                           	global	_needreordering
                                           	global	_timedivision
                                           	global	_mascaratotal
                                           	global	_timevalue
                                           	global	_timings
                                           	global	_activatedservos
                                           	global	_servovalues
                                           	global	_maxminpos
                                           	global	__i
                                           	global	_System_readFlashMemory
                                           	global	_System_getCpuFrequency
                                           	global	_Delayms
                                           	global	_pinmode
                                           	global	_digitalwrite
                                           	global	_digitalread
                                           	global	_toggle
                                           	global	_servos_init
                                           	global	_ServoAttach
                                           	global	_ServoDetach
                                           	global	_ServoWrite
                                           	global	_ServoRead
                                           	global	_ServoMinimumPulse
                                           	global	_ServoMaximumPulse
                                           	global	_servos_interrupt
                                           	global	_analog_init
                                           	global	_analogreference
                                           	global	_analogread
                                           	global	_analogwrite_init
                                           	global	_analogwrite
                                           	global	_IO_init
                                           	global	_IO_digital
                                           	global	_Delayus
                                           	global	_setup
                                           	global	_sensordigital
                                           	global	_loop
                                           	global	_high_priority_isr
                                           	global	_low_priority_isr
                                           	global	_mask
                                           	global	_port

                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_SPPDATAbits
                                           	extern	_SPPCFGbits
                                           	extern	_SPPEPSbits
                                           	extern	_SPPCONbits
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_LATDbits
                                           	extern	_LATEbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_FSR2Hbits
                                           	extern	_BSRbits
                                           	extern	_FSR1Hbits
                                           	extern	_FSR0Hbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_TBLPTRUbits
                                           	extern	_PCLATHbits
                                           	extern	_PCLATUbits
                                           	extern	_STKPTRbits
                                           	extern	_TOSUbits
                                           	extern	_stack_end
                                           	extern	_SPPDATA
                                           	extern	_SPPCFG
                                           	extern	_SPPEPS
                                           	extern	_SPPCON
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_LATD
                                           	extern	_LATE
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	__divslong
                                           	extern	__divulong
                                           	extern	__mulint
                                           	extern	_delay100tcy
                                           	extern	_cinit

                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4


                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           __i	db	0x00, 0x00
                                           ___uflags	db	0x00


                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1

                                           udata_main_0	udata
                                           __cpu_clock_	res	4

                                           udata_main_1	udata
                                           _timingindex	res	1

                                           udata_main_2	udata
                                           _loopvar	res	1

                                           udata_main_3	udata
                                           _servovalues	res	30

                                           udata_main_4	udata
                                           _maxminpos	res	60

                                           udata_main_5	udata
                                           _activatedservos	res	5

                                           udata_main_6	udata
                                           _ServosPulseDown_timingindex_1_30	res	1

                                           udata_main_7	udata
                                           _timings	res	150

                                           udata_main_8	udata
                                           _timevalue	res	30

                                           udata_main_9	udata
                                           _SortServoTimings_t_1_35	res	1

                                           udata_main_10	udata
                                           _SortServoTimings_totalservos_1_35	res	1

                                           udata_main_11	udata
                                           _SortServoTimings_numservos_1_35	res	1

                                           udata_main_12	udata
                                           _SortServoTimings_s_1_35	res	1

                                           udata_main_13	udata
                                           _mascaratotal	res	5

                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------

                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main___entry	code	0X000C00
                                           __entry:
000c00   ef26     goto    0x002c4c         	goto	__startup
000c02   f016
                                           	
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/source/crt0iz.c	}
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_main_ivec_0x1_high_priority_isr	code	0X000C08
                                           ivec_0x1_high_priority_isr:
000c08   ef08     goto    0x003210         	GOTO	_high_priority_isr
000c0a   f019

                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_main_ivec_0x2_low_priority_isr	code	0X000C18
                                           ivec_0x2_low_priority_isr:
000c18   ef43     goto    0x003286         	GOTO	_low_priority_isr
000c1a   f019

                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__main	code
                                           _main:
                                           ;	.line	197; /home/vbasel/.icaro/v4/firmware/source/main.c	if (OSCCONbits.SCS > 0x01)
003538   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
00353a   0b03     andlw   0x03             	ANDLW	0x03
00353c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00353e   0e02     movlw   0x02             	MOVLW	0x02
003540   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
003542   e302     bnc     0x003548         	BNC	_00793_DS_
                                           _00789_DS_:
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/source/main.c	while (!OSCCONbits.IOFS);
003544   a4d3     btfss   0xd3, 0x2, 0x0   	BTFSS	_OSCCONbits, 2
003546   d7fe     bra     0x003544         	BRA	_00789_DS_
                                           _00793_DS_:
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/source/main.c	IO_init();
003548   ecc7     call    0x00358e, 0x0    	CALL	_IO_init
00354a   f01a
                                           ;	.line	244; /home/vbasel/.icaro/v4/firmware/source/main.c	IO_digital();
00354c   ec06     call    0x000c0c, 0x0    	CALL	_IO_digital
00354e   f006
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/source/main.c	analog_init();
003550   ecb2     call    0x003564, 0x0    	CALL	_analog_init
003552   f01a
                                           ;	.line	288; /home/vbasel/.icaro/v4/firmware/source/main.c	servos_init();
003554   ecd4     call    0x002da8, 0x0    	CALL	_servos_init
003556   f016
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/source/main.c	setup();
003558   eccd     call    0x002b9a, 0x0    	CALL	_setup
00355a   f015
                                           _00795_DS_:
                                           ;	.line	327; /home/vbasel/.icaro/v4/firmware/source/main.c	loop();
00355c   ecce     call    0x00339c, 0x0    	CALL	_loop
00355e   f019
003560   d7fd     bra     0x00355c         	BRA	_00795_DS_
                                           ;	.line	330; /home/vbasel/.icaro/v4/firmware/source/main.c	}
003562   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code
                                           _low_priority_isr:
                                           ;	.line	535; /home/vbasel/.icaro/v4/firmware/source/main.c	void low_priority_isr(void) __interrupt 2
003286   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
003288   ffe5
00328a   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00328c   ffe5
00328e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003290   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
003292   ffe5
003294   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
003296   ffe5
003298   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
00329a   ffe5
00329c   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
00329e   ffe5
0032a0   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
0032a2   ffe5
0032a4   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
0032a6   ffe5
0032a8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0032aa   ffe5
0032ac   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0032ae   ffd9
0032b0   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
0032b2   ffe5
0032b4   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
0032b6   ffe5
0032b8   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
0032ba   ffe5
0032bc   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
0032be   ffe5
                                           	
0032c0   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
0032c2   fff5
0032c4   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
0032c6   fff8
0032c8   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
0032ca   fff7
0032cc   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
0032ce   fff6
                                           	
                                           ;	.line	565; /home/vbasel/.icaro/v4/firmware/source/main.c	}
0032d0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0032d2   ffd9
0032d4   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
0032d6   fffb
0032d8   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
0032da   fffa
0032dc   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
0032de   ffea
0032e0   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
0032e2   ffe9
0032e4   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
0032e6   fff4
0032e8   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
0032ea   fff3
0032ec   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0032ee   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
0032f0   ffe0
0032f2   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
0032f4   ffd8
0032f6   0010     retfie  0x0              	RETFIE	

                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code
                                           _high_priority_isr:
                                           ;	.line	438; /home/vbasel/.icaro/v4/firmware/source/main.c	void high_priority_isr(void) __interrupt 1
003210   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
003212   ffe5
003214   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
003216   ffe5
003218   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00321a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00321c   ffe5
00321e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
003220   ffe5
003222   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
003224   ffe5
003226   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
003228   ffe5
00322a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00322c   ffe5
00322e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
003230   ffe5
003232   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003234   ffe5
003236   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003238   ffd9
00323a   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
00323c   ffe5
00323e   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
003240   ffe5
003242   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
003244   ffe5
003246   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
003248   ffe5
                                           	
                                           ;	.line	475; /home/vbasel/.icaro/v4/firmware/source/main.c	servos_interrupt();
00324a   ec38     call    0x003470, 0x0    	CALL	_servos_interrupt
00324c   f01a
00324e   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
003250   fff5
003252   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
003254   fff8
003256   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
003258   fff7
00325a   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
00325c   fff6
                                           	
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/source/main.c	}
00325e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003260   ffd9
003262   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
003264   fffb
003266   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
003268   fffa
00326a   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00326c   ffea
00326e   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
003270   ffe9
003272   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
003274   fff4
003276   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
003278   fff3
00327a   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
00327c   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
00327e   ffe0
003280   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
003282   ffd8
003284   0010     retfie  0x0              	RETFIE	

                                           ; ; Starting pCode block
                                           S_main___startup	code
                                           __startup:
                                           	;	Initialize the stack pointer
002c4c   ee14     lfsr    0x1, 0x4ff       	lfsr	1, _stack_end
002c4e   f0ff
002c50   ee24     lfsr    0x2, 0x4ff       	lfsr	2, _stack_end
002c52   f0ff
                                           	;	1st silicon does not do this on POR
002c54   6af8     clrf    0xf8, 0x0        	clrf	_TBLPTRU, 0
                                           	;	Initialize the flash memory access configuration.
                                           	;	This is harmless for non-flash devices, so we do it on all parts.
002c56   8ea6     bsf     0xa6, 0x7, 0x0   	bsf	0xa6, 7, 0 ; EECON1.EEPGD = 1, TBLPTR accesses program memory
002c58   9ca6     bcf     0xa6, 0x6, 0x0   	bcf	0xa6, 6, 0 ; EECON1.CFGS = 0, TBLPTR accesses program memory
                                           	;	Load FSR0 with top of RAM.
002c5a   0ebf     movlw   0xbf             	movlw	0xbf
002c5c   6ee9     movwf   0xe9, 0x0        	movwf	_FSR0L, 0
002c5e   0e0e     movlw   0x0e             	movlw	0x0e
002c60   6eea     movwf   0xea, 0x0        	movwf	_FSR0H, 0
                                           	;	Place 0xff at address 0x00 as a sentinel.
002c62   6800     setf    0x00, 0x0        	setf	0x00, 0
                                           clear_loop:
002c64   6aed     clrf    0xed, 0x0        	clrf	_POSTDEC0, 0
002c66   5000     movf    0x00, 0x0, 0x0   	movf	0x00, w, 0
002c68   e1fd     bnz     0x002c64         	bnz	clear_loop
                                           	;	TBLPTR = &cinit
002c6a   0ece     movlw   0xce             	movlw	low(_cinit)
002c6c   6ef6     movwf   0xf6, 0x0        	movwf	_TBLPTRL, 0
002c6e   0e35     movlw   0x35             	movlw	high(_cinit)
002c70   6ef7     movwf   0xf7, 0x0        	movwf	_TBLPTRH, 0
002c72   0e00     movlw   0x00             	movlw	upper(_cinit)
002c74   6ef8     movwf   0xf8, 0x0        	movwf	_TBLPTRU, 0
                                           	;	0x05 = cinit.num_init
002c76   0009     tblrd*+                  	tblrd*+
002c78   cff5     movff   0xff5, 0x005     	movff	_TABLAT, 0x05
002c7a   f005
002c7c   0009     tblrd*+                  	tblrd*+
002c7e   cff5     movff   0xff5, 0x006     	movff	_TABLAT, (0x05 + 1)
002c80   f006
                                           	;	while (0x05)
002c82   d034     bra     0x002cec         	bra	entry_loop_dec
                                           entry_loop:
                                           	;	Count down so we only have to look up the data in _cinit once.
                                           	;	At this point we know that TBLPTR points to the top of the current
                                           	;	entry in _cinit, so we can just start reading the from, to, and
                                           	;	size values.
                                           	;	Read the source address low.
                                           	;	0x00 = 0x07 ->from;
002c84   0009     tblrd*+                  	tblrd*+
002c86   cff5     movff   0xff5, 0x000     	movff	_TABLAT, 0x00
002c88   f000
                                           	;	source address high
002c8a   0009     tblrd*+                  	tblrd*+
002c8c   cff5     movff   0xff5, 0x001     	movff	_TABLAT, (0x00 + 1)
002c8e   f001
                                           	;	source address upper
002c90   0009     tblrd*+                  	tblrd*+
002c92   cff5     movff   0xff5, 0x002     	movff	_TABLAT, (0x00 + 2)
002c94   f002
                                           	;	Skip a byte since it is stored as a 32bit int.
002c96   0009     tblrd*+                  	tblrd*+
                                           	;	Read the destination address directly into FSR0
                                           	;	destination address low.
                                           	;	FSR0 = (unsigned short)0x07 ->to;
002c98   0009     tblrd*+                  	tblrd*+
002c9a   cff5     movff   0xff5, 0xfe9     	movff	_TABLAT, _FSR0L
002c9c   ffe9
                                           	;	destination address high
002c9e   0009     tblrd*+                  	tblrd*+
002ca0   cff5     movff   0xff5, 0xfea     	movff	_TABLAT, _FSR0H
002ca2   ffea
                                           	;	Skip two bytes since it is stored as a 32bit int.
002ca4   0009     tblrd*+                  	tblrd*+
002ca6   0009     tblrd*+                  	tblrd*+
                                           	;	Read the size of data to transfer to destination address.
                                           	;	0x03 = (unsigned short)0x07 ->size;
002ca8   0009     tblrd*+                  	tblrd*+
002caa   cff5     movff   0xff5, 0x003     	movff	_TABLAT, 0x03
002cac   f003
002cae   0009     tblrd*+                  	tblrd*+
002cb0   cff5     movff   0xff5, 0x004     	movff	_TABLAT, (0x03 + 1)
002cb2   f004
                                           	;	Skip two bytes since it is stored as a 32bit int.
002cb4   0009     tblrd*+                  	tblrd*+
002cb6   0009     tblrd*+                  	tblrd*+
                                           	;	0x00 = 0x07 ->from;
                                           	;	FSR0 = (unsigned short)0x07 ->to;
                                           	;	0x03 = (unsigned short)0x07 ->size;
                                           	;	The table pointer now points to the next entry. Save it
                                           	;	off since we will be using the table pointer to do the copying
                                           	;	for the entry.
                                           	;	0x07 = TBLPTR
002cb8   cff6     movff   0xff6, 0x007     	movff	_TBLPTRL, 0x07
002cba   f007
002cbc   cff7     movff   0xff7, 0x008     	movff	_TBLPTRH, (0x07 + 1)
002cbe   f008
002cc0   cff8     movff   0xff8, 0x009     	movff	_TBLPTRU, (0x07 + 2)
002cc2   f009
                                           	;	Now assign the source address to the table pointer.
                                           	;	TBLPTR = 0x00
002cc4   c000     movff   0x000, 0xff6     	movff	0x00, _TBLPTRL
002cc6   fff6
002cc8   c001     movff   0x001, 0xff7     	movff	(0x00 + 1), _TBLPTRH
002cca   fff7
002ccc   c002     movff   0x002, 0xff8     	movff	(0x00 + 2), _TBLPTRU
002cce   fff8
002cd0   d003     bra     0x002cd8         	bra	copy_loop_dec
                                           copy_loop:
002cd2   0009     tblrd*+                  	tblrd*+
002cd4   cff5     movff   0xff5, 0xfee     	movff	_TABLAT, _POSTINC0
002cd6   ffee
                                           copy_loop_dec:
                                           	;	while (--0x03);
                                           	;	Decrement and test the byte counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
002cd8   0603     decf    0x03, 0x1, 0x0   	decf	0x03, f, 0
002cda   e2fb     bc      0x002cd2         	bc	copy_loop
002cdc   0604     decf    0x04, 0x1, 0x0   	decf	(0x03 + 1), f, 0
002cde   e2f9     bc      0x002cd2         	bc	copy_loop
                                           	;	Restore the table pointer for the next entry.
                                           	;	TBLPTR = 0x07
002ce0   c007     movff   0x007, 0xff6     	movff	0x07, _TBLPTRL
002ce2   fff6
002ce4   c008     movff   0x008, 0xff7     	movff	(0x07 + 1), _TBLPTRH
002ce6   fff7
002ce8   c009     movff   0x009, 0xff8     	movff	(0x07 + 2), _TBLPTRU
002cea   fff8
                                           entry_loop_dec:
                                           	;	while (--0x05);
                                           	;	Decrement and test the entry counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
002cec   0605     decf    0x05, 0x1, 0x0   	decf	0x05, f, 0
002cee   e2ca     bc      0x002c84         	bc	entry_loop
002cf0   0606     decf    0x06, 0x1, 0x0   	decf	(0x05 + 1), f, 0
002cf2   e2c8     bc      0x002c84         	bc	entry_loop
                                           	
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/source/crt0iz.c	main ();
002cf4   ec9c     call    0x003538, 0x0    	CALL	_main
002cf6   f01a
                                           lockup:
                                           	;	Returning from main will lock up.
002cf8   d7ff     bra     0x002cf8         	bra	lockup
                                           	
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/source/crt0iz.c	}
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/source/user.c	void loop()
00339c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00339e   ffe5
0033a0   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0033a2   ffe5
0033a4   0105     movlb   0x5              	BANKSEL	__i
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/source/user.c	for(_i=0;_i<255;_i++){
0033a6   6bf3     clrf    0xf3, 0x1        	CLRF	__i, B
                                           ; removed redundant BANKSEL
0033a8   6bf4     clrf    0xf4, 0x1        	CLRF	(__i + 1), B
0033aa   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0033ac   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00766_DS_:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/source/user.c	PORTB=a;
0033ae   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0033b0   6e81     movwf   0x81, 0x0        	MOVWF	_PORTB
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/source/user.c	Delayms(100);
0033b2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0033b4   0e64     movlw   0x64             	MOVLW	0x64
0033b6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0033b8   ec6f     call    0x002ade, 0x0    	CALL	_Delayms
0033ba   f015
0033bc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0033be   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/source/user.c	a++;
0033c0   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0033c2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0033c4   0105     movlb   0x5              	BANKSEL	__i
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/source/user.c	for(_i=0;_i<255;_i++){
0033c6   3ff3     incfsz  0xf3, 0x1, 0x1   	INCFSZ	__i, F, B
0033c8   d001     bra     0x0033cc         	BRA	_10815_DS_
                                           ; removed redundant BANKSEL
0033ca   2bf4     incf    0xf4, 0x1, 0x1   	INCF	(__i + 1), F, B
                                           _10815_DS_:
0033cc   0105     movlb   0x5              	BANKSEL	(__i + 1)
0033ce   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(__i + 1), W, B
0033d0   0f80     addlw   0x80             	ADDLW	0x80
0033d2   0f80     addlw   0x80             	ADDLW	0x80
0033d4   e102     bnz     0x0033da         	BNZ	_00774_DS_
0033d6   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
0033d8   5df3     subwf   0xf3, 0x0, 0x1   	SUBWF	__i, W, B
                                           _00774_DS_:
0033da   e3e9     bnc     0x0033ae         	BNC	_00766_DS_
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/source/user.c	}
0033dc   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0033de   f001
0033e0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0033e2   f000
0033e4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__sensordigital	code
                                           _sensordigital:
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	int sensordigital(int valor)
00342c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00342e   ffe5
003430   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003432   ffd9
003434   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003436   ffe5
003438   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00343a   ffe5
00343c   0e02     movlw   0x02             	MOVLW	0x02
00343e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003440   f000
003442   0e03     movlw   0x03             	MOVLW	0x03
003444   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
003446   f001
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	temp=digitalread(valor);
003448   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00344a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00344c   ecb9     call    0x002372, 0x0    	CALL	_digitalread
00344e   f011
003450   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003452   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	if (temp==0)
003454   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003456   e103     bnz     0x00345e         	BNZ	_00758_DS_
                                           ;	.line	118; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	return 1;
003458   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
00345a   0e01     movlw   0x01             	MOVLW	0x01
00345c   d002     bra     0x003462         	BRA	_00760_DS_
                                           _00758_DS_:
                                           ;	.line	122; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	return 0;
00345e   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003460   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00760_DS_:
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	}
003462   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003464   f001
003466   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003468   f000
00346a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00346c   ffd9
00346e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	TRISB=0; //defino PORTB como salida
002b9a   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	PORTB=0; 
002b9c   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	PORTD=0;
002b9e   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	83; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG1,INPUT);
002ba0   0e01     movlw   0x01             	MOVLW	0x01
002ba2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ba4   0e15     movlw   0x15             	MOVLW	0x15
002ba6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002ba8   ec7a     call    0x001cf4, 0x0    	CALL	_pinmode
002baa   f00e
002bac   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
002bae   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	84; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG2,INPUT);
002bb0   0e01     movlw   0x01             	MOVLW	0x01
002bb2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bb4   0e16     movlw   0x16             	MOVLW	0x16
002bb6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bb8   ec7a     call    0x001cf4, 0x0    	CALL	_pinmode
002bba   f00e
002bbc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
002bbe   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	86; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG3,TRIG);
002bc0   0e01     movlw   0x01             	MOVLW	0x01
002bc2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bc4   0e17     movlw   0x17             	MOVLW	0x17
002bc6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bc8   ec7a     call    0x001cf4, 0x0    	CALL	_pinmode
002bca   f00e
002bcc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
002bce   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	87; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_DIG4,ECHO);
002bd0   0e01     movlw   0x01             	MOVLW	0x01
002bd2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bd4   0e18     movlw   0x18             	MOVLW	0x18
002bd6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bd8   ec7a     call    0x001cf4, 0x0    	CALL	_pinmode
002bda   f00e
002bdc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
002bde   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	88; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P1,OUTPUT);
002be0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002be2   0e19     movlw   0x19             	MOVLW	0x19
002be4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002be6   ec7a     call    0x001cf4, 0x0    	CALL	_pinmode
002be8   f00e
002bea   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
002bec   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P2,OUTPUT);
002bee   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002bf0   0e1a     movlw   0x1a             	MOVLW	0x1a
002bf2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002bf4   ec7a     call    0x001cf4, 0x0    	CALL	_pinmode
002bf6   f00e
002bf8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
002bfa   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	90; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P3,OUTPUT);
002bfc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002bfe   0e1b     movlw   0x1b             	MOVLW	0x1b
002c00   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c02   ec7a     call    0x001cf4, 0x0    	CALL	_pinmode
002c04   f00e
002c06   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
002c08   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	pinmode(ICR_l293_P4,OUTPUT);
002c0a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002c0c   0e1c     movlw   0x1c             	MOVLW	0x1c
002c0e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c10   ec7a     call    0x001cf4, 0x0    	CALL	_pinmode
002c12   f00e
002c14   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
002c16   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV1);
002c18   0e0a     movlw   0x0a             	MOVLW	0x0a
002c1a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c1c   ecc2     call    0x001f84, 0x0    	CALL	_ServoAttach
002c1e   f00f
002c20   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV2);
002c22   0e0b     movlw   0x0b             	MOVLW	0x0b
002c24   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c26   ecc2     call    0x001f84, 0x0    	CALL	_ServoAttach
002c28   f00f
002c2a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV3);
002c2c   0e0c     movlw   0x0c             	MOVLW	0x0c
002c2e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c30   ecc2     call    0x001f84, 0x0    	CALL	_ServoAttach
002c32   f00f
002c34   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV4);
002c36   0e09     movlw   0x09             	MOVLW	0x09
002c38   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c3a   ecc2     call    0x001f84, 0x0    	CALL	_ServoAttach
002c3c   f00f
002c3e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	96; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	ServoAttach(ICR_SRV5);
002c40   0e08     movlw   0x08             	MOVLW	0x08
002c42   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002c44   ecc2     call    0x001f84, 0x0    	CALL	_ServoAttach
002c46   f00f
002c48   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/icaro_lib/definiciones_icr.c	}
002c4a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/delayus.c	void Delayus(unsigned int microseconds)
00334c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00334e   ffe5
003350   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003352   ffd9
003354   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003356   ffe5
003358   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00335a   ffe5
00335c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00335e   ffe5
003360   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003362   ffe5
003364   0e02     movlw   0x02             	MOVLW	0x02
003366   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003368   f000
00336a   0e03     movlw   0x03             	MOVLW	0x03
00336c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00336e   f001
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/delayus.c	for (i=0; i<microseconds; i++)
003370   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003372   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _00736_DS_:
003374   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003376   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
003378   e102     bnz     0x00337e         	BNZ	_00747_DS_
00337a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00337c   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _00747_DS_:
00337e   e203     bc      0x003386         	BC	_00738_DS_
003380   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
003382   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
003384   d7f7     bra     0x003374         	BRA	_00736_DS_
                                           _00738_DS_:
                                           ;	.line	75; /home/vbasel/.icaro/v4/firmware/core/delayus.c	}
003386   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003388   f003
00338a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00338c   f002
00338e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003390   f001
003392   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003394   f000
003396   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003398   ffd9
00339a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__IO_digital	code
                                           _IO_digital:
                                           ;	.line	123; /home/vbasel/.icaro/v4/firmware/core/io.c	ADCON1 = 0x0F;				// AN0 to AN12 Digital I/O
000c0c   0e0f     movlw   0x0f             	MOVLW	0x0f
000c0e   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/core/io.c	CMCON = 0x07;               // Comparators as Digital I/O
000c10   0e07     movlw   0x07             	MOVLW	0x07
000c12   6eb4     movwf   0xb4, 0x0        	MOVWF	_CMCON
                                           ;	.line	155; /home/vbasel/.icaro/v4/firmware/core/io.c	}
000c14   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__IO_init	code
                                           _IO_init:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/io.c	LATA  = 0x00;
00358e   6a89     clrf    0x89, 0x0        	CLRF	_LATA
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/io.c	LATB  = 0x00;
003590   6a8a     clrf    0x8a, 0x0        	CLRF	_LATB
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/io.c	LATC  = 0x00;
003592   6a8b     clrf    0x8b, 0x0        	CLRF	_LATC
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/core/io.c	LATD  = 0x00; 
003594   6a8c     clrf    0x8c, 0x0        	CLRF	_LATD
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/io.c	LATE  = 0x00; 
003596   6a8d     clrf    0x8d, 0x0        	CLRF	_LATE
                                           ;	.line	83; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISA = 0x00;
003598   6a92     clrf    0x92, 0x0        	CLRF	_TRISA
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISB = 0x00;
00359a   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC0 = 0x00;
00359c   9094     bcf     0x94, 0x0, 0x0   	BCF	_TRISCbits, 0
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC1 = 0x00;
00359e   9294     bcf     0x94, 0x1, 0x0   	BCF	_TRISCbits, 1
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC2 = 0x00;
0035a0   9494     bcf     0x94, 0x2, 0x0   	BCF	_TRISCbits, 2
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC6 = 0x00;
0035a2   9c94     bcf     0x94, 0x6, 0x0   	BCF	_TRISCbits, 6
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC7 = 0x00;
0035a4   9e94     bcf     0x94, 0x7, 0x0   	BCF	_TRISCbits, 7
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISD = 0x00; 
0035a6   6a95     clrf    0x95, 0x0        	CLRF	_TRISD
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISE = 0x00; 
0035a8   6a96     clrf    0x96, 0x0        	CLRF	_TRISE
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTA  = 0x00;
0035aa   6a80     clrf    0x80, 0x0        	CLRF	_PORTA
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTB  = 0x00;
0035ac   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTC  = 0x00;
0035ae   6a82     clrf    0x82, 0x0        	CLRF	_PORTC
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTD  = 0x00; 
0035b0   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	113; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTE  = 0x00; 
0035b2   6a84     clrf    0x84, 0x0        	CLRF	_PORTE
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/core/io.c	}
0035b4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__analogwrite	code
                                           _analogwrite:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogwrite(u8 pin, u16 duty)
003032   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003034   ffe5
003036   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003038   ffd9
00303a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00303c   ffe5
00303e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003040   ffe5
003042   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003044   ffe5
003046   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003048   ffe5
00304a   0e02     movlw   0x02             	MOVLW	0x02
00304c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00304e   f000
003050   0e03     movlw   0x03             	MOVLW	0x03
003052   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
003054   f001
003056   0e04     movlw   0x04             	MOVLW	0x04
003058   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
00305a   f002
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/core/analog.c	switch (pin)
00305c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00305e   0a0b     xorlw   0x0b             	XORLW	0x0b
003060   e019     bz      0x003094         	BZ	_00706_DS_
003062   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003064   0a0c     xorlw   0x0c             	XORLW	0x0c
003066   e129     bnz     0x0030ba         	BNZ	_00707_DS_
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON  = 0b00001100;
003068   0e0c     movlw   0x0c             	MOVLW	0x0c
00306a   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR1L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
00306c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00306e   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
003070   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003072   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
003074   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003076   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003078   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
00307a   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
00307c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00307e   6ebe     movwf   0xbe, 0x0        	MOVWF	_CCPR1L
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
003080   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003082   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003084   0e03     movlw   0x03             	MOVLW	0x03
003086   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
003088   3800     swapf   0x00, 0x0, 0x0   	SWAPF	r0x00, W
00308a   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	_CCP1CON, W
                                           ; #;#	MOVWF	r0x00
                                           ; #;#	MOVF	r0x03, W
                                           ; #;#	IORWF	r0x00, W
                                           ; #	IORWF	r0x03, W
00308c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00308e   10bd     iorwf   0xbd, 0x0, 0x0   	IORWF	_CCP1CON, W
003090   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
                                           ;	.line	309; /home/vbasel/.icaro/v4/firmware/core/analog.c	break;
003092   d013     bra     0x0030ba         	BRA	_00707_DS_
                                           _00706_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON  = 0b00001100;
003094   0e0c     movlw   0x0c             	MOVLW	0x0c
003096   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR2L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
003098   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00309a   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
00309c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00309e   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
0030a0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0030a2   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0030a4   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0030a6   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
0030a8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0030aa   6ebb     movwf   0xbb, 0x0        	MOVWF	_CCPR2L
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
0030ac   0e03     movlw   0x03             	MOVLW	0x03
0030ae   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
0030b0   3801     swapf   0x01, 0x0, 0x0   	SWAPF	r0x01, W
0030b2   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	_CCP2CON, W
                                           ; #;#	MOVWF	r0x01
                                           ; #;#	MOVF	r0x00, W
                                           ; #;#	IORWF	r0x01, W
                                           ; #	IORWF	r0x00, W
0030b4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0030b6   10ba     iorwf   0xba, 0x0, 0x0   	IORWF	_CCP2CON, W
0030b8   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
                                           _00707_DS_:
                                           ;	.line	321; /home/vbasel/.icaro/v4/firmware/core/analog.c	PIR1bits.TMR2IF = 0;
0030ba   929e     bcf     0x9e, 0x1, 0x0   	BCF	_PIR1bits, 1
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
0030bc   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0030be   f003
0030c0   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0030c2   f002
0030c4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0030c6   f001
0030c8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0030ca   f000
0030cc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0030ce   ffd9
0030d0   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__analogwrite_init	code
                                           _analogwrite_init:
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/core/analog.c	PR2 = 0xFF;                         // set PWM period to the max. to get 10-bit res.
0035dc   68cb     setf    0xcb, 0x0        	SETF	_PR2
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/core/analog.c	T2CON = 0b00000100;                 // Timer2 on, prescaler is 1
0035de   0e04     movlw   0x04             	MOVLW	0x04
0035e0   6eca     movwf   0xca, 0x0        	MOVWF	_T2CON
                                           ;	.line	239; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
0035e2   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	134; /home/vbasel/.icaro/v4/firmware/core/analog.c	u16 analogread(u8 channel)
003172   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003174   ffe5
003176   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003178   ffd9
00317a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00317c   ffe5
00317e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003180   ffe5
003182   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003184   ffe5
003186   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003188   ffe5
00318a   0e02     movlw   0x02             	MOVLW	0x02
00318c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00318e   f000
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(channel>=13 && channel<=20)
003190   0e0d     movlw   0x0d             	MOVLW	0x0d
003192   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
003194   e30c     bnc     0x0031ae         	BNC	_00659_DS_
003196   0e15     movlw   0x15             	MOVLW	0x15
003198   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00319a   e209     bc      0x0031ae         	BC	_00659_DS_
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0=(channel-13) << 2;   // A0 = 13, ..., A4 = 17
00319c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00319e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0031a0   0ef3     movlw   0xf3             	MOVLW	0xf3
0031a2   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
0031a4   4401     rlncf   0x01, 0x0, 0x0   	RLNCF	r0x01, W
0031a6   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
0031a8   0bfc     andlw   0xfc             	ANDLW	0xfc
0031aa   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
0031ac   d007     bra     0x0031bc         	BRA	_00660_DS_
                                           _00659_DS_:
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(channel<=5)
0031ae   0e06     movlw   0x06             	MOVLW	0x06
0031b0   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0031b2   e204     bc      0x0031bc         	BC	_00660_DS_
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0 = channel << 2;      // A0 = 0, ..., A4 = 4
0031b4   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
0031b6   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
0031b8   0bfc     andlw   0xfc             	ANDLW	0xfc
0031ba   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
                                           _00660_DS_:
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON=1;                  // A/D Converter module is enabled
0031bc   80c2     bsf     0xc2, 0x0, 0x0   	BSF	_ADCON0bits, 0
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
0031be   0e09     movlw   0x09             	MOVLW	0x09
0031c0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0031c2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00668_DS_:
0031c4   0000     nop                      	NOP
0031c6   0eff     movlw   0xff             	MOVLW	0xff
0031c8   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0031ca   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
0031cc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0031ce   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
0031d0   e1f9     bnz     0x0031c4         	BNZ	_00668_DS_
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.GO=1;                    // Start A/D Conversion
0031d2   82c2     bsf     0xc2, 0x1, 0x0   	BSF	_ADCON0bits, 1
                                           _00663_DS_:
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/core/analog.c	while (ADCON0bits.GO);              // Wait for conversion stop
0031d4   b2c2     btfsc   0xc2, 0x1, 0x0   	BTFSC	_ADCON0bits, 1
0031d6   d7fe     bra     0x0031d4         	BRA	_00663_DS_
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/core/analog.c	result = ADRESH << 8;
0031d8   cfc4     movff   0xfc4, 0x000     	MOVFF	_ADRESH, r0x00
0031da   f000
0031dc   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0031de   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0031e0   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0031e2   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/analog.c	result += ADRESL;
0031e4   cfc3     movff   0xfc3, 0x000     	MOVFF	_ADRESL, r0x00
0031e6   f000
0031e8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0031ea   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0031ec   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0031ee   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0031f0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON = 0;                // A/D Converter module is disabled
0031f2   90c2     bcf     0xc2, 0x0, 0x0   	BCF	_ADCON0bits, 0
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/analog.c	return(result);
0031f4   c003     movff   0x003, 0xff3     	MOVFF	r0x03, PRODL
0031f6   fff3
0031f8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
0031fa   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0031fc   f003
0031fe   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003200   f002
003202   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003204   f001
003206   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003208   f000
00320a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00320c   ffd9
00320e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__analogreference	code
                                           _analogreference:
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogreference(u8 Type)
0034b4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0034b6   ffe5
0034b8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0034ba   ffd9
0034bc   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0034be   ffe5
0034c0   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0034c2   ffe5
0034c4   0e02     movlw   0x02             	MOVLW	0x02
0034c6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0034c8   f000
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(Type == DEFAULT)			//the default analog reference of 5 volts (on 5V Arduino boards) or 3.3 volts (on 3.3V Arduino boards)
0034ca   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0034cc   e105     bnz     0x0034d8         	BNZ	_00640_DS_
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x00;			//Vref+ = VDD
0034ce   cfc1     movff   0xfc1, 0x001     	MOVFF	_ADCON1, r0x01
0034d0   f001
0034d2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0034d4   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
0034d6   d008     bra     0x0034e8         	BRA	_00642_DS_
                                           _00640_DS_:
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(Type == EXTERNAL)	//the voltage applied to the AREF pin (0 to 5V only) is used as the reference.
0034d8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0034da   0a01     xorlw   0x01             	XORLW	0x01
0034dc   e105     bnz     0x0034e8         	BNZ	_00642_DS_
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x10;			//Vref+ = External source
0034de   cfc1     movff   0xfc1, 0x000     	MOVFF	_ADCON1, r0x00
0034e0   f000
0034e2   8800     bsf     0x00, 0x4, 0x0   	BSF	r0x00, 4
0034e4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0034e6   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           _00642_DS_:
                                           ;	.line	121; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
0034e8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0034ea   f001
0034ec   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0034ee   f000
0034f0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0034f2   ffd9
0034f4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	25; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analog_init(void)
003564   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003566   ffe5
                                           ;	.line	36; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISA=TRISA | 0x2F;
003568   cf92     movff   0xf92, 0x000     	MOVFF	_TRISA, r0x00
00356a   f000
00356c   0e2f     movlw   0x2f             	MOVLW	0x2f
00356e   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
003570   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003572   6e92     movwf   0x92, 0x0        	MOVWF	_TRISA
                                           ;	.line	37; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISE=TRISE | 0x07;	
003574   cf96     movff   0xf96, 0x000     	MOVFF	_TRISE, r0x00
003576   f000
003578   0e07     movlw   0x07             	MOVLW	0x07
00357a   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
00357c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00357e   6e96     movwf   0x96, 0x0        	MOVWF	_TRISE
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1=0x07;
003580   0e07     movlw   0x07             	MOVLW	0x07
003582   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON2=0xBD;
003584   0ebd     movlw   0xbd             	MOVLW	0xbd
003586   6ec0     movwf   0xc0, 0x0        	MOVWF	_ADCON2
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/analog.c	}
003588   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00358a   f000
00358c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	547; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (PIR1bits.TMR1IF)
003470   a09e     btfss   0x9e, 0x0, 0x0   	BTFSS	_PIR1bits, 0
003472   d01f     bra     0x0034b2         	BRA	_00627_DS_
003474   0105     movlb   0x5              	BANKSEL	_phase
                                           ;	.line	553; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (phase)
003476   51f0     movf    0xf0, 0x0, 0x1   	MOVF	_phase, W, B
003478   e00b     bz      0x003490         	BZ	_00623_DS_
                                           ;	.line	555; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseUp();
00347a   ecdb     call    0x0035b6, 0x0    	CALL	_ServosPulseUp
00347c   f01a
                                           ;	.line	557; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0xe9;//0xe9;
00347e   0ee9     movlw   0xe9             	MOVLW	0xe9
003480   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	558; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0x59;
003482   0e59     movlw   0x59             	MOVLW	0x59
003484   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ;	.line	560; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=1;
003486   0e01     movlw   0x01             	MOVLW	0x01
003488   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
00348a   0105     movlb   0x5              	BANKSEL	_phase
                                           ;	.line	561; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 0;
00348c   6bf0     clrf    0xf0, 0x1        	CLRF	_phase, B
00348e   d010     bra     0x0034b0         	BRA	_00624_DS_
                                           _00623_DS_:
                                           ;	.line	569; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseDown();
003490   ec3e     call    0x00287c, 0x0    	CALL	_ServosPulseDown
003492   f014
                                           ;	.line	573; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0x32;
003494   0e32     movlw   0x32             	MOVLW	0x32
003496   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	574; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0xeb;
003498   0eeb     movlw   0xeb             	MOVLW	0xeb
00349a   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00621_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
00349c   0105     movlb   0x5              	BANKSEL	_needreordering
                                           ;	.line	576; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (needreordering)
00349e   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_needreordering, W, B
                                           ;	.line	577; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	SortServoTimings(); // This takes more than 1 ms, but it's call only if needed.
0034a0   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
                                           ;	.line	578; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
0034a2   ec0e     call    0x000c1c, 0x0    	CALL	_SortServoTimings
0034a4   f006
0034a6   0e21     movlw   0x21             	MOVLW	0x21
0034a8   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	579; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 1;  			//This indicates that after next interrupt it will start the servos cycle.
0034aa   0e01     movlw   0x01             	MOVLW	0x01
0034ac   0105     movlb   0x5              	BANKSEL	_phase
0034ae   6ff0     movwf   0xf0, 0x1        	MOVWF	_phase, B
                                           _00624_DS_:
                                           ;	.line	583; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF=0;
0034b0   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           _00627_DS_:
                                           ;	.line	586; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
0034b2   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	530; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMaximumPulse(unsigned char servo,int max_microseconds)
002e4c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002e4e   ffe5
002e50   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002e52   ffd9
002e54   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002e56   ffe5
002e58   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002e5a   ffe5
002e5c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002e5e   ffe5
002e60   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002e62   ffe5
002e64   0e02     movlw   0x02             	MOVLW	0x02
002e66   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002e68   f000
002e6a   0e03     movlw   0x03             	MOVLW	0x03
002e6c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002e6e   f001
002e70   0e04     movlw   0x04             	MOVLW	0x04
002e72   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
002e74   f002
                                           ;	.line	533; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
002e76   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00597_DS_
                                           ; #	GOTO	_00602_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	534; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
002e78   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds < MIDUS) max_microseconds = MIDUS;
002e7a   e22e     bc      0x002ed8         	BC	_00602_DS_
002e7c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002e7e   0f80     addlw   0x80             	ADDLW	0x80
002e80   0f7b     addlw   0x7b             	ADDLW	0x7b
002e82   e102     bnz     0x002e88         	BNZ	_00614_DS_
002e84   0edc     movlw   0xdc             	MOVLW	0xdc
002e86   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00614_DS_:
002e88   e204     bc      0x002e92         	BC	_00599_DS_
002e8a   0edc     movlw   0xdc             	MOVLW	0xdc
002e8c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002e8e   0e05     movlw   0x05             	MOVLW	0x05
002e90   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00599_DS_:
                                           ;	.line	538; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds > MAXUS) max_microseconds = MAXUS;
002e92   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002e94   0f80     addlw   0x80             	ADDLW	0x80
002e96   0f77     addlw   0x77             	ADDLW	0x77
002e98   e102     bnz     0x002e9e         	BNZ	_00615_DS_
002e9a   0ec5     movlw   0xc5             	MOVLW	0xc5
002e9c   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00615_DS_:
002e9e   e304     bnc     0x002ea8         	BNC	_00601_DS_
002ea0   0ec4     movlw   0xc4             	MOVLW	0xc4
002ea2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002ea4   0e09     movlw   0x09             	MOVLW	0x09
002ea6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00601_DS_:
                                           ;	.line	541; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][servo]=(max_microseconds - MINUS)>>3;   // 125 < final_max < 250
002ea8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002eaa   0eb4     movlw   0xb4             	MOVLW	LOW(_maxminpos + 30)
002eac   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002eae   0e05     movlw   0x05             	MOVLW	HIGH(_maxminpos + 30)
002eb0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002eb2   0e0c     movlw   0x0c             	MOVLW	0x0c
002eb4   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
002eb6   0efe     movlw   0xfe             	MOVLW	0xfe
002eb8   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002eba   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
002ebc   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
002ebe   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002ec0   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
002ec2   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
002ec4   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002ec6   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
002ec8   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
002eca   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002ecc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
002ece   ffe9
002ed0   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
002ed2   ffea
002ed4   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
002ed6   ffef
                                           _00602_DS_:
                                           ;	.line	542; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
002ed8   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002eda   f003
002edc   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002ede   f002
002ee0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002ee2   f001
002ee4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002ee6   f000
002ee8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002eea   ffd9
002eec   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	516; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMinimumPulse(unsigned char servo,int min_microseconds)
002eee   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002ef0   ffe5
002ef2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002ef4   ffd9
002ef6   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002ef8   ffe5
002efa   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002efc   ffe5
002efe   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002f00   ffe5
002f02   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002f04   ffe5
002f06   0e02     movlw   0x02             	MOVLW	0x02
002f08   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002f0a   f000
002f0c   0e03     movlw   0x03             	MOVLW	0x03
002f0e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002f10   f001
002f12   0e04     movlw   0x04             	MOVLW	0x04
002f14   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
002f16   f002
                                           ;	.line	519; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
002f18   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00573_DS_
                                           ; #	GOTO	_00578_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
002f1a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	523; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds < MINUS) min_microseconds = MINUS;
002f1c   e22e     bc      0x002f7a         	BC	_00578_DS_
002f1e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002f20   0f80     addlw   0x80             	ADDLW	0x80
002f22   0f7f     addlw   0x7f             	ADDLW	0x7f
002f24   e102     bnz     0x002f2a         	BNZ	_00590_DS_
002f26   0ef4     movlw   0xf4             	MOVLW	0xf4
002f28   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00590_DS_:
002f2a   e204     bc      0x002f34         	BC	_00575_DS_
002f2c   0ef4     movlw   0xf4             	MOVLW	0xf4
002f2e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002f30   0e01     movlw   0x01             	MOVLW	0x01
002f32   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00575_DS_:
                                           ;	.line	524; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds > MIDUS) min_microseconds = MIDUS;
002f34   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002f36   0f80     addlw   0x80             	ADDLW	0x80
002f38   0f7b     addlw   0x7b             	ADDLW	0x7b
002f3a   e102     bnz     0x002f40         	BNZ	_00591_DS_
002f3c   0edd     movlw   0xdd             	MOVLW	0xdd
002f3e   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00591_DS_:
002f40   e304     bnc     0x002f4a         	BNC	_00577_DS_
002f42   0edc     movlw   0xdc             	MOVLW	0xdc
002f44   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002f46   0e05     movlw   0x05             	MOVLW	0x05
002f48   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00577_DS_:
                                           ;	.line	527; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][servo]=(min_microseconds - MINUS)>>3;   // 0 < final_min < 125
002f4a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002f4c   0e96     movlw   0x96             	MOVLW	LOW(_maxminpos)
002f4e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002f50   0e05     movlw   0x05             	MOVLW	HIGH(_maxminpos)
002f52   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002f54   0e0c     movlw   0x0c             	MOVLW	0x0c
002f56   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
002f58   0efe     movlw   0xfe             	MOVLW	0xfe
002f5a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002f5c   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
002f5e   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
002f60   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002f62   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
002f64   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
002f66   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002f68   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
002f6a   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
002f6c   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002f6e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
002f70   ffe9
002f72   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
002f74   ffea
002f76   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
002f78   ffef
                                           _00578_DS_:
                                           ;	.line	528; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
002f7a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002f7c   f003
002f7e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002f80   f002
002f82   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002f84   f001
002f86   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002f88   f000
002f8a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002f8c   ffd9
002f8e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	508; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	unsigned char ServoRead(unsigned char servo)
0033e6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0033e8   ffe5
0033ea   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0033ec   ffd9
0033ee   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0033f0   ffe5
0033f2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0033f4   ffe5
0033f6   0e02     movlw   0x02             	MOVLW	0x02
0033f8   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0033fa   f000
                                           ;	.line	510; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)        // test if numservo is valid
0033fc   0e1e     movlw   0x1e             	MOVLW	0x1e
0033fe   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
003400   e302     bnc     0x003406         	BNC	_00561_DS_
                                           ;	.line	511; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return 0;
003402   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003404   d00c     bra     0x00341e         	BRA	_00562_DS_
                                           _00561_DS_:
                                           ;	.line	513; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return servovalues[servo];
003406   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003408   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
00340a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00340c   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
00340e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003410   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003412   ffe9
003414   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
003416   ffea
003418   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00341a   f000
00341c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00562_DS_:
                                           ;	.line	514; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
00341e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003420   f001
003422   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003424   f000
003426   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003428   ffd9
00342a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	484; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoWrite(unsigned char servo,unsigned char degrees)
0032f8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0032fa   ffe5
0032fc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0032fe   ffd9
003300   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003302   ffe5
003304   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003306   ffe5
003308   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00330a   ffe5
00330c   0e02     movlw   0x02             	MOVLW	0x02
00330e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003310   f000
003312   0e03     movlw   0x03             	MOVLW	0x03
003314   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
003316   f001
                                           ;	.line	491; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
003318   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00549_DS_
                                           ; #	GOTO	_00550_DS_
                                           ; #	CLRF	r0x02
                                           ;	.line	492; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
00331a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	503; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[servo]= value;
00331c   e20e     bc      0x00333a         	BC	_00550_DS_
00331e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003320   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
003322   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003324   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
003326   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003328   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00332a   ffe9
00332c   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00332e   ffea
003330   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
003332   ffef
                                           ;	.line	505; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
003334   0e01     movlw   0x01             	MOVLW	0x01
003336   0105     movlb   0x5              	BANKSEL	_needreordering
003338   6ff1     movwf   0xf1, 0x1        	MOVWF	_needreordering, B
                                           _00550_DS_:
                                           ;	.line	506; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
00333a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00333c   f002
00333e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003340   f001
003342   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003344   f000
003346   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003348   ffd9
00334a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	459; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoDetach(unsigned char pin)
0026f6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0026f8   ffe5
0026fa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0026fc   ffd9
0026fe   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002700   ffe5
002702   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002704   ffe5
002706   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002708   ffe5
00270a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00270c   ffe5
00270e   0e02     movlw   0x02             	MOVLW	0x02
002710   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002712   f000
                                           ;	.line	461; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
002714   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00526_DS_
                                           ; #	GOTO	_00533_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	463; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
002716   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
002718   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00271a   d0a5     bra     0x002866         	BRA	_00533_DS_
00271c   0ed6     movlw   0xd6             	MOVLW	LOW(_port)
00271e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002720   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002722   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002724   0e2f     movlw   0x2f             	MOVLW	HIGH(_port)
002726   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002728   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00272a   0e00     movlw   0x00             	MOVLW	UPPER(_port)
00272c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00272e   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002730   fff6
002732   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002734   fff7
002736   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002738   fff8
00273a   0009     tblrd*+                  	TBLRD*+	
00273c   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00273e   f001
002740   0e05     movlw   0x05             	MOVLW	0x05
002742   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
002744   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002746   d08f     bra     0x002866         	BRA	_00533_DS_
002748   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
00274a   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
00274c   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
00274e   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002750   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
002752   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002754   0bfc     andlw   0xfc             	ANDLW	0xfc
002756   0f66     addlw   0x66             	ADDLW	LOW(_00543_DS_)
002758   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00275a   0e27     movlw   0x27             	MOVLW	HIGH(_00543_DS_)
00275c   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00275e   0e00     movlw   0x00             	MOVLW	UPPER(_00543_DS_)
002760   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
002762   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
002764   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00543_DS_:
002766   efbd     goto    0x00277a         	GOTO	_00527_DS_
002768   f013
00276a   efd5     goto    0x0027aa         	GOTO	_00528_DS_
00276c   f013
00276e   efed     goto    0x0027da         	GOTO	_00529_DS_
002770   f013
002772   ef05     goto    0x00280a         	GOTO	_00530_DS_
002774   f014
002776   ef1d     goto    0x00283a         	GOTO	_00531_DS_
002778   f014
                                           _00527_DS_:
                                           ;	.line	465; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pA: activatedservos[pA] = activatedservos[pA] ^ mask[pin];
00277a   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
00277c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00277e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002780   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002782   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
002784   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002786   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002788   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00278a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00278c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00278e   fff6
002790   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002792   fff7
002794   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002796   fff8
002798   0009     tblrd*+                  	TBLRD*+	
00279a   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00279c   f001
00279e   0105     movlb   0x5              	BANKSEL	_activatedservos
0027a0   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_activatedservos, W, B
0027a2   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
0027a4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0027a6   6ff6     movwf   0xf6, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	466; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0027a8   d05e     bra     0x002866         	BRA	_00533_DS_
                                           _00528_DS_:
                                           ;	.line	467; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pB: activatedservos[pB] = activatedservos[pB] ^ mask[pin];
0027aa   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
0027ac   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0027ae   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0027b0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0027b2   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0027b4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0027b6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0027b8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0027ba   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0027bc   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0027be   fff6
0027c0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0027c2   fff7
0027c4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0027c6   fff8
0027c8   0009     tblrd*+                  	TBLRD*+	
0027ca   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0027cc   f001
0027ce   0105     movlb   0x5              	BANKSEL	(_activatedservos + 1)
0027d0   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
0027d2   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
0027d4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0027d6   6ff7     movwf   0xf7, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	468; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0027d8   d046     bra     0x002866         	BRA	_00533_DS_
                                           _00529_DS_:
                                           ;	.line	470; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pC: activatedservos[pC] = activatedservos[pC] ^ mask[pin];
0027da   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
0027dc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0027de   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0027e0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0027e2   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0027e4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0027e6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0027e8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0027ea   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0027ec   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0027ee   fff6
0027f0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0027f2   fff7
0027f4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0027f6   fff8
0027f8   0009     tblrd*+                  	TBLRD*+	
0027fa   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0027fc   f001
0027fe   0105     movlb   0x5              	BANKSEL	(_activatedservos + 2)
002800   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
002802   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
002804   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002806   6ff8     movwf   0xf8, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	471; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002808   d02e     bra     0x002866         	BRA	_00533_DS_
                                           _00530_DS_:
                                           ;	.line	474; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pD: activatedservos[pD] = activatedservos[pD] ^ mask[pin];
00280a   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
00280c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00280e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002810   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002812   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
002814   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002816   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002818   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00281a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00281c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00281e   fff6
002820   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002822   fff7
002824   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002826   fff8
002828   0009     tblrd*+                  	TBLRD*+	
00282a   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00282c   f001
00282e   0105     movlb   0x5              	BANKSEL	(_activatedservos + 3)
002830   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
002832   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
002834   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
002836   6ff9     movwf   0xf9, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	475; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002838   d016     bra     0x002866         	BRA	_00533_DS_
                                           _00531_DS_:
                                           ;	.line	478; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pE: activatedservos[pE] = activatedservos[pE] ^ mask[pin];
00283a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00283c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00283e   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
002840   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002842   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
002844   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002846   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002848   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00284a   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00284c   fff6
00284e   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002850   fff7
002852   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002854   fff8
002856   0009     tblrd*+                  	TBLRD*+	
002858   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
00285a   f000
00285c   0105     movlb   0x5              	BANKSEL	(_activatedservos + 4)
00285e   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
002860   1a00     xorwf   0x00, 0x1, 0x0   	XORWF	r0x00, F
002862   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002864   6ffa     movwf   0xfa, 0x1        	MOVWF	(_activatedservos + 4), B
                                           _00533_DS_:
                                           ;	.line	482; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
002866   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002868   f003
00286a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00286c   f002
00286e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002870   f001
002872   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002874   f000
002876   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002878   ffd9
00287a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoAttach(unsigned char pin)
001f84   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001f86   ffe5
001f88   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001f8a   ffd9
001f8c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001f8e   ffe5
001f90   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001f92   ffe5
001f94   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001f96   ffe5
001f98   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001f9a   ffe5
001f9c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
001f9e   ffe5
001fa0   0e02     movlw   0x02             	MOVLW	0x02
001fa2   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
001fa4   f000
                                           ;	.line	426; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
001fa6   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00503_DS_
                                           ; #	GOTO	_00510_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	428; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
001fa8   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001faa   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001fac   d0e1     bra     0x002170         	BRA	_00510_DS_
001fae   0ed6     movlw   0xd6             	MOVLW	LOW(_port)
001fb0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001fb2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001fb4   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001fb6   0e2f     movlw   0x2f             	MOVLW	HIGH(_port)
001fb8   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001fba   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001fbc   0e00     movlw   0x00             	MOVLW	UPPER(_port)
001fbe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001fc0   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
001fc2   fff6
001fc4   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
001fc6   fff7
001fc8   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
001fca   fff8
001fcc   0009     tblrd*+                  	TBLRD*+	
001fce   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
001fd0   f001
001fd2   0e05     movlw   0x05             	MOVLW	0x05
001fd4   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
001fd6   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001fd8   d0cb     bra     0x002170         	BRA	_00510_DS_
001fda   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
001fdc   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
001fde   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
001fe0   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
001fe2   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
001fe4   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
001fe6   0bfc     andlw   0xfc             	ANDLW	0xfc
001fe8   0ff8     addlw   0xf8             	ADDLW	LOW(_00520_DS_)
001fea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001fec   0e1f     movlw   0x1f             	MOVLW	HIGH(_00520_DS_)
001fee   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
001ff0   0e00     movlw   0x00             	MOVLW	UPPER(_00520_DS_)
001ff2   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
001ff4   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
001ff6   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00520_DS_:
001ff8   ef06     goto    0x00200c         	GOTO	_00504_DS_
001ffa   f010
001ffc   ef2a     goto    0x002054         	GOTO	_00505_DS_
001ffe   f010
002000   ef4e     goto    0x00209c         	GOTO	_00506_DS_
002002   f010
002004   ef72     goto    0x0020e4         	GOTO	_00507_DS_
002006   f010
002008   ef96     goto    0x00212c         	GOTO	_00508_DS_
00200a   f010
                                           _00504_DS_:
                                           ;	.line	431; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pA] = activatedservos[pA] | mask[pin];  // list pin as servo driver.
00200c   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
00200e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002010   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002012   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002014   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
002016   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002018   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00201a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00201c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00201e   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002020   fff6
002022   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002024   fff7
002026   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002028   fff8
00202a   0009     tblrd*+                  	TBLRD*+	
00202c   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00202e   f004
002030   0105     movlb   0x5              	BANKSEL	_activatedservos
002032   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_activatedservos, W, B
002034   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002036   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002038   6ff6     movwf   0xf6, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	432; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISA = TRISA & (~mask[pin]); 					// set as output pin
00203a   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00203c   fff6
00203e   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002040   fff7
002042   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002044   fff8
002046   0009     tblrd*+                  	TBLRD*+	
002048   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00204a   f001
00204c   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
00204e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002050   1692     andwf   0x92, 0x1, 0x0   	ANDWF	_TRISA, F
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002052   d08e     bra     0x002170         	BRA	_00510_DS_
                                           _00505_DS_:
                                           ;	.line	435; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pB] = activatedservos[pB] | mask[pin];  // list pin as servo driver.
002054   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
002056   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002058   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00205a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00205c   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
00205e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002060   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002062   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002064   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002066   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002068   fff6
00206a   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00206c   fff7
00206e   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002070   fff8
002072   0009     tblrd*+                  	TBLRD*+	
002074   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002076   f004
002078   0105     movlb   0x5              	BANKSEL	(_activatedservos + 1)
00207a   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
00207c   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00207e   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002080   6ff7     movwf   0xf7, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	436; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISB = TRISB & (~mask[pin]); 					// set as output pin
002082   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002084   fff6
002086   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002088   fff7
00208a   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00208c   fff8
00208e   0009     tblrd*+                  	TBLRD*+	
002090   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002092   f001
002094   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002096   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002098   1693     andwf   0x93, 0x1, 0x0   	ANDWF	_TRISB, F
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00209a   d06a     bra     0x002170         	BRA	_00510_DS_
                                           _00506_DS_:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pC] = activatedservos[pC] | mask[pin];  // list pin as servo driver.
00209c   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
00209e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0020a0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0020a2   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0020a4   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0020a6   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0020a8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0020aa   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0020ac   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0020ae   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0020b0   fff6
0020b2   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0020b4   fff7
0020b6   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0020b8   fff8
0020ba   0009     tblrd*+                  	TBLRD*+	
0020bc   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0020be   f004
0020c0   0105     movlb   0x5              	BANKSEL	(_activatedservos + 2)
0020c2   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
0020c4   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0020c6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
0020c8   6ff8     movwf   0xf8, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	441; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISC = TRISC & (~mask[pin]); 					// set as output pin
0020ca   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0020cc   fff6
0020ce   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0020d0   fff7
0020d2   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0020d4   fff8
0020d6   0009     tblrd*+                  	TBLRD*+	
0020d8   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0020da   f001
0020dc   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
0020de   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0020e0   1694     andwf   0x94, 0x1, 0x0   	ANDWF	_TRISC, F
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0020e2   d046     bra     0x002170         	BRA	_00510_DS_
                                           _00507_DS_:
                                           ;	.line	446; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pD] = activatedservos[pD] | mask[pin];  // list pin as servo driver.
0020e4   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
0020e6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0020e8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0020ea   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0020ec   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0020ee   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0020f0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0020f2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0020f4   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0020f6   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0020f8   fff6
0020fa   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0020fc   fff7
0020fe   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002100   fff8
002102   0009     tblrd*+                  	TBLRD*+	
002104   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002106   f004
002108   0105     movlb   0x5              	BANKSEL	(_activatedservos + 3)
00210a   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
00210c   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00210e   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002110   6ff9     movwf   0xf9, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	447; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISD = TRISD & (~mask[pin]); 					// set as output pin
002112   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002114   fff6
002116   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002118   fff7
00211a   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00211c   fff8
00211e   0009     tblrd*+                  	TBLRD*+	
002120   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002122   f001
002124   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002126   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002128   1695     andwf   0x95, 0x1, 0x0   	ANDWF	_TRISD, F
                                           ;	.line	448; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00212a   d022     bra     0x002170         	BRA	_00510_DS_
                                           _00508_DS_:
                                           ;	.line	452; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pE] = activatedservos[pE] | mask[pin];  // list pin as servo driver.
00212c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00212e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002130   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
002132   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002134   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
002136   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002138   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00213a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00213c   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00213e   fff6
002140   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002142   fff7
002144   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002146   fff8
002148   0009     tblrd*+                  	TBLRD*+	
00214a   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
00214c   f003
00214e   0105     movlb   0x5              	BANKSEL	(_activatedservos + 4)
002150   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
002152   1203     iorwf   0x03, 0x1, 0x0   	IORWF	r0x03, F
002154   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002156   6ffa     movwf   0xfa, 0x1        	MOVWF	(_activatedservos + 4), B
                                           ;	.line	453; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISE = TRISE & (~mask[pin]); 					// set as output pin
002158   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00215a   fff6
00215c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00215e   fff7
002160   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002162   fff8
002164   0009     tblrd*+                  	TBLRD*+	
002166   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
002168   f000
00216a   1e00     comf    0x00, 0x1, 0x0   	COMF	r0x00, F
00216c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00216e   1696     andwf   0x96, 0x1, 0x0   	ANDWF	_TRISE, F
                                           _00510_DS_:
                                           ;	.line	457; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
002170   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002172   f004
002174   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002176   f003
002178   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00217a   f002
00217c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00217e   f001
002180   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002182   f000
002184   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002186   ffd9
002188   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void SortServoTimings()
000c1c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000c1e   ffe5
000c20   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000c22   ffe5
000c24   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000c26   ffe5
000c28   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
000c2a   ffe5
000c2c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000c2e   ffe5
000c30   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
000c32   ffe5
000c34   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
000c36   ffe5
000c38   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000c3a   6b2b     clrf    0x2b, 0x1        	CLRF	_SortServoTimings_t_1_35, B
                                           _00386_DS_:
000c3c   0e1e     movlw   0x1e             	MOVLW	0x1e
000c3e   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
000c40   5d2b     subwf   0x2b, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_35, W, B
000c42   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000c44   d066     bra     0x000d12         	BRA	_00333_DS_
                                           ;	.line	256; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=255; 
000c46   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000c48   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000c4a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000c4c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000c4e   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
000c50   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c52   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c54   ffe9
000c56   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c58   ffea
000c5a   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	257; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
000c5c   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000c5e   0d05     mullw   0x05             	MULLW	0x05
000c60   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c62   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c64   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c66   f000
000c68   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c6a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c6c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000c6e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c70   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c72   ffe9
000c74   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c76   ffea
000c78   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000c7a   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000c7c   0d05     mullw   0x05             	MULLW	0x05
000c7e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c80   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c82   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c84   f000
000c86   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c88   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c8a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000c8c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c8e   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000c90   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000c92   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c94   ffe9
000c96   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c98   ffea
000c9a   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000c9c   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000c9e   0d05     mullw   0x05             	MULLW	0x05
000ca0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000ca2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ca4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ca6   f000
000ca8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000caa   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cac   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000cae   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cb0   0e02     movlw   0x02             	MOVLW	0x02
000cb2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cb4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cb6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cb8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000cba   ffe9
000cbc   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000cbe   ffea
000cc0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	263; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000cc2   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000cc4   0d05     mullw   0x05             	MULLW	0x05
000cc6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cc8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cca   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ccc   f000
000cce   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cd0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cd2   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000cd4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cd6   0e03     movlw   0x03             	MOVLW	0x03
000cd8   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cda   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cdc   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cde   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ce0   ffe9
000ce2   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ce4   ffea
000ce6   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000ce8   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000cea   0d05     mullw   0x05             	MULLW	0x05
000cec   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cee   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cf0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000cf2   f000
000cf4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cf6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cf8   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000cfa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cfc   0e04     movlw   0x04             	MOVLW	0x04
000cfe   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000d00   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d02   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000d04   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d06   ffe9
000d08   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d0a   ffea
000d0c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000d0e   2b2b     incf    0x2b, 0x1, 0x1   	INCF	_SortServoTimings_t_1_35, F, B
000d10   d795     bra     0x000c3c         	BRA	_00386_DS_
                                           _00333_DS_:
000d12   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d14   6b2b     clrf    0x2b, 0x1        	CLRF	_SortServoTimings_t_1_35, B
                                           _00389_DS_:
000d16   0e05     movlw   0x05             	MOVLW	0x05
000d18   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
000d1a   5d2b     subwf   0x2b, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_35, W, B
000d1c   e20d     bc      0x000d38         	BC	_00334_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[t]=0x00;
000d1e   0efb     movlw   0xfb             	MOVLW	LOW(_mascaratotal)
                                           ; removed redundant BANKSEL
000d20   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000d22   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d24   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d26   0e05     movlw   0x05             	MOVLW	HIGH(_mascaratotal)
000d28   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d2a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d2c   ffe9
000d2e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d30   ffea
000d32   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d34   2b2b     incf    0x2b, 0x1, 0x1   	INCF	_SortServoTimings_t_1_35, F, B
000d36   d7ef     bra     0x000d16         	BRA	_00389_DS_
                                           _00334_DS_:
000d38   0106     movlb   0x6              	BANKSEL	_SortServoTimings_totalservos_1_35
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos=0; // Total servos revised. This helps to keep within "while"
000d3a   6b2c     clrf    0x2c, 0x1        	CLRF	_SortServoTimings_totalservos_1_35, B
000d3c   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	275; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t=0;           // Index to go through timevalue and timings tables.
000d3e   6b2b     clrf    0x2b, 0x1        	CLRF	_SortServoTimings_t_1_35, B
                                           _00382_DS_:
                                           ;	.line	276; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	while(totalservos<TotalPICpins)
000d40   0e1e     movlw   0x1e             	MOVLW	0x1e
000d42   0106     movlb   0x6              	BANKSEL	_SortServoTimings_totalservos_1_35
000d44   5d2c     subwf   0x2c, 0x0, 0x1   	SUBWF	_SortServoTimings_totalservos_1_35, W, B
000d46   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d48   ef21     goto    0x001a42         	GOTO	_00384_DS_
000d4a   f00d
                                           ;	.line	278; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000d4c   0e01     movlw   0x01             	MOVLW	0x01
000d4e   0106     movlb   0x6              	BANKSEL	_SortServoTimings_numservos_1_35
000d50   6f2d     movwf   0x2d, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
000d52   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
                                           ;	.line	280; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
000d54   6b2e     clrf    0x2e, 0x1        	CLRF	_SortServoTimings_s_1_35, B
                                           _00392_DS_:
000d56   0e1e     movlw   0x1e             	MOVLW	0x1e
000d58   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
000d5a   5d2e     subwf   0x2e, 0x0, 0x1   	SUBWF	_SortServoTimings_s_1_35, W, B
000d5c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d5e   ef9d     goto    0x00193a         	GOTO	_00381_DS_
000d60   f00c
                                           ;	.line	283; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[s])
000d62   0ed6     movlw   0xd6             	MOVLW	LOW(_port)
                                           ; removed redundant BANKSEL
000d64   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000d66   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d68   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d6a   0e2f     movlw   0x2f             	MOVLW	HIGH(_port)
000d6c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d6e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000d70   0e00     movlw   0x00             	MOVLW	UPPER(_port)
000d72   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000d74   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000d76   fff6
000d78   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000d7a   fff7
000d7c   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000d7e   fff8
000d80   0009     tblrd*+                  	TBLRD*+	
000d82   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000d84   f000
000d86   0e05     movlw   0x05             	MOVLW	0x05
000d88   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000d8a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d8c   ef99     goto    0x001932         	GOTO	_00393_DS_
000d8e   f00c
000d90   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
000d92   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
000d94   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
000d96   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d98   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
000d9a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d9c   0bfc     andlw   0xfc             	ANDLW	0xfc
000d9e   0fae     addlw   0xae             	ADDLW	LOW(_00473_DS_)
000da0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000da2   0e0d     movlw   0x0d             	MOVLW	HIGH(_00473_DS_)
000da4   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
000da6   0e00     movlw   0x00             	MOVLW	UPPER(_00473_DS_)
000da8   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
000daa   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
000dac   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00473_DS_:
000dae   efe1     goto    0x000dc2         	GOTO	_00335_DS_
000db0   f006
000db2   ef02     goto    0x001004         	GOTO	_00344_DS_
000db4   f008
000db6   ef27     goto    0x00124e         	GOTO	_00353_DS_
000db8   f009
000dba   ef50     goto    0x0014a0         	GOTO	_00362_DS_
000dbc   f00a
000dbe   ef76     goto    0x0016ec         	GOTO	_00371_DS_
000dc0   f00b
                                           _00335_DS_:
                                           ;	.line	286; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pA] & activatedservos[pA]){
000dc2   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
000dc4   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
000dc6   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000dc8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000dca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000dcc   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
000dce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000dd0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000dd2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000dd4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000dd6   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000dd8   fff6
000dda   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000ddc   fff7
000dde   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000de0   fff8
000de2   0009     tblrd*+                  	TBLRD*+	
000de4   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000de6   f000
000de8   0105     movlb   0x5              	BANKSEL	_mascaratotal
000dea   51fb     movf    0xfb, 0x0, 0x1   	MOVF	_mascaratotal, W, B
000dec   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000dee   0105     movlb   0x5              	BANKSEL	_activatedservos
000df0   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_activatedservos, W, B
000df2   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000df4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000df6   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
000df8   ef99     goto    0x001932         	GOTO	_00393_DS_
000dfa   f00c
                                           ;	.line	289; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
000dfc   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
000dfe   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
000e00   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000e02   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e04   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e06   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
000e08   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e0a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e0c   ffe9
000e0e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e10   ffea
000e12   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000e14   f000
000e16   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
000e18   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
000e1a   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000e1c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e1e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000e20   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
000e22   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000e24   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000e26   ffe9
000e28   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000e2a   ffea
000e2c   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000e2e   f001
000e30   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000e32   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000e34   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000e36   d08d     bra     0x000f52         	BRA	_00339_DS_
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
000e38   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000e3a   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000e3c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e3e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e40   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
000e42   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e44   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
000e46   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
000e48   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000e4a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e4c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e4e   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
000e50   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e52   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000e54   ffe9
000e56   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000e58   ffea
000e5a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000e5c   f002
000e5e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e60   ffe9
000e62   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e64   ffea
000e66   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000e68   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
000e6a   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	291; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=mask[s];
000e6c   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000e6e   0d05     mullw   0x05             	MULLW	0x05
000e70   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000e72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e74   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000e76   f000
000e78   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000e7a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000e7c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000e7e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e80   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
000e82   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
000e84   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000e86   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e88   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e8a   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
000e8c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e8e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
000e90   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000e92   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
000e94   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
000e96   fff6
000e98   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
000e9a   fff7
000e9c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
000e9e   fff8
000ea0   0009     tblrd*+                  	TBLRD*+	
000ea2   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
000ea4   f002
000ea6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ea8   ffe9
000eaa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000eac   ffea
000eae   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000eb0   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
000eb2   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000eb4   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000eb6   0d05     mullw   0x05             	MULLW	0x05
000eb8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000eba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ebc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ebe   f000
000ec0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ec2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ec4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000ec6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000ec8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000eca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ecc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ece   ffe9
000ed0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ed2   ffea
000ed4   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	294; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000ed6   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000ed8   0d05     mullw   0x05             	MULLW	0x05
000eda   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000edc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ede   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ee0   f000
000ee2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ee4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ee6   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000ee8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000eea   0e02     movlw   0x02             	MOVLW	0x02
000eec   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000eee   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000ef0   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ef2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ef4   ffe9
000ef6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ef8   ffea
000efa   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	297; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000efc   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000efe   0d05     mullw   0x05             	MULLW	0x05
000f00   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f02   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f04   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f06   f000
000f08   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f0a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f0c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000f0e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f10   0e03     movlw   0x03             	MOVLW	0x03
000f12   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f14   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f16   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f18   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f1a   ffe9
000f1c   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f1e   ffea
000f20   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000f22   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000f24   0d05     mullw   0x05             	MULLW	0x05
000f26   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f28   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f2a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f2c   f000
000f2e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f30   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f32   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000f34   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f36   0e04     movlw   0x04             	MOVLW	0x04
000f38   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f3a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f3c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f3e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f40   ffe9
000f42   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f44   ffea
000f46   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000f48   0e01     movlw   0x01             	MOVLW	0x01
000f4a   0106     movlb   0x6              	BANKSEL	_SortServoTimings_numservos_1_35
000f4c   6f2d     movwf   0x2d, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
000f4e   ef99     goto    0x001932         	GOTO	_00393_DS_
000f50   f00c
                                           _00339_DS_:
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
000f52   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
000f54   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
000f56   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000f58   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000f5a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000f5c   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
000f5e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f60   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f62   ffe9
000f64   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f66   ffea
000f68   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000f6a   f000
000f6c   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
000f6e   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
000f70   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
000f72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f74   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000f76   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
000f78   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000f7a   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000f7c   ffe9
000f7e   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000f80   ffea
000f82   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000f84   f001
000f86   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000f88   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
000f8a   e002     bz      0x000f90         	BZ	_00477_DS_
000f8c   ef99     goto    0x001932         	GOTO	_00393_DS_
000f8e   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00477_DS_:
000f90   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	305; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA] |= mask[s];
000f92   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000f94   0d05     mullw   0x05             	MULLW	0x05
000f96   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f98   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f9a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f9c   f000
000f9e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fa0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000fa2   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000fa4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
000fa6   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
000fa8   0d05     mullw   0x05             	MULLW	0x05
000faa   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000fac   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000fae   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
000fb0   f002
000fb2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fb4   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
000fb6   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
000fb8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000fba   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
000fbc   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
000fbe   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
000fc0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
000fc2   6a05     clrf    0x05, 0x0        	CLRF	r0x05
000fc4   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
000fc6   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
000fc8   6a06     clrf    0x06, 0x0        	CLRF	r0x06
000fca   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000fcc   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
000fce   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
000fd0   fff6
000fd2   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
000fd4   fff7
000fd6   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
000fd8   fff8
000fda   0009     tblrd*+                  	TBLRD*+	
000fdc   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
000fde   f004
000fe0   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000fe2   ffe9
000fe4   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000fe6   ffea
000fe8   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000fea   f002
000fec   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000fee   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
000ff0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ff2   ffe9
000ff4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ff6   ffea
000ff8   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
000ffa   ffef
000ffc   0106     movlb   0x6              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
000ffe   2b2d     incf    0x2d, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;      		
001000   ef99     goto    0x001932         	GOTO	_00393_DS_
001002   f00c
                                           _00344_DS_:
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pB] & activatedservos[pB]){
001004   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001006   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
001008   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00100a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00100c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00100e   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001010   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001012   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001014   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001016   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001018   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00101a   fff6
00101c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00101e   fff7
001020   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
001022   fff8
001024   0009     tblrd*+                  	TBLRD*+	
001026   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001028   f000
00102a   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 1)
00102c   51fc     movf    0xfc, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
00102e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001030   0105     movlb   0x5              	BANKSEL	(_activatedservos + 1)
001032   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
001034   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001036   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001038   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
00103a   ef99     goto    0x001932         	GOTO	_00393_DS_
00103c   f00c
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
00103e   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
001040   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
001042   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001044   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001046   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001048   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
00104a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00104c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00104e   ffe9
001050   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001052   ffea
001054   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001056   f000
001058   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
00105a   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
00105c   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00105e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001060   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001062   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001064   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001066   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001068   ffe9
00106a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00106c   ffea
00106e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001070   f001
001072   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001074   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001076   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001078   d08d     bra     0x001194         	BRA	_00348_DS_
                                           ;	.line	315; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
00107a   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
00107c   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00107e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001080   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001082   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001084   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001086   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
001088   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
00108a   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00108c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00108e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001090   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
001092   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001094   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001096   ffe9
001098   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
00109a   ffea
00109c   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00109e   f002
0010a0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010a2   ffe9
0010a4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010a6   ffea
0010a8   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0010aa   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0010ac   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0010ae   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0010b0   0d05     mullw   0x05             	MULLW	0x05
0010b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010b8   f000
0010ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010be   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0010c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010c2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010c4   ffe9
0010c6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010c8   ffea
0010ca   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=mask[s];
0010cc   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0010ce   0d05     mullw   0x05             	MULLW	0x05
0010d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010d6   f000
0010d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010dc   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0010de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010e0   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0010e2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0010e4   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
0010e6   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
0010e8   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0010ea   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0010ec   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0010ee   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0010f0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0010f2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0010f4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0010f6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0010f8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0010fa   fff6
0010fc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0010fe   fff7
001100   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001102   fff8
001104   0009     tblrd*+                  	TBLRD*+	
001106   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001108   f002
00110a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00110c   ffe9
00110e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001110   ffea
001112   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001114   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001116   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
001118   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00111a   0d05     mullw   0x05             	MULLW	0x05
00111c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00111e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001120   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001122   f000
001124   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001126   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001128   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00112a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00112c   0e02     movlw   0x02             	MOVLW	0x02
00112e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001130   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001132   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001134   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001136   ffe9
001138   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00113a   ffea
00113c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
00113e   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001140   0d05     mullw   0x05             	MULLW	0x05
001142   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001144   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001146   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001148   f000
00114a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00114c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00114e   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001150   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001152   0e03     movlw   0x03             	MOVLW	0x03
001154   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001156   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001158   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00115a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00115c   ffe9
00115e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001160   ffea
001162   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	325; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001164   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001166   0d05     mullw   0x05             	MULLW	0x05
001168   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00116a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00116c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00116e   f000
001170   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001172   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001174   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001176   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001178   0e04     movlw   0x04             	MOVLW	0x04
00117a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00117c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00117e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001180   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001182   ffe9
001184   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001186   ffea
001188   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	327; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00118a   0e01     movlw   0x01             	MOVLW	0x01
00118c   0106     movlb   0x6              	BANKSEL	_SortServoTimings_numservos_1_35
00118e   6f2d     movwf   0x2d, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
001190   ef99     goto    0x001932         	GOTO	_00393_DS_
001192   f00c
                                           _00348_DS_:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001194   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
001196   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
001198   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00119a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00119c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00119e   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
0011a0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011a2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0011a4   ffe9
0011a6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0011a8   ffea
0011aa   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0011ac   f000
0011ae   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
0011b0   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
0011b2   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0011b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011b6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0011b8   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
0011ba   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0011bc   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0011be   ffe9
0011c0   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0011c2   ffea
0011c4   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0011c6   f001
0011c8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0011ca   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0011cc   e002     bz      0x0011d2         	BZ	_00482_DS_
0011ce   ef99     goto    0x001932         	GOTO	_00393_DS_
0011d0   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00482_DS_:
0011d2   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	330; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB] |= mask[s];
0011d4   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0011d6   0d05     mullw   0x05             	MULLW	0x05
0011d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0011de   f000
0011e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0011e4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0011e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011e8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0011ea   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
0011ec   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0011ee   0d05     mullw   0x05             	MULLW	0x05
0011f0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011f2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0011f4   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0011f6   f002
0011f8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011fa   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0011fc   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0011fe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001200   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
001202   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001204   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001206   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
001208   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00120a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00120c   6a05     clrf    0x05, 0x0        	CLRF	r0x05
00120e   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001210   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001212   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001214   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001216   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001218   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00121a   fff6
00121c   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
00121e   fff7
001220   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001222   fff8
001224   0009     tblrd*+                  	TBLRD*+	
001226   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001228   f004
00122a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00122c   ffe9
00122e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001230   ffea
001232   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001234   f002
001236   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001238   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00123a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00123c   ffe9
00123e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001240   ffea
001242   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001244   ffef
001246   0106     movlb   0x6              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001248   2b2d     incf    0x2d, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	333; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00124a   ef99     goto    0x001932         	GOTO	_00393_DS_
00124c   f00c
                                           _00353_DS_:
                                           ;	.line	337; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pC] & activatedservos[pC]){
00124e   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001250   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
001252   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001254   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001256   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001258   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
00125a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00125c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00125e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001260   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001262   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001264   fff6
001266   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001268   fff7
00126a   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00126c   fff8
00126e   0009     tblrd*+                  	TBLRD*+	
001270   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001272   f000
001274   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 2)
001276   51fd     movf    0xfd, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
001278   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00127a   0105     movlb   0x5              	BANKSEL	(_activatedservos + 2)
00127c   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
00127e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001280   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001282   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001284   ef99     goto    0x001932         	GOTO	_00393_DS_
001286   f00c
                                           ;	.line	340; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001288   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
00128a   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
00128c   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00128e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001290   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001292   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
001294   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001296   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001298   ffe9
00129a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00129c   ffea
00129e   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0012a0   f000
0012a2   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
0012a4   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
0012a6   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0012a8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0012aa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0012ac   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
0012ae   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0012b0   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0012b2   ffe9
0012b4   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0012b6   ffea
0012b8   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0012ba   f001
0012bc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0012be   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0012c0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0012c2   d08d     bra     0x0013de         	BRA	_00357_DS_
                                           ;	.line	341; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
0012c4   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
0012c6   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0012c8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0012ca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0012cc   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
0012ce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0012d0   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
0012d2   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
0012d4   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0012d6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0012d8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0012da   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
0012dc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0012de   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0012e0   ffe9
0012e2   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0012e4   ffea
0012e6   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0012e8   f002
0012ea   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0012ec   ffe9
0012ee   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0012f0   ffea
0012f2   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0012f4   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0012f6   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	342; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0012f8   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0012fa   0d05     mullw   0x05             	MULLW	0x05
0012fc   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0012fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001300   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001302   f000
001304   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001306   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001308   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00130a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00130c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00130e   ffe9
001310   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001312   ffea
001314   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	343; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001316   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001318   0d05     mullw   0x05             	MULLW	0x05
00131a   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00131c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00131e   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001320   f000
001322   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001324   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001326   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001328   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00132a   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00132c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00132e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001330   ffe9
001332   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001334   ffea
001336   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	344; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=mask[s];
001338   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00133a   0d05     mullw   0x05             	MULLW	0x05
00133c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00133e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001340   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001342   f000
001344   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001346   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001348   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00134a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00134c   0e02     movlw   0x02             	MOVLW	0x02
00134e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001350   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001352   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001354   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001356   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
001358   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00135a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00135c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00135e   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001360   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001362   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001364   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001366   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001368   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00136a   fff6
00136c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00136e   fff7
001370   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001372   fff8
001374   0009     tblrd*+                  	TBLRD*+	
001376   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001378   f002
00137a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00137c   ffe9
00137e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001380   ffea
001382   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001384   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001386   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
001388   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00138a   0d05     mullw   0x05             	MULLW	0x05
00138c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00138e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001390   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001392   f000
001394   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001396   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001398   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00139a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00139c   0e03     movlw   0x03             	MOVLW	0x03
00139e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013a2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013a4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013a6   ffe9
0013a8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013aa   ffea
0013ac   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	349; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
0013ae   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0013b0   0d05     mullw   0x05             	MULLW	0x05
0013b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0013b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0013b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0013b8   f000
0013ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0013bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013be   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0013c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013c2   0e04     movlw   0x04             	MOVLW	0x04
0013c4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013c6   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013cc   ffe9
0013ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013d0   ffea
0013d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	351; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
0013d4   0e01     movlw   0x01             	MOVLW	0x01
0013d6   0106     movlb   0x6              	BANKSEL	_SortServoTimings_numservos_1_35
0013d8   6f2d     movwf   0x2d, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
0013da   ef99     goto    0x001932         	GOTO	_00393_DS_
0013dc   f00c
                                           _00357_DS_:
                                           ;	.line	353; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
0013de   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
0013e0   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
0013e2   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0013e4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0013e6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0013e8   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
0013ea   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013ec   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013ee   ffe9
0013f0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013f2   ffea
0013f4   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0013f6   f000
0013f8   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
0013fa   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
0013fc   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0013fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001400   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001402   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001404   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001406   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001408   ffe9
00140a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00140c   ffea
00140e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001410   f001
001412   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001414   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001416   e002     bz      0x00141c         	BZ	_00487_DS_
001418   ef99     goto    0x001932         	GOTO	_00393_DS_
00141a   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00487_DS_:
00141c   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC] |= mask[s];
00141e   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001420   0d05     mullw   0x05             	MULLW	0x05
001422   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001424   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001426   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001428   f000
00142a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00142c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00142e   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001430   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001432   0e02     movlw   0x02             	MOVLW	0x02
001434   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001436   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001438   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
00143a   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00143c   0d05     mullw   0x05             	MULLW	0x05
00143e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001440   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001442   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001444   f002
001446   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001448   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
00144a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00144c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00144e   0e02     movlw   0x02             	MOVLW	0x02
001450   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001452   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001454   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001456   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001458   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
00145a   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00145c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00145e   6a05     clrf    0x05, 0x0        	CLRF	r0x05
001460   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001462   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001464   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001466   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001468   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
00146a   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00146c   fff6
00146e   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001470   fff7
001472   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001474   fff8
001476   0009     tblrd*+                  	TBLRD*+	
001478   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00147a   f004
00147c   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00147e   ffe9
001480   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001482   ffea
001484   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001486   f002
001488   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00148a   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00148c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00148e   ffe9
001490   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001492   ffea
001494   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001496   ffef
001498   0106     movlb   0x6              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	355; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
00149a   2b2d     incf    0x2d, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	357; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00149c   ef99     goto    0x001932         	GOTO	_00393_DS_
00149e   f00c
                                           _00362_DS_:
                                           ;	.line	362; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pD] & activatedservos[pD]){
0014a0   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
0014a2   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
0014a4   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0014a6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014a8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014aa   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0014ac   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014ae   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014b0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0014b2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0014b4   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0014b6   fff6
0014b8   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0014ba   fff7
0014bc   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0014be   fff8
0014c0   0009     tblrd*+                  	TBLRD*+	
0014c2   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0014c4   f000
0014c6   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 3)
0014c8   51fe     movf    0xfe, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0014ca   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014cc   0105     movlb   0x5              	BANKSEL	(_activatedservos + 3)
0014ce   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
0014d0   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014d2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0014d4   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
0014d6   ef99     goto    0x001932         	GOTO	_00393_DS_
0014d8   f00c
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
0014da   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
0014dc   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
0014de   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0014e0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014e2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014e4   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
0014e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0014ea   ffe9
0014ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0014ee   ffea
0014f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0014f2   f000
0014f4   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
0014f6   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
0014f8   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
0014fa   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0014fc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014fe   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001500   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001502   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001504   ffe9
001506   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001508   ffea
00150a   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
00150c   f001
00150e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001510   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001512   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001514   d08c     bra     0x00162e         	BRA	_00366_DS_
                                           ;	.line	366; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001516   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001518   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00151a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00151c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00151e   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001520   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001522   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
001524   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
001526   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001528   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00152a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00152c   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
00152e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001530   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001532   ffe9
001534   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001536   ffea
001538   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00153a   f002
00153c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00153e   ffe9
001540   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001542   ffea
001544   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001546   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001548   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	367; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
00154a   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00154c   0d05     mullw   0x05             	MULLW	0x05
00154e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001550   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001552   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001554   f000
001556   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001558   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00155a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00155c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00155e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001560   ffe9
001562   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001564   ffea
001566   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	368; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001568   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00156a   0d05     mullw   0x05             	MULLW	0x05
00156c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00156e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001570   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001572   f000
001574   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001576   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001578   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00157a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00157c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00157e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001580   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001582   ffe9
001584   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001586   ffea
001588   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	369; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
00158a   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00158c   0d05     mullw   0x05             	MULLW	0x05
00158e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001590   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001592   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001594   f000
001596   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001598   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00159a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00159c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00159e   0e02     movlw   0x02             	MOVLW	0x02
0015a0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015a2   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015a4   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015a6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015a8   ffe9
0015aa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015ac   ffea
0015ae   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	370; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=mask[s];
0015b0   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0015b2   0d05     mullw   0x05             	MULLW	0x05
0015b4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0015b6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0015b8   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0015ba   f000
0015bc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0015be   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c0   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0015c2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0015c4   0e03     movlw   0x03             	MOVLW	0x03
0015c6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015ca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015cc   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
0015ce   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
0015d0   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0015d2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0015d4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0015d6   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0015d8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0015da   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0015dc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0015de   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0015e0   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0015e2   fff6
0015e4   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0015e6   fff7
0015e8   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0015ea   fff8
0015ec   0009     tblrd*+                  	TBLRD*+	
0015ee   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0015f0   f002
0015f2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015f4   ffe9
0015f6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015f8   ffea
0015fa   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0015fc   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0015fe   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001600   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001602   0d05     mullw   0x05             	MULLW	0x05
001604   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001606   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001608   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00160a   f000
00160c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00160e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001610   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001612   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001614   0e04     movlw   0x04             	MOVLW	0x04
001616   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001618   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00161a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00161c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00161e   ffe9
001620   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001622   ffea
001624   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	374; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
001626   0e01     movlw   0x01             	MOVLW	0x01
001628   0106     movlb   0x6              	BANKSEL	_SortServoTimings_numservos_1_35
00162a   6f2d     movwf   0x2d, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
00162c   d182     bra     0x001932         	BRA	_00393_DS_
                                           _00366_DS_:
                                           ;	.line	376; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
00162e   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
001630   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
001632   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001634   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001636   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001638   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
00163a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00163c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00163e   ffe9
001640   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001642   ffea
001644   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001646   f000
001648   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
00164a   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
00164c   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
00164e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001650   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001652   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
001654   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001656   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001658   ffe9
00165a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00165c   ffea
00165e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001660   f001
001662   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001664   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001666   e001     bz      0x00166a         	BZ	_00492_DS_
001668   d164     bra     0x001932         	BRA	_00393_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00492_DS_:
00166a   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	377; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD] |= mask[s];
00166c   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00166e   0d05     mullw   0x05             	MULLW	0x05
001670   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001672   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001674   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001676   f000
001678   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00167a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00167c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00167e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001680   0e03     movlw   0x03             	MOVLW	0x03
001682   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001684   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001686   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
001688   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00168a   0d05     mullw   0x05             	MULLW	0x05
00168c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00168e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001690   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001692   f002
001694   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001696   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001698   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00169a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00169c   0e03     movlw   0x03             	MOVLW	0x03
00169e   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0016a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0016a2   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0016a4   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
0016a6   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
0016a8   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0016aa   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0016ac   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0016ae   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0016b0   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0016b2   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0016b4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016b6   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0016b8   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0016ba   fff6
0016bc   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0016be   fff7
0016c0   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0016c2   fff8
0016c4   0009     tblrd*+                  	TBLRD*+	
0016c6   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0016c8   f004
0016ca   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0016cc   ffe9
0016ce   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0016d0   ffea
0016d2   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0016d4   f002
0016d6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0016d8   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0016da   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0016dc   ffe9
0016de   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0016e0   ffea
0016e2   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
0016e4   ffef
0016e6   0106     movlb   0x6              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	378; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
0016e8   2b2d     incf    0x2d, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           ;	.line	380; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0016ea   d123     bra     0x001932         	BRA	_00393_DS_
                                           _00371_DS_:
                                           ;	.line	385; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pE] & activatedservos[pE]){
0016ec   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
0016ee   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
0016f0   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0016f2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0016f4   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0016f6   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0016f8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0016fa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0016fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016fe   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001700   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001702   fff6
001704   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001706   fff7
001708   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00170a   fff8
00170c   0009     tblrd*+                  	TBLRD*+	
00170e   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001710   f000
001712   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 4)
001714   51ff     movf    0xff, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001716   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001718   0105     movlb   0x5              	BANKSEL	(_activatedservos + 4)
00171a   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
00171c   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00171e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001720   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001722   d107     bra     0x001932         	BRA	_00393_DS_
                                           ;	.line	388; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001724   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
001726   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
001728   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00172a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00172c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00172e   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
001730   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001732   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001734   ffe9
001736   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001738   ffea
00173a   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00173c   f000
00173e   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
001740   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
001742   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
001744   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001746   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001748   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
00174a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00174c   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
00174e   ffe9
001750   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001752   ffea
001754   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001756   f001
001758   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00175a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00175c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00175e   d08b     bra     0x001876         	BRA	_00375_DS_
                                           ;	.line	389; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001760   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001762   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
001764   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001766   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001768   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
00176a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00176c   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
00176e   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
001770   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001772   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001774   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001776   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
001778   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00177a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00177c   ffe9
00177e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001780   ffea
001782   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001784   f002
001786   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001788   ffe9
00178a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00178c   ffea
00178e   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001790   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001792   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	390; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
001794   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001796   0d05     mullw   0x05             	MULLW	0x05
001798   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00179a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00179c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00179e   f000
0017a0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017a2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017a4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0017a6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017a8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017aa   ffe9
0017ac   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017ae   ffea
0017b0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	391; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
0017b2   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0017b4   0d05     mullw   0x05             	MULLW	0x05
0017b6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017b8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017ba   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017bc   f000
0017be   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017c0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017c2   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0017c4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017c6   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0017c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017cc   ffe9
0017ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017d0   ffea
0017d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	392; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
0017d4   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0017d6   0d05     mullw   0x05             	MULLW	0x05
0017d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017de   f000
0017e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017e4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0017e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017e8   0e02     movlw   0x02             	MOVLW	0x02
0017ea   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017ec   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0017ee   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017f0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017f2   ffe9
0017f4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017f6   ffea
0017f8   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
0017fa   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0017fc   0d05     mullw   0x05             	MULLW	0x05
0017fe   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001800   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001802   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001804   f000
001806   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001808   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00180a   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00180c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00180e   0e03     movlw   0x03             	MOVLW	0x03
001810   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001812   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001814   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001816   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001818   ffe9
00181a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00181c   ffea
00181e   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	394; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=mask[s];
001820   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001822   0d05     mullw   0x05             	MULLW	0x05
001824   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001826   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001828   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00182a   f000
00182c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00182e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001830   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001832   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001834   0e04     movlw   0x04             	MOVLW	0x04
001836   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001838   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00183a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00183c   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
00183e   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
001840   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
001842   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001844   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001846   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001848   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00184a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00184c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00184e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001850   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001852   fff6
001854   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001856   fff7
001858   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00185a   fff8
00185c   0009     tblrd*+                  	TBLRD*+	
00185e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001860   f002
001862   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001864   ffe9
001866   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001868   ffea
00186a   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
00186c   ffef
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00186e   0e01     movlw   0x01             	MOVLW	0x01
001870   0106     movlb   0x6              	BANKSEL	_SortServoTimings_numservos_1_35
001872   6f2d     movwf   0x2d, 0x1        	MOVWF	_SortServoTimings_numservos_1_35, B
001874   d05e     bra     0x001932         	BRA	_00393_DS_
                                           _00375_DS_:
                                           ;	.line	397; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001876   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
001878   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
00187a   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
00187c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00187e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001880   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
001882   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001884   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001886   ffe9
001888   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00188a   ffea
00188c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00188e   f000
001890   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
001892   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
001894   252b     addwf   0x2b, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_35, W, B
001896   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001898   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00189a   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
00189c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00189e   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0018a0   ffe9
0018a2   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0018a4   ffea
0018a6   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0018a8   f001
0018aa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0018ac   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0018ae   e001     bz      0x0018b2         	BZ	_00497_DS_
0018b0   d040     bra     0x001932         	BRA	_00393_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00497_DS_:
0018b2   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	398; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE] |= mask[s];
0018b4   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0018b6   0d05     mullw   0x05             	MULLW	0x05
0018b8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018ba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0018bc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0018be   f000
0018c0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018c2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018c4   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0018c6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0018c8   0e04     movlw   0x04             	MOVLW	0x04
0018ca   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018cc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ce   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x02
                                           ; removed redundant BANKSEL
0018d0   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0018d2   0d05     mullw   0x05             	MULLW	0x05
0018d4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018d6   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0018d8   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0018da   f002
0018dc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018de   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e0   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0018e2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0018e4   0e04     movlw   0x04             	MOVLW	0x04
0018e6   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ea   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0018ec   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
0018ee   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
0018f0   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_35, W, B
0018f2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0018f4   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0018f6   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0018f8   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0018fa   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0018fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0018fe   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001900   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
001902   fff6
001904   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001906   fff7
001908   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
00190a   fff8
00190c   0009     tblrd*+                  	TBLRD*+	
00190e   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001910   f004
001912   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001914   ffe9
001916   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001918   ffea
00191a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00191c   f002
00191e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001920   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
001922   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001924   ffe9
001926   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001928   ffea
00192a   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
00192c   ffef
00192e   0106     movlb   0x6              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	399; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001930   2b2d     incf    0x2d, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_35, F, B
                                           _00393_DS_:
001932   0106     movlb   0x6              	BANKSEL	_SortServoTimings_s_1_35
                                           ;	.line	280; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
001934   2b2e     incf    0x2e, 0x1, 0x1   	INCF	_SortServoTimings_s_1_35, F, B
001936   efab     goto    0x000d56         	GOTO	_00392_DS_
001938   f006
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
                                           _00381_DS_:
00193a   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	405; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pA] |= timings[t][pA];
00193c   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00193e   0d05     mullw   0x05             	MULLW	0x05
001940   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001942   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001944   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001946   f000
001948   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00194a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00194c   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00194e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001950   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001952   ffe9
001954   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001956   ffea
001958   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00195a   f000
00195c   0105     movlb   0x5              	BANKSEL	_mascaratotal
00195e   51fb     movf    0xfb, 0x0, 0x1   	MOVF	_mascaratotal, W, B
001960   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001962   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001964   6ffb     movwf   0xfb, 0x1        	MOVWF	_mascaratotal, B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001966   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	406; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pB] |= timings[t][pB];
001968   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00196a   0d05     mullw   0x05             	MULLW	0x05
00196c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00196e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001970   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001972   f000
001974   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001976   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001978   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
00197a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00197c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00197e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001980   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001982   ffe9
001984   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001986   ffea
001988   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00198a   f000
00198c   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 1)
00198e   51fc     movf    0xfc, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
001990   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001992   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001994   6ffc     movwf   0xfc, 0x1        	MOVWF	(_mascaratotal + 1), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
001996   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	408; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pC] |= timings[t][pC];
001998   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
00199a   0d05     mullw   0x05             	MULLW	0x05
00199c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00199e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019a0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019a2   f000
0019a4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019a6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019a8   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0019aa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019ac   0e02     movlw   0x02             	MOVLW	0x02
0019ae   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019b0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019b2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019b4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019b6   ffe9
0019b8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ba   ffea
0019bc   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019be   f000
0019c0   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 2)
0019c2   51fd     movf    0xfd, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
0019c4   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019c8   6ffd     movwf   0xfd, 0x1        	MOVWF	(_mascaratotal + 2), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0019ca   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	411; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pD] |= timings[t][pD];
0019cc   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
0019ce   0d05     mullw   0x05             	MULLW	0x05
0019d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0019d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019d6   f000
0019d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019dc   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0019de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019e0   0e03     movlw   0x03             	MOVLW	0x03
0019e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019e4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019e6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019ea   ffe9
0019ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ee   ffea
0019f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019f2   f000
0019f4   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 3)
0019f6   51fe     movf    0xfe, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0019f8   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019fa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019fc   6ffe     movwf   0xfe, 0x1        	MOVWF	(_mascaratotal + 3), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_35 and store in r0x00
0019fe   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	414; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pE] |= timings[t][pE];
001a00   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_35, W, B
001a02   0d05     mullw   0x05             	MULLW	0x05
001a04   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001a06   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001a08   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001a0a   f000
001a0c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001a0e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a10   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
001a12   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001a14   0e04     movlw   0x04             	MOVLW	0x04
001a16   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a18   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001a1a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001a1c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001a1e   ffe9
001a20   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001a22   ffea
001a24   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001a26   f000
001a28   0105     movlb   0x5              	BANKSEL	(_mascaratotal + 4)
001a2a   51ff     movf    0xff, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001a2c   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001a2e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001a30   6fff     movwf   0xff, 0x1        	MOVWF	(_mascaratotal + 4), B
001a32   0106     movlb   0x6              	BANKSEL	_SortServoTimings_numservos_1_35
                                           ;	.line	417; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos += numservos;
001a34   512d     movf    0x2d, 0x0, 0x1   	MOVF	_SortServoTimings_numservos_1_35, W, B
001a36   0106     movlb   0x6              	BANKSEL	_SortServoTimings_totalservos_1_35
001a38   272c     addwf   0x2c, 0x1, 0x1   	ADDWF	_SortServoTimings_totalservos_1_35, F, B
001a3a   0106     movlb   0x6              	BANKSEL	_SortServoTimings_t_1_35
                                           ;	.line	418; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t++;
001a3c   2b2b     incf    0x2b, 0x1, 0x1   	INCF	_SortServoTimings_t_1_35, F, B
001a3e   efa0     goto    0x000d40         	GOTO	_00382_DS_
001a40   f006
                                           _00384_DS_:
001a42   0105     movlb   0x5              	BANKSEL	_needreordering
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=0;  // This indicates that servo timings are sorted.
001a44   6bf1     clrf    0xf1, 0x1        	CLRF	_needreordering, B
                                           ;	.line	422; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
001a46   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
001a48   f006
001a4a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
001a4c   f005
001a4e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001a50   f004
001a52   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001a54   f003
001a56   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001a58   f002
001a5a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001a5c   f001
001a5e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001a60   f000
001a62   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
0035b6   0105     movlb   0x5              	BANKSEL	_activatedservos
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA | activatedservos[pA];
0035b8   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_activatedservos, W, B
0035ba   1280     iorwf   0x80, 0x1, 0x0   	IORWF	_PORTA, F
                                           ; removed redundant BANKSEL
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB | activatedservos[pB];
0035bc   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
0035be   1281     iorwf   0x81, 0x1, 0x0   	IORWF	_PORTB, F
                                           ; removed redundant BANKSEL
                                           ;	.line	235; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC | activatedservos[pC];
0035c0   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
0035c2   1282     iorwf   0x82, 0x1, 0x0   	IORWF	_PORTC, F
                                           ; removed redundant BANKSEL
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD | activatedservos[pD];
0035c4   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
0035c6   1283     iorwf   0x83, 0x1, 0x0   	IORWF	_PORTD, F
                                           ; removed redundant BANKSEL
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE | activatedservos[pE];
0035c8   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
0035ca   1284     iorwf   0x84, 0x1, 0x0   	IORWF	_PORTE, F
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
0035cc   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void ServosPulseDown()
00287c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00287e   ffe5
002880   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002882   ffd9
002884   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002886   ffe5
002888   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00288a   ffe5
00288c   0106     movlb   0x6              	BANKSEL	_ServosPulseDown_timingindex_1_30
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	volatile unsigned char timingindex = 0;
00288e   6b2a     clrf    0x2a, 0x1        	CLRF	_ServosPulseDown_timingindex_1_30, B
002890   0105     movlb   0x5              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
002892   6bf2     clrf    0xf2, 0x1        	CLRF	_timedivision, B
                                           _00306_DS_:
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (timevalue[timingindex] == timedivision)
002894   0e00     movlw   0x00             	MOVLW	LOW(_timevalue)
002896   0106     movlb   0x6              	BANKSEL	_ServosPulseDown_timingindex_1_30
002898   252a     addwf   0x2a, 0x0, 0x1   	ADDWF	_ServosPulseDown_timingindex_1_30, W, B
00289a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00289c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00289e   0e06     movlw   0x06             	MOVLW	HIGH(_timevalue)
0028a0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0028a2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0028a4   ffe9
0028a6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0028a8   ffea
0028aa   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0028ac   f000
0028ae   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0028b0   0105     movlb   0x5              	BANKSEL	_timedivision
0028b2   19f2     xorwf   0xf2, 0x0, 0x1   	XORWF	_timedivision, W, B
0028b4   e001     bz      0x0028b8         	BZ	_00317_DS_
0028b6   d06a     bra     0x00298c         	BRA	_00304_DS_
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           _00317_DS_:
0028b8   0106     movlb   0x6              	BANKSEL	_ServosPulseDown_timingindex_1_30
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA ^ timings[timingindex][pA];
0028ba   512a     movf    0x2a, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
0028bc   0d05     mullw   0x05             	MULLW	0x05
0028be   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0028c0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0028c2   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0028c4   f000
0028c6   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0028c8   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0028ca   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0028cc   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0028ce   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0028d0   ffe9
0028d2   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0028d4   ffea
0028d6   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0028d8   f000
0028da   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0028dc   1a80     xorwf   0x80, 0x1, 0x0   	XORWF	_PORTA, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB ^ timings[timingindex][pB];
0028de   512a     movf    0x2a, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
0028e0   0d05     mullw   0x05             	MULLW	0x05
0028e2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0028e4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0028e6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0028e8   f000
0028ea   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0028ec   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0028ee   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
0028f0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0028f2   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0028f4   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0028f6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0028f8   ffe9
0028fa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0028fc   ffea
0028fe   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
002900   f000
002902   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002904   1a81     xorwf   0x81, 0x1, 0x0   	XORWF	_PORTB, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC ^ timings[timingindex][pC];
002906   512a     movf    0x2a, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
002908   0d05     mullw   0x05             	MULLW	0x05
00290a   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00290c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00290e   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
002910   f000
002912   0e00     movlw   0x00             	MOVLW	LOW(_timings)
002914   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002916   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
002918   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00291a   0e02     movlw   0x02             	MOVLW	0x02
00291c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00291e   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002920   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
002922   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
002924   ffe9
002926   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
002928   ffea
00292a   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00292c   f000
00292e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002930   1a82     xorwf   0x82, 0x1, 0x0   	XORWF	_PORTC, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD ^ timings[timingindex][pD];
002932   512a     movf    0x2a, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
002934   0d05     mullw   0x05             	MULLW	0x05
002936   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
002938   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00293a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00293c   f000
00293e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
002940   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002942   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
002944   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002946   0e03     movlw   0x03             	MOVLW	0x03
002948   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00294a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00294c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00294e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
002950   ffe9
002952   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
002954   ffea
002956   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
002958   f000
00295a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00295c   1a83     xorwf   0x83, 0x1, 0x0   	XORWF	_PORTD, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_30 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE ^ timings[timingindex][pE];
00295e   512a     movf    0x2a, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_30, W, B
002960   0d05     mullw   0x05             	MULLW	0x05
002962   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
002964   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002966   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
002968   f000
00296a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00296c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00296e   0e05     movlw   0x05             	MOVLW	HIGH(_timings)
002970   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002972   0e04     movlw   0x04             	MOVLW	0x04
002974   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002976   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002978   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00297a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00297c   ffe9
00297e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
002980   ffea
002982   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
002984   f000
002986   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002988   1a84     xorwf   0x84, 0x1, 0x0   	XORWF	_PORTE, F
                                           ; removed redundant BANKSEL
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timingindex++;
00298a   2b2a     incf    0x2a, 0x1, 0x1   	INCF	_ServosPulseDown_timingindex_1_30, F, B
                                           _00304_DS_:
00298c   0e07     movlw   0x07             	movlw	7
00298e   6f29     movwf   0x29, 0x1        	movwf	_loopvar
                                           bucle:
002990   0000     nop                      	NOP
002992   0000     nop                      	NOP
002994   0000     nop                      	NOP
002996   0000     nop                      	NOP
002998   0000     nop                      	NOP
00299a   0000     nop                      	NOP
00299c   0000     nop                      	NOP
00299e   0000     nop                      	NOP
0029a0   0000     nop                      	NOP
0029a2   0000     nop                      	NOP
0029a4   0000     nop                      	NOP
0029a6   2f29     decfsz  0x29, 0x1, 0x1   	decfsz	_loopvar,1
0029a8   efc8     goto    0x002990         	goto	bucle
0029aa   f014
                                           	
0029ac   0105     movlb   0x5              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
0029ae   2bf2     incf    0xf2, 0x1, 0x1   	INCF	_timedivision, F, B
0029b0   0efb     movlw   0xfb             	MOVLW	0xfb
                                           ; removed redundant BANKSEL
0029b2   5df2     subwf   0xf2, 0x0, 0x1   	SUBWF	_timedivision, W, B
0029b4   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
0029b6   d76e     bra     0x002894         	BRA	_00306_DS_
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
0029b8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0029ba   f001
0029bc   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0029be   f000
0029c0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0029c2   ffd9
0029c4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void servos_init()
002da8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002daa   ffe5
002dac   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002dae   ffe5
002db0   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002db2   ffe5
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
002db4   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00277_DS_:
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[a]=255;  //Filling up the servovalues table to 255.
002db6   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
002db8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002dba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002dbc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002dbe   0e05     movlw   0x05             	MOVLW	HIGH(_servovalues)
002dc0   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002dc2   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
002dc4   ffe9
002dc6   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
002dc8   ffea
002dca   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ;	.line	160; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][a]= DefaultSERVOMIN; // Setting min servo position to 1000 usec.
002dcc   0e96     movlw   0x96             	MOVLW	LOW(_maxminpos)
002dce   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002dd0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002dd2   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002dd4   0e05     movlw   0x05             	MOVLW	HIGH(_maxminpos)
002dd6   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002dd8   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
002dda   ffe9
002ddc   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
002dde   ffea
002de0   0e40     movlw   0x40             	MOVLW	0x40
002de2   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][a]= DefaultSERVOMAX; // Setting max servo position to 2000 usec.
002de4   0eb4     movlw   0xb4             	MOVLW	LOW(_maxminpos + 30)
002de6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002de8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002dea   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002dec   0e05     movlw   0x05             	MOVLW	HIGH(_maxminpos + 30)
002dee   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002df0   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
002df2   ffe9
002df4   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
002df6   ffea
002df8   0ec0     movlw   0xc0             	MOVLW	0xc0
002dfa   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
002dfc   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
002dfe   0e1e     movlw   0x1e             	MOVLW	0x1e
002e00   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
002e02   e3d9     bnc     0x002db6         	BNC	_00277_DS_
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
002e04   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00279_DS_:
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[a]=0x00;  // Setting all pins as deactivated as servo.
002e06   0ef6     movlw   0xf6             	MOVLW	LOW(_activatedservos)
002e08   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002e0a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002e0c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002e0e   0e05     movlw   0x05             	MOVLW	HIGH(_activatedservos)
002e10   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002e12   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
002e14   ffe9
002e16   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
002e18   ffea
002e1a   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
002e1c   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
002e1e   0e05     movlw   0x05             	MOVLW	0x05
002e20   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
002e22   e3f1     bnc     0x002e06         	BNC	_00279_DS_
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 0; // Disable global HP interrupts
002e24   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	_INTCONbits, 7
                                           ;	.line	169; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 0; // Disable global LP interrupts
002e26   9cf2     bcf     0xf2, 0x6, 0x0   	BCF	_INTCONbits, 6
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=0x01; 			//timer 1 prescaler 1 source is internal oscillator
002e28   0e01     movlw   0x01             	MOVLW	0x01
002e2a   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H=0xFF; 			// First value on timer to start up...
002e2c   0eff     movlw   0xff             	MOVLW	0xff
002e2e   68cf     setf    0xcf, 0x0        	SETF	_TMR1H
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L=0x00; 			// ...now the first interrupt will be generated by timer after 9 ms.
002e30   6ace     clrf    0xce, 0x0        	CLRF	_TMR1L
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	IPR1bits.TMR1IP = 1; 	// INT_HIGH_PRIORITY
002e32   809f     bsf     0x9f, 0x0, 0x0   	BSF	_IPR1bits, 0
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF = 0; 	// Setting flag to 0
002e34   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIE1bits.TMR1IE = 1; 	// INT_ENABLE
002e36   809d     bsf     0x9d, 0x0, 0x0   	BSF	_PIE1bits, 0
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CONbits.TMR1ON   = 1; // Starting TMR1
002e38   80cd     bsf     0xcd, 0x0, 0x0   	BSF	_T1CONbits, 0
                                           ;	.line	179; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 1; // Enable global HP interrupts
002e3a   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 1; // Enable global LP interrupts
002e3c   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
002e3e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002e40   f002
002e42   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002e44   f001
002e46   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002e48   f000
002e4a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__toggle	code
                                           _toggle:
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	void toggle(u8 pin)
0034f6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0034f8   ffe5
0034fa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0034fc   ffd9
0034fe   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003500   ffe5
003502   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003504   ffe5
003506   0e02     movlw   0x02             	MOVLW	0x02
003508   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00350a   f000
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	state = digitalread(pin);
00350c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00350e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003510   ecb9     call    0x002372, 0x0    	CALL	_digitalread
003512   f011
003514   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003516   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	digitalwrite(pin, state^1);
003518   7001     btg     0x01, 0x0, 0x0   	BTG	r0x01, 0
00351a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00351c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00351e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003520   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003522   ec32     call    0x001a64, 0x0    	CALL	_digitalwrite
003524   f00d
003526   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
003528   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	52; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	}
00352a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00352c   f001
00352e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003530   f000
003532   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003534   ffd9
003536   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	u8 digitalread(u8 pin)
002372   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002374   ffe5
002376   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002378   ffd9
00237a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00237c   ffe5
00237e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002380   ffe5
002382   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002384   ffe5
002386   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002388   ffe5
00238a   0e02     movlw   0x02             	MOVLW	0x02
00238c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00238e   f000
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	switch (port[pin])
002390   0ed6     movlw   0xd6             	MOVLW	LOW(_port)
002392   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002394   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002396   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002398   0e2f     movlw   0x2f             	MOVLW	HIGH(_port)
00239a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00239c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00239e   0e00     movlw   0x00             	MOVLW	UPPER(_port)
0023a0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0023a2   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0023a4   fff6
0023a6   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0023a8   fff7
0023aa   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0023ac   fff8
0023ae   0009     tblrd*+                  	TBLRD*+	
0023b0   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0023b2   f001
0023b4   0e05     movlw   0x05             	MOVLW	0x05
0023b6   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
0023b8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0023ba   d0c2     bra     0x002540         	BRA	_00258_DS_
0023bc   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0023be   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0023c0   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
0023c2   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0023c4   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0023c6   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0023c8   0bfc     andlw   0xfc             	ANDLW	0xfc
0023ca   0fda     addlw   0xda             	ADDLW	LOW(_00265_DS_)
0023cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023ce   0e23     movlw   0x23             	MOVLW	HIGH(_00265_DS_)
0023d0   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0023d2   0e00     movlw   0x00             	MOVLW	UPPER(_00265_DS_)
0023d4   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0023d6   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0023d8   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00265_DS_:
0023da   eff7     goto    0x0023ee         	GOTO	_00253_DS_
0023dc   f011
0023de   ef19     goto    0x002432         	GOTO	_00254_DS_
0023e0   f012
0023e2   ef3b     goto    0x002476         	GOTO	_00255_DS_
0023e4   f012
0023e6   ef5d     goto    0x0024ba         	GOTO	_00256_DS_
0023e8   f012
0023ea   ef7f     goto    0x0024fe         	GOTO	_00257_DS_
0023ec   f012
                                           _00253_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTA & mask[pin])!=0);
0023ee   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
0023f0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0023f2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0023f4   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0023f6   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0023f8   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0023fa   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0023fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0023fe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002400   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002402   fff6
002404   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002406   fff7
002408   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00240a   fff8
00240c   0009     tblrd*+                  	TBLRD*+	
00240e   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002410   f001
002412   5080     movf    0x80, 0x0, 0x0   	MOVF	_PORTA, W
002414   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
002416   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002418   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
00241a   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
00241c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00241e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002420   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
002422   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002424   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
002426   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
002428   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00242a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00242c   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
00242e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002430   d088     bra     0x002542         	BRA	_00259_DS_
                                           _00254_DS_:
                                           ;	.line	60; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTB & mask[pin])!=0);
002432   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
002434   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002436   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002438   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00243a   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
00243c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00243e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002440   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002442   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002444   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002446   fff6
002448   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00244a   fff7
00244c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00244e   fff8
002450   0009     tblrd*+                  	TBLRD*+	
002452   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002454   f001
002456   5081     movf    0x81, 0x0, 0x0   	MOVF	_PORTB, W
002458   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
00245a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00245c   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
00245e   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
002460   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002462   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002464   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
002466   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002468   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
00246a   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
00246c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00246e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002470   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
002472   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002474   d066     bra     0x002542         	BRA	_00259_DS_
                                           _00255_DS_:
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTC & mask[pin])!=0);
002476   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
002478   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00247a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00247c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00247e   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
002480   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002482   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002484   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002486   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002488   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00248a   fff6
00248c   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00248e   fff7
002490   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002492   fff8
002494   0009     tblrd*+                  	TBLRD*+	
002496   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002498   f001
00249a   5082     movf    0x82, 0x0, 0x0   	MOVF	_PORTC, W
00249c   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
00249e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0024a0   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0024a2   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
0024a4   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0024a6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0024a8   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
0024aa   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0024ac   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0024ae   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
0024b0   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0024b2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0024b4   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
0024b6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0024b8   d044     bra     0x002542         	BRA	_00259_DS_
                                           _00256_DS_:
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTD & mask[pin])!=0);
0024ba   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
0024bc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0024be   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0024c0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0024c2   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0024c4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0024c6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0024c8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0024ca   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0024cc   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0024ce   fff6
0024d0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0024d2   fff7
0024d4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0024d6   fff8
0024d8   0009     tblrd*+                  	TBLRD*+	
0024da   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0024dc   f001
0024de   5083     movf    0x83, 0x0, 0x0   	MOVF	_PORTD, W
0024e0   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
0024e2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0024e4   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0024e6   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
0024e8   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0024ea   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0024ec   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
0024ee   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0024f0   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0024f2   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
0024f4   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0024f6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0024f8   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
0024fa   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0024fc   d022     bra     0x002542         	BRA	_00259_DS_
                                           _00257_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTE & mask[pin])!=0);
0024fe   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002500   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002502   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
002504   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002506   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
002508   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00250a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00250c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00250e   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002510   fff6
002512   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002514   fff7
002516   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002518   fff8
00251a   0009     tblrd*+                  	TBLRD*+	
00251c   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
00251e   f000
002520   5084     movf    0x84, 0x0, 0x0   	MOVF	_PORTE, W
002522   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
002524   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002526   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
002528   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
00252a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00252c   6a00     clrf    0x00, 0x0        	CLRF	r0x00
00252e   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
002530   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002532   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
002534   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
002536   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002538   6a00     clrf    0x00, 0x0        	CLRF	r0x00
00253a   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
00253c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00253e   d001     bra     0x002542         	BRA	_00259_DS_
                                           _00258_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return 0;
002540   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00259_DS_:
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	}
002542   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002544   f003
002546   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002548   f002
00254a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00254c   f001
00254e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002550   f000
002552   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002554   ffd9
002556   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	void digitalwrite(u8 pin, u8 state)
001a64   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001a66   ffe5
001a68   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001a6a   ffd9
001a6c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001a6e   ffe5
001a70   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001a72   ffe5
001a74   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001a76   ffe5
001a78   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001a7a   ffe5
001a7c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
001a7e   ffe5
001a80   0e02     movlw   0x02             	MOVLW	0x02
001a82   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
001a84   f000
001a86   0e03     movlw   0x03             	MOVLW	0x03
001a88   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
001a8a   f001
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	switch (port[pin])
001a8c   0ed6     movlw   0xd6             	MOVLW	LOW(_port)
001a8e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001a90   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001a92   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001a94   0e2f     movlw   0x2f             	MOVLW	HIGH(_port)
001a96   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001a98   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001a9a   0e00     movlw   0x00             	MOVLW	UPPER(_port)
001a9c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001a9e   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001aa0   fff6
001aa2   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001aa4   fff7
001aa6   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001aa8   fff8
001aaa   0009     tblrd*+                  	TBLRD*+	
001aac   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001aae   f002
001ab0   0e05     movlw   0x05             	MOVLW	0x05
001ab2   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
001ab4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001ab6   d111     bra     0x001cda         	BRA	_00227_DS_
001ab8   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
001aba   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
001abc   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
001abe   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
001ac0   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
001ac2   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
001ac4   0bfc     andlw   0xfc             	ANDLW	0xfc
001ac6   0fd6     addlw   0xd6             	ADDLW	LOW(_00248_DS_)
001ac8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001aca   0e1a     movlw   0x1a             	MOVLW	HIGH(_00248_DS_)
001acc   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
001ace   0e00     movlw   0x00             	MOVLW	UPPER(_00248_DS_)
001ad0   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
001ad2   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
001ad4   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00248_DS_:
001ad6   ef75     goto    0x001aea         	GOTO	_00206_DS_
001ad8   f00d
001ada   efa7     goto    0x001b4e         	GOTO	_00210_DS_
001adc   f00d
001ade   efd9     goto    0x001bb2         	GOTO	_00214_DS_
001ae0   f00d
001ae2   ef0b     goto    0x001c16         	GOTO	_00218_DS_
001ae4   f00e
001ae6   ef3d     goto    0x001c7a         	GOTO	_00222_DS_
001ae8   f00e
                                           _00206_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATA=LATA | mask[pin];
001aea   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001aec   e015     bz      0x001b18         	BZ	_00208_DS_
001aee   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001af0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001af2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001af4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001af6   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001af8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001afa   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001afc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001afe   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001b00   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001b02   fff6
001b04   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001b06   fff7
001b08   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001b0a   fff8
001b0c   0009     tblrd*+                  	TBLRD*+	
001b0e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001b10   f002
001b12   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001b14   1289     iorwf   0x89, 0x1, 0x0   	IORWF	_LATA, F
001b16   d0e1     bra     0x001cda         	BRA	_00227_DS_
                                           _00208_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATA=LATA & (255-mask[pin]);
001b18   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001b1a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001b1c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001b1e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001b20   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001b22   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001b24   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001b26   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001b28   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001b2a   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001b2c   fff6
001b2e   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001b30   fff7
001b32   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001b34   fff8
001b36   0009     tblrd*+                  	TBLRD*+	
001b38   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001b3a   f002
001b3c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001b3e   08ff     sublw   0xff             	SUBLW	0xff
001b40   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001b42   5089     movf    0x89, 0x0, 0x0   	MOVF	_LATA, W
001b44   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001b46   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001b48   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
001b4a   6e89     movwf   0x89, 0x0        	MOVWF	_LATA
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
001b4c   d0c6     bra     0x001cda         	BRA	_00227_DS_
                                           _00210_DS_:
                                           ;	.line	61; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATB=LATB | mask[pin]; 
001b4e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001b50   e015     bz      0x001b7c         	BZ	_00212_DS_
001b52   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001b54   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001b56   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001b58   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001b5a   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001b5c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001b5e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001b60   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001b62   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001b64   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001b66   fff6
001b68   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001b6a   fff7
001b6c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001b6e   fff8
001b70   0009     tblrd*+                  	TBLRD*+	
001b72   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001b74   f002
001b76   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001b78   128a     iorwf   0x8a, 0x1, 0x0   	IORWF	_LATB, F
001b7a   d0af     bra     0x001cda         	BRA	_00227_DS_
                                           _00212_DS_:
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATB=LATB & (255-mask[pin]);
001b7c   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001b7e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001b80   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001b82   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001b84   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001b86   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001b88   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001b8a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001b8c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001b8e   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001b90   fff6
001b92   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001b94   fff7
001b96   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001b98   fff8
001b9a   0009     tblrd*+                  	TBLRD*+	
001b9c   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001b9e   f002
001ba0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001ba2   08ff     sublw   0xff             	SUBLW	0xff
001ba4   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001ba6   508a     movf    0x8a, 0x0, 0x0   	MOVF	_LATB, W
001ba8   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001baa   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001bac   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
001bae   6e8a     movwf   0x8a, 0x0        	MOVWF	_LATB
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
001bb0   d094     bra     0x001cda         	BRA	_00227_DS_
                                           _00214_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATC=LATC | mask[pin];
001bb2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001bb4   e015     bz      0x001be0         	BZ	_00216_DS_
001bb6   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001bb8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001bba   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001bbc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001bbe   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001bc0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001bc2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001bc4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001bc6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001bc8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001bca   fff6
001bcc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001bce   fff7
001bd0   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001bd2   fff8
001bd4   0009     tblrd*+                  	TBLRD*+	
001bd6   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001bd8   f002
001bda   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001bdc   128b     iorwf   0x8b, 0x1, 0x0   	IORWF	_LATC, F
001bde   d07d     bra     0x001cda         	BRA	_00227_DS_
                                           _00216_DS_:
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATC=LATC & (255-mask[pin]);
001be0   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001be2   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001be4   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001be6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001be8   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001bea   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001bec   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001bee   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001bf0   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001bf2   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001bf4   fff6
001bf6   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001bf8   fff7
001bfa   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001bfc   fff8
001bfe   0009     tblrd*+                  	TBLRD*+	
001c00   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001c02   f002
001c04   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001c06   08ff     sublw   0xff             	SUBLW	0xff
001c08   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001c0a   508b     movf    0x8b, 0x0, 0x0   	MOVF	_LATC, W
001c0c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001c0e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001c10   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
001c12   6e8b     movwf   0x8b, 0x0        	MOVWF	_LATC
                                           ;	.line	67; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
001c14   d062     bra     0x001cda         	BRA	_00227_DS_
                                           _00218_DS_:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATD=LATD | mask[pin]; 
001c16   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001c18   e015     bz      0x001c44         	BZ	_00220_DS_
001c1a   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001c1c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001c1e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001c20   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001c22   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001c24   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001c26   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001c28   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001c2a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001c2c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001c2e   fff6
001c30   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001c32   fff7
001c34   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001c36   fff8
001c38   0009     tblrd*+                  	TBLRD*+	
001c3a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001c3c   f002
001c3e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001c40   128c     iorwf   0x8c, 0x1, 0x0   	IORWF	_LATD, F
001c42   d04b     bra     0x001cda         	BRA	_00227_DS_
                                           _00220_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATD=LATD & (255-mask[pin]);
001c44   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001c46   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001c48   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001c4a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001c4c   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001c4e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001c50   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001c52   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001c54   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001c56   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001c58   fff6
001c5a   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001c5c   fff7
001c5e   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001c60   fff8
001c62   0009     tblrd*+                  	TBLRD*+	
001c64   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001c66   f002
001c68   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001c6a   08ff     sublw   0xff             	SUBLW	0xff
001c6c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001c6e   508c     movf    0x8c, 0x0, 0x0   	MOVF	_LATD, W
001c70   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001c72   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001c74   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
001c76   6e8c     movwf   0x8c, 0x0        	MOVWF	_LATD
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
001c78   d030     bra     0x001cda         	BRA	_00227_DS_
                                           _00222_DS_:
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATE=LATE | mask[pin]; 
001c7a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001c7c   e015     bz      0x001ca8         	BZ	_00224_DS_
001c7e   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001c80   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001c82   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001c84   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001c86   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001c88   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001c8a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001c8c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001c8e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001c90   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
001c92   fff6
001c94   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
001c96   fff7
001c98   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
001c9a   fff8
001c9c   0009     tblrd*+                  	TBLRD*+	
001c9e   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
001ca0   f001
001ca2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001ca4   128d     iorwf   0x8d, 0x1, 0x0   	IORWF	_LATE, F
001ca6   d019     bra     0x001cda         	BRA	_00227_DS_
                                           _00224_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATE=LATE & (255-mask[pin]);
001ca8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001caa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001cac   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001cae   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001cb0   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001cb2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001cb4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001cb6   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001cb8   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001cba   fff6
001cbc   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001cbe   fff7
001cc0   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
001cc2   fff8
001cc4   0009     tblrd*+                  	TBLRD*+	
001cc6   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001cc8   f000
001cca   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001ccc   08ff     sublw   0xff             	SUBLW	0xff
001cce   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001cd0   508d     movf    0x8d, 0x0, 0x0   	MOVF	_LATE, W
001cd2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001cd4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001cd6   1401     andwf   0x01, 0x0, 0x0   	ANDWF	r0x01, W
001cd8   6e8d     movwf   0x8d, 0x0        	MOVWF	_LATE
                                           _00227_DS_:
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	}
001cda   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001cdc   f004
001cde   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001ce0   f003
001ce2   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001ce4   f002
001ce6   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001ce8   f001
001cea   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001cec   f000
001cee   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001cf0   ffd9
001cf2   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	void pinmode(u8 pin, u8 state)
001cf4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001cf6   ffe5
001cf8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001cfa   ffd9
001cfc   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001cfe   ffe5
001d00   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001d02   ffe5
001d04   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001d06   ffe5
001d08   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001d0a   ffe5
001d0c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
001d0e   ffe5
001d10   0e02     movlw   0x02             	MOVLW	0x02
001d12   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
001d14   f000
001d16   0e03     movlw   0x03             	MOVLW	0x03
001d18   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
001d1a   f001
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	switch (port[pin])
001d1c   0ed6     movlw   0xd6             	MOVLW	LOW(_port)
001d1e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001d20   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001d22   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001d24   0e2f     movlw   0x2f             	MOVLW	HIGH(_port)
001d26   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001d28   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001d2a   0e00     movlw   0x00             	MOVLW	UPPER(_port)
001d2c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001d2e   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001d30   fff6
001d32   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001d34   fff7
001d36   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001d38   fff8
001d3a   0009     tblrd*+                  	TBLRD*+	
001d3c   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001d3e   f002
001d40   0e05     movlw   0x05             	MOVLW	0x05
001d42   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
001d44   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001d46   d111     bra     0x001f6a         	BRA	_00180_DS_
001d48   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
001d4a   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
001d4c   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
001d4e   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
001d50   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
001d52   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
001d54   0bfc     andlw   0xfc             	ANDLW	0xfc
001d56   0f66     addlw   0x66             	ADDLW	LOW(_00201_DS_)
001d58   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d5a   0e1d     movlw   0x1d             	MOVLW	HIGH(_00201_DS_)
001d5c   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
001d5e   0e00     movlw   0x00             	MOVLW	UPPER(_00201_DS_)
001d60   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
001d62   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
001d64   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00201_DS_:
001d66   efbd     goto    0x001d7a         	GOTO	_00159_DS_
001d68   f00e
001d6a   efef     goto    0x001dde         	GOTO	_00163_DS_
001d6c   f00e
001d6e   ef21     goto    0x001e42         	GOTO	_00167_DS_
001d70   f00f
001d72   ef53     goto    0x001ea6         	GOTO	_00171_DS_
001d74   f00f
001d76   ef85     goto    0x001f0a         	GOTO	_00175_DS_
001d78   f00f
                                           _00159_DS_:
                                           ;	.line	49; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISA=TRISA | mask[pin];
001d7a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001d7c   e015     bz      0x001da8         	BZ	_00161_DS_
001d7e   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001d80   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001d82   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001d84   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001d86   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001d88   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001d8a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001d8c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001d8e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001d90   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001d92   fff6
001d94   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001d96   fff7
001d98   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001d9a   fff8
001d9c   0009     tblrd*+                  	TBLRD*+	
001d9e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001da0   f002
001da2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001da4   1292     iorwf   0x92, 0x1, 0x0   	IORWF	_TRISA, F
001da6   d0e1     bra     0x001f6a         	BRA	_00180_DS_
                                           _00161_DS_:
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISA=TRISA & (255-mask[pin]);
001da8   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001daa   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001dac   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001dae   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001db0   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001db2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001db4   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001db6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001db8   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001dba   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001dbc   fff6
001dbe   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001dc0   fff7
001dc2   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001dc4   fff8
001dc6   0009     tblrd*+                  	TBLRD*+	
001dc8   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001dca   f002
001dcc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001dce   08ff     sublw   0xff             	SUBLW	0xff
001dd0   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001dd2   5092     movf    0x92, 0x0, 0x0   	MOVF	_TRISA, W
001dd4   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001dd6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001dd8   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
001dda   6e92     movwf   0x92, 0x0        	MOVWF	_TRISA
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
001ddc   d0c6     bra     0x001f6a         	BRA	_00180_DS_
                                           _00163_DS_:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISB=TRISB | mask[pin];
001dde   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001de0   e015     bz      0x001e0c         	BZ	_00165_DS_
001de2   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001de4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001de6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001de8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001dea   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001dec   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001dee   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001df0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001df2   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001df4   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001df6   fff6
001df8   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001dfa   fff7
001dfc   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001dfe   fff8
001e00   0009     tblrd*+                  	TBLRD*+	
001e02   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001e04   f002
001e06   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001e08   1293     iorwf   0x93, 0x1, 0x0   	IORWF	_TRISB, F
001e0a   d0af     bra     0x001f6a         	BRA	_00180_DS_
                                           _00165_DS_:
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISB=TRISB & (255-mask[pin]);
001e0c   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001e0e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001e10   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001e12   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001e14   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001e16   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001e18   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001e1a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001e1c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001e1e   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001e20   fff6
001e22   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001e24   fff7
001e26   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001e28   fff8
001e2a   0009     tblrd*+                  	TBLRD*+	
001e2c   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001e2e   f002
001e30   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001e32   08ff     sublw   0xff             	SUBLW	0xff
001e34   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001e36   5093     movf    0x93, 0x0, 0x0   	MOVF	_TRISB, W
001e38   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001e3a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001e3c   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
001e3e   6e93     movwf   0x93, 0x0        	MOVWF	_TRISB
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
001e40   d094     bra     0x001f6a         	BRA	_00180_DS_
                                           _00167_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISC=TRISC | mask[pin];
001e42   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001e44   e015     bz      0x001e70         	BZ	_00169_DS_
001e46   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001e48   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001e4a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001e4c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001e4e   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001e50   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001e52   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001e54   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001e56   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001e58   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001e5a   fff6
001e5c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001e5e   fff7
001e60   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001e62   fff8
001e64   0009     tblrd*+                  	TBLRD*+	
001e66   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001e68   f002
001e6a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001e6c   1294     iorwf   0x94, 0x1, 0x0   	IORWF	_TRISC, F
001e6e   d07d     bra     0x001f6a         	BRA	_00180_DS_
                                           _00169_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISC=TRISC & (255-mask[pin]);
001e70   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001e72   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001e74   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001e76   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001e78   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001e7a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001e7c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001e7e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001e80   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001e82   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001e84   fff6
001e86   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001e88   fff7
001e8a   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001e8c   fff8
001e8e   0009     tblrd*+                  	TBLRD*+	
001e90   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001e92   f002
001e94   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001e96   08ff     sublw   0xff             	SUBLW	0xff
001e98   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001e9a   5094     movf    0x94, 0x0, 0x0   	MOVF	_TRISC, W
001e9c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001e9e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001ea0   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
001ea2   6e94     movwf   0x94, 0x0        	MOVWF	_TRISC
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
001ea4   d062     bra     0x001f6a         	BRA	_00180_DS_
                                           _00171_DS_:
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISD=TRISD | mask[pin];
001ea6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001ea8   e015     bz      0x001ed4         	BZ	_00173_DS_
001eaa   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001eac   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001eae   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001eb0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001eb2   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001eb4   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001eb6   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001eb8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001eba   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001ebc   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001ebe   fff6
001ec0   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001ec2   fff7
001ec4   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001ec6   fff8
001ec8   0009     tblrd*+                  	TBLRD*+	
001eca   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001ecc   f002
001ece   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001ed0   1295     iorwf   0x95, 0x1, 0x0   	IORWF	_TRISD, F
001ed2   d04b     bra     0x001f6a         	BRA	_00180_DS_
                                           _00173_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISD=TRISD & (255-mask[pin]);
001ed4   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001ed6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001ed8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001eda   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001edc   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001ede   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001ee0   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001ee2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001ee4   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001ee6   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001ee8   fff6
001eea   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001eec   fff7
001eee   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001ef0   fff8
001ef2   0009     tblrd*+                  	TBLRD*+	
001ef4   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001ef6   f002
001ef8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001efa   08ff     sublw   0xff             	SUBLW	0xff
001efc   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001efe   5095     movf    0x95, 0x0, 0x0   	MOVF	_TRISD, W
001f00   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001f02   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001f04   1403     andwf   0x03, 0x0, 0x0   	ANDWF	r0x03, W
001f06   6e95     movwf   0x95, 0x0        	MOVWF	_TRISD
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
001f08   d030     bra     0x001f6a         	BRA	_00180_DS_
                                           _00175_DS_:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISE=TRISE | mask[pin];
001f0a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001f0c   e015     bz      0x001f38         	BZ	_00177_DS_
001f0e   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001f10   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001f12   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001f14   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001f16   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001f18   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001f1a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001f1c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001f1e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001f20   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
001f22   fff6
001f24   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
001f26   fff7
001f28   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
001f2a   fff8
001f2c   0009     tblrd*+                  	TBLRD*+	
001f2e   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
001f30   f001
001f32   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001f34   1296     iorwf   0x96, 0x1, 0x0   	IORWF	_TRISE, F
001f36   d019     bra     0x001f6a         	BRA	_00180_DS_
                                           _00177_DS_:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISE=TRISE & (255-mask[pin]);
001f38   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001f3a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001f3c   0eb8     movlw   0xb8             	MOVLW	LOW(_mask)
001f3e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001f40   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
001f42   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001f44   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001f46   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001f48   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001f4a   fff6
001f4c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001f4e   fff7
001f50   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
001f52   fff8
001f54   0009     tblrd*+                  	TBLRD*+	
001f56   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001f58   f000
001f5a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001f5c   08ff     sublw   0xff             	SUBLW	0xff
001f5e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001f60   5096     movf    0x96, 0x0, 0x0   	MOVF	_TRISE, W
001f62   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001f64   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001f66   1401     andwf   0x01, 0x0, 0x0   	ANDWF	r0x01, W
001f68   6e96     movwf   0x96, 0x0        	MOVWF	_TRISE
                                           _00180_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	}
001f6a   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001f6c   f004
001f6e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001f70   f003
001f72   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001f74   f002
001f76   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001f78   f001
001f7a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001f7c   f000
001f7e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001f80   ffd9
001f82   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/delayms.c	void Delayms(u16 milliseconds)
002ade   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002ae0   ffe5
002ae2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002ae4   ffd9
002ae6   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002ae8   ffe5
002aea   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002aec   ffe5
002aee   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002af0   ffe5
002af2   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002af4   ffe5
002af6   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002af8   ffe5
002afa   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
002afc   ffe5
002afe   0e02     movlw   0x02             	MOVLW	0x02
002b00   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002b02   f000
002b04   0e03     movlw   0x03             	MOVLW	0x03
002b06   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002b08   f001
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/core/delayms.c	u16 n100tcy = System_getPeripheralFrequency() / 100000;
002b0a   ecc5     call    0x00218a, 0x0    	CALL	_System_getCpuFrequency
002b0c   f010
002b0e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002b10   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
002b12   f003
002b14   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
002b16   f004
002b18   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
002b1a   f005
002b1c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002b1e   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
002b20   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
002b22   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
002b24   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
002b26   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002b28   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
002b2a   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
002b2c   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
002b2e   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
002b30   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002b32   0e01     movlw   0x01             	MOVLW	0x01
002b34   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b36   0e86     movlw   0x86             	MOVLW	0x86
002b38   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b3a   0ea0     movlw   0xa0             	MOVLW	0xa0
002b3c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b3e   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
002b40   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b42   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
002b44   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b46   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002b48   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b4a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002b4c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b4e   ece3     call    0x0029c6, 0x0    	CALL	__divulong
002b50   f014
002b52   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002b54   0e08     movlw   0x08             	MOVLW	0x08
002b56   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00151_DS_:
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/delayms.c	while (milliseconds--)
002b58   c000     movff   0x000, 0x004     	MOVFF	r0x00, r0x04
002b5a   f004
002b5c   c001     movff   0x001, 0x005     	MOVFF	r0x01, r0x05
002b5e   f005
002b60   0eff     movlw   0xff             	MOVLW	0xff
002b62   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002b64   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002b66   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
002b68   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
002b6a   e008     bz      0x002b7c         	BZ	_00154_DS_
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/delayms.c	delay100tcy(n100tcy-3);
002b6c   c002     movff   0x002, 0x004     	MOVFF	r0x02, r0x04
002b6e   f004
002b70   0efd     movlw   0xfd             	MOVLW	0xfd
002b72   2604     addwf   0x04, 0x1, 0x0   	ADDWF	r0x04, F
002b74   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
002b76   ecfa     call    0x002ff4, 0x0    	CALL	_delay100tcy
002b78   f017
002b7a   d7ee     bra     0x002b58         	BRA	_00151_DS_
                                           _00154_DS_:
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/core/delayms.c	}
002b7c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
002b7e   f005
002b80   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002b82   f004
002b84   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002b86   f003
002b88   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002b8a   f002
002b8c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002b8e   f001
002b90   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002b92   f000
002b94   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002b96   ffd9
002b98   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__System_getCpuFrequency	code
                                           _System_getCpuFrequency:
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u32 System_getCpuFrequency() 
00218a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00218c   ffe5
00218e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002190   ffe5
002192   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002194   ffe5
002196   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002198   ffe5
00219a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00219c   ffe5
00219e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0021a0   ffe5
                                           ;	.line	242; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 0)
0021a2   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
0021a4   0b03     andlw   0x03             	ANDLW	0x03
0021a6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0021a8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0021aa   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
0021ac   d091     bra     0x0022d0         	BRA	_00116_DS_
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV  = ( System_readFlashMemory(__CONFIG1L) & 0b00011000 ) >> 3;
0021ae   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0021b0   0e30     movlw   0x30             	MOVLW	0x30
0021b2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0021b4   0e00     movlw   0x00             	MOVLW	0x00
0021b6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0021b8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0021ba   ec7d     call    0x002cfa, 0x0    	CALL	_System_readFlashMemory
0021bc   f016
0021be   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0021c0   0e04     movlw   0x04             	MOVLW	0x04
0021c2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0021c4   0e18     movlw   0x18             	MOVLW	0x18
0021c6   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0021c8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0021ca   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0021cc   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
0021ce   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
0021d0   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0021d2   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
0021d4   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
0021d6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0021d8   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
0021da   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
                                           ;	.line	269; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV_XTAL = cpudiv_xtal[CPUDIV];
0021dc   0e94     movlw   0x94             	MOVLW	LOW(_cpudiv_xtal)
0021de   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0021e0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0021e2   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0021e4   0e2f     movlw   0x2f             	MOVLW	HIGH(_cpudiv_xtal)
0021e6   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0021e8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0021ea   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv_xtal)
0021ec   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0021ee   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0021f0   fff6
0021f2   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0021f4   fff7
0021f6   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0021f8   fff8
0021fa   0009     tblrd*+                  	TBLRD*+	
0021fc   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0021fe   f001
                                           ;	.line	270; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc  = System_readFlashMemory(__CONFIG1H) & 0b00001111;
002200   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002202   0e30     movlw   0x30             	MOVLW	0x30
002204   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002206   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002208   0e01     movlw   0x01             	MOVLW	0x01
00220a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00220c   ec7d     call    0x002cfa, 0x0    	CALL	_System_readFlashMemory
00220e   f016
002210   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002212   0e04     movlw   0x04             	MOVLW	0x04
002214   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002216   0e0f     movlw   0x0f             	MOVLW	0x0f
002218   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV = cpudiv[CPUDIV];
00221a   0e90     movlw   0x90             	MOVLW	LOW(_cpudiv)
00221c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00221e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002220   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002222   0e2f     movlw   0x2f             	MOVLW	HIGH(_cpudiv)
002224   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002226   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002228   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv)
00222a   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
00222c   c003     movff   0x003, 0xff6     	MOVFF	r0x03, TBLPTRL
00222e   fff6
002230   c004     movff   0x004, 0xff7     	MOVFF	r0x04, TBLPTRH
002232   fff7
002234   c005     movff   0x005, 0xff8     	MOVFF	r0x05, TBLPTRU
002236   fff8
002238   0009     tblrd*+                  	TBLRD*+	
00223a   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
00223c   f000
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc >>=1;
00223e   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002240   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
                                           ;	.line	293; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if( (fosc==0) || (fosc==2) || (fosc==6) )
002242   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002244   e006     bz      0x002252         	BZ	_00110_DS_
002246   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002248   0a02     xorlw   0x02             	XORLW	0x02
00224a   e003     bz      0x002252         	BZ	_00110_DS_
00224c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00224e   0a06     xorlw   0x06             	XORLW	0x06
002250   e11f     bnz     0x002290         	BNZ	_00111_DS_
                                           _00110_DS_:
                                           ;	.line	295; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return CRYSTAL / CPUDIV_XTAL;
002252   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002254   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002256   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002258   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00225a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00225c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00225e   0e7a     movlw   0x7a             	MOVLW	0x7a
002260   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002262   0e12     movlw   0x12             	MOVLW	0x12
002264   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002266   0e00     movlw   0x00             	MOVLW	0x00
002268   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00226a   ecac     call    0x002558, 0x0    	CALL	__divslong
00226c   f012
00226e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002270   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
002272   f002
002274   cff4     movff   0xff4, 0x003     	MOVFF	PRODH, r0x03
002276   f003
002278   cfe9     movff   0xfe9, 0x004     	MOVFF	FSR0L, r0x04
00227a   f004
00227c   0e08     movlw   0x08             	MOVLW	0x08
00227e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002280   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002282   ffe9
002284   c003     movff   0x003, 0xff4     	MOVFF	r0x03, PRODH
002286   fff4
002288   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
00228a   fff3
00228c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00228e   d064     bra     0x002358         	BRA	_00121_DS_
                                           _00111_DS_:
                                           ;	.line	299; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 96000000UL / CPUDIV;
002290   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002292   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002294   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002296   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002298   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00229a   0e05     movlw   0x05             	MOVLW	0x05
00229c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00229e   0eb8     movlw   0xb8             	MOVLW	0xb8
0022a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0022a2   0ed8     movlw   0xd8             	MOVLW	0xd8
0022a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0022a6   0e00     movlw   0x00             	MOVLW	0x00
0022a8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0022aa   ece3     call    0x0029c6, 0x0    	CALL	__divulong
0022ac   f014
0022ae   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0022b0   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0022b2   f001
0022b4   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
0022b6   f002
0022b8   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
0022ba   f003
0022bc   0e08     movlw   0x08             	MOVLW	0x08
0022be   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0022c0   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0022c2   ffe9
0022c4   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
0022c6   fff4
0022c8   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
0022ca   fff3
0022cc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0022ce   d044     bra     0x002358         	BRA	_00121_DS_
                                           _00116_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 1)
0022d0   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
0022d2   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0022d4   0a01     xorlw   0x01             	XORLW	0x01
0022d6   e106     bnz     0x0022e4         	BNZ	_00118_DS_
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 32768;
0022d8   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
0022da   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
0022dc   0e80     movlw   0x80             	MOVLW	0x80
0022de   6ef3     movwf   0xf3, 0x0        	MOVWF	PRODL
0022e0   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0022e2   d03a     bra     0x002358         	BRA	_00121_DS_
                                           _00118_DS_:
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS >= 2)
0022e4   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
0022e6   0b03     andlw   0x03             	ANDLW	0x03
0022e8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0022ea   0e02     movlw   0x02             	MOVLW	0x02
0022ec   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0022ee   e330     bnc     0x002350         	BNC	_00120_DS_
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ircf[OSCCONbits.IRCF];
0022f0   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
0022f2   38e8     swapf   0xe8, 0x0, 0x0   	SWAPF	WREG, W
0022f4   0b07     andlw   0x07             	ANDLW	0x07
0022f6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0022f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0022fa   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0022fc   0e04     movlw   0x04             	MOVLW	0x04
0022fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002300   ec69     call    0x0030d2, 0x0    	CALL	__mulint
002302   f018
002304   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002306   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
002308   f001
00230a   0e04     movlw   0x04             	MOVLW	0x04
00230c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00230e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002310   0e98     movlw   0x98             	MOVLW	LOW(_ircf)
002312   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002314   0e2f     movlw   0x2f             	MOVLW	HIGH(_ircf)
002316   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002318   0e00     movlw   0x00             	MOVLW	UPPER(_ircf)
00231a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00231c   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00231e   fff6
002320   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002322   fff7
002324   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002326   fff8
002328   0009     tblrd*+                  	TBLRD*+	
00232a   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
00232c   f000
00232e   0009     tblrd*+                  	TBLRD*+	
002330   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002332   f001
002334   0009     tblrd*+                  	TBLRD*+	
002336   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002338   f002
00233a   0009     tblrd*+                  	TBLRD*+	
00233c   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
00233e   f003
002340   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002342   ffe9
002344   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
002346   fff4
002348   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
00234a   fff3
00234c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00234e   d004     bra     0x002358         	BRA	_00121_DS_
                                           _00120_DS_:
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 0;
002350   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
002352   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
002354   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
002356   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00121_DS_:
                                           ;	.line	320; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	}
002358   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00235a   f005
00235c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00235e   f004
002360   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002362   f003
002364   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002366   f002
002368   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00236a   f001
00236c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00236e   f000
002370   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__System_readFlashMemory	code
                                           _System_readFlashMemory:
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u16 System_readFlashMemory(u32 address)
002cfa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002cfc   ffe5
002cfe   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002d00   ffd9
002d02   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002d04   ffe5
002d06   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002d08   ffe5
002d0a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002d0c   ffe5
002d0e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002d10   ffe5
002d12   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002d14   ffe5
002d16   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
002d18   ffe5
002d1a   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
002d1c   ffe5
002d1e   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
002d20   ffe5
002d22   0e02     movlw   0x02             	MOVLW	0x02
002d24   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002d26   f000
002d28   0e03     movlw   0x03             	MOVLW	0x03
002d2a   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002d2c   f001
002d2e   0e04     movlw   0x04             	MOVLW	0x04
002d30   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
002d32   f002
002d34   0e05     movlw   0x05             	MOVLW	0x05
002d36   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
002d38   f003
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRU = address >> 16;
002d3a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002d3c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002d3e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002d40   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002d42   6a06     clrf    0x06, 0x0        	CLRF	r0x06
002d44   6a07     clrf    0x07, 0x0        	CLRF	r0x07
002d46   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
002d48   6ef8     movwf   0xf8, 0x0        	MOVWF	_TBLPTRU
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRH = address >> 8;
002d4a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002d4c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
002d4e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002d50   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002d52   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002d54   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002d56   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
002d58   6ef7     movwf   0xf7, 0x0        	MOVWF	_TBLPTRH
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRL = address;
002d5a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002d5c   6ef6     movwf   0xf6, 0x0        	MOVWF	_TBLPTRL
002d5e   0009     tblrd*+                  	tblrd*+
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	l8 = TABLAT;
002d60   cff5     movff   0xff5, 0x000     	MOVFF	_TABLAT, r0x00
002d62   f000
002d64   0009     tblrd*+                  	tblrd*+
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	h8 = TABLAT;
002d66   cff5     movff   0xff5, 0x001     	MOVFF	_TABLAT, r0x01
002d68   f001
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ((h8 << 8) + l8);
002d6a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002d6c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002d6e   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002d70   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002d72   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002d74   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002d76   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
002d78   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
002d7a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002d7c   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
002d7e   fff3
002d80   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ;	.line	203; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	}
002d82   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
002d84   f007
002d86   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
002d88   f006
002d8a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
002d8c   f005
002d8e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002d90   f004
002d92   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002d94   f003
002d96   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002d98   f002
002d9a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002d9c   f001
002d9e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002da0   f000
002da2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002da4   ffd9
002da6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block for Ival
                                           	code
                                           _cpudiv:
002f90   0302     mulwf   0x02, 0x1        	DB	0x02, 0x03, 0x04, 0x06
002f92   0604     decf    0x04, 0x1, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _cpudiv_xtal:
002f94   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x03, 0x04
002f96   0403     decf    0x03, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _ircf:
002f98   7a12     btg     0x12, 0x5, 0x0   	DB	0x12, 0x7a, 0x00, 0x00, 0x48, 0xe8, 0x01, 0x00, 0x90, 0xd0, 0x03, 0x00
002f9a   0000     nop                      
002f9c   e848     dw      0xe848           
002f9e   0001     halt                     
002fa0   d090     bra     0x0030c2         
002fa2   0003     sleep                    
002fa4   a120     btfss   0x20, 0x0, 0x1   	DB	0x20, 0xa1, 0x07, 0x00, 0x40, 0x42, 0x0f, 0x00, 0x80, 0x84, 0x1e, 0x00
002fa6   0007     daw                      
002fa8   4240     rrncf   0x40, 0x1, 0x0   
002faa   000f     tblwt+*                  
002fac   8480     bsf     0x80, 0x2, 0x0   
002fae   001e     dw      0x001e           
002fb0   0900     iorlw   0x00             	DB	0x00, 0x09, 0x3d, 0x00, 0x00, 0x12, 0x7a, 0x00
002fb2   003d     dw      0x003d           
002fb4   1200     iorwf   0x00, 0x1, 0x0   
002fb6   007a     dw      0x007a           
                                           ; ; Starting pCode block for Ival
                                           _mask:
002fb8   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
002fba   0804     sublw   0x04             
002fbc   2010     addwfc  0x10, 0x0, 0x0   
002fbe   8040     bsf     0x40, 0x0, 0x0   
002fc0   8040     bsf     0x40, 0x0, 0x0   
002fc2   0201     mulwf   0x01, 0x0        
002fc4   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
002fc6   0402     decf    0x02, 0x0, 0x0   
002fc8   2008     addwfc  0x08, 0x0, 0x0   
002fca   0201     mulwf   0x01, 0x0        
002fcc   0104     movlb   0x4              
002fce   0402     decf    0x02, 0x0, 0x0   
002fd0   1008     iorwf   0x08, 0x0, 0x0   	DB	0x08, 0x10, 0x20, 0x40, 0x80, 0x10
002fd2   4020     rrncf   0x20, 0x0, 0x0   
002fd4   1080     iorwf   0x80, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _port:
002fd6   0101     movlb   0x1              	DB	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02
002fd8   0101     movlb   0x1              
002fda   0101     movlb   0x1              
002fdc   0101     movlb   0x1              
002fde   0202     mulwf   0x02, 0x0        
002fe0   0202     mulwf   0x02, 0x0        
002fe2   0002     dw      0x0002           	DB	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
002fe4   0000     nop                      
002fe6   0000     nop                      
002fe8   0404     decf    0x04, 0x0, 0x0   
002fea   0304     mulwf   0x04, 0x1        
002fec   0303     mulwf   0x03, 0x1        
002fee   0303     mulwf   0x03, 0x1        	DB	0x03, 0x03, 0x03, 0x03, 0x03, 0x00
002ff0   0303     mulwf   0x03, 0x1        
002ff2   0003     sleep                    


                                           ; Statistics:
                                           ; code size:	 9748 (0x2614) bytes ( 7.44%)
                                           ;           	 4874 (0x130a) words
                                           ; udata size:	  291 (0x0123) bytes (16.24%)
                                           ; access size:	    8 (0x0008) bytes


                                           	end
